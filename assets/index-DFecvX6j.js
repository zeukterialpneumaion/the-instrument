var fg=Object.defineProperty;var pg=(i,e,t)=>e in i?fg(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var A=(i,e,t)=>(pg(i,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=t(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Oh="162",er={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},tr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},mg=0,Uu=1,gg=2,tp=1,np=2,Di=3,fs=0,mn=1,ci=2,sn=0,Ar=1,rh=2,Bu=3,Vu=4,ip=5,Ni=100,_g=101,yg=102,zu=103,Gu=104,oh=200,vg=201,xg=202,Sg=203,ah=204,ch=205,sp=206,bg=207,rp=208,Mg=209,wg=210,Tg=211,Eg=212,Ag=213,Cg=214,Rg=0,Ig=1,Dg=2,qa=3,Pg=4,Lg=5,Ng=6,Og=7,Zc=0,Fg=1,kg=2,cs=0,op=1,ap=2,cp=3,lp=4,Ug=5,hp=6,up=7,dp=300,Pr=301,Lr=302,lh=303,hh=304,Qc=306,Fo=1e3,Yn=1001,uh=1002,Nt=1003,Hu=1004,Mo=1005,yn=1006,xl=1007,Os=1008,ls=1009,Bg=1010,Vg=1011,Fh=1012,fp=1013,ss=1014,li=1015,ps=1016,pp=1017,mp=1018,hs=1020,zg=1021,$n=1023,gp=1024,Gg=1025,ks=1026,Us=1027,_p=1028,yp=1029,Hg=1030,vp=1031,xp=1033,Sl=33776,bl=33777,Ml=33778,wl=33779,Wu=35840,qu=35841,ju=35842,Ku=35843,Sp=36196,Xu=37492,Yu=37496,$u=37808,Zu=37809,Qu=37810,Ju=37811,ed=37812,td=37813,nd=37814,id=37815,sd=37816,rd=37817,od=37818,ad=37819,cd=37820,ld=37821,Tl=36492,hd=36494,ud=36495,Wg=36283,dd=36284,fd=36285,pd=36286,qg=3200,jg=3201,Xs=0,Kg=1,ts="",oi="srgb",vs="srgb-linear",kh="display-p3",Jc="display-p3-linear",ja="linear",ut="srgb",Ka="rec709",Xa="p3",nr=7680,md=519,Xg=512,Yg=513,$g=514,bp=515,Zg=516,Qg=517,Jg=518,e_=519,gd=35044,_d="300 es",dh=1035,Fi=2e3,Ya=2001;class xs{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const r=s.indexOf(t);r!==-1&&s.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const s=n.slice(0);for(let r=0,a=s.length;r<a;r++)s[r].call(this,e);e.target=null}}}const tn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let yd=1234567;const Po=Math.PI/180,ko=180/Math.PI;function oo(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(tn[i&255]+tn[i>>8&255]+tn[i>>16&255]+tn[i>>24&255]+"-"+tn[e&255]+tn[e>>8&255]+"-"+tn[e>>16&15|64]+tn[e>>24&255]+"-"+tn[t&63|128]+tn[t>>8&255]+"-"+tn[t>>16&255]+tn[t>>24&255]+tn[n&255]+tn[n>>8&255]+tn[n>>16&255]+tn[n>>24&255]).toLowerCase()}function jt(i,e,t){return Math.max(e,Math.min(t,i))}function Uh(i,e){return(i%e+e)%e}function t_(i,e,t,n,s){return n+(i-e)*(s-n)/(t-e)}function n_(i,e,t){return i!==e?(t-i)/(e-i):0}function Lo(i,e,t){return(1-t)*i+t*e}function i_(i,e,t,n){return Lo(i,e,1-Math.exp(-t*n))}function s_(i,e=1){return e-Math.abs(Uh(i,e*2)-e)}function r_(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function o_(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function a_(i,e){return i+Math.floor(Math.random()*(e-i+1))}function c_(i,e){return i+Math.random()*(e-i)}function l_(i){return i*(.5-Math.random())}function h_(i){i!==void 0&&(yd=i);let e=yd+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function u_(i){return i*Po}function d_(i){return i*ko}function fh(i){return(i&i-1)===0&&i!==0}function f_(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function $a(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function p_(i,e,t,n,s){const r=Math.cos,a=Math.sin,o=r(t/2),c=a(t/2),l=r((e+n)/2),h=a((e+n)/2),u=r((e-n)/2),f=a((e-n)/2),m=r((n-e)/2),g=a((n-e)/2);switch(s){case"XYX":i.set(o*h,c*u,c*f,o*l);break;case"YZY":i.set(c*f,o*h,c*u,o*l);break;case"ZXZ":i.set(c*u,c*f,o*h,o*l);break;case"XZX":i.set(o*h,c*g,c*m,o*l);break;case"YXY":i.set(c*m,o*h,c*g,o*l);break;case"ZYZ":i.set(c*g,c*m,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function xr(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function cn(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const Mp={DEG2RAD:Po,RAD2DEG:ko,generateUUID:oo,clamp:jt,euclideanModulo:Uh,mapLinear:t_,inverseLerp:n_,lerp:Lo,damp:i_,pingpong:s_,smoothstep:r_,smootherstep:o_,randInt:a_,randFloat:c_,randFloatSpread:l_,seededRandom:h_,degToRad:u_,radToDeg:d_,isPowerOfTwo:fh,ceilPowerOfTwo:f_,floorPowerOfTwo:$a,setQuaternionFromProperEuler:p_,normalize:cn,denormalize:xr};class Me{constructor(e=0,t=0){Me.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6],this.y=s[1]*t+s[4]*n+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),s=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*s+e.x,this.y=r*s+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Qe{constructor(e,t,n,s,r,a,o,c,l){Qe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,a,o,c,l)}set(e,t,n,s,r,a,o,c,l){const h=this.elements;return h[0]=e,h[1]=s,h[2]=o,h[3]=t,h[4]=r,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],f=n[2],m=n[5],g=n[8],_=s[0],p=s[3],d=s[6],x=s[1],y=s[4],S=s[7],b=s[2],w=s[5],M=s[8];return r[0]=a*_+o*x+c*b,r[3]=a*p+o*y+c*w,r[6]=a*d+o*S+c*M,r[1]=l*_+h*x+u*b,r[4]=l*p+h*y+u*w,r[7]=l*d+h*S+u*M,r[2]=f*_+m*x+g*b,r[5]=f*p+m*y+g*w,r[8]=f*d+m*S+g*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-n*r*h+n*o*c+s*r*l-s*a*c}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=h*a-o*l,f=o*c-h*r,m=l*r-a*c,g=t*u+n*f+s*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return e[0]=u*_,e[1]=(s*l-h*n)*_,e[2]=(o*n-s*a)*_,e[3]=f*_,e[4]=(h*t-s*c)*_,e[5]=(s*r-o*t)*_,e[6]=m*_,e[7]=(n*c-l*t)*_,e[8]=(a*t-n*r)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,s,r,a,o){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*a+l*o)+a+e,-s*l,s*c,-s*(-l*a+c*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(El.makeScale(e,t)),this}rotate(e){return this.premultiply(El.makeRotation(-e)),this}translate(e,t){return this.premultiply(El.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<9;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const El=new Qe;function wp(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function Za(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function m_(){const i=Za("canvas");return i.style.display="block",i}const vd={};function g_(i){i in vd||(vd[i]=!0,console.warn(i))}const xd=new Qe().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Sd=new Qe().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),la={[vs]:{transfer:ja,primaries:Ka,toReference:i=>i,fromReference:i=>i},[oi]:{transfer:ut,primaries:Ka,toReference:i=>i.convertSRGBToLinear(),fromReference:i=>i.convertLinearToSRGB()},[Jc]:{transfer:ja,primaries:Xa,toReference:i=>i.applyMatrix3(Sd),fromReference:i=>i.applyMatrix3(xd)},[kh]:{transfer:ut,primaries:Xa,toReference:i=>i.convertSRGBToLinear().applyMatrix3(Sd),fromReference:i=>i.applyMatrix3(xd).convertLinearToSRGB()}},__=new Set([vs,Jc]),rt={enabled:!0,_workingColorSpace:vs,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(i){if(!__.has(i))throw new Error(`Unsupported working color space, "${i}".`);this._workingColorSpace=i},convert:function(i,e,t){if(this.enabled===!1||e===t||!e||!t)return i;const n=la[e].toReference,s=la[t].fromReference;return s(n(i))},fromWorkingColorSpace:function(i,e){return this.convert(i,this._workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this._workingColorSpace)},getPrimaries:function(i){return la[i].primaries},getTransfer:function(i){return i===ts?ja:la[i].transfer}};function Cr(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Al(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let ir;class Tp{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ir===void 0&&(ir=Za("canvas")),ir.width=e.width,ir.height=e.height;const n=ir.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ir}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Za("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const s=n.getImageData(0,0,e.width,e.height),r=s.data;for(let a=0;a<r.length;a++)r[a]=Cr(r[a]/255)*255;return n.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Cr(t[n]/255)*255):t[n]=Cr(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let y_=0,Ep=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:y_++}),this.uuid=oo(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?r.push(Cl(s[a].image)):r.push(Cl(s[a]))}else r=Cl(s);n.url=r}return t||(e.images[this.uuid]=n),n}};function Cl(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Tp.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let v_=0;class Gt extends xs{constructor(e=Gt.DEFAULT_IMAGE,t=Gt.DEFAULT_MAPPING,n=Yn,s=Yn,r=yn,a=Os,o=$n,c=ls,l=Gt.DEFAULT_ANISOTROPY,h=ts){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:v_++}),this.uuid=oo(),this.name="",this.source=new Ep(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new Me(0,0),this.repeat=new Me(1,1),this.center=new Me(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==dp)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Fo:e.x=e.x-Math.floor(e.x);break;case Yn:e.x=e.x<0?0:1;break;case uh:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Fo:e.y=e.y-Math.floor(e.y);break;case Yn:e.y=e.y<0?0:1;break;case uh:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Gt.DEFAULT_IMAGE=null;Gt.DEFAULT_MAPPING=dp;Gt.DEFAULT_ANISOTROPY=1;class Mt{constructor(e=0,t=0,n=0,s=1){Mt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,s){return this.x=e,this.y=t,this.z=n,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*s+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*s+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*s+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*s+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,s,r;const c=e.elements,l=c[0],h=c[4],u=c[8],f=c[1],m=c[5],g=c[9],_=c[2],p=c[6],d=c[10];if(Math.abs(h-f)<.01&&Math.abs(u-_)<.01&&Math.abs(g-p)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+_)<.1&&Math.abs(g+p)<.1&&Math.abs(l+m+d-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(l+1)/2,S=(m+1)/2,b=(d+1)/2,w=(h+f)/4,M=(u+_)/4,C=(g+p)/4;return y>S&&y>b?y<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(y),s=w/n,r=M/n):S>b?S<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(S),n=w/s,r=C/s):b<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(b),n=M/r,s=C/r),this.set(n,s,r,t),this}let x=Math.sqrt((p-g)*(p-g)+(u-_)*(u-_)+(f-h)*(f-h));return Math.abs(x)<.001&&(x=1),this.x=(p-g)/x,this.y=(u-_)/x,this.z=(f-h)/x,this.w=Math.acos((l+m+d-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class x_ extends xs{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Mt(0,0,e,t),this.scissorTest=!1,this.viewport=new Mt(0,0,e,t);const s={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:yn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const r=new Gt(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=e,this.textures[s].image.height=t,this.textures[s].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,s=e.textures.length;n<s;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ep(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class pi extends x_{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class Ap extends Gt{constructor(e=null,t=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Nt,this.minFilter=Nt,this.wrapR=Yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class S_ extends Gt{constructor(e=null,t=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:s},this.magFilter=Nt,this.minFilter=Nt,this.wrapR=Yn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Bs{constructor(e=0,t=0,n=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=s}static slerpFlat(e,t,n,s,r,a,o){let c=n[s+0],l=n[s+1],h=n[s+2],u=n[s+3];const f=r[a+0],m=r[a+1],g=r[a+2],_=r[a+3];if(o===0){e[t+0]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=f,e[t+1]=m,e[t+2]=g,e[t+3]=_;return}if(u!==_||c!==f||l!==m||h!==g){let p=1-o;const d=c*f+l*m+h*g+u*_,x=d>=0?1:-1,y=1-d*d;if(y>Number.EPSILON){const b=Math.sqrt(y),w=Math.atan2(b,d*x);p=Math.sin(p*w)/b,o=Math.sin(o*w)/b}const S=o*x;if(c=c*p+f*S,l=l*p+m*S,h=h*p+g*S,u=u*p+_*S,p===1-o){const b=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=b,l*=b,h*=b,u*=b}}e[t]=c,e[t+1]=l,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,s,r,a){const o=n[s],c=n[s+1],l=n[s+2],h=n[s+3],u=r[a],f=r[a+1],m=r[a+2],g=r[a+3];return e[t]=o*g+h*u+c*m-l*f,e[t+1]=c*g+h*f+l*u-o*m,e[t+2]=l*g+h*m+o*f-c*u,e[t+3]=h*g-o*u-c*f-l*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,s){return this._x=e,this._y=t,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,s=e._y,r=e._z,a=e._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(s/2),u=o(r/2),f=c(n/2),m=c(s/2),g=c(r/2);switch(a){case"XYZ":this._x=f*h*u+l*m*g,this._y=l*m*u-f*h*g,this._z=l*h*g+f*m*u,this._w=l*h*u-f*m*g;break;case"YXZ":this._x=f*h*u+l*m*g,this._y=l*m*u-f*h*g,this._z=l*h*g-f*m*u,this._w=l*h*u+f*m*g;break;case"ZXY":this._x=f*h*u-l*m*g,this._y=l*m*u+f*h*g,this._z=l*h*g+f*m*u,this._w=l*h*u-f*m*g;break;case"ZYX":this._x=f*h*u-l*m*g,this._y=l*m*u+f*h*g,this._z=l*h*g-f*m*u,this._w=l*h*u+f*m*g;break;case"YZX":this._x=f*h*u+l*m*g,this._y=l*m*u+f*h*g,this._z=l*h*g-f*m*u,this._w=l*h*u-f*m*g;break;case"XZY":this._x=f*h*u-l*m*g,this._y=l*m*u-f*h*g,this._z=l*h*g+f*m*u,this._w=l*h*u+f*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,s=Math.sin(n);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],s=t[4],r=t[8],a=t[1],o=t[5],c=t[9],l=t[2],h=t[6],u=t[10],f=n+o+u;if(f>0){const m=.5/Math.sqrt(f+1);this._w=.25/m,this._x=(h-c)*m,this._y=(r-l)*m,this._z=(a-s)*m}else if(n>o&&n>u){const m=2*Math.sqrt(1+n-o-u);this._w=(h-c)/m,this._x=.25*m,this._y=(s+a)/m,this._z=(r+l)/m}else if(o>u){const m=2*Math.sqrt(1+o-n-u);this._w=(r-l)/m,this._x=(s+a)/m,this._y=.25*m,this._z=(c+h)/m}else{const m=2*Math.sqrt(1+u-n-o);this._w=(a-s)/m,this._x=(r+l)/m,this._y=(c+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(jt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const s=Math.min(1,t/n);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,s=e._y,r=e._z,a=e._w,o=t._x,c=t._y,l=t._z,h=t._w;return this._x=n*h+a*o+s*l-r*c,this._y=s*h+a*c+r*o-n*l,this._z=r*h+a*l+n*c-s*o,this._w=a*h-n*o-s*c-r*l,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,s=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+s*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=s,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const m=1-t;return this._w=m*a+t*this._w,this._x=m*n+t*this._x,this._y=m*s+t*this._y,this._z=m*r+t*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,f=Math.sin(t*h)/l;return this._w=a*u+this._w*f,this._x=n*u+this._x*f,this._y=s*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(e),s*Math.cos(e),r*Math.sin(t),r*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class k{constructor(e=0,t=0,n=0){k.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(bd.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(bd.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*s,this.y=r[1]*t+r[4]*n+r[7]*s,this.z=r[2]*t+r[5]*n+r[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,s=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*s+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*s+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*s+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,s=this.z,r=e.x,a=e.y,o=e.z,c=e.w,l=2*(a*s-o*n),h=2*(o*t-r*s),u=2*(r*n-a*t);return this.x=t+c*l+a*u-o*h,this.y=n+c*h+o*l-r*u,this.z=s+c*u+r*h-a*l,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,s=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*s,this.y=r[1]*t+r[5]*n+r[9]*s,this.z=r[2]*t+r[6]*n+r[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,s=e.y,r=e.z,a=t.x,o=t.y,c=t.z;return this.x=s*c-r*o,this.y=r*a-n*c,this.z=n*o-s*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Rl.copy(this).projectOnVector(e),this.sub(Rl)}reflect(e){return this.sub(Rl.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(jt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,s=this.z-e.z;return t*t+n*n+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const s=Math.sin(t)*e;return this.x=s*Math.sin(n),this.y=Math.cos(t)*e,this.z=s*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Rl=new k,bd=new Bs;class ms{constructor(e=new k(1/0,1/0,1/0),t=new k(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Wn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Wn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Wn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const r=n.getAttribute("position");if(t===!0&&r!==void 0&&e.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)e.isMesh===!0?e.getVertexPosition(a,Wn):Wn.fromBufferAttribute(r,a),Wn.applyMatrix4(e.matrixWorld),this.expandByPoint(Wn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),ha.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),ha.copy(n.boundingBox)),ha.applyMatrix4(e.matrixWorld),this.union(ha)}const s=e.children;for(let r=0,a=s.length;r<a;r++)this.expandByObject(s[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Wn),Wn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(wo),ua.subVectors(this.max,wo),sr.subVectors(e.a,wo),rr.subVectors(e.b,wo),or.subVectors(e.c,wo),qi.subVectors(rr,sr),ji.subVectors(or,rr),Es.subVectors(sr,or);let t=[0,-qi.z,qi.y,0,-ji.z,ji.y,0,-Es.z,Es.y,qi.z,0,-qi.x,ji.z,0,-ji.x,Es.z,0,-Es.x,-qi.y,qi.x,0,-ji.y,ji.x,0,-Es.y,Es.x,0];return!Il(t,sr,rr,or,ua)||(t=[1,0,0,0,1,0,0,0,1],!Il(t,sr,rr,or,ua))?!1:(da.crossVectors(qi,ji),t=[da.x,da.y,da.z],Il(t,sr,rr,or,ua))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Wn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Wn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(wi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),wi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),wi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),wi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),wi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),wi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),wi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),wi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(wi),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const wi=[new k,new k,new k,new k,new k,new k,new k,new k],Wn=new k,ha=new ms,sr=new k,rr=new k,or=new k,qi=new k,ji=new k,Es=new k,wo=new k,ua=new k,da=new k,As=new k;function Il(i,e,t,n,s){for(let r=0,a=i.length-3;r<=a;r+=3){As.fromArray(i,r);const o=s.x*Math.abs(As.x)+s.y*Math.abs(As.y)+s.z*Math.abs(As.z),c=e.dot(As),l=t.dot(As),h=n.dot(As);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const b_=new ms,To=new k,Dl=new k;class Bh{constructor(e=new k,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):b_.setFromPoints(e).getCenter(n);let s=0;for(let r=0,a=e.length;r<a;r++)s=Math.max(s,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;To.subVectors(e,this.center);const t=To.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),s=(n-this.radius)*.5;this.center.addScaledVector(To,s/n),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Dl.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(To.copy(e.center).add(Dl)),this.expandByPoint(To.copy(e.center).sub(Dl))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ti=new k,Pl=new k,fa=new k,Ki=new k,Ll=new k,pa=new k,Nl=new k;class Vh{constructor(e=new k,t=new k(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ti)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ti.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ti.copy(this.origin).addScaledVector(this.direction,t),Ti.distanceToSquared(e))}distanceSqToSegment(e,t,n,s){Pl.copy(e).add(t).multiplyScalar(.5),fa.copy(t).sub(e).normalize(),Ki.copy(this.origin).sub(Pl);const r=e.distanceTo(t)*.5,a=-this.direction.dot(fa),o=Ki.dot(this.direction),c=-Ki.dot(fa),l=Ki.lengthSq(),h=Math.abs(1-a*a);let u,f,m,g;if(h>0)if(u=a*c-o,f=a*o-c,g=r*h,u>=0)if(f>=-g)if(f<=g){const _=1/h;u*=_,f*=_,m=u*(u+a*f+2*o)+f*(a*u+f+2*c)+l}else f=r,u=Math.max(0,-(a*f+o)),m=-u*u+f*(f+2*c)+l;else f=-r,u=Math.max(0,-(a*f+o)),m=-u*u+f*(f+2*c)+l;else f<=-g?(u=Math.max(0,-(-a*r+o)),f=u>0?-r:Math.min(Math.max(-r,-c),r),m=-u*u+f*(f+2*c)+l):f<=g?(u=0,f=Math.min(Math.max(-r,-c),r),m=f*(f+2*c)+l):(u=Math.max(0,-(a*r+o)),f=u>0?r:Math.min(Math.max(-r,-c),r),m=-u*u+f*(f+2*c)+l);else f=a>0?-r:r,u=Math.max(0,-(a*f+o)),m=-u*u+f*(f+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(Pl).addScaledVector(fa,f),m}intersectSphere(e,t){Ti.subVectors(e.center,this.origin);const n=Ti.dot(this.direction),s=Ti.dot(Ti)-n*n,r=e.radius*e.radius;if(s>r)return null;const a=Math.sqrt(r-s),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,s,r,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return l>=0?(n=(e.min.x-f.x)*l,s=(e.max.x-f.x)*l):(n=(e.max.x-f.x)*l,s=(e.min.x-f.x)*l),h>=0?(r=(e.min.y-f.y)*h,a=(e.max.y-f.y)*h):(r=(e.max.y-f.y)*h,a=(e.min.y-f.y)*h),n>a||r>s||((r>n||isNaN(n))&&(n=r),(a<s||isNaN(s))&&(s=a),u>=0?(o=(e.min.z-f.z)*u,c=(e.max.z-f.z)*u):(o=(e.max.z-f.z)*u,c=(e.min.z-f.z)*u),n>c||o>s)||((o>n||n!==n)&&(n=o),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,t)}intersectsBox(e){return this.intersectBox(e,Ti)!==null}intersectTriangle(e,t,n,s,r){Ll.subVectors(t,e),pa.subVectors(n,e),Nl.crossVectors(Ll,pa);let a=this.direction.dot(Nl),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Ki.subVectors(this.origin,e);const c=o*this.direction.dot(pa.crossVectors(Ki,pa));if(c<0)return null;const l=o*this.direction.dot(Ll.cross(Ki));if(l<0||c+l>a)return null;const h=-o*Ki.dot(Nl);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class dt{constructor(e,t,n,s,r,a,o,c,l,h,u,f,m,g,_,p){dt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,s,r,a,o,c,l,h,u,f,m,g,_,p)}set(e,t,n,s,r,a,o,c,l,h,u,f,m,g,_,p){const d=this.elements;return d[0]=e,d[4]=t,d[8]=n,d[12]=s,d[1]=r,d[5]=a,d[9]=o,d[13]=c,d[2]=l,d[6]=h,d[10]=u,d[14]=f,d[3]=m,d[7]=g,d[11]=_,d[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new dt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,s=1/ar.setFromMatrixColumn(e,0).length(),r=1/ar.setFromMatrixColumn(e,1).length(),a=1/ar.setFromMatrixColumn(e,2).length();return t[0]=n[0]*s,t[1]=n[1]*s,t[2]=n[2]*s,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,s=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(s),l=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const f=a*h,m=a*u,g=o*h,_=o*u;t[0]=c*h,t[4]=-c*u,t[8]=l,t[1]=m+g*l,t[5]=f-_*l,t[9]=-o*c,t[2]=_-f*l,t[6]=g+m*l,t[10]=a*c}else if(e.order==="YXZ"){const f=c*h,m=c*u,g=l*h,_=l*u;t[0]=f+_*o,t[4]=g*o-m,t[8]=a*l,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=m*o-g,t[6]=_+f*o,t[10]=a*c}else if(e.order==="ZXY"){const f=c*h,m=c*u,g=l*h,_=l*u;t[0]=f-_*o,t[4]=-a*u,t[8]=g+m*o,t[1]=m+g*o,t[5]=a*h,t[9]=_-f*o,t[2]=-a*l,t[6]=o,t[10]=a*c}else if(e.order==="ZYX"){const f=a*h,m=a*u,g=o*h,_=o*u;t[0]=c*h,t[4]=g*l-m,t[8]=f*l+_,t[1]=c*u,t[5]=_*l+f,t[9]=m*l-g,t[2]=-l,t[6]=o*c,t[10]=a*c}else if(e.order==="YZX"){const f=a*c,m=a*l,g=o*c,_=o*l;t[0]=c*h,t[4]=_-f*u,t[8]=g*u+m,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-l*h,t[6]=m*u+g,t[10]=f-_*u}else if(e.order==="XZY"){const f=a*c,m=a*l,g=o*c,_=o*l;t[0]=c*h,t[4]=-u,t[8]=l*h,t[1]=f*u+_,t[5]=a*h,t[9]=m*u-g,t[2]=g*u-m,t[6]=o*h,t[10]=_*u+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(M_,e,w_)}lookAt(e,t,n){const s=this.elements;return En.subVectors(e,t),En.lengthSq()===0&&(En.z=1),En.normalize(),Xi.crossVectors(n,En),Xi.lengthSq()===0&&(Math.abs(n.z)===1?En.x+=1e-4:En.z+=1e-4,En.normalize(),Xi.crossVectors(n,En)),Xi.normalize(),ma.crossVectors(En,Xi),s[0]=Xi.x,s[4]=ma.x,s[8]=En.x,s[1]=Xi.y,s[5]=ma.y,s[9]=En.y,s[2]=Xi.z,s[6]=ma.z,s[10]=En.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,s=t.elements,r=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],f=n[9],m=n[13],g=n[2],_=n[6],p=n[10],d=n[14],x=n[3],y=n[7],S=n[11],b=n[15],w=s[0],M=s[4],C=s[8],O=s[12],v=s[1],E=s[5],L=s[9],V=s[13],D=s[2],G=s[6],U=s[10],W=s[14],H=s[3],B=s[7],j=s[11],ee=s[15];return r[0]=a*w+o*v+c*D+l*H,r[4]=a*M+o*E+c*G+l*B,r[8]=a*C+o*L+c*U+l*j,r[12]=a*O+o*V+c*W+l*ee,r[1]=h*w+u*v+f*D+m*H,r[5]=h*M+u*E+f*G+m*B,r[9]=h*C+u*L+f*U+m*j,r[13]=h*O+u*V+f*W+m*ee,r[2]=g*w+_*v+p*D+d*H,r[6]=g*M+_*E+p*G+d*B,r[10]=g*C+_*L+p*U+d*j,r[14]=g*O+_*V+p*W+d*ee,r[3]=x*w+y*v+S*D+b*H,r[7]=x*M+y*E+S*G+b*B,r[11]=x*C+y*L+S*U+b*j,r[15]=x*O+y*V+S*W+b*ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],s=e[8],r=e[12],a=e[1],o=e[5],c=e[9],l=e[13],h=e[2],u=e[6],f=e[10],m=e[14],g=e[3],_=e[7],p=e[11],d=e[15];return g*(+r*c*u-s*l*u-r*o*f+n*l*f+s*o*m-n*c*m)+_*(+t*c*m-t*l*f+r*a*f-s*a*m+s*l*h-r*c*h)+p*(+t*l*u-t*o*m-r*a*u+n*a*m+r*o*h-n*l*h)+d*(-s*o*h-t*c*u+t*o*f+s*a*u-n*a*f+n*c*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],s=e[2],r=e[3],a=e[4],o=e[5],c=e[6],l=e[7],h=e[8],u=e[9],f=e[10],m=e[11],g=e[12],_=e[13],p=e[14],d=e[15],x=u*p*l-_*f*l+_*c*m-o*p*m-u*c*d+o*f*d,y=g*f*l-h*p*l-g*c*m+a*p*m+h*c*d-a*f*d,S=h*_*l-g*u*l+g*o*m-a*_*m-h*o*d+a*u*d,b=g*u*c-h*_*c-g*o*f+a*_*f+h*o*p-a*u*p,w=t*x+n*y+s*S+r*b;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=x*M,e[1]=(_*f*r-u*p*r-_*s*m+n*p*m+u*s*d-n*f*d)*M,e[2]=(o*p*r-_*c*r+_*s*l-n*p*l-o*s*d+n*c*d)*M,e[3]=(u*c*r-o*f*r-u*s*l+n*f*l+o*s*m-n*c*m)*M,e[4]=y*M,e[5]=(h*p*r-g*f*r+g*s*m-t*p*m-h*s*d+t*f*d)*M,e[6]=(g*c*r-a*p*r-g*s*l+t*p*l+a*s*d-t*c*d)*M,e[7]=(a*f*r-h*c*r+h*s*l-t*f*l-a*s*m+t*c*m)*M,e[8]=S*M,e[9]=(g*u*r-h*_*r-g*n*m+t*_*m+h*n*d-t*u*d)*M,e[10]=(a*_*r-g*o*r+g*n*l-t*_*l-a*n*d+t*o*d)*M,e[11]=(h*o*r-a*u*r-h*n*l+t*u*l+a*n*m-t*o*m)*M,e[12]=b*M,e[13]=(h*_*s-g*u*s+g*n*f-t*_*f-h*n*p+t*u*p)*M,e[14]=(g*o*s-a*_*s-g*n*c+t*_*c+a*n*p-t*o*p)*M,e[15]=(a*u*s-h*o*s+h*n*c-t*u*c-a*n*f+t*o*f)*M,this}scale(e){const t=this.elements,n=e.x,s=e.y,r=e.z;return t[0]*=n,t[4]*=s,t[8]*=r,t[1]*=n,t[5]*=s,t[9]*=r,t[2]*=n,t[6]*=s,t[10]*=r,t[3]*=n,t[7]*=s,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,s))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),s=Math.sin(t),r=1-n,a=e.x,o=e.y,c=e.z,l=r*a,h=r*o;return this.set(l*a+n,l*o-s*c,l*c+s*o,0,l*o+s*c,h*o+n,h*c-s*a,0,l*c-s*o,h*c+s*a,r*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,s,r,a){return this.set(1,n,r,0,e,1,a,0,t,s,1,0,0,0,0,1),this}compose(e,t,n){const s=this.elements,r=t._x,a=t._y,o=t._z,c=t._w,l=r+r,h=a+a,u=o+o,f=r*l,m=r*h,g=r*u,_=a*h,p=a*u,d=o*u,x=c*l,y=c*h,S=c*u,b=n.x,w=n.y,M=n.z;return s[0]=(1-(_+d))*b,s[1]=(m+S)*b,s[2]=(g-y)*b,s[3]=0,s[4]=(m-S)*w,s[5]=(1-(f+d))*w,s[6]=(p+x)*w,s[7]=0,s[8]=(g+y)*M,s[9]=(p-x)*M,s[10]=(1-(f+_))*M,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,n){const s=this.elements;let r=ar.set(s[0],s[1],s[2]).length();const a=ar.set(s[4],s[5],s[6]).length(),o=ar.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),e.x=s[12],e.y=s[13],e.z=s[14],qn.copy(this);const l=1/r,h=1/a,u=1/o;return qn.elements[0]*=l,qn.elements[1]*=l,qn.elements[2]*=l,qn.elements[4]*=h,qn.elements[5]*=h,qn.elements[6]*=h,qn.elements[8]*=u,qn.elements[9]*=u,qn.elements[10]*=u,t.setFromRotationMatrix(qn),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,s,r,a,o=Fi){const c=this.elements,l=2*r/(t-e),h=2*r/(n-s),u=(t+e)/(t-e),f=(n+s)/(n-s);let m,g;if(o===Fi)m=-(a+r)/(a-r),g=-2*a*r/(a-r);else if(o===Ya)m=-a/(a-r),g=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=m,c[14]=g,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,s,r,a,o=Fi){const c=this.elements,l=1/(t-e),h=1/(n-s),u=1/(a-r),f=(t+e)*l,m=(n+s)*h;let g,_;if(o===Fi)g=(a+r)*u,_=-2*u;else if(o===Ya)g=r*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-f,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=_,c[14]=-g,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let s=0;s<16;s++)if(t[s]!==n[s])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ar=new k,qn=new dt,M_=new k(0,0,0),w_=new k(1,1,1),Xi=new k,ma=new k,En=new k,Md=new dt,wd=new Bs;class Vn{constructor(e=0,t=0,n=0,s=Vn.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,s=this._order){return this._x=e,this._y=t,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const s=e.elements,r=s[0],a=s[4],o=s[8],c=s[1],l=s[5],h=s[9],u=s[2],f=s[6],m=s[10];switch(t){case"XYZ":this._y=Math.asin(jt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-jt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(jt(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-jt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,m),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(jt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-jt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Md.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Md,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return wd.setFromEuler(this),this.setFromQuaternion(wd,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Vn.DEFAULT_ORDER="XYZ";class zh{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let T_=0;const Td=new k,cr=new Bs,Ei=new dt,ga=new k,Eo=new k,E_=new k,A_=new Bs,Ed=new k(1,0,0),Ad=new k(0,1,0),Cd=new k(0,0,1),C_={type:"added"},R_={type:"removed"},Ol={type:"childadded",child:null},Fl={type:"childremoved",child:null};class $t extends xs{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:T_++}),this.uuid=oo(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$t.DEFAULT_UP.clone();const e=new k,t=new Vn,n=new Bs,s=new k(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new dt},normalMatrix:{value:new Qe}}),this.matrix=new dt,this.matrixWorld=new dt,this.matrixAutoUpdate=$t.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=$t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new zh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return cr.setFromAxisAngle(e,t),this.quaternion.multiply(cr),this}rotateOnWorldAxis(e,t){return cr.setFromAxisAngle(e,t),this.quaternion.premultiply(cr),this}rotateX(e){return this.rotateOnAxis(Ed,e)}rotateY(e){return this.rotateOnAxis(Ad,e)}rotateZ(e){return this.rotateOnAxis(Cd,e)}translateOnAxis(e,t){return Td.copy(e).applyQuaternion(this.quaternion),this.position.add(Td.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ed,e)}translateY(e){return this.translateOnAxis(Ad,e)}translateZ(e){return this.translateOnAxis(Cd,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Ei.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?ga.copy(e):ga.set(e,t,n);const s=this.parent;this.updateWorldMatrix(!0,!1),Eo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ei.lookAt(Eo,ga,this.up):Ei.lookAt(ga,Eo,this.up),this.quaternion.setFromRotationMatrix(Ei),s&&(Ei.extractRotation(s.matrixWorld),cr.setFromRotationMatrix(Ei),this.quaternion.premultiply(cr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(C_),Ol.child=e,this.dispatchEvent(Ol),Ol.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(R_),Fl.child=e,this.dispatchEvent(Fl),Fl.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Ei.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ei.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ei),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,s=this.children.length;n<s;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Eo,e,E_),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Eo,A_,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,s=t.length;n<s;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,s=t.length;n<s;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const s=this.children;for(let r=0,a=s.length;r<a;r++){const o=s[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(e),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(e.shapes,u)}else r(e.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(r(e.materials,this.material[c]));s.material=o}else s.material=r(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];s.animations.push(r(e.animations,c))}}if(t){const o=a(e.geometries),c=a(e.materials),l=a(e.textures),h=a(e.images),u=a(e.shapes),f=a(e.skeletons),m=a(e.animations),g=a(e.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=s,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const s=e.children[n];this.add(s.clone())}return this}}$t.DEFAULT_UP=new k(0,1,0);$t.DEFAULT_MATRIX_AUTO_UPDATE=!0;$t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const jn=new k,Ai=new k,kl=new k,Ci=new k,lr=new k,hr=new k,Rd=new k,Ul=new k,Bl=new k,Vl=new k;class hi{constructor(e=new k,t=new k,n=new k){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,s){s.subVectors(n,t),jn.subVectors(e,t),s.cross(jn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(e,t,n,s,r){jn.subVectors(s,t),Ai.subVectors(n,t),kl.subVectors(e,t);const a=jn.dot(jn),o=jn.dot(Ai),c=jn.dot(kl),l=Ai.dot(Ai),h=Ai.dot(kl),u=a*l-o*o;if(u===0)return r.set(0,0,0),null;const f=1/u,m=(l*c-o*h)*f,g=(a*h-o*c)*f;return r.set(1-m-g,g,m)}static containsPoint(e,t,n,s){return this.getBarycoord(e,t,n,s,Ci)===null?!1:Ci.x>=0&&Ci.y>=0&&Ci.x+Ci.y<=1}static getInterpolation(e,t,n,s,r,a,o,c){return this.getBarycoord(e,t,n,s,Ci)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,Ci.x),c.addScaledVector(a,Ci.y),c.addScaledVector(o,Ci.z),c)}static isFrontFacing(e,t,n,s){return jn.subVectors(n,t),Ai.subVectors(e,t),jn.cross(Ai).dot(s)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,s){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,n,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return jn.subVectors(this.c,this.b),Ai.subVectors(this.a,this.b),jn.cross(Ai).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return hi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return hi.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,s,r){return hi.getInterpolation(e,this.a,this.b,this.c,t,n,s,r)}containsPoint(e){return hi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return hi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,s=this.b,r=this.c;let a,o;lr.subVectors(s,n),hr.subVectors(r,n),Ul.subVectors(e,n);const c=lr.dot(Ul),l=hr.dot(Ul);if(c<=0&&l<=0)return t.copy(n);Bl.subVectors(e,s);const h=lr.dot(Bl),u=hr.dot(Bl);if(h>=0&&u<=h)return t.copy(s);const f=c*u-h*l;if(f<=0&&c>=0&&h<=0)return a=c/(c-h),t.copy(n).addScaledVector(lr,a);Vl.subVectors(e,r);const m=lr.dot(Vl),g=hr.dot(Vl);if(g>=0&&m<=g)return t.copy(r);const _=m*l-c*g;if(_<=0&&l>=0&&g<=0)return o=l/(l-g),t.copy(n).addScaledVector(hr,o);const p=h*g-m*u;if(p<=0&&u-h>=0&&m-g>=0)return Rd.subVectors(r,s),o=(u-h)/(u-h+(m-g)),t.copy(s).addScaledVector(Rd,o);const d=1/(p+_+f);return a=_*d,o=f*d,t.copy(n).addScaledVector(lr,a).addScaledVector(hr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Cp={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Yi={h:0,s:0,l:0},_a={h:0,s:0,l:0};function zl(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class xe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const s=e;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=oi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,rt.toWorkingColorSpace(this,t),this}setRGB(e,t,n,s=rt.workingColorSpace){return this.r=e,this.g=t,this.b=n,rt.toWorkingColorSpace(this,s),this}setHSL(e,t,n,s=rt.workingColorSpace){if(e=Uh(e,1),t=jt(t,0,1),n=jt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=zl(a,r,e+1/3),this.g=zl(a,r,e),this.b=zl(a,r,e-1/3)}return rt.toWorkingColorSpace(this,s),this}setStyle(e,t=oi){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=s[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(a===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=oi){const n=Cp[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Cr(e.r),this.g=Cr(e.g),this.b=Cr(e.b),this}copyLinearToSRGB(e){return this.r=Al(e.r),this.g=Al(e.g),this.b=Al(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=oi){return rt.fromWorkingColorSpace(nn.copy(this),e),Math.round(jt(nn.r*255,0,255))*65536+Math.round(jt(nn.g*255,0,255))*256+Math.round(jt(nn.b*255,0,255))}getHexString(e=oi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=rt.workingColorSpace){rt.fromWorkingColorSpace(nn.copy(this),t);const n=nn.r,s=nn.g,r=nn.b,a=Math.max(n,s,r),o=Math.min(n,s,r);let c,l;const h=(o+a)/2;if(o===a)c=0,l=0;else{const u=a-o;switch(l=h<=.5?u/(a+o):u/(2-a-o),a){case n:c=(s-r)/u+(s<r?6:0);break;case s:c=(r-n)/u+2;break;case r:c=(n-s)/u+4;break}c/=6}return e.h=c,e.s=l,e.l=h,e}getRGB(e,t=rt.workingColorSpace){return rt.fromWorkingColorSpace(nn.copy(this),t),e.r=nn.r,e.g=nn.g,e.b=nn.b,e}getStyle(e=oi){rt.fromWorkingColorSpace(nn.copy(this),e);const t=nn.r,n=nn.g,s=nn.b;return e!==oi?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(e,t,n){return this.getHSL(Yi),this.setHSL(Yi.h+e,Yi.s+t,Yi.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Yi),e.getHSL(_a);const n=Lo(Yi.h,_a.h,t),s=Lo(Yi.s,_a.s,t),r=Lo(Yi.l,_a.l,t);return this.setHSL(n,s,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,s=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*s,this.g=r[1]*t+r[4]*n+r[7]*s,this.b=r[2]*t+r[5]*n+r[8]*s,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const nn=new xe;xe.NAMES=Cp;let I_=0;class ei extends xs{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:I_++}),this.uuid=oo(),this.name="",this.type="Material",this.blending=Ar,this.side=fs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ah,this.blendDst=ch,this.blendEquation=Ni,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new xe(0,0,0),this.blendAlpha=0,this.depthFunc=qa,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=md,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=nr,this.stencilZFail=nr,this.stencilZPass=nr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const s=this[t];if(s===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ar&&(n.blending=this.blending),this.side!==fs&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ah&&(n.blendSrc=this.blendSrc),this.blendDst!==ch&&(n.blendDst=this.blendDst),this.blendEquation!==Ni&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==qa&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==md&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==nr&&(n.stencilFail=this.stencilFail),this.stencilZFail!==nr&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==nr&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(t){const r=s(e.textures),a=s(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const s=t.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Rp extends ei{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Vn,this.combine=Zc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Pt=new k,ya=new Me;class ui{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=gd,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=li,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return g_("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[e+s]=t.array[n+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ya.fromBufferAttribute(this,t),ya.applyMatrix3(e),this.setXY(t,ya.x,ya.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix3(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyMatrix4(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.applyNormalMatrix(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Pt.fromBufferAttribute(this,t),Pt.transformDirection(e),this.setXYZ(t,Pt.x,Pt.y,Pt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=xr(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=cn(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=xr(t,this.array)),t}setX(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=xr(t,this.array)),t}setY(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=xr(t,this.array)),t}setZ(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=xr(t,this.array)),t}setW(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=cn(t,this.array),n=cn(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,s){return e*=this.itemSize,this.normalized&&(t=cn(t,this.array),n=cn(n,this.array),s=cn(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this}setXYZW(e,t,n,s,r){return e*=this.itemSize,this.normalized&&(t=cn(t,this.array),n=cn(n,this.array),s=cn(s,this.array),r=cn(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=s,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==gd&&(e.usage=this.usage),e}}class Ip extends ui{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Dp extends ui{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class gn extends ui{constructor(e,t,n){super(new Float32Array(e),t,n)}}let D_=0;const Fn=new dt,Gl=new $t,ur=new k,An=new ms,Ao=new ms,Vt=new k;class ti extends xs{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:D_++}),this.uuid=oo(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(wp(e)?Dp:Ip)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Qe().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Fn.makeRotationFromQuaternion(e),this.applyMatrix4(Fn),this}rotateX(e){return Fn.makeRotationX(e),this.applyMatrix4(Fn),this}rotateY(e){return Fn.makeRotationY(e),this.applyMatrix4(Fn),this}rotateZ(e){return Fn.makeRotationZ(e),this.applyMatrix4(Fn),this}translate(e,t,n){return Fn.makeTranslation(e,t,n),this.applyMatrix4(Fn),this}scale(e,t,n){return Fn.makeScale(e,t,n),this.applyMatrix4(Fn),this}lookAt(e){return Gl.lookAt(e),Gl.updateMatrix(),this.applyMatrix4(Gl.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ur).negate(),this.translate(ur.x,ur.y,ur.z),this}setFromPoints(e){const t=[];for(let n=0,s=e.length;n<s;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new gn(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ms);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new k(-1/0,-1/0,-1/0),new k(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,s=t.length;n<s;n++){const r=t[n];An.setFromBufferAttribute(r),this.morphTargetsRelative?(Vt.addVectors(this.boundingBox.min,An.min),this.boundingBox.expandByPoint(Vt),Vt.addVectors(this.boundingBox.max,An.max),this.boundingBox.expandByPoint(Vt)):(this.boundingBox.expandByPoint(An.min),this.boundingBox.expandByPoint(An.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Bh);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new k,1/0);return}if(e){const n=this.boundingSphere.center;if(An.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];Ao.setFromBufferAttribute(o),this.morphTargetsRelative?(Vt.addVectors(An.min,Ao.min),An.expandByPoint(Vt),Vt.addVectors(An.max,Ao.max),An.expandByPoint(Vt)):(An.expandByPoint(Ao.min),An.expandByPoint(Ao.max))}An.getCenter(n);let s=0;for(let r=0,a=e.count;r<a;r++)Vt.fromBufferAttribute(e,r),s=Math.max(s,n.distanceToSquared(Vt));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)Vt.fromBufferAttribute(o,l),c&&(ur.fromBufferAttribute(e,l),Vt.add(ur)),s=Math.max(s,n.distanceToSquared(Vt))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,s=t.normal,r=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ui(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let C=0;C<n.count;C++)o[C]=new k,c[C]=new k;const l=new k,h=new k,u=new k,f=new Me,m=new Me,g=new Me,_=new k,p=new k;function d(C,O,v){l.fromBufferAttribute(n,C),h.fromBufferAttribute(n,O),u.fromBufferAttribute(n,v),f.fromBufferAttribute(r,C),m.fromBufferAttribute(r,O),g.fromBufferAttribute(r,v),h.sub(l),u.sub(l),m.sub(f),g.sub(f);const E=1/(m.x*g.y-g.x*m.y);isFinite(E)&&(_.copy(h).multiplyScalar(g.y).addScaledVector(u,-m.y).multiplyScalar(E),p.copy(u).multiplyScalar(m.x).addScaledVector(h,-g.x).multiplyScalar(E),o[C].add(_),o[O].add(_),o[v].add(_),c[C].add(p),c[O].add(p),c[v].add(p))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let C=0,O=x.length;C<O;++C){const v=x[C],E=v.start,L=v.count;for(let V=E,D=E+L;V<D;V+=3)d(e.getX(V+0),e.getX(V+1),e.getX(V+2))}const y=new k,S=new k,b=new k,w=new k;function M(C){b.fromBufferAttribute(s,C),w.copy(b);const O=o[C];y.copy(O),y.sub(b.multiplyScalar(b.dot(O))).normalize(),S.crossVectors(w,O);const E=S.dot(c[C])<0?-1:1;a.setXYZW(C,y.x,y.y,y.z,E)}for(let C=0,O=x.length;C<O;++C){const v=x[C],E=v.start,L=v.count;for(let V=E,D=E+L;V<D;V+=3)M(e.getX(V+0)),M(e.getX(V+1)),M(e.getX(V+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ui(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let f=0,m=n.count;f<m;f++)n.setXYZ(f,0,0,0);const s=new k,r=new k,a=new k,o=new k,c=new k,l=new k,h=new k,u=new k;if(e)for(let f=0,m=e.count;f<m;f+=3){const g=e.getX(f+0),_=e.getX(f+1),p=e.getX(f+2);s.fromBufferAttribute(t,g),r.fromBufferAttribute(t,_),a.fromBufferAttribute(t,p),h.subVectors(a,r),u.subVectors(s,r),h.cross(u),o.fromBufferAttribute(n,g),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,p),o.add(h),c.add(h),l.add(h),n.setXYZ(g,o.x,o.y,o.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let f=0,m=t.count;f<m;f+=3)s.fromBufferAttribute(t,f+0),r.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),h.subVectors(a,r),u.subVectors(s,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Vt.fromBufferAttribute(e,t),Vt.normalize(),e.setXYZ(t,Vt.x,Vt.y,Vt.z)}toNonIndexed(){function e(o,c){const l=o.array,h=o.itemSize,u=o.normalized,f=new l.constructor(c.length*h);let m=0,g=0;for(let _=0,p=c.length;_<p;_++){o.isInterleavedBufferAttribute?m=c[_]*o.data.stride+o.offset:m=c[_]*h;for(let d=0;d<h;d++)f[g++]=l[m++]}return new ui(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ti,n=this.index.array,s=this.attributes;for(const o in s){const c=s[o],l=e(c,n);t.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const c=[],l=r[o];for(let h=0,u=l.length;h<u;h++){const f=l[h],m=e(f,n);c.push(m)}t.morphAttributes[o]=c}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];t.addGroup(l.start,l.count,l.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(e[l]=c[l]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const l=n[c];e.data.attributes[c]=l.toJSON(e.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,f=l.length;u<f;u++){const m=l[u];h.push(m.toJSON(e.data))}h.length>0&&(s[c]=h,r=!0)}r&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const s=e.attributes;for(const l in s){const h=s[l];this.setAttribute(l,h.clone(t))}const r=e.morphAttributes;for(const l in r){const h=[],u=r[l];for(let f=0,m=u.length;f<m;f++)h.push(u[f].clone(t));this.morphAttributes[l]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Id=new dt,Cs=new Vh,va=new Bh,Dd=new k,dr=new k,fr=new k,pr=new k,Hl=new k,xa=new k,Sa=new Me,ba=new Me,Ma=new Me,Pd=new k,Ld=new k,Nd=new k,wa=new k,Ta=new k;class un extends $t{constructor(e=new ti,t=new Rp){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const s=t[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(e,t){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(s,e);const o=this.morphTargetInfluences;if(r&&o){xa.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=o[c],u=r[c];h!==0&&(Hl.fromBufferAttribute(u,e),a?xa.addScaledVector(Hl,h):xa.addScaledVector(Hl.sub(t),h))}t.add(xa)}return t}raycast(e,t){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),va.copy(n.boundingSphere),va.applyMatrix4(r),Cs.copy(e.ray).recast(e.near),!(va.containsPoint(Cs.origin)===!1&&(Cs.intersectSphere(va,Dd)===null||Cs.origin.distanceToSquared(Dd)>(e.far-e.near)**2))&&(Id.copy(r).invert(),Cs.copy(e.ray).applyMatrix4(Id),!(n.boundingBox!==null&&Cs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Cs)))}_computeIntersections(e,t,n){let s;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,f=r.groups,m=r.drawRange;if(o!==null)if(Array.isArray(a))for(let g=0,_=f.length;g<_;g++){const p=f[g],d=a[p.materialIndex],x=Math.max(p.start,m.start),y=Math.min(o.count,Math.min(p.start+p.count,m.start+m.count));for(let S=x,b=y;S<b;S+=3){const w=o.getX(S),M=o.getX(S+1),C=o.getX(S+2);s=Ea(this,d,e,n,l,h,u,w,M,C),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{const g=Math.max(0,m.start),_=Math.min(o.count,m.start+m.count);for(let p=g,d=_;p<d;p+=3){const x=o.getX(p),y=o.getX(p+1),S=o.getX(p+2);s=Ea(this,a,e,n,l,h,u,x,y,S),s&&(s.faceIndex=Math.floor(p/3),t.push(s))}}else if(c!==void 0)if(Array.isArray(a))for(let g=0,_=f.length;g<_;g++){const p=f[g],d=a[p.materialIndex],x=Math.max(p.start,m.start),y=Math.min(c.count,Math.min(p.start+p.count,m.start+m.count));for(let S=x,b=y;S<b;S+=3){const w=S,M=S+1,C=S+2;s=Ea(this,d,e,n,l,h,u,w,M,C),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,t.push(s))}}else{const g=Math.max(0,m.start),_=Math.min(c.count,m.start+m.count);for(let p=g,d=_;p<d;p+=3){const x=p,y=p+1,S=p+2;s=Ea(this,a,e,n,l,h,u,x,y,S),s&&(s.faceIndex=Math.floor(p/3),t.push(s))}}}}function P_(i,e,t,n,s,r,a,o){let c;if(e.side===mn?c=n.intersectTriangle(a,r,s,!0,o):c=n.intersectTriangle(s,r,a,e.side===fs,o),c===null)return null;Ta.copy(o),Ta.applyMatrix4(i.matrixWorld);const l=t.ray.origin.distanceTo(Ta);return l<t.near||l>t.far?null:{distance:l,point:Ta.clone(),object:i}}function Ea(i,e,t,n,s,r,a,o,c,l){i.getVertexPosition(o,dr),i.getVertexPosition(c,fr),i.getVertexPosition(l,pr);const h=P_(i,e,t,n,dr,fr,pr,wa);if(h){s&&(Sa.fromBufferAttribute(s,o),ba.fromBufferAttribute(s,c),Ma.fromBufferAttribute(s,l),h.uv=hi.getInterpolation(wa,dr,fr,pr,Sa,ba,Ma,new Me)),r&&(Sa.fromBufferAttribute(r,o),ba.fromBufferAttribute(r,c),Ma.fromBufferAttribute(r,l),h.uv1=hi.getInterpolation(wa,dr,fr,pr,Sa,ba,Ma,new Me)),a&&(Pd.fromBufferAttribute(a,o),Ld.fromBufferAttribute(a,c),Nd.fromBufferAttribute(a,l),h.normal=hi.getInterpolation(wa,dr,fr,pr,Pd,Ld,Nd,new k),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a:o,b:c,c:l,normal:new k,materialIndex:0};hi.getNormal(dr,fr,pr,u.normal),h.face=u}return h}class mi extends ti{constructor(e=1,t=1,n=1,s=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:s,heightSegments:r,depthSegments:a};const o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);const c=[],l=[],h=[],u=[];let f=0,m=0;g("z","y","x",-1,-1,n,t,e,a,r,0),g("z","y","x",1,-1,n,t,-e,a,r,1),g("x","z","y",1,1,e,n,t,s,a,2),g("x","z","y",1,-1,e,n,-t,s,a,3),g("x","y","z",1,-1,e,t,n,s,r,4),g("x","y","z",-1,-1,e,t,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new gn(l,3)),this.setAttribute("normal",new gn(h,3)),this.setAttribute("uv",new gn(u,2));function g(_,p,d,x,y,S,b,w,M,C,O){const v=S/M,E=b/C,L=S/2,V=b/2,D=w/2,G=M+1,U=C+1;let W=0,H=0;const B=new k;for(let j=0;j<U;j++){const ee=j*E-V;for(let ce=0;ce<G;ce++){const Ce=ce*v-L;B[_]=Ce*x,B[p]=ee*y,B[d]=D,l.push(B.x,B.y,B.z),B[_]=0,B[p]=0,B[d]=w>0?1:-1,h.push(B.x,B.y,B.z),u.push(ce/M),u.push(1-j/C),W+=1}}for(let j=0;j<C;j++)for(let ee=0;ee<M;ee++){const ce=f+ee+G*j,Ce=f+ee+G*(j+1),K=f+(ee+1)+G*(j+1),J=f+(ee+1)+G*j;c.push(ce,Ce,J),c.push(Ce,K,J),H+=6}o.addGroup(m,H,O),m+=H,f+=W}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new mi(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Nr(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const s=i[t][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=s.clone():Array.isArray(s)?e[t][n]=s.slice():e[t][n]=s}}return e}function ln(i){const e={};for(let t=0;t<i.length;t++){const n=Nr(i[t]);for(const s in n)e[s]=n[s]}return e}function L_(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function Pp(i){return i.getRenderTarget()===null?i.outputColorSpace:rt.workingColorSpace}const rs={clone:Nr,merge:ln};var N_=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,O_=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class rn extends ei{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=N_,this.fragmentShader=O_,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Nr(e.uniforms),this.uniformsGroups=L_(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?t.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[s]={type:"m4",value:a.toArray()}:t.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Lp extends $t{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new dt,this.projectionMatrix=new dt,this.projectionMatrixInverse=new dt,this.coordinateSystem=Fi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const $i=new k,Od=new Me,Fd=new Me;class Cn extends Lp{constructor(e=50,t=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ko*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Po*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ko*2*Math.atan(Math.tan(Po*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){$i.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set($i.x,$i.y).multiplyScalar(-e/$i.z),$i.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set($i.x,$i.y).multiplyScalar(-e/$i.z)}getViewSize(e,t){return this.getViewBounds(e,Od,Fd),t.subVectors(Fd,Od)}setViewOffset(e,t,n,s,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Po*.5*this.fov)/this.zoom,n=2*t,s=this.aspect*n,r=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;r+=a.offsetX*s/c,t-=a.offsetY*n/l,s*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const mr=-90,gr=1;class F_ extends $t{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Cn(mr,gr,e,t);s.layers=this.layers,this.add(s);const r=new Cn(mr,gr,e,t);r.layers=this.layers,this.add(r);const a=new Cn(mr,gr,e,t);a.layers=this.layers,this.add(a);const o=new Cn(mr,gr,e,t);o.layers=this.layers,this.add(o);const c=new Cn(mr,gr,e,t);c.layers=this.layers,this.add(c);const l=new Cn(mr,gr,e,t);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,s,r,a,o,c]=t;for(const l of t)this.remove(l);if(e===Fi)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(e===Ya)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const l of t)this.add(l),l.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,c,l,h]=this.children,u=e.getRenderTarget(),f=e.getActiveCubeFace(),m=e.getActiveMipmapLevel(),g=e.xr.enabled;e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,s),e.render(t,r),e.setRenderTarget(n,1,s),e.render(t,a),e.setRenderTarget(n,2,s),e.render(t,o),e.setRenderTarget(n,3,s),e.render(t,c),e.setRenderTarget(n,4,s),e.render(t,l),n.texture.generateMipmaps=_,e.setRenderTarget(n,5,s),e.render(t,h),e.setRenderTarget(u,f,m),e.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class Np extends Gt{constructor(e,t,n,s,r,a,o,c,l,h){e=e!==void 0?e:[],t=t!==void 0?t:Pr,super(e,t,n,s,r,a,o,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class k_ extends pi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},s=[n,n,n,n,n,n];this.texture=new Np(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:yn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new mi(5,5,5),r=new rn({name:"CubemapFromEquirect",uniforms:Nr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:mn,blending:sn});r.uniforms.tEquirect.value=t;const a=new un(s,r),o=t.minFilter;return t.minFilter===Os&&(t.minFilter=yn),new F_(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,s){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,s);e.setRenderTarget(r)}}const Wl=new k,U_=new k,B_=new Qe;class Li{constructor(e=new k(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,s){return this.normal.set(e,t,n),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const s=Wl.subVectors(n,t).cross(U_.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(Wl),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||B_.getNormalMatrix(e),s=this.coplanarPoint(Wl).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Rs=new Bh,Aa=new k;class Gh{constructor(e=new Li,t=new Li,n=new Li,s=new Li,r=new Li,a=new Li){this.planes=[e,t,n,s,r,a]}set(e,t,n,s,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Fi){const n=this.planes,s=e.elements,r=s[0],a=s[1],o=s[2],c=s[3],l=s[4],h=s[5],u=s[6],f=s[7],m=s[8],g=s[9],_=s[10],p=s[11],d=s[12],x=s[13],y=s[14],S=s[15];if(n[0].setComponents(c-r,f-l,p-m,S-d).normalize(),n[1].setComponents(c+r,f+l,p+m,S+d).normalize(),n[2].setComponents(c+a,f+h,p+g,S+x).normalize(),n[3].setComponents(c-a,f-h,p-g,S-x).normalize(),n[4].setComponents(c-o,f-u,p-_,S-y).normalize(),t===Fi)n[5].setComponents(c+o,f+u,p+_,S+y).normalize();else if(t===Ya)n[5].setComponents(o,u,_,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Rs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Rs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Rs)}intersectsSprite(e){return Rs.center.set(0,0,0),Rs.radius=.7071067811865476,Rs.applyMatrix4(e.matrixWorld),this.intersectsSphere(Rs)}intersectsSphere(e){const t=this.planes,n=e.center,s=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const s=t[n];if(Aa.x=s.normal.x>0?e.max.x:e.min.x,Aa.y=s.normal.y>0?e.max.y:e.min.y,Aa.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Aa)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Op(){let i=null,e=!1,t=null,n=null;function s(r,a){t(r,a),n=i.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(s),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){i=r}}}function V_(i,e){const t=e.isWebGL2,n=new WeakMap;function s(l,h){const u=l.array,f=l.usage,m=u.byteLength,g=i.createBuffer();i.bindBuffer(h,g),i.bufferData(h,u,f),l.onUploadCallback();let _;if(u instanceof Float32Array)_=i.FLOAT;else if(u instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(t)_=i.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else _=i.UNSIGNED_SHORT;else if(u instanceof Int16Array)_=i.SHORT;else if(u instanceof Uint32Array)_=i.UNSIGNED_INT;else if(u instanceof Int32Array)_=i.INT;else if(u instanceof Int8Array)_=i.BYTE;else if(u instanceof Uint8Array)_=i.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)_=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:g,type:_,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version,size:m}}function r(l,h,u){const f=h.array,m=h._updateRange,g=h.updateRanges;if(i.bindBuffer(u,l),m.count===-1&&g.length===0&&i.bufferSubData(u,0,f),g.length!==0){for(let _=0,p=g.length;_<p;_++){const d=g[_];t?i.bufferSubData(u,d.start*f.BYTES_PER_ELEMENT,f,d.start,d.count):i.bufferSubData(u,d.start*f.BYTES_PER_ELEMENT,f.subarray(d.start,d.start+d.count))}h.clearUpdateRanges()}m.count!==-1&&(t?i.bufferSubData(u,m.offset*f.BYTES_PER_ELEMENT,f,m.offset,m.count):i.bufferSubData(u,m.offset*f.BYTES_PER_ELEMENT,f.subarray(m.offset,m.offset+m.count)),m.count=-1),h.onUploadCallback()}function a(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function o(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h&&(i.deleteBuffer(h.buffer),n.delete(l))}function c(l,h){if(l.isGLBufferAttribute){const f=n.get(l);(!f||f.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);if(u===void 0)n.set(l,s(l,h));else if(u.version<l.version){if(u.size!==l.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");r(u.buffer,l,h),u.version=l.version}}return{get:a,remove:o,update:c}}class el extends ti{constructor(e=1,t=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:s};const r=e/2,a=t/2,o=Math.floor(n),c=Math.floor(s),l=o+1,h=c+1,u=e/o,f=t/c,m=[],g=[],_=[],p=[];for(let d=0;d<h;d++){const x=d*f-a;for(let y=0;y<l;y++){const S=y*u-r;g.push(S,-x,0),_.push(0,0,1),p.push(y/o),p.push(1-d/c)}}for(let d=0;d<c;d++)for(let x=0;x<o;x++){const y=x+l*d,S=x+l*(d+1),b=x+1+l*(d+1),w=x+1+l*d;m.push(y,S,w),m.push(S,b,w)}this.setIndex(m),this.setAttribute("position",new gn(g,3)),this.setAttribute("normal",new gn(_,3)),this.setAttribute("uv",new gn(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new el(e.width,e.height,e.widthSegments,e.heightSegments)}}var z_=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,G_=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,H_=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,W_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,q_=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,j_=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,K_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,X_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Y_=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,$_=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,Z_=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,Q_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,J_=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,ey=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,ty=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,ny=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,iy=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,sy=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,ry=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,oy=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,ay=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,cy=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ly=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,hy=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,uy=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,dy=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,fy=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,py=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,my=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,gy=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,_y="gl_FragColor = linearToOutputTexel( gl_FragColor );",yy=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,vy=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,xy=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Sy=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,by=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,My=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,wy=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Ty=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Ey=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Ay=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Cy=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Ry=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Iy=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Dy=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Py=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Ly=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Ny=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Oy=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Fy=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,ky=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Uy=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,By=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Vy=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,zy=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Gy=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Hy=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Wy=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,qy=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,jy=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Ky=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Xy=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Yy=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,$y=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Zy=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Qy=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Jy=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,ev=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,tv=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,nv=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,iv=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,sv=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,rv=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,ov=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,av=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,cv=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,lv=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,hv=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,uv=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,dv=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,fv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,pv=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,mv=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,gv=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,_v=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,yv=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,vv=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,xv=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Sv=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,bv=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Mv=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,wv=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Tv=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,Ev=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Av=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Cv=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,Rv=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Iv=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Dv=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Pv=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Lv=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Nv=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Ov=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Fv=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,kv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Uv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Bv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Vv=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const zv=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Gv=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Hv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Wv=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,jv=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Kv=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Xv=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Yv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,$v=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Zv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Qv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Jv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,e0=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,t0=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,n0=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,i0=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,s0=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,r0=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,o0=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,a0=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,c0=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,l0=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,h0=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,u0=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,d0=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,f0=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,p0=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,m0=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,g0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,_0=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,y0=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,v0=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,x0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ze={alphahash_fragment:z_,alphahash_pars_fragment:G_,alphamap_fragment:H_,alphamap_pars_fragment:W_,alphatest_fragment:q_,alphatest_pars_fragment:j_,aomap_fragment:K_,aomap_pars_fragment:X_,batching_pars_vertex:Y_,batching_vertex:$_,begin_vertex:Z_,beginnormal_vertex:Q_,bsdfs:J_,iridescence_fragment:ey,bumpmap_pars_fragment:ty,clipping_planes_fragment:ny,clipping_planes_pars_fragment:iy,clipping_planes_pars_vertex:sy,clipping_planes_vertex:ry,color_fragment:oy,color_pars_fragment:ay,color_pars_vertex:cy,color_vertex:ly,common:hy,cube_uv_reflection_fragment:uy,defaultnormal_vertex:dy,displacementmap_pars_vertex:fy,displacementmap_vertex:py,emissivemap_fragment:my,emissivemap_pars_fragment:gy,colorspace_fragment:_y,colorspace_pars_fragment:yy,envmap_fragment:vy,envmap_common_pars_fragment:xy,envmap_pars_fragment:Sy,envmap_pars_vertex:by,envmap_physical_pars_fragment:Ny,envmap_vertex:My,fog_vertex:wy,fog_pars_vertex:Ty,fog_fragment:Ey,fog_pars_fragment:Ay,gradientmap_pars_fragment:Cy,lightmap_fragment:Ry,lightmap_pars_fragment:Iy,lights_lambert_fragment:Dy,lights_lambert_pars_fragment:Py,lights_pars_begin:Ly,lights_toon_fragment:Oy,lights_toon_pars_fragment:Fy,lights_phong_fragment:ky,lights_phong_pars_fragment:Uy,lights_physical_fragment:By,lights_physical_pars_fragment:Vy,lights_fragment_begin:zy,lights_fragment_maps:Gy,lights_fragment_end:Hy,logdepthbuf_fragment:Wy,logdepthbuf_pars_fragment:qy,logdepthbuf_pars_vertex:jy,logdepthbuf_vertex:Ky,map_fragment:Xy,map_pars_fragment:Yy,map_particle_fragment:$y,map_particle_pars_fragment:Zy,metalnessmap_fragment:Qy,metalnessmap_pars_fragment:Jy,morphinstance_vertex:ev,morphcolor_vertex:tv,morphnormal_vertex:nv,morphtarget_pars_vertex:iv,morphtarget_vertex:sv,normal_fragment_begin:rv,normal_fragment_maps:ov,normal_pars_fragment:av,normal_pars_vertex:cv,normal_vertex:lv,normalmap_pars_fragment:hv,clearcoat_normal_fragment_begin:uv,clearcoat_normal_fragment_maps:dv,clearcoat_pars_fragment:fv,iridescence_pars_fragment:pv,opaque_fragment:mv,packing:gv,premultiplied_alpha_fragment:_v,project_vertex:yv,dithering_fragment:vv,dithering_pars_fragment:xv,roughnessmap_fragment:Sv,roughnessmap_pars_fragment:bv,shadowmap_pars_fragment:Mv,shadowmap_pars_vertex:wv,shadowmap_vertex:Tv,shadowmask_pars_fragment:Ev,skinbase_vertex:Av,skinning_pars_vertex:Cv,skinning_vertex:Rv,skinnormal_vertex:Iv,specularmap_fragment:Dv,specularmap_pars_fragment:Pv,tonemapping_fragment:Lv,tonemapping_pars_fragment:Nv,transmission_fragment:Ov,transmission_pars_fragment:Fv,uv_pars_fragment:kv,uv_pars_vertex:Uv,uv_vertex:Bv,worldpos_vertex:Vv,background_vert:zv,background_frag:Gv,backgroundCube_vert:Hv,backgroundCube_frag:Wv,cube_vert:qv,cube_frag:jv,depth_vert:Kv,depth_frag:Xv,distanceRGBA_vert:Yv,distanceRGBA_frag:$v,equirect_vert:Zv,equirect_frag:Qv,linedashed_vert:Jv,linedashed_frag:e0,meshbasic_vert:t0,meshbasic_frag:n0,meshlambert_vert:i0,meshlambert_frag:s0,meshmatcap_vert:r0,meshmatcap_frag:o0,meshnormal_vert:a0,meshnormal_frag:c0,meshphong_vert:l0,meshphong_frag:h0,meshphysical_vert:u0,meshphysical_frag:d0,meshtoon_vert:f0,meshtoon_frag:p0,points_vert:m0,points_frag:g0,shadow_vert:_0,shadow_frag:y0,sprite_vert:v0,sprite_frag:x0},_e={common:{diffuse:{value:new xe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Qe},alphaMap:{value:null},alphaMapTransform:{value:new Qe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Qe}},envmap:{envMap:{value:null},envMapRotation:{value:new Qe},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Qe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Qe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Qe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Qe},normalScale:{value:new Me(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Qe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Qe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Qe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Qe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new xe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new xe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Qe},alphaTest:{value:0},uvTransform:{value:new Qe}},sprite:{diffuse:{value:new xe(16777215)},opacity:{value:1},center:{value:new Me(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Qe},alphaMap:{value:null},alphaMapTransform:{value:new Qe},alphaTest:{value:0}}},ai={basic:{uniforms:ln([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.fog]),vertexShader:Ze.meshbasic_vert,fragmentShader:Ze.meshbasic_frag},lambert:{uniforms:ln([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new xe(0)}}]),vertexShader:Ze.meshlambert_vert,fragmentShader:Ze.meshlambert_frag},phong:{uniforms:ln([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new xe(0)},specular:{value:new xe(1118481)},shininess:{value:30}}]),vertexShader:Ze.meshphong_vert,fragmentShader:Ze.meshphong_frag},standard:{uniforms:ln([_e.common,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.roughnessmap,_e.metalnessmap,_e.fog,_e.lights,{emissive:{value:new xe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag},toon:{uniforms:ln([_e.common,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.gradientmap,_e.fog,_e.lights,{emissive:{value:new xe(0)}}]),vertexShader:Ze.meshtoon_vert,fragmentShader:Ze.meshtoon_frag},matcap:{uniforms:ln([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,{matcap:{value:null}}]),vertexShader:Ze.meshmatcap_vert,fragmentShader:Ze.meshmatcap_frag},points:{uniforms:ln([_e.points,_e.fog]),vertexShader:Ze.points_vert,fragmentShader:Ze.points_frag},dashed:{uniforms:ln([_e.common,_e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ze.linedashed_vert,fragmentShader:Ze.linedashed_frag},depth:{uniforms:ln([_e.common,_e.displacementmap]),vertexShader:Ze.depth_vert,fragmentShader:Ze.depth_frag},normal:{uniforms:ln([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,{opacity:{value:1}}]),vertexShader:Ze.meshnormal_vert,fragmentShader:Ze.meshnormal_frag},sprite:{uniforms:ln([_e.sprite,_e.fog]),vertexShader:Ze.sprite_vert,fragmentShader:Ze.sprite_frag},background:{uniforms:{uvTransform:{value:new Qe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ze.background_vert,fragmentShader:Ze.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Qe}},vertexShader:Ze.backgroundCube_vert,fragmentShader:Ze.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ze.cube_vert,fragmentShader:Ze.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ze.equirect_vert,fragmentShader:Ze.equirect_frag},distanceRGBA:{uniforms:ln([_e.common,_e.displacementmap,{referencePosition:{value:new k},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ze.distanceRGBA_vert,fragmentShader:Ze.distanceRGBA_frag},shadow:{uniforms:ln([_e.lights,_e.fog,{color:{value:new xe(0)},opacity:{value:1}}]),vertexShader:Ze.shadow_vert,fragmentShader:Ze.shadow_frag}};ai.physical={uniforms:ln([ai.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Qe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Qe},clearcoatNormalScale:{value:new Me(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Qe},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Qe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Qe},sheen:{value:0},sheenColor:{value:new xe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Qe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Qe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Qe},transmissionSamplerSize:{value:new Me},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Qe},attenuationDistance:{value:0},attenuationColor:{value:new xe(0)},specularColor:{value:new xe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Qe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Qe},anisotropyVector:{value:new Me},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Qe}}]),vertexShader:Ze.meshphysical_vert,fragmentShader:Ze.meshphysical_frag};const Ca={r:0,b:0,g:0},Is=new Vn,S0=new dt;function b0(i,e,t,n,s,r,a){const o=new xe(0);let c=r===!0?0:1,l,h,u=null,f=0,m=null;function g(p,d){let x=!1,y=d.isScene===!0?d.background:null;y&&y.isTexture&&(y=(d.backgroundBlurriness>0?t:e).get(y)),y===null?_(o,c):y&&y.isColor&&(_(y,1),x=!0);const S=i.xr.getEnvironmentBlendMode();S==="additive"?n.buffers.color.setClear(0,0,0,1,a):S==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(i.autoClear||x)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),y&&(y.isCubeTexture||y.mapping===Qc)?(h===void 0&&(h=new un(new mi(1,1,1),new rn({name:"BackgroundCubeMaterial",uniforms:Nr(ai.backgroundCube.uniforms),vertexShader:ai.backgroundCube.vertexShader,fragmentShader:ai.backgroundCube.fragmentShader,side:mn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(b,w,M){this.matrixWorld.copyPosition(M.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),Is.copy(d.backgroundRotation),Is.x*=-1,Is.y*=-1,Is.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Is.y*=-1,Is.z*=-1),h.material.uniforms.envMap.value=y,h.material.uniforms.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=d.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(S0.makeRotationFromEuler(Is)),h.material.toneMapped=rt.getTransfer(y.colorSpace)!==ut,(u!==y||f!==y.version||m!==i.toneMapping)&&(h.material.needsUpdate=!0,u=y,f=y.version,m=i.toneMapping),h.layers.enableAll(),p.unshift(h,h.geometry,h.material,0,0,null)):y&&y.isTexture&&(l===void 0&&(l=new un(new el(2,2),new rn({name:"BackgroundMaterial",uniforms:Nr(ai.background.uniforms),vertexShader:ai.background.vertexShader,fragmentShader:ai.background.fragmentShader,side:fs,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=y,l.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,l.material.toneMapped=rt.getTransfer(y.colorSpace)!==ut,y.matrixAutoUpdate===!0&&y.updateMatrix(),l.material.uniforms.uvTransform.value.copy(y.matrix),(u!==y||f!==y.version||m!==i.toneMapping)&&(l.material.needsUpdate=!0,u=y,f=y.version,m=i.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}function _(p,d){p.getRGB(Ca,Pp(i)),n.buffers.color.setClear(Ca.r,Ca.g,Ca.b,d,a)}return{getClearColor:function(){return o},setClearColor:function(p,d=1){o.set(p),c=d,_(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(p){c=p,_(o,c)},render:g}}function M0(i,e,t,n){const s=i.getParameter(i.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},c=p(null);let l=c,h=!1;function u(D,G,U,W,H){let B=!1;if(a){const j=_(W,U,G);l!==j&&(l=j,m(l.object)),B=d(D,W,U,H),B&&x(D,W,U,H)}else{const j=G.wireframe===!0;(l.geometry!==W.id||l.program!==U.id||l.wireframe!==j)&&(l.geometry=W.id,l.program=U.id,l.wireframe=j,B=!0)}H!==null&&t.update(H,i.ELEMENT_ARRAY_BUFFER),(B||h)&&(h=!1,C(D,G,U,W),H!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.get(H).buffer))}function f(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function m(D){return n.isWebGL2?i.bindVertexArray(D):r.bindVertexArrayOES(D)}function g(D){return n.isWebGL2?i.deleteVertexArray(D):r.deleteVertexArrayOES(D)}function _(D,G,U){const W=U.wireframe===!0;let H=o[D.id];H===void 0&&(H={},o[D.id]=H);let B=H[G.id];B===void 0&&(B={},H[G.id]=B);let j=B[W];return j===void 0&&(j=p(f()),B[W]=j),j}function p(D){const G=[],U=[],W=[];for(let H=0;H<s;H++)G[H]=0,U[H]=0,W[H]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:G,enabledAttributes:U,attributeDivisors:W,object:D,attributes:{},index:null}}function d(D,G,U,W){const H=l.attributes,B=G.attributes;let j=0;const ee=U.getAttributes();for(const ce in ee)if(ee[ce].location>=0){const K=H[ce];let J=B[ce];if(J===void 0&&(ce==="instanceMatrix"&&D.instanceMatrix&&(J=D.instanceMatrix),ce==="instanceColor"&&D.instanceColor&&(J=D.instanceColor)),K===void 0||K.attribute!==J||J&&K.data!==J.data)return!0;j++}return l.attributesNum!==j||l.index!==W}function x(D,G,U,W){const H={},B=G.attributes;let j=0;const ee=U.getAttributes();for(const ce in ee)if(ee[ce].location>=0){let K=B[ce];K===void 0&&(ce==="instanceMatrix"&&D.instanceMatrix&&(K=D.instanceMatrix),ce==="instanceColor"&&D.instanceColor&&(K=D.instanceColor));const J={};J.attribute=K,K&&K.data&&(J.data=K.data),H[ce]=J,j++}l.attributes=H,l.attributesNum=j,l.index=W}function y(){const D=l.newAttributes;for(let G=0,U=D.length;G<U;G++)D[G]=0}function S(D){b(D,0)}function b(D,G){const U=l.newAttributes,W=l.enabledAttributes,H=l.attributeDivisors;U[D]=1,W[D]===0&&(i.enableVertexAttribArray(D),W[D]=1),H[D]!==G&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,G),H[D]=G)}function w(){const D=l.newAttributes,G=l.enabledAttributes;for(let U=0,W=G.length;U<W;U++)G[U]!==D[U]&&(i.disableVertexAttribArray(U),G[U]=0)}function M(D,G,U,W,H,B,j){j===!0?i.vertexAttribIPointer(D,G,U,H,B):i.vertexAttribPointer(D,G,U,W,H,B)}function C(D,G,U,W){if(n.isWebGL2===!1&&(D.isInstancedMesh||W.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const H=W.attributes,B=U.getAttributes(),j=G.defaultAttributeValues;for(const ee in B){const ce=B[ee];if(ce.location>=0){let Ce=H[ee];if(Ce===void 0&&(ee==="instanceMatrix"&&D.instanceMatrix&&(Ce=D.instanceMatrix),ee==="instanceColor"&&D.instanceColor&&(Ce=D.instanceColor)),Ce!==void 0){const K=Ce.normalized,J=Ce.itemSize,he=t.get(Ce);if(he===void 0)continue;const Se=he.buffer,ne=he.type,me=he.bytesPerElement,Ve=n.isWebGL2===!0&&(ne===i.INT||ne===i.UNSIGNED_INT||Ce.gpuType===fp);if(Ce.isInterleavedBufferAttribute){const Le=Ce.data,z=Le.stride,pt=Ce.offset;if(Le.isInstancedInterleavedBuffer){for(let Pe=0;Pe<ce.locationSize;Pe++)b(ce.location+Pe,Le.meshPerAttribute);D.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=Le.meshPerAttribute*Le.count)}else for(let Pe=0;Pe<ce.locationSize;Pe++)S(ce.location+Pe);i.bindBuffer(i.ARRAY_BUFFER,Se);for(let Pe=0;Pe<ce.locationSize;Pe++)M(ce.location+Pe,J/ce.locationSize,ne,K,z*me,(pt+J/ce.locationSize*Pe)*me,Ve)}else{if(Ce.isInstancedBufferAttribute){for(let Le=0;Le<ce.locationSize;Le++)b(ce.location+Le,Ce.meshPerAttribute);D.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=Ce.meshPerAttribute*Ce.count)}else for(let Le=0;Le<ce.locationSize;Le++)S(ce.location+Le);i.bindBuffer(i.ARRAY_BUFFER,Se);for(let Le=0;Le<ce.locationSize;Le++)M(ce.location+Le,J/ce.locationSize,ne,K,J*me,J/ce.locationSize*Le*me,Ve)}}else if(j!==void 0){const K=j[ee];if(K!==void 0)switch(K.length){case 2:i.vertexAttrib2fv(ce.location,K);break;case 3:i.vertexAttrib3fv(ce.location,K);break;case 4:i.vertexAttrib4fv(ce.location,K);break;default:i.vertexAttrib1fv(ce.location,K)}}}}w()}function O(){L();for(const D in o){const G=o[D];for(const U in G){const W=G[U];for(const H in W)g(W[H].object),delete W[H];delete G[U]}delete o[D]}}function v(D){if(o[D.id]===void 0)return;const G=o[D.id];for(const U in G){const W=G[U];for(const H in W)g(W[H].object),delete W[H];delete G[U]}delete o[D.id]}function E(D){for(const G in o){const U=o[G];if(U[D.id]===void 0)continue;const W=U[D.id];for(const H in W)g(W[H].object),delete W[H];delete U[D.id]}}function L(){V(),h=!0,l!==c&&(l=c,m(l.object))}function V(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:u,reset:L,resetDefaultState:V,dispose:O,releaseStatesOfGeometry:v,releaseStatesOfProgram:E,initAttributes:y,enableAttribute:S,disableUnusedAttributes:w}}function w0(i,e,t,n){const s=n.isWebGL2;let r;function a(h){r=h}function o(h,u){i.drawArrays(r,h,u),t.update(u,r,1)}function c(h,u,f){if(f===0)return;let m,g;if(s)m=i,g="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](r,h,u,f),t.update(u,r,f)}function l(h,u,f){if(f===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<f;g++)this.render(h[g],u[g]);else{m.multiDrawArraysWEBGL(r,h,0,u,0,f);let g=0;for(let _=0;_<f;_++)g+=u[_];t.update(g,r,1)}}this.setMode=a,this.render=o,this.renderInstances=c,this.renderMultiDraw=l}function T0(i,e,t){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(M){if(M==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&i.constructor.name==="WebGL2RenderingContext";let o=t.precision!==void 0?t.precision:"highp";const c=r(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const l=a||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,u=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),f=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=i.getParameter(i.MAX_TEXTURE_SIZE),g=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),_=i.getParameter(i.MAX_VERTEX_ATTRIBS),p=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),d=i.getParameter(i.MAX_VARYING_VECTORS),x=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),y=f>0,S=a||e.has("OES_texture_float"),b=y&&S,w=a?i.getParameter(i.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:s,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:m,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:p,maxVaryings:d,maxFragmentUniforms:x,vertexTextures:y,floatFragmentTextures:S,floatVertexTextures:b,maxSamples:w}}function E0(i){const e=this;let t=null,n=0,s=!1,r=!1;const a=new Li,o=new Qe,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const m=u.length!==0||f||n!==0||s;return s=f,n=u.length,m},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,f){t=h(u,f,0)},this.setState=function(u,f,m){const g=u.clippingPlanes,_=u.clipIntersection,p=u.clipShadows,d=i.get(u);if(!s||g===null||g.length===0||r&&!p)r?h(null):l();else{const x=r?0:n,y=x*4;let S=d.clippingState||null;c.value=S,S=h(g,f,y,m);for(let b=0;b!==y;++b)S[b]=t[b];d.clippingState=S,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=x}};function l(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(u,f,m,g){const _=u!==null?u.length:0;let p=null;if(_!==0){if(p=c.value,g!==!0||p===null){const d=m+_*4,x=f.matrixWorldInverse;o.getNormalMatrix(x),(p===null||p.length<d)&&(p=new Float32Array(d));for(let y=0,S=m;y!==_;++y,S+=4)a.copy(u[y]).applyMatrix4(x,o),a.normal.toArray(p,S),p[S+3]=a.constant}c.value=p,c.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,p}}function A0(i){let e=new WeakMap;function t(a,o){return o===lh?a.mapping=Pr:o===hh&&(a.mapping=Lr),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===lh||o===hh)if(e.has(a)){const c=e.get(a).texture;return t(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new k_(c.height);return l.fromEquirectangularTexture(i,a),e.set(a,l),a.addEventListener("dispose",s),t(l.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const c=e.get(o);c!==void 0&&(e.delete(o),c.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class Hh extends Lp{constructor(e=-1,t=1,n=1,s=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=s,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,s,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=s+t,c=s-t;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const br=4,kd=[.125,.215,.35,.446,.526,.582],Ls=20,ql=new Hh,Ud=new xe;let jl=null,Kl=0,Xl=0;const Ps=(1+Math.sqrt(5))/2,_r=1/Ps,Bd=[new k(1,1,1),new k(-1,1,1),new k(1,1,-1),new k(-1,1,-1),new k(0,Ps,_r),new k(0,Ps,-_r),new k(_r,0,Ps),new k(-_r,0,Ps),new k(Ps,_r,0),new k(-Ps,_r,0)];class Vd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,s=100){jl=this._renderer.getRenderTarget(),Kl=this._renderer.getActiveCubeFace(),Xl=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,s,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Hd(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Gd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jl,Kl,Xl),e.scissorTest=!1,Ra(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Pr||e.mapping===Lr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jl=this._renderer.getRenderTarget(),Kl=this._renderer.getActiveCubeFace(),Xl=this._renderer.getActiveMipmapLevel();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:yn,minFilter:yn,generateMipmaps:!1,type:ps,format:$n,colorSpace:vs,depthBuffer:!1},s=zd(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=zd(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=C0(r)),this._blurMaterial=R0(r,e,t)}return s}_compileMaterial(e){const t=new un(this._lodPlanes[0],e);this._renderer.compile(t,ql)}_sceneToCubeUV(e,t,n,s){const o=new Cn(90,1,t,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(Ud),h.toneMapping=cs,h.autoClear=!1;const m=new Rp({name:"PMREM.Background",side:mn,depthWrite:!1,depthTest:!1}),g=new un(new mi,m);let _=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,_=!0):(m.color.copy(Ud),_=!0);for(let d=0;d<6;d++){const x=d%3;x===0?(o.up.set(0,c[d],0),o.lookAt(l[d],0,0)):x===1?(o.up.set(0,0,c[d]),o.lookAt(0,l[d],0)):(o.up.set(0,c[d],0),o.lookAt(0,0,l[d]));const y=this._cubeSize;Ra(s,x*y,d>2?y:0,y,y),h.setRenderTarget(s),_&&h.render(g,o),h.render(e,o)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=f,h.autoClear=u,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,s=e.mapping===Pr||e.mapping===Lr;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Hd()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Gd());const r=s?this._cubemapMaterial:this._equirectMaterial,a=new un(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const c=this._cubeSize;Ra(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(a,ql)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=Bd[(s-1)%Bd.length];this._blur(e,s-1,s,r,a)}t.autoClear=n}_blur(e,t,n,s,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,s,"latitudinal",r),this._halfBlur(a,e,n,n,s,"longitudinal",r)}_halfBlur(e,t,n,s,r,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new un(this._lodPlanes[s],l),f=l.uniforms,m=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*m):2*Math.PI/(2*Ls-1),_=r/g,p=isFinite(r)?1+Math.floor(h*_):Ls;p>Ls&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Ls}`);const d=[];let x=0;for(let M=0;M<Ls;++M){const C=M/_,O=Math.exp(-C*C/2);d.push(O),M===0?x+=O:M<p&&(x+=2*O)}for(let M=0;M<d.length;M++)d[M]=d[M]/x;f.envMap.value=e.texture,f.samples.value=p,f.weights.value=d,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:y}=this;f.dTheta.value=g,f.mipInt.value=y-n;const S=this._sizeLods[s],b=3*S*(s>y-br?s-y+br:0),w=4*(this._cubeSize-S);Ra(t,b,w,3*S,2*S),c.setRenderTarget(t),c.render(u,ql)}}function C0(i){const e=[],t=[],n=[];let s=i;const r=i-br+1+kd.length;for(let a=0;a<r;a++){const o=Math.pow(2,s);t.push(o);let c=1/o;a>i-br?c=kd[a-i+br-1]:a===0&&(c=0),n.push(c);const l=1/(o-2),h=-l,u=1+l,f=[h,h,u,h,u,u,h,h,u,u,h,u],m=6,g=6,_=3,p=2,d=1,x=new Float32Array(_*g*m),y=new Float32Array(p*g*m),S=new Float32Array(d*g*m);for(let w=0;w<m;w++){const M=w%3*2/3-1,C=w>2?0:-1,O=[M,C,0,M+2/3,C,0,M+2/3,C+1,0,M,C,0,M+2/3,C+1,0,M,C+1,0];x.set(O,_*g*w),y.set(f,p*g*w);const v=[w,w,w,w,w,w];S.set(v,d*g*w)}const b=new ti;b.setAttribute("position",new ui(x,_)),b.setAttribute("uv",new ui(y,p)),b.setAttribute("faceIndex",new ui(S,d)),e.push(b),s>br&&s--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function zd(i,e,t){const n=new pi(i,e,t);return n.texture.mapping=Qc,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ra(i,e,t,n,s){i.viewport.set(e,t,n,s),i.scissor.set(e,t,n,s)}function R0(i,e,t){const n=new Float32Array(Ls),s=new k(0,1,0);return new rn({name:"SphericalGaussianBlur",defines:{n:Ls,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Wh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:sn,depthTest:!1,depthWrite:!1})}function Gd(){return new rn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Wh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:sn,depthTest:!1,depthWrite:!1})}function Hd(){return new rn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Wh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:sn,depthTest:!1,depthWrite:!1})}function Wh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function I0(i){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===lh||c===hh,h=c===Pr||c===Lr;if(l||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=e.get(o);return t===null&&(t=new Vd(i)),u=l?t.fromEquirectangular(o,u):t.fromCubemap(o,u),e.set(o,u),u.texture}else{if(e.has(o))return e.get(o).texture;{const u=o.image;if(l&&u&&u.height>0||h&&u&&s(u)){t===null&&(t=new Vd(i));const f=l?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",r),f.texture}else return null}}}return o}function s(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function r(o){const c=o.target;c.removeEventListener("dispose",r);const l=e.get(c);l!==void 0&&(e.delete(c),l.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function D0(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return e[n]=s,s}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?(t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance")):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const s=t(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function P0(i,e,t,n){const s={},r=new WeakMap;function a(u){const f=u.target;f.index!==null&&e.remove(f.index);for(const g in f.attributes)e.remove(f.attributes[g]);for(const g in f.morphAttributes){const _=f.morphAttributes[g];for(let p=0,d=_.length;p<d;p++)e.remove(_[p])}f.removeEventListener("dispose",a),delete s[f.id];const m=r.get(f);m&&(e.remove(m),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(u,f){return s[f.id]===!0||(f.addEventListener("dispose",a),s[f.id]=!0,t.memory.geometries++),f}function c(u){const f=u.attributes;for(const g in f)e.update(f[g],i.ARRAY_BUFFER);const m=u.morphAttributes;for(const g in m){const _=m[g];for(let p=0,d=_.length;p<d;p++)e.update(_[p],i.ARRAY_BUFFER)}}function l(u){const f=[],m=u.index,g=u.attributes.position;let _=0;if(m!==null){const x=m.array;_=m.version;for(let y=0,S=x.length;y<S;y+=3){const b=x[y+0],w=x[y+1],M=x[y+2];f.push(b,w,w,M,M,b)}}else if(g!==void 0){const x=g.array;_=g.version;for(let y=0,S=x.length/3-1;y<S;y+=3){const b=y+0,w=y+1,M=y+2;f.push(b,w,w,M,M,b)}}else return;const p=new(wp(f)?Dp:Ip)(f,1);p.version=_;const d=r.get(u);d&&e.remove(d),r.set(u,p)}function h(u){const f=r.get(u);if(f){const m=u.index;m!==null&&f.version<m.version&&l(u)}else l(u);return r.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function L0(i,e,t,n){const s=n.isWebGL2;let r;function a(m){r=m}let o,c;function l(m){o=m.type,c=m.bytesPerElement}function h(m,g){i.drawElements(r,g,o,m*c),t.update(g,r,1)}function u(m,g,_){if(_===0)return;let p,d;if(s)p=i,d="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[d](r,g,o,m*c,_),t.update(g,r,_)}function f(m,g,_){if(_===0)return;const p=e.get("WEBGL_multi_draw");if(p===null)for(let d=0;d<_;d++)this.render(m[d]/c,g[d]);else{p.multiDrawElementsWEBGL(r,g,0,o,m,0,_);let d=0;for(let x=0;x<_;x++)d+=g[x];t.update(d,r,1)}}this.setMode=a,this.setIndex=l,this.render=h,this.renderInstances=u,this.renderMultiDraw=f}function N0(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case i.TRIANGLES:t.triangles+=o*(r/3);break;case i.LINES:t.lines+=o*(r/2);break;case i.LINE_STRIP:t.lines+=o*(r-1);break;case i.LINE_LOOP:t.lines+=o*r;break;case i.POINTS:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:n}}function O0(i,e){return i[0]-e[0]}function F0(i,e){return Math.abs(e[1])-Math.abs(i[1])}function k0(i,e,t){const n={},s=new Float32Array(8),r=new WeakMap,a=new Mt,o=[];for(let l=0;l<8;l++)o[l]=[l,0];function c(l,h,u){const f=l.morphTargetInfluences;if(e.isWebGL2===!0){const g=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,_=g!==void 0?g.length:0;let p=r.get(h);if(p===void 0||p.count!==_){let V=function(){E.dispose(),r.delete(h),h.removeEventListener("dispose",V)};var m=V;p!==void 0&&p.texture.dispose();const d=h.morphAttributes.position!==void 0,x=h.morphAttributes.normal!==void 0,y=h.morphAttributes.color!==void 0,S=h.morphAttributes.position||[],b=h.morphAttributes.normal||[],w=h.morphAttributes.color||[];let M=0;d===!0&&(M=1),x===!0&&(M=2),y===!0&&(M=3);let C=h.attributes.position.count*M,O=1;C>e.maxTextureSize&&(O=Math.ceil(C/e.maxTextureSize),C=e.maxTextureSize);const v=new Float32Array(C*O*4*_),E=new Ap(v,C,O,_);E.type=li,E.needsUpdate=!0;const L=M*4;for(let D=0;D<_;D++){const G=S[D],U=b[D],W=w[D],H=C*O*4*D;for(let B=0;B<G.count;B++){const j=B*L;d===!0&&(a.fromBufferAttribute(G,B),v[H+j+0]=a.x,v[H+j+1]=a.y,v[H+j+2]=a.z,v[H+j+3]=0),x===!0&&(a.fromBufferAttribute(U,B),v[H+j+4]=a.x,v[H+j+5]=a.y,v[H+j+6]=a.z,v[H+j+7]=0),y===!0&&(a.fromBufferAttribute(W,B),v[H+j+8]=a.x,v[H+j+9]=a.y,v[H+j+10]=a.z,v[H+j+11]=W.itemSize===4?a.w:1)}}p={count:_,texture:E,size:new Me(C,O)},r.set(h,p),h.addEventListener("dispose",V)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",l.morphTexture,t);else{let d=0;for(let y=0;y<f.length;y++)d+=f[y];const x=h.morphTargetsRelative?1:1-d;u.getUniforms().setValue(i,"morphTargetBaseInfluence",x),u.getUniforms().setValue(i,"morphTargetInfluences",f)}u.getUniforms().setValue(i,"morphTargetsTexture",p.texture,t),u.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}else{const g=f===void 0?0:f.length;let _=n[h.id];if(_===void 0||_.length!==g){_=[];for(let S=0;S<g;S++)_[S]=[S,0];n[h.id]=_}for(let S=0;S<g;S++){const b=_[S];b[0]=S,b[1]=f[S]}_.sort(F0);for(let S=0;S<8;S++)S<g&&_[S][1]?(o[S][0]=_[S][0],o[S][1]=_[S][1]):(o[S][0]=Number.MAX_SAFE_INTEGER,o[S][1]=0);o.sort(O0);const p=h.morphAttributes.position,d=h.morphAttributes.normal;let x=0;for(let S=0;S<8;S++){const b=o[S],w=b[0],M=b[1];w!==Number.MAX_SAFE_INTEGER&&M?(p&&h.getAttribute("morphTarget"+S)!==p[w]&&h.setAttribute("morphTarget"+S,p[w]),d&&h.getAttribute("morphNormal"+S)!==d[w]&&h.setAttribute("morphNormal"+S,d[w]),s[S]=M,x+=M):(p&&h.hasAttribute("morphTarget"+S)===!0&&h.deleteAttribute("morphTarget"+S),d&&h.hasAttribute("morphNormal"+S)===!0&&h.deleteAttribute("morphNormal"+S),s[S]=0)}const y=h.morphTargetsRelative?1:1-x;u.getUniforms().setValue(i,"morphTargetBaseInfluence",y),u.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:c}}function U0(i,e,t,n){let s=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=e.get(c,h);if(s.get(u)!==l&&(e.update(u),s.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),s.get(c)!==l&&(t.update(c.instanceMatrix,i.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,i.ARRAY_BUFFER),s.set(c,l))),c.isSkinnedMesh){const f=c.skeleton;s.get(f)!==l&&(f.update(),s.set(f,l))}return u}function a(){s=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),t.remove(l.instanceMatrix),l.instanceColor!==null&&t.remove(l.instanceColor)}return{update:r,dispose:a}}class qh extends Gt{constructor(e,t,n,s,r,a,o,c,l,h){if(h=h!==void 0?h:ks,h!==ks&&h!==Us)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===ks&&(n=ss),n===void 0&&h===Us&&(n=hs),super(null,s,r,a,o,c,h,n,l),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:Nt,this.minFilter=c!==void 0?c:Nt,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const Fp=new Gt,kp=new qh(1,1);kp.compareFunction=bp;const Up=new Ap,Bp=new S_,Vp=new Np,Wd=[],qd=[],jd=new Float32Array(16),Kd=new Float32Array(9),Xd=new Float32Array(4);function ao(i,e,t){const n=i[0];if(n<=0||n>0)return i;const s=e*t;let r=Wd[s];if(r===void 0&&(r=new Float32Array(s),Wd[s]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,i[a].toArray(r,o)}return r}function Ot(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function Ft(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function tl(i,e){let t=qd[e];t===void 0&&(t=new Int32Array(e),qd[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function B0(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function V0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ot(t,e))return;i.uniform2fv(this.addr,e),Ft(t,e)}}function z0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Ot(t,e))return;i.uniform3fv(this.addr,e),Ft(t,e)}}function G0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ot(t,e))return;i.uniform4fv(this.addr,e),Ft(t,e)}}function H0(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ot(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),Ft(t,e)}else{if(Ot(t,n))return;Xd.set(n),i.uniformMatrix2fv(this.addr,!1,Xd),Ft(t,n)}}function W0(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ot(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),Ft(t,e)}else{if(Ot(t,n))return;Kd.set(n),i.uniformMatrix3fv(this.addr,!1,Kd),Ft(t,n)}}function q0(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Ot(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),Ft(t,e)}else{if(Ot(t,n))return;jd.set(n),i.uniformMatrix4fv(this.addr,!1,jd),Ft(t,n)}}function j0(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function K0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ot(t,e))return;i.uniform2iv(this.addr,e),Ft(t,e)}}function X0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ot(t,e))return;i.uniform3iv(this.addr,e),Ft(t,e)}}function Y0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ot(t,e))return;i.uniform4iv(this.addr,e),Ft(t,e)}}function $0(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function Z0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Ot(t,e))return;i.uniform2uiv(this.addr,e),Ft(t,e)}}function Q0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Ot(t,e))return;i.uniform3uiv(this.addr,e),Ft(t,e)}}function J0(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Ot(t,e))return;i.uniform4uiv(this.addr,e),Ft(t,e)}}function ex(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);const r=this.type===i.SAMPLER_2D_SHADOW?kp:Fp;t.setTexture2D(e||r,s)}function tx(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture3D(e||Bp,s)}function nx(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTextureCube(e||Vp,s)}function ix(i,e,t){const n=this.cache,s=t.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),t.setTexture2DArray(e||Up,s)}function sx(i){switch(i){case 5126:return B0;case 35664:return V0;case 35665:return z0;case 35666:return G0;case 35674:return H0;case 35675:return W0;case 35676:return q0;case 5124:case 35670:return j0;case 35667:case 35671:return K0;case 35668:case 35672:return X0;case 35669:case 35673:return Y0;case 5125:return $0;case 36294:return Z0;case 36295:return Q0;case 36296:return J0;case 35678:case 36198:case 36298:case 36306:case 35682:return ex;case 35679:case 36299:case 36307:return tx;case 35680:case 36300:case 36308:case 36293:return nx;case 36289:case 36303:case 36311:case 36292:return ix}}function rx(i,e){i.uniform1fv(this.addr,e)}function ox(i,e){const t=ao(e,this.size,2);i.uniform2fv(this.addr,t)}function ax(i,e){const t=ao(e,this.size,3);i.uniform3fv(this.addr,t)}function cx(i,e){const t=ao(e,this.size,4);i.uniform4fv(this.addr,t)}function lx(i,e){const t=ao(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function hx(i,e){const t=ao(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function ux(i,e){const t=ao(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function dx(i,e){i.uniform1iv(this.addr,e)}function fx(i,e){i.uniform2iv(this.addr,e)}function px(i,e){i.uniform3iv(this.addr,e)}function mx(i,e){i.uniform4iv(this.addr,e)}function gx(i,e){i.uniform1uiv(this.addr,e)}function _x(i,e){i.uniform2uiv(this.addr,e)}function yx(i,e){i.uniform3uiv(this.addr,e)}function vx(i,e){i.uniform4uiv(this.addr,e)}function xx(i,e,t){const n=this.cache,s=e.length,r=tl(t,s);Ot(n,r)||(i.uniform1iv(this.addr,r),Ft(n,r));for(let a=0;a!==s;++a)t.setTexture2D(e[a]||Fp,r[a])}function Sx(i,e,t){const n=this.cache,s=e.length,r=tl(t,s);Ot(n,r)||(i.uniform1iv(this.addr,r),Ft(n,r));for(let a=0;a!==s;++a)t.setTexture3D(e[a]||Bp,r[a])}function bx(i,e,t){const n=this.cache,s=e.length,r=tl(t,s);Ot(n,r)||(i.uniform1iv(this.addr,r),Ft(n,r));for(let a=0;a!==s;++a)t.setTextureCube(e[a]||Vp,r[a])}function Mx(i,e,t){const n=this.cache,s=e.length,r=tl(t,s);Ot(n,r)||(i.uniform1iv(this.addr,r),Ft(n,r));for(let a=0;a!==s;++a)t.setTexture2DArray(e[a]||Up,r[a])}function wx(i){switch(i){case 5126:return rx;case 35664:return ox;case 35665:return ax;case 35666:return cx;case 35674:return lx;case 35675:return hx;case 35676:return ux;case 5124:case 35670:return dx;case 35667:case 35671:return fx;case 35668:case 35672:return px;case 35669:case 35673:return mx;case 5125:return gx;case 36294:return _x;case 36295:return yx;case 36296:return vx;case 35678:case 36198:case 36298:case 36306:case 35682:return xx;case 35679:case 36299:case 36307:return Sx;case 35680:case 36300:case 36308:case 36293:return bx;case 36289:case 36303:case 36311:case 36292:return Mx}}class Tx{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=sx(t.type)}}class Ex{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=wx(t.type)}}class Ax{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const s=this.seq;for(let r=0,a=s.length;r!==a;++r){const o=s[r];o.setValue(e,t[o.id],n)}}}const Yl=/(\w+)(\])?(\[|\.)?/g;function Yd(i,e){i.seq.push(e),i.map[e.id]=e}function Cx(i,e,t){const n=i.name,s=n.length;for(Yl.lastIndex=0;;){const r=Yl.exec(n),a=Yl.lastIndex;let o=r[1];const c=r[2]==="]",l=r[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===s){Yd(t,l===void 0?new Tx(o,i,e):new Ex(o,i,e));break}else{let u=t.map[o];u===void 0&&(u=new Ax(o),Yd(t,u)),t=u}}}class Va{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=e.getActiveUniform(t,s),a=e.getUniformLocation(t,r.name);Cx(r,a,this)}}setValue(e,t,n,s){const r=this.map[t];r!==void 0&&r.setValue(e,n,s)}setOptional(e,t,n){const s=t[n];s!==void 0&&this.setValue(e,n,s)}static upload(e,t,n,s){for(let r=0,a=t.length;r!==a;++r){const o=t[r],c=n[o.id];c.needsUpdate!==!1&&o.setValue(e,c.value,s)}}static seqWithValue(e,t){const n=[];for(let s=0,r=e.length;s!==r;++s){const a=e[s];a.id in t&&n.push(a)}return n}}function $d(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const Rx=37297;let Ix=0;function Dx(i,e){const t=i.split(`
`),n=[],s=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=s;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}function Px(i){const e=rt.getPrimaries(rt.workingColorSpace),t=rt.getPrimaries(i);let n;switch(e===t?n="":e===Xa&&t===Ka?n="LinearDisplayP3ToLinearSRGB":e===Ka&&t===Xa&&(n="LinearSRGBToLinearDisplayP3"),i){case vs:case Jc:return[n,"LinearTransferOETF"];case oi:case kh:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),[n,"LinearTransferOETF"]}}function Zd(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),s=i.getShaderInfoLog(e).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+s+`

`+Dx(i.getShaderSource(e),a)}else return s}function Lx(i,e){const t=Px(e);return`vec4 ${i}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function Nx(i,e){let t;switch(e){case op:t="Linear";break;case ap:t="Reinhard";break;case cp:t="OptimizedCineon";break;case lp:t="ACESFilmic";break;case hp:t="AgX";break;case up:t="Neutral";break;case Ug:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Ox(i){return[i.extensionDerivatives||i.envMapCubeUVHeight||i.bumpMap||i.normalMapTangentSpace||i.clearcoatNormalMap||i.flatShading||i.alphaToCoverage||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Mr).join(`
`)}function Fx(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Mr).join(`
`)}function kx(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function Ux(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(e,s),a=r.name;let o=1;r.type===i.FLOAT_MAT2&&(o=2),r.type===i.FLOAT_MAT3&&(o=3),r.type===i.FLOAT_MAT4&&(o=4),t[a]={type:r.type,location:i.getAttribLocation(e,a),locationSize:o}}return t}function Mr(i){return i!==""}function Qd(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Jd(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const Bx=/^[ \t]*#include +<([\w\d./]+)>/gm;function ph(i){return i.replace(Bx,zx)}const Vx=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function zx(i,e){let t=Ze[e];if(t===void 0){const n=Vx.get(e);if(n!==void 0)t=Ze[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return ph(t)}const Gx=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function ef(i){return i.replace(Gx,Hx)}function Hx(i,e,t,n){let s="";for(let r=parseInt(e);r<parseInt(t);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function tf(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	`;return i.isWebGL2&&(e+=`precision ${i.precision} sampler3D;
		precision ${i.precision} sampler2DArray;
		precision ${i.precision} sampler2DShadow;
		precision ${i.precision} samplerCubeShadow;
		precision ${i.precision} sampler2DArrayShadow;
		precision ${i.precision} isampler2D;
		precision ${i.precision} isampler3D;
		precision ${i.precision} isamplerCube;
		precision ${i.precision} isampler2DArray;
		precision ${i.precision} usampler2D;
		precision ${i.precision} usampler3D;
		precision ${i.precision} usamplerCube;
		precision ${i.precision} usampler2DArray;
		`),i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Wx(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===tp?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===np?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Di&&(e="SHADOWMAP_TYPE_VSM"),e}function qx(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Pr:case Lr:e="ENVMAP_TYPE_CUBE";break;case Qc:e="ENVMAP_TYPE_CUBE_UV";break}return e}function jx(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Lr:e="ENVMAP_MODE_REFRACTION";break}return e}function Kx(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Zc:e="ENVMAP_BLENDING_MULTIPLY";break;case Fg:e="ENVMAP_BLENDING_MIX";break;case kg:e="ENVMAP_BLENDING_ADD";break}return e}function Xx(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Yx(i,e,t,n){const s=i.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const c=Wx(t),l=qx(t),h=jx(t),u=Kx(t),f=Xx(t),m=t.isWebGL2?"":Ox(t),g=Fx(t),_=kx(r),p=s.createProgram();let d,x,y=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(d=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,_].filter(Mr).join(`
`),d.length>0&&(d+=`
`),x=[m,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,_].filter(Mr).join(`
`),x.length>0&&(x+=`
`)):(d=[tf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,_,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Mr).join(`
`),x=[m,tf(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,_,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+l:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==cs?"#define TONE_MAPPING":"",t.toneMapping!==cs?Ze.tonemapping_pars_fragment:"",t.toneMapping!==cs?Nx("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ze.colorspace_pars_fragment,Lx("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Mr).join(`
`)),a=ph(a),a=Qd(a,t),a=Jd(a,t),o=ph(o),o=Qd(o,t),o=Jd(o,t),a=ef(a),o=ef(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,d=[g,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+d,x=["precision mediump sampler2DArray;","#define varying in",t.glslVersion===_d?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===_d?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+x);const S=y+d+a,b=y+x+o,w=$d(s,s.VERTEX_SHADER,S),M=$d(s,s.FRAGMENT_SHADER,b);s.attachShader(p,w),s.attachShader(p,M),t.index0AttributeName!==void 0?s.bindAttribLocation(p,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p);function C(L){if(i.debug.checkShaderErrors){const V=s.getProgramInfoLog(p).trim(),D=s.getShaderInfoLog(w).trim(),G=s.getShaderInfoLog(M).trim();let U=!0,W=!0;if(s.getProgramParameter(p,s.LINK_STATUS)===!1)if(U=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,p,w,M);else{const H=Zd(s,w,"vertex"),B=Zd(s,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(p,s.VALIDATE_STATUS)+`

Material Name: `+L.name+`
Material Type: `+L.type+`

Program Info Log: `+V+`
`+H+`
`+B)}else V!==""?console.warn("THREE.WebGLProgram: Program Info Log:",V):(D===""||G==="")&&(W=!1);W&&(L.diagnostics={runnable:U,programLog:V,vertexShader:{log:D,prefix:d},fragmentShader:{log:G,prefix:x}})}s.deleteShader(w),s.deleteShader(M),O=new Va(s,p),v=Ux(s,p)}let O;this.getUniforms=function(){return O===void 0&&C(this),O};let v;this.getAttributes=function(){return v===void 0&&C(this),v};let E=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return E===!1&&(E=s.getProgramParameter(p,Rx)),E},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=Ix++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=w,this.fragmentShader=M,this}let $x=0;class Zx{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,s=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Qx(e),t.set(e,n)),n}}class Qx{constructor(e){this.id=$x++,this.code=e,this.usedTimes=0}}function Jx(i,e,t,n,s,r,a){const o=new zh,c=new Zx,l=new Set,h=[],u=s.isWebGL2,f=s.logarithmicDepthBuffer,m=s.vertexTextures;let g=s.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(v){return l.add(v),v===0?"uv":`uv${v}`}function d(v,E,L,V,D){const G=V.fog,U=D.geometry,W=v.isMeshStandardMaterial?V.environment:null,H=(v.isMeshStandardMaterial?t:e).get(v.envMap||W),B=H&&H.mapping===Qc?H.image.height:null,j=_[v.type];v.precision!==null&&(g=s.getMaxPrecision(v.precision),g!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",g,"instead."));const ee=U.morphAttributes.position||U.morphAttributes.normal||U.morphAttributes.color,ce=ee!==void 0?ee.length:0;let Ce=0;U.morphAttributes.position!==void 0&&(Ce=1),U.morphAttributes.normal!==void 0&&(Ce=2),U.morphAttributes.color!==void 0&&(Ce=3);let K,J,he,Se;if(j){const st=ai[j];K=st.vertexShader,J=st.fragmentShader}else K=v.vertexShader,J=v.fragmentShader,c.update(v),he=c.getVertexShaderID(v),Se=c.getFragmentShaderID(v);const ne=i.getRenderTarget(),me=D.isInstancedMesh===!0,Ve=D.isBatchedMesh===!0,Le=!!v.map,z=!!v.matcap,pt=!!H,Pe=!!v.aoMap,se=!!v.lightMap,oe=!!v.bumpMap,De=!!v.normalMap,be=!!v.displacementMap,ye=!!v.emissiveMap,Be=!!v.metalnessMap,I=!!v.roughnessMap,T=v.anisotropy>0,Z=v.clearcoat>0,te=v.iridescence>0,le=v.sheen>0,re=v.transmission>0,We=T&&!!v.anisotropyMap,Ne=Z&&!!v.clearcoatMap,fe=Z&&!!v.clearcoatNormalMap,ge=Z&&!!v.clearcoatRoughnessMap,ze=te&&!!v.iridescenceMap,pe=te&&!!v.iridescenceThicknessMap,xt=le&&!!v.sheenColorMap,Xe=le&&!!v.sheenRoughnessMap,Oe=!!v.specularMap,Ee=!!v.specularColorMap,Re=!!v.specularIntensityMap,P=re&&!!v.transmissionMap,ie=re&&!!v.thicknessMap,we=!!v.gradientMap,F=!!v.alphaMap,de=v.alphaTest>0,X=!!v.alphaHash,ue=!!v.extensions;let ve=cs;v.toneMapped&&(ne===null||ne.isXRRenderTarget===!0)&&(ve=i.toneMapping);const et={isWebGL2:u,shaderID:j,shaderType:v.type,shaderName:v.name,vertexShader:K,fragmentShader:J,defines:v.defines,customVertexShaderID:he,customFragmentShaderID:Se,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:g,batching:Ve,instancing:me,instancingColor:me&&D.instanceColor!==null,instancingMorph:me&&D.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:ne===null?i.outputColorSpace:ne.isXRRenderTarget===!0?ne.texture.colorSpace:vs,alphaToCoverage:!!v.alphaToCoverage,map:Le,matcap:z,envMap:pt,envMapMode:pt&&H.mapping,envMapCubeUVHeight:B,aoMap:Pe,lightMap:se,bumpMap:oe,normalMap:De,displacementMap:m&&be,emissiveMap:ye,normalMapObjectSpace:De&&v.normalMapType===Kg,normalMapTangentSpace:De&&v.normalMapType===Xs,metalnessMap:Be,roughnessMap:I,anisotropy:T,anisotropyMap:We,clearcoat:Z,clearcoatMap:Ne,clearcoatNormalMap:fe,clearcoatRoughnessMap:ge,iridescence:te,iridescenceMap:ze,iridescenceThicknessMap:pe,sheen:le,sheenColorMap:xt,sheenRoughnessMap:Xe,specularMap:Oe,specularColorMap:Ee,specularIntensityMap:Re,transmission:re,transmissionMap:P,thicknessMap:ie,gradientMap:we,opaque:v.transparent===!1&&v.blending===Ar&&v.alphaToCoverage===!1,alphaMap:F,alphaTest:de,alphaHash:X,combine:v.combine,mapUv:Le&&p(v.map.channel),aoMapUv:Pe&&p(v.aoMap.channel),lightMapUv:se&&p(v.lightMap.channel),bumpMapUv:oe&&p(v.bumpMap.channel),normalMapUv:De&&p(v.normalMap.channel),displacementMapUv:be&&p(v.displacementMap.channel),emissiveMapUv:ye&&p(v.emissiveMap.channel),metalnessMapUv:Be&&p(v.metalnessMap.channel),roughnessMapUv:I&&p(v.roughnessMap.channel),anisotropyMapUv:We&&p(v.anisotropyMap.channel),clearcoatMapUv:Ne&&p(v.clearcoatMap.channel),clearcoatNormalMapUv:fe&&p(v.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ge&&p(v.clearcoatRoughnessMap.channel),iridescenceMapUv:ze&&p(v.iridescenceMap.channel),iridescenceThicknessMapUv:pe&&p(v.iridescenceThicknessMap.channel),sheenColorMapUv:xt&&p(v.sheenColorMap.channel),sheenRoughnessMapUv:Xe&&p(v.sheenRoughnessMap.channel),specularMapUv:Oe&&p(v.specularMap.channel),specularColorMapUv:Ee&&p(v.specularColorMap.channel),specularIntensityMapUv:Re&&p(v.specularIntensityMap.channel),transmissionMapUv:P&&p(v.transmissionMap.channel),thicknessMapUv:ie&&p(v.thicknessMap.channel),alphaMapUv:F&&p(v.alphaMap.channel),vertexTangents:!!U.attributes.tangent&&(De||T),vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!U.attributes.color&&U.attributes.color.itemSize===4,pointsUvs:D.isPoints===!0&&!!U.attributes.uv&&(Le||F),fog:!!G,useFog:v.fog===!0,fogExp2:!!G&&G.isFogExp2,flatShading:v.flatShading===!0,sizeAttenuation:v.sizeAttenuation===!0,logarithmicDepthBuffer:f,skinning:D.isSkinnedMesh===!0,morphTargets:U.morphAttributes.position!==void 0,morphNormals:U.morphAttributes.normal!==void 0,morphColors:U.morphAttributes.color!==void 0,morphTargetsCount:ce,morphTextureStride:Ce,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numLightProbes:E.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:v.dithering,shadowMapEnabled:i.shadowMap.enabled&&L.length>0,shadowMapType:i.shadowMap.type,toneMapping:ve,useLegacyLights:i._useLegacyLights,decodeVideoTexture:Le&&v.map.isVideoTexture===!0&&rt.getTransfer(v.map.colorSpace)===ut,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===ci,flipSided:v.side===mn,useDepthPacking:v.depthPacking>=0,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:ue&&v.extensions.derivatives===!0,extensionFragDepth:ue&&v.extensions.fragDepth===!0,extensionDrawBuffers:ue&&v.extensions.drawBuffers===!0,extensionShaderTextureLOD:ue&&v.extensions.shaderTextureLOD===!0,extensionClipCullDistance:ue&&v.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:ue&&v.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:v.customProgramCacheKey()};return et.vertexUv1s=l.has(1),et.vertexUv2s=l.has(2),et.vertexUv3s=l.has(3),l.clear(),et}function x(v){const E=[];if(v.shaderID?E.push(v.shaderID):(E.push(v.customVertexShaderID),E.push(v.customFragmentShaderID)),v.defines!==void 0)for(const L in v.defines)E.push(L),E.push(v.defines[L]);return v.isRawShaderMaterial===!1&&(y(E,v),S(E,v),E.push(i.outputColorSpace)),E.push(v.customProgramCacheKey),E.join()}function y(v,E){v.push(E.precision),v.push(E.outputColorSpace),v.push(E.envMapMode),v.push(E.envMapCubeUVHeight),v.push(E.mapUv),v.push(E.alphaMapUv),v.push(E.lightMapUv),v.push(E.aoMapUv),v.push(E.bumpMapUv),v.push(E.normalMapUv),v.push(E.displacementMapUv),v.push(E.emissiveMapUv),v.push(E.metalnessMapUv),v.push(E.roughnessMapUv),v.push(E.anisotropyMapUv),v.push(E.clearcoatMapUv),v.push(E.clearcoatNormalMapUv),v.push(E.clearcoatRoughnessMapUv),v.push(E.iridescenceMapUv),v.push(E.iridescenceThicknessMapUv),v.push(E.sheenColorMapUv),v.push(E.sheenRoughnessMapUv),v.push(E.specularMapUv),v.push(E.specularColorMapUv),v.push(E.specularIntensityMapUv),v.push(E.transmissionMapUv),v.push(E.thicknessMapUv),v.push(E.combine),v.push(E.fogExp2),v.push(E.sizeAttenuation),v.push(E.morphTargetsCount),v.push(E.morphAttributeCount),v.push(E.numDirLights),v.push(E.numPointLights),v.push(E.numSpotLights),v.push(E.numSpotLightMaps),v.push(E.numHemiLights),v.push(E.numRectAreaLights),v.push(E.numDirLightShadows),v.push(E.numPointLightShadows),v.push(E.numSpotLightShadows),v.push(E.numSpotLightShadowsWithMaps),v.push(E.numLightProbes),v.push(E.shadowMapType),v.push(E.toneMapping),v.push(E.numClippingPlanes),v.push(E.numClipIntersection),v.push(E.depthPacking)}function S(v,E){o.disableAll(),E.isWebGL2&&o.enable(0),E.supportsVertexTextures&&o.enable(1),E.instancing&&o.enable(2),E.instancingColor&&o.enable(3),E.instancingMorph&&o.enable(4),E.matcap&&o.enable(5),E.envMap&&o.enable(6),E.normalMapObjectSpace&&o.enable(7),E.normalMapTangentSpace&&o.enable(8),E.clearcoat&&o.enable(9),E.iridescence&&o.enable(10),E.alphaTest&&o.enable(11),E.vertexColors&&o.enable(12),E.vertexAlphas&&o.enable(13),E.vertexUv1s&&o.enable(14),E.vertexUv2s&&o.enable(15),E.vertexUv3s&&o.enable(16),E.vertexTangents&&o.enable(17),E.anisotropy&&o.enable(18),E.alphaHash&&o.enable(19),E.batching&&o.enable(20),v.push(o.mask),o.disableAll(),E.fog&&o.enable(0),E.useFog&&o.enable(1),E.flatShading&&o.enable(2),E.logarithmicDepthBuffer&&o.enable(3),E.skinning&&o.enable(4),E.morphTargets&&o.enable(5),E.morphNormals&&o.enable(6),E.morphColors&&o.enable(7),E.premultipliedAlpha&&o.enable(8),E.shadowMapEnabled&&o.enable(9),E.useLegacyLights&&o.enable(10),E.doubleSided&&o.enable(11),E.flipSided&&o.enable(12),E.useDepthPacking&&o.enable(13),E.dithering&&o.enable(14),E.transmission&&o.enable(15),E.sheen&&o.enable(16),E.opaque&&o.enable(17),E.pointsUvs&&o.enable(18),E.decodeVideoTexture&&o.enable(19),E.alphaToCoverage&&o.enable(20),v.push(o.mask)}function b(v){const E=_[v.type];let L;if(E){const V=ai[E];L=rs.clone(V.uniforms)}else L=v.uniforms;return L}function w(v,E){let L;for(let V=0,D=h.length;V<D;V++){const G=h[V];if(G.cacheKey===E){L=G,++L.usedTimes;break}}return L===void 0&&(L=new Yx(i,E,v,r),h.push(L)),L}function M(v){if(--v.usedTimes===0){const E=h.indexOf(v);h[E]=h[h.length-1],h.pop(),v.destroy()}}function C(v){c.remove(v)}function O(){c.dispose()}return{getParameters:d,getProgramCacheKey:x,getUniforms:b,acquireProgram:w,releaseProgram:M,releaseShaderCache:C,programs:h,dispose:O}}function eS(){let i=new WeakMap;function e(r){let a=i.get(r);return a===void 0&&(a={},i.set(r,a)),a}function t(r){i.delete(r)}function n(r,a,o){i.get(r)[a]=o}function s(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:s}}function tS(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function nf(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function sf(){const i=[];let e=0;const t=[],n=[],s=[];function r(){e=0,t.length=0,n.length=0,s.length=0}function a(u,f,m,g,_,p){let d=i[e];return d===void 0?(d={id:u.id,object:u,geometry:f,material:m,groupOrder:g,renderOrder:u.renderOrder,z:_,group:p},i[e]=d):(d.id=u.id,d.object=u,d.geometry=f,d.material=m,d.groupOrder=g,d.renderOrder=u.renderOrder,d.z=_,d.group=p),e++,d}function o(u,f,m,g,_,p){const d=a(u,f,m,g,_,p);m.transmission>0?n.push(d):m.transparent===!0?s.push(d):t.push(d)}function c(u,f,m,g,_,p){const d=a(u,f,m,g,_,p);m.transmission>0?n.unshift(d):m.transparent===!0?s.unshift(d):t.unshift(d)}function l(u,f){t.length>1&&t.sort(u||tS),n.length>1&&n.sort(f||nf),s.length>1&&s.sort(f||nf)}function h(){for(let u=e,f=i.length;u<f;u++){const m=i[u];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:s,init:r,push:o,unshift:c,finish:h,sort:l}}function nS(){let i=new WeakMap;function e(n,s){const r=i.get(n);let a;return r===void 0?(a=new sf,i.set(n,[a])):s>=r.length?(a=new sf,r.push(a)):a=r[s],a}function t(){i=new WeakMap}return{get:e,dispose:t}}function iS(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new k,color:new xe};break;case"SpotLight":t={position:new k,direction:new k,color:new xe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new k,color:new xe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new k,skyColor:new xe,groundColor:new xe};break;case"RectAreaLight":t={color:new xe,position:new k,halfWidth:new k,halfHeight:new k};break}return i[e.id]=t,t}}}function sS(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Me};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Me};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Me,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let rS=0;function oS(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function aS(i,e){const t=new iS,n=sS(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)s.probe.push(new k);const r=new k,a=new dt,o=new dt;function c(h,u){let f=0,m=0,g=0;for(let L=0;L<9;L++)s.probe[L].set(0,0,0);let _=0,p=0,d=0,x=0,y=0,S=0,b=0,w=0,M=0,C=0,O=0;h.sort(oS);const v=u===!0?Math.PI:1;for(let L=0,V=h.length;L<V;L++){const D=h[L],G=D.color,U=D.intensity,W=D.distance,H=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)f+=G.r*U*v,m+=G.g*U*v,g+=G.b*U*v;else if(D.isLightProbe){for(let B=0;B<9;B++)s.probe[B].addScaledVector(D.sh.coefficients[B],U);O++}else if(D.isDirectionalLight){const B=t.get(D);if(B.color.copy(D.color).multiplyScalar(D.intensity*v),D.castShadow){const j=D.shadow,ee=n.get(D);ee.shadowBias=j.bias,ee.shadowNormalBias=j.normalBias,ee.shadowRadius=j.radius,ee.shadowMapSize=j.mapSize,s.directionalShadow[_]=ee,s.directionalShadowMap[_]=H,s.directionalShadowMatrix[_]=D.shadow.matrix,S++}s.directional[_]=B,_++}else if(D.isSpotLight){const B=t.get(D);B.position.setFromMatrixPosition(D.matrixWorld),B.color.copy(G).multiplyScalar(U*v),B.distance=W,B.coneCos=Math.cos(D.angle),B.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),B.decay=D.decay,s.spot[d]=B;const j=D.shadow;if(D.map&&(s.spotLightMap[M]=D.map,M++,j.updateMatrices(D),D.castShadow&&C++),s.spotLightMatrix[d]=j.matrix,D.castShadow){const ee=n.get(D);ee.shadowBias=j.bias,ee.shadowNormalBias=j.normalBias,ee.shadowRadius=j.radius,ee.shadowMapSize=j.mapSize,s.spotShadow[d]=ee,s.spotShadowMap[d]=H,w++}d++}else if(D.isRectAreaLight){const B=t.get(D);B.color.copy(G).multiplyScalar(U),B.halfWidth.set(D.width*.5,0,0),B.halfHeight.set(0,D.height*.5,0),s.rectArea[x]=B,x++}else if(D.isPointLight){const B=t.get(D);if(B.color.copy(D.color).multiplyScalar(D.intensity*v),B.distance=D.distance,B.decay=D.decay,D.castShadow){const j=D.shadow,ee=n.get(D);ee.shadowBias=j.bias,ee.shadowNormalBias=j.normalBias,ee.shadowRadius=j.radius,ee.shadowMapSize=j.mapSize,ee.shadowCameraNear=j.camera.near,ee.shadowCameraFar=j.camera.far,s.pointShadow[p]=ee,s.pointShadowMap[p]=H,s.pointShadowMatrix[p]=D.shadow.matrix,b++}s.point[p]=B,p++}else if(D.isHemisphereLight){const B=t.get(D);B.skyColor.copy(D.color).multiplyScalar(U*v),B.groundColor.copy(D.groundColor).multiplyScalar(U*v),s.hemi[y]=B,y++}}x>0&&(e.isWebGL2?i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=_e.LTC_FLOAT_1,s.rectAreaLTC2=_e.LTC_FLOAT_2):(s.rectAreaLTC1=_e.LTC_HALF_1,s.rectAreaLTC2=_e.LTC_HALF_2):i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=_e.LTC_FLOAT_1,s.rectAreaLTC2=_e.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=_e.LTC_HALF_1,s.rectAreaLTC2=_e.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=m,s.ambient[2]=g;const E=s.hash;(E.directionalLength!==_||E.pointLength!==p||E.spotLength!==d||E.rectAreaLength!==x||E.hemiLength!==y||E.numDirectionalShadows!==S||E.numPointShadows!==b||E.numSpotShadows!==w||E.numSpotMaps!==M||E.numLightProbes!==O)&&(s.directional.length=_,s.spot.length=d,s.rectArea.length=x,s.point.length=p,s.hemi.length=y,s.directionalShadow.length=S,s.directionalShadowMap.length=S,s.pointShadow.length=b,s.pointShadowMap.length=b,s.spotShadow.length=w,s.spotShadowMap.length=w,s.directionalShadowMatrix.length=S,s.pointShadowMatrix.length=b,s.spotLightMatrix.length=w+M-C,s.spotLightMap.length=M,s.numSpotLightShadowsWithMaps=C,s.numLightProbes=O,E.directionalLength=_,E.pointLength=p,E.spotLength=d,E.rectAreaLength=x,E.hemiLength=y,E.numDirectionalShadows=S,E.numPointShadows=b,E.numSpotShadows=w,E.numSpotMaps=M,E.numLightProbes=O,s.version=rS++)}function l(h,u){let f=0,m=0,g=0,_=0,p=0;const d=u.matrixWorldInverse;for(let x=0,y=h.length;x<y;x++){const S=h[x];if(S.isDirectionalLight){const b=s.directional[f];b.direction.setFromMatrixPosition(S.matrixWorld),r.setFromMatrixPosition(S.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(d),f++}else if(S.isSpotLight){const b=s.spot[g];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(d),b.direction.setFromMatrixPosition(S.matrixWorld),r.setFromMatrixPosition(S.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(d),g++}else if(S.isRectAreaLight){const b=s.rectArea[_];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(d),o.identity(),a.copy(S.matrixWorld),a.premultiply(d),o.extractRotation(a),b.halfWidth.set(S.width*.5,0,0),b.halfHeight.set(0,S.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),_++}else if(S.isPointLight){const b=s.point[m];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(d),m++}else if(S.isHemisphereLight){const b=s.hemi[p];b.direction.setFromMatrixPosition(S.matrixWorld),b.direction.transformDirection(d),p++}}}return{setup:c,setupView:l,state:s}}function rf(i,e){const t=new aS(i,e),n=[],s=[];function r(){n.length=0,s.length=0}function a(u){n.push(u)}function o(u){s.push(u)}function c(u){t.setup(n,u)}function l(u){t.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:t},setupLights:c,setupLightsView:l,pushLight:a,pushShadow:o}}function cS(i,e){let t=new WeakMap;function n(r,a=0){const o=t.get(r);let c;return o===void 0?(c=new rf(i,e),t.set(r,[c])):a>=o.length?(c=new rf(i,e),o.push(c)):c=o[a],c}function s(){t=new WeakMap}return{get:n,dispose:s}}class lS extends ei{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=qg,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class hS extends ei{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const uS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,dS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function fS(i,e,t){let n=new Gh;const s=new Me,r=new Me,a=new Mt,o=new lS({depthPacking:jg}),c=new hS,l={},h=t.maxTextureSize,u={[fs]:mn,[mn]:fs,[ci]:ci},f=new rn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Me},radius:{value:4}},vertexShader:uS,fragmentShader:dS}),m=f.clone();m.defines.HORIZONTAL_PASS=1;const g=new ti;g.setAttribute("position",new ui(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new un(g,f),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=tp;let d=this.type;this.render=function(w,M,C){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||w.length===0)return;const O=i.getRenderTarget(),v=i.getActiveCubeFace(),E=i.getActiveMipmapLevel(),L=i.state;L.setBlending(sn),L.buffers.color.setClear(1,1,1,1),L.buffers.depth.setTest(!0),L.setScissorTest(!1);const V=d!==Di&&this.type===Di,D=d===Di&&this.type!==Di;for(let G=0,U=w.length;G<U;G++){const W=w[G],H=W.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",W,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;s.copy(H.mapSize);const B=H.getFrameExtents();if(s.multiply(B),r.copy(H.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/B.x),s.x=r.x*B.x,H.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/B.y),s.y=r.y*B.y,H.mapSize.y=r.y)),H.map===null||V===!0||D===!0){const ee=this.type!==Di?{minFilter:Nt,magFilter:Nt}:{};H.map!==null&&H.map.dispose(),H.map=new pi(s.x,s.y,ee),H.map.texture.name=W.name+".shadowMap",H.camera.updateProjectionMatrix()}i.setRenderTarget(H.map),i.clear();const j=H.getViewportCount();for(let ee=0;ee<j;ee++){const ce=H.getViewport(ee);a.set(r.x*ce.x,r.y*ce.y,r.x*ce.z,r.y*ce.w),L.viewport(a),H.updateMatrices(W,ee),n=H.getFrustum(),S(M,C,H.camera,W,this.type)}H.isPointLightShadow!==!0&&this.type===Di&&x(H,C),H.needsUpdate=!1}d=this.type,p.needsUpdate=!1,i.setRenderTarget(O,v,E)};function x(w,M){const C=e.update(_);f.defines.VSM_SAMPLES!==w.blurSamples&&(f.defines.VSM_SAMPLES=w.blurSamples,m.defines.VSM_SAMPLES=w.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new pi(s.x,s.y)),f.uniforms.shadow_pass.value=w.map.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,i.setRenderTarget(w.mapPass),i.clear(),i.renderBufferDirect(M,null,C,f,_,null),m.uniforms.shadow_pass.value=w.mapPass.texture,m.uniforms.resolution.value=w.mapSize,m.uniforms.radius.value=w.radius,i.setRenderTarget(w.map),i.clear(),i.renderBufferDirect(M,null,C,m,_,null)}function y(w,M,C,O){let v=null;const E=C.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(E!==void 0)v=E;else if(v=C.isPointLight===!0?c:o,i.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const L=v.uuid,V=M.uuid;let D=l[L];D===void 0&&(D={},l[L]=D);let G=D[V];G===void 0&&(G=v.clone(),D[V]=G,M.addEventListener("dispose",b)),v=G}if(v.visible=M.visible,v.wireframe=M.wireframe,O===Di?v.side=M.shadowSide!==null?M.shadowSide:M.side:v.side=M.shadowSide!==null?M.shadowSide:u[M.side],v.alphaMap=M.alphaMap,v.alphaTest=M.alphaTest,v.map=M.map,v.clipShadows=M.clipShadows,v.clippingPlanes=M.clippingPlanes,v.clipIntersection=M.clipIntersection,v.displacementMap=M.displacementMap,v.displacementScale=M.displacementScale,v.displacementBias=M.displacementBias,v.wireframeLinewidth=M.wireframeLinewidth,v.linewidth=M.linewidth,C.isPointLight===!0&&v.isMeshDistanceMaterial===!0){const L=i.properties.get(v);L.light=C}return v}function S(w,M,C,O,v){if(w.visible===!1)return;if(w.layers.test(M.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&v===Di)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,w.matrixWorld);const V=e.update(w),D=w.material;if(Array.isArray(D)){const G=V.groups;for(let U=0,W=G.length;U<W;U++){const H=G[U],B=D[H.materialIndex];if(B&&B.visible){const j=y(w,B,O,v);w.onBeforeShadow(i,w,M,C,V,j,H),i.renderBufferDirect(C,null,V,j,w,H),w.onAfterShadow(i,w,M,C,V,j,H)}}}else if(D.visible){const G=y(w,D,O,v);w.onBeforeShadow(i,w,M,C,V,G,null),i.renderBufferDirect(C,null,V,G,w,null),w.onAfterShadow(i,w,M,C,V,G,null)}}const L=w.children;for(let V=0,D=L.length;V<D;V++)S(L[V],M,C,O,v)}function b(w){w.target.removeEventListener("dispose",b);for(const C in l){const O=l[C],v=w.target.uuid;v in O&&(O[v].dispose(),delete O[v])}}}function pS(i,e,t){const n=t.isWebGL2;function s(){let F=!1;const de=new Mt;let X=null;const ue=new Mt(0,0,0,0);return{setMask:function(ve){X!==ve&&!F&&(i.colorMask(ve,ve,ve,ve),X=ve)},setLocked:function(ve){F=ve},setClear:function(ve,et,st,ct,Tt){Tt===!0&&(ve*=ct,et*=ct,st*=ct),de.set(ve,et,st,ct),ue.equals(de)===!1&&(i.clearColor(ve,et,st,ct),ue.copy(de))},reset:function(){F=!1,X=null,ue.set(-1,0,0,0)}}}function r(){let F=!1,de=null,X=null,ue=null;return{setTest:function(ve){ve?me(i.DEPTH_TEST):Ve(i.DEPTH_TEST)},setMask:function(ve){de!==ve&&!F&&(i.depthMask(ve),de=ve)},setFunc:function(ve){if(X!==ve){switch(ve){case Rg:i.depthFunc(i.NEVER);break;case Ig:i.depthFunc(i.ALWAYS);break;case Dg:i.depthFunc(i.LESS);break;case qa:i.depthFunc(i.LEQUAL);break;case Pg:i.depthFunc(i.EQUAL);break;case Lg:i.depthFunc(i.GEQUAL);break;case Ng:i.depthFunc(i.GREATER);break;case Og:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}X=ve}},setLocked:function(ve){F=ve},setClear:function(ve){ue!==ve&&(i.clearDepth(ve),ue=ve)},reset:function(){F=!1,de=null,X=null,ue=null}}}function a(){let F=!1,de=null,X=null,ue=null,ve=null,et=null,st=null,ct=null,Tt=null;return{setTest:function(it){F||(it?me(i.STENCIL_TEST):Ve(i.STENCIL_TEST))},setMask:function(it){de!==it&&!F&&(i.stencilMask(it),de=it)},setFunc:function(it,mt,Jt){(X!==it||ue!==mt||ve!==Jt)&&(i.stencilFunc(it,mt,Jt),X=it,ue=mt,ve=Jt)},setOp:function(it,mt,Jt){(et!==it||st!==mt||ct!==Jt)&&(i.stencilOp(it,mt,Jt),et=it,st=mt,ct=Jt)},setLocked:function(it){F=it},setClear:function(it){Tt!==it&&(i.clearStencil(it),Tt=it)},reset:function(){F=!1,de=null,X=null,ue=null,ve=null,et=null,st=null,ct=null,Tt=null}}}const o=new s,c=new r,l=new a,h=new WeakMap,u=new WeakMap;let f={},m={},g=new WeakMap,_=[],p=null,d=!1,x=null,y=null,S=null,b=null,w=null,M=null,C=null,O=new xe(0,0,0),v=0,E=!1,L=null,V=null,D=null,G=null,U=null;const W=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,B=0;const j=i.getParameter(i.VERSION);j.indexOf("WebGL")!==-1?(B=parseFloat(/^WebGL (\d)/.exec(j)[1]),H=B>=1):j.indexOf("OpenGL ES")!==-1&&(B=parseFloat(/^OpenGL ES (\d)/.exec(j)[1]),H=B>=2);let ee=null,ce={};const Ce=i.getParameter(i.SCISSOR_BOX),K=i.getParameter(i.VIEWPORT),J=new Mt().fromArray(Ce),he=new Mt().fromArray(K);function Se(F,de,X,ue){const ve=new Uint8Array(4),et=i.createTexture();i.bindTexture(F,et),i.texParameteri(F,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(F,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let st=0;st<X;st++)n&&(F===i.TEXTURE_3D||F===i.TEXTURE_2D_ARRAY)?i.texImage3D(de,0,i.RGBA,1,1,ue,0,i.RGBA,i.UNSIGNED_BYTE,ve):i.texImage2D(de+st,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,ve);return et}const ne={};ne[i.TEXTURE_2D]=Se(i.TEXTURE_2D,i.TEXTURE_2D,1),ne[i.TEXTURE_CUBE_MAP]=Se(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(ne[i.TEXTURE_2D_ARRAY]=Se(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),ne[i.TEXTURE_3D]=Se(i.TEXTURE_3D,i.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),c.setClear(1),l.setClear(0),me(i.DEPTH_TEST),c.setFunc(qa),be(!1),ye(Uu),me(i.CULL_FACE),oe(sn);function me(F){f[F]!==!0&&(i.enable(F),f[F]=!0)}function Ve(F){f[F]!==!1&&(i.disable(F),f[F]=!1)}function Le(F,de){return m[F]!==de?(i.bindFramebuffer(F,de),m[F]=de,n&&(F===i.DRAW_FRAMEBUFFER&&(m[i.FRAMEBUFFER]=de),F===i.FRAMEBUFFER&&(m[i.DRAW_FRAMEBUFFER]=de)),!0):!1}function z(F,de){let X=_,ue=!1;if(F){X=g.get(de),X===void 0&&(X=[],g.set(de,X));const ve=F.textures;if(X.length!==ve.length||X[0]!==i.COLOR_ATTACHMENT0){for(let et=0,st=ve.length;et<st;et++)X[et]=i.COLOR_ATTACHMENT0+et;X.length=ve.length,ue=!0}}else X[0]!==i.BACK&&(X[0]=i.BACK,ue=!0);if(ue)if(t.isWebGL2)i.drawBuffers(X);else if(e.has("WEBGL_draw_buffers")===!0)e.get("WEBGL_draw_buffers").drawBuffersWEBGL(X);else throw new Error("THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension")}function pt(F){return p!==F?(i.useProgram(F),p=F,!0):!1}const Pe={[Ni]:i.FUNC_ADD,[_g]:i.FUNC_SUBTRACT,[yg]:i.FUNC_REVERSE_SUBTRACT};if(n)Pe[zu]=i.MIN,Pe[Gu]=i.MAX;else{const F=e.get("EXT_blend_minmax");F!==null&&(Pe[zu]=F.MIN_EXT,Pe[Gu]=F.MAX_EXT)}const se={[oh]:i.ZERO,[vg]:i.ONE,[xg]:i.SRC_COLOR,[ah]:i.SRC_ALPHA,[wg]:i.SRC_ALPHA_SATURATE,[rp]:i.DST_COLOR,[sp]:i.DST_ALPHA,[Sg]:i.ONE_MINUS_SRC_COLOR,[ch]:i.ONE_MINUS_SRC_ALPHA,[Mg]:i.ONE_MINUS_DST_COLOR,[bg]:i.ONE_MINUS_DST_ALPHA,[Tg]:i.CONSTANT_COLOR,[Eg]:i.ONE_MINUS_CONSTANT_COLOR,[Ag]:i.CONSTANT_ALPHA,[Cg]:i.ONE_MINUS_CONSTANT_ALPHA};function oe(F,de,X,ue,ve,et,st,ct,Tt,it){if(F===sn){d===!0&&(Ve(i.BLEND),d=!1);return}if(d===!1&&(me(i.BLEND),d=!0),F!==ip){if(F!==x||it!==E){if((y!==Ni||w!==Ni)&&(i.blendEquation(i.FUNC_ADD),y=Ni,w=Ni),it)switch(F){case Ar:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case rh:i.blendFunc(i.ONE,i.ONE);break;case Bu:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Vu:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case Ar:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case rh:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case Bu:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Vu:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}S=null,b=null,M=null,C=null,O.set(0,0,0),v=0,x=F,E=it}return}ve=ve||de,et=et||X,st=st||ue,(de!==y||ve!==w)&&(i.blendEquationSeparate(Pe[de],Pe[ve]),y=de,w=ve),(X!==S||ue!==b||et!==M||st!==C)&&(i.blendFuncSeparate(se[X],se[ue],se[et],se[st]),S=X,b=ue,M=et,C=st),(ct.equals(O)===!1||Tt!==v)&&(i.blendColor(ct.r,ct.g,ct.b,Tt),O.copy(ct),v=Tt),x=F,E=!1}function De(F,de){F.side===ci?Ve(i.CULL_FACE):me(i.CULL_FACE);let X=F.side===mn;de&&(X=!X),be(X),F.blending===Ar&&F.transparent===!1?oe(sn):oe(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.blendColor,F.blendAlpha,F.premultipliedAlpha),c.setFunc(F.depthFunc),c.setTest(F.depthTest),c.setMask(F.depthWrite),o.setMask(F.colorWrite);const ue=F.stencilWrite;l.setTest(ue),ue&&(l.setMask(F.stencilWriteMask),l.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),l.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),I(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?me(i.SAMPLE_ALPHA_TO_COVERAGE):Ve(i.SAMPLE_ALPHA_TO_COVERAGE)}function be(F){L!==F&&(F?i.frontFace(i.CW):i.frontFace(i.CCW),L=F)}function ye(F){F!==mg?(me(i.CULL_FACE),F!==V&&(F===Uu?i.cullFace(i.BACK):F===gg?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):Ve(i.CULL_FACE),V=F}function Be(F){F!==D&&(H&&i.lineWidth(F),D=F)}function I(F,de,X){F?(me(i.POLYGON_OFFSET_FILL),(G!==de||U!==X)&&(i.polygonOffset(de,X),G=de,U=X)):Ve(i.POLYGON_OFFSET_FILL)}function T(F){F?me(i.SCISSOR_TEST):Ve(i.SCISSOR_TEST)}function Z(F){F===void 0&&(F=i.TEXTURE0+W-1),ee!==F&&(i.activeTexture(F),ee=F)}function te(F,de,X){X===void 0&&(ee===null?X=i.TEXTURE0+W-1:X=ee);let ue=ce[X];ue===void 0&&(ue={type:void 0,texture:void 0},ce[X]=ue),(ue.type!==F||ue.texture!==de)&&(ee!==X&&(i.activeTexture(X),ee=X),i.bindTexture(F,de||ne[F]),ue.type=F,ue.texture=de)}function le(){const F=ce[ee];F!==void 0&&F.type!==void 0&&(i.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function re(){try{i.compressedTexImage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function We(){try{i.compressedTexImage3D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ne(){try{i.texSubImage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function fe(){try{i.texSubImage3D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ge(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ze(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function pe(){try{i.texStorage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function xt(){try{i.texStorage3D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Xe(){try{i.texImage2D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Oe(){try{i.texImage3D.apply(i,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Ee(F){J.equals(F)===!1&&(i.scissor(F.x,F.y,F.z,F.w),J.copy(F))}function Re(F){he.equals(F)===!1&&(i.viewport(F.x,F.y,F.z,F.w),he.copy(F))}function P(F,de){let X=u.get(de);X===void 0&&(X=new WeakMap,u.set(de,X));let ue=X.get(F);ue===void 0&&(ue=i.getUniformBlockIndex(de,F.name),X.set(F,ue))}function ie(F,de){const ue=u.get(de).get(F);h.get(de)!==ue&&(i.uniformBlockBinding(de,ue,F.__bindingPointIndex),h.set(de,ue))}function we(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),n===!0&&(i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),f={},ee=null,ce={},m={},g=new WeakMap,_=[],p=null,d=!1,x=null,y=null,S=null,b=null,w=null,M=null,C=null,O=new xe(0,0,0),v=0,E=!1,L=null,V=null,D=null,G=null,U=null,J.set(0,0,i.canvas.width,i.canvas.height),he.set(0,0,i.canvas.width,i.canvas.height),o.reset(),c.reset(),l.reset()}return{buffers:{color:o,depth:c,stencil:l},enable:me,disable:Ve,bindFramebuffer:Le,drawBuffers:z,useProgram:pt,setBlending:oe,setMaterial:De,setFlipSided:be,setCullFace:ye,setLineWidth:Be,setPolygonOffset:I,setScissorTest:T,activeTexture:Z,bindTexture:te,unbindTexture:le,compressedTexImage2D:re,compressedTexImage3D:We,texImage2D:Xe,texImage3D:Oe,updateUBOMapping:P,uniformBlockBinding:ie,texStorage2D:pe,texStorage3D:xt,texSubImage2D:Ne,texSubImage3D:fe,compressedTexSubImage2D:ge,compressedTexSubImage3D:ze,scissor:Ee,viewport:Re,reset:we}}function mS(i,e,t,n,s,r,a){const o=s.isWebGL2,c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new Me,u=new WeakMap;let f;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(I,T){return g?new OffscreenCanvas(I,T):Za("canvas")}function p(I,T,Z,te){let le=1;const re=Be(I);if((re.width>te||re.height>te)&&(le=te/Math.max(re.width,re.height)),le<1||T===!0)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const We=T?$a:Math.floor,Ne=We(le*re.width),fe=We(le*re.height);f===void 0&&(f=_(Ne,fe));const ge=Z?_(Ne,fe):f;return ge.width=Ne,ge.height=fe,ge.getContext("2d").drawImage(I,0,0,Ne,fe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+re.width+"x"+re.height+") to ("+Ne+"x"+fe+")."),ge}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+re.width+"x"+re.height+")."),I;return I}function d(I){const T=Be(I);return fh(T.width)&&fh(T.height)}function x(I){return o?!1:I.wrapS!==Yn||I.wrapT!==Yn||I.minFilter!==Nt&&I.minFilter!==yn}function y(I,T){return I.generateMipmaps&&T&&I.minFilter!==Nt&&I.minFilter!==yn}function S(I){i.generateMipmap(I)}function b(I,T,Z,te,le=!1){if(o===!1)return T;if(I!==null){if(i[I]!==void 0)return i[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let re=T;if(T===i.RED&&(Z===i.FLOAT&&(re=i.R32F),Z===i.HALF_FLOAT&&(re=i.R16F),Z===i.UNSIGNED_BYTE&&(re=i.R8)),T===i.RED_INTEGER&&(Z===i.UNSIGNED_BYTE&&(re=i.R8UI),Z===i.UNSIGNED_SHORT&&(re=i.R16UI),Z===i.UNSIGNED_INT&&(re=i.R32UI),Z===i.BYTE&&(re=i.R8I),Z===i.SHORT&&(re=i.R16I),Z===i.INT&&(re=i.R32I)),T===i.RG&&(Z===i.FLOAT&&(re=i.RG32F),Z===i.HALF_FLOAT&&(re=i.RG16F),Z===i.UNSIGNED_BYTE&&(re=i.RG8)),T===i.RG_INTEGER&&(Z===i.UNSIGNED_BYTE&&(re=i.RG8UI),Z===i.UNSIGNED_SHORT&&(re=i.RG16UI),Z===i.UNSIGNED_INT&&(re=i.RG32UI),Z===i.BYTE&&(re=i.RG8I),Z===i.SHORT&&(re=i.RG16I),Z===i.INT&&(re=i.RG32I)),T===i.RGBA){const We=le?ja:rt.getTransfer(te);Z===i.FLOAT&&(re=i.RGBA32F),Z===i.HALF_FLOAT&&(re=i.RGBA16F),Z===i.UNSIGNED_BYTE&&(re=We===ut?i.SRGB8_ALPHA8:i.RGBA8),Z===i.UNSIGNED_SHORT_4_4_4_4&&(re=i.RGBA4),Z===i.UNSIGNED_SHORT_5_5_5_1&&(re=i.RGB5_A1)}return(re===i.R16F||re===i.R32F||re===i.RG16F||re===i.RG32F||re===i.RGBA16F||re===i.RGBA32F)&&e.get("EXT_color_buffer_float"),re}function w(I,T,Z){return y(I,Z)===!0||I.isFramebufferTexture&&I.minFilter!==Nt&&I.minFilter!==yn?Math.log2(Math.max(T.width,T.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?T.mipmaps.length:1}function M(I){return I===Nt||I===Hu||I===Mo?i.NEAREST:i.LINEAR}function C(I){const T=I.target;T.removeEventListener("dispose",C),v(T),T.isVideoTexture&&u.delete(T)}function O(I){const T=I.target;T.removeEventListener("dispose",O),L(T)}function v(I){const T=n.get(I);if(T.__webglInit===void 0)return;const Z=I.source,te=m.get(Z);if(te){const le=te[T.__cacheKey];le.usedTimes--,le.usedTimes===0&&E(I),Object.keys(te).length===0&&m.delete(Z)}n.remove(I)}function E(I){const T=n.get(I);i.deleteTexture(T.__webglTexture);const Z=I.source,te=m.get(Z);delete te[T.__cacheKey],a.memory.textures--}function L(I){const T=n.get(I);if(I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let te=0;te<6;te++){if(Array.isArray(T.__webglFramebuffer[te]))for(let le=0;le<T.__webglFramebuffer[te].length;le++)i.deleteFramebuffer(T.__webglFramebuffer[te][le]);else i.deleteFramebuffer(T.__webglFramebuffer[te]);T.__webglDepthbuffer&&i.deleteRenderbuffer(T.__webglDepthbuffer[te])}else{if(Array.isArray(T.__webglFramebuffer))for(let te=0;te<T.__webglFramebuffer.length;te++)i.deleteFramebuffer(T.__webglFramebuffer[te]);else i.deleteFramebuffer(T.__webglFramebuffer);if(T.__webglDepthbuffer&&i.deleteRenderbuffer(T.__webglDepthbuffer),T.__webglMultisampledFramebuffer&&i.deleteFramebuffer(T.__webglMultisampledFramebuffer),T.__webglColorRenderbuffer)for(let te=0;te<T.__webglColorRenderbuffer.length;te++)T.__webglColorRenderbuffer[te]&&i.deleteRenderbuffer(T.__webglColorRenderbuffer[te]);T.__webglDepthRenderbuffer&&i.deleteRenderbuffer(T.__webglDepthRenderbuffer)}const Z=I.textures;for(let te=0,le=Z.length;te<le;te++){const re=n.get(Z[te]);re.__webglTexture&&(i.deleteTexture(re.__webglTexture),a.memory.textures--),n.remove(Z[te])}n.remove(I)}let V=0;function D(){V=0}function G(){const I=V;return I>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+s.maxTextures),V+=1,I}function U(I){const T=[];return T.push(I.wrapS),T.push(I.wrapT),T.push(I.wrapR||0),T.push(I.magFilter),T.push(I.minFilter),T.push(I.anisotropy),T.push(I.internalFormat),T.push(I.format),T.push(I.type),T.push(I.generateMipmaps),T.push(I.premultiplyAlpha),T.push(I.flipY),T.push(I.unpackAlignment),T.push(I.colorSpace),T.join()}function W(I,T){const Z=n.get(I);if(I.isVideoTexture&&be(I),I.isRenderTargetTexture===!1&&I.version>0&&Z.__version!==I.version){const te=I.image;if(te===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(te.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{he(Z,I,T);return}}t.bindTexture(i.TEXTURE_2D,Z.__webglTexture,i.TEXTURE0+T)}function H(I,T){const Z=n.get(I);if(I.version>0&&Z.__version!==I.version){he(Z,I,T);return}t.bindTexture(i.TEXTURE_2D_ARRAY,Z.__webglTexture,i.TEXTURE0+T)}function B(I,T){const Z=n.get(I);if(I.version>0&&Z.__version!==I.version){he(Z,I,T);return}t.bindTexture(i.TEXTURE_3D,Z.__webglTexture,i.TEXTURE0+T)}function j(I,T){const Z=n.get(I);if(I.version>0&&Z.__version!==I.version){Se(Z,I,T);return}t.bindTexture(i.TEXTURE_CUBE_MAP,Z.__webglTexture,i.TEXTURE0+T)}const ee={[Fo]:i.REPEAT,[Yn]:i.CLAMP_TO_EDGE,[uh]:i.MIRRORED_REPEAT},ce={[Nt]:i.NEAREST,[Hu]:i.NEAREST_MIPMAP_NEAREST,[Mo]:i.NEAREST_MIPMAP_LINEAR,[yn]:i.LINEAR,[xl]:i.LINEAR_MIPMAP_NEAREST,[Os]:i.LINEAR_MIPMAP_LINEAR},Ce={[Xg]:i.NEVER,[e_]:i.ALWAYS,[Yg]:i.LESS,[bp]:i.LEQUAL,[$g]:i.EQUAL,[Jg]:i.GEQUAL,[Zg]:i.GREATER,[Qg]:i.NOTEQUAL};function K(I,T,Z){if(T.type===li&&e.has("OES_texture_float_linear")===!1&&(T.magFilter===yn||T.magFilter===xl||T.magFilter===Mo||T.magFilter===Os||T.minFilter===yn||T.minFilter===xl||T.minFilter===Mo||T.minFilter===Os)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),Z?(i.texParameteri(I,i.TEXTURE_WRAP_S,ee[T.wrapS]),i.texParameteri(I,i.TEXTURE_WRAP_T,ee[T.wrapT]),(I===i.TEXTURE_3D||I===i.TEXTURE_2D_ARRAY)&&i.texParameteri(I,i.TEXTURE_WRAP_R,ee[T.wrapR]),i.texParameteri(I,i.TEXTURE_MAG_FILTER,ce[T.magFilter]),i.texParameteri(I,i.TEXTURE_MIN_FILTER,ce[T.minFilter])):(i.texParameteri(I,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(I,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),(I===i.TEXTURE_3D||I===i.TEXTURE_2D_ARRAY)&&i.texParameteri(I,i.TEXTURE_WRAP_R,i.CLAMP_TO_EDGE),(T.wrapS!==Yn||T.wrapT!==Yn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(I,i.TEXTURE_MAG_FILTER,M(T.magFilter)),i.texParameteri(I,i.TEXTURE_MIN_FILTER,M(T.minFilter)),T.minFilter!==Nt&&T.minFilter!==yn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),T.compareFunction&&(i.texParameteri(I,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(I,i.TEXTURE_COMPARE_FUNC,Ce[T.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(T.magFilter===Nt||T.minFilter!==Mo&&T.minFilter!==Os||T.type===li&&e.has("OES_texture_float_linear")===!1||o===!1&&T.type===ps&&e.has("OES_texture_half_float_linear")===!1)return;if(T.anisotropy>1||n.get(T).__currentAnisotropy){const te=e.get("EXT_texture_filter_anisotropic");i.texParameterf(I,te.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,s.getMaxAnisotropy())),n.get(T).__currentAnisotropy=T.anisotropy}}}function J(I,T){let Z=!1;I.__webglInit===void 0&&(I.__webglInit=!0,T.addEventListener("dispose",C));const te=T.source;let le=m.get(te);le===void 0&&(le={},m.set(te,le));const re=U(T);if(re!==I.__cacheKey){le[re]===void 0&&(le[re]={texture:i.createTexture(),usedTimes:0},a.memory.textures++,Z=!0),le[re].usedTimes++;const We=le[I.__cacheKey];We!==void 0&&(le[I.__cacheKey].usedTimes--,We.usedTimes===0&&E(T)),I.__cacheKey=re,I.__webglTexture=le[re].texture}return Z}function he(I,T,Z){let te=i.TEXTURE_2D;(T.isDataArrayTexture||T.isCompressedArrayTexture)&&(te=i.TEXTURE_2D_ARRAY),T.isData3DTexture&&(te=i.TEXTURE_3D);const le=J(I,T),re=T.source;t.bindTexture(te,I.__webglTexture,i.TEXTURE0+Z);const We=n.get(re);if(re.version!==We.__version||le===!0){t.activeTexture(i.TEXTURE0+Z);const Ne=rt.getPrimaries(rt.workingColorSpace),fe=T.colorSpace===ts?null:rt.getPrimaries(T.colorSpace),ge=T.colorSpace===ts||Ne===fe?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,T.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,T.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,ge);const ze=x(T)&&d(T.image)===!1;let pe=p(T.image,ze,!1,s.maxTextureSize);pe=ye(T,pe);const xt=d(pe)||o,Xe=r.convert(T.format,T.colorSpace);let Oe=r.convert(T.type),Ee=b(T.internalFormat,Xe,Oe,T.colorSpace,T.isVideoTexture);K(te,T,xt);let Re;const P=T.mipmaps,ie=o&&T.isVideoTexture!==!0&&Ee!==Sp,we=We.__version===void 0||le===!0,F=re.dataReady,de=w(T,pe,xt);if(T.isDepthTexture)Ee=i.DEPTH_COMPONENT,o?T.type===li?Ee=i.DEPTH_COMPONENT32F:T.type===ss?Ee=i.DEPTH_COMPONENT24:T.type===hs?Ee=i.DEPTH24_STENCIL8:Ee=i.DEPTH_COMPONENT16:T.type===li&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),T.format===ks&&Ee===i.DEPTH_COMPONENT&&T.type!==Fh&&T.type!==ss&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=ss,Oe=r.convert(T.type)),T.format===Us&&Ee===i.DEPTH_COMPONENT&&(Ee=i.DEPTH_STENCIL,T.type!==hs&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=hs,Oe=r.convert(T.type))),we&&(ie?t.texStorage2D(i.TEXTURE_2D,1,Ee,pe.width,pe.height):t.texImage2D(i.TEXTURE_2D,0,Ee,pe.width,pe.height,0,Xe,Oe,null));else if(T.isDataTexture)if(P.length>0&&xt){ie&&we&&t.texStorage2D(i.TEXTURE_2D,de,Ee,P[0].width,P[0].height);for(let X=0,ue=P.length;X<ue;X++)Re=P[X],ie?F&&t.texSubImage2D(i.TEXTURE_2D,X,0,0,Re.width,Re.height,Xe,Oe,Re.data):t.texImage2D(i.TEXTURE_2D,X,Ee,Re.width,Re.height,0,Xe,Oe,Re.data);T.generateMipmaps=!1}else ie?(we&&t.texStorage2D(i.TEXTURE_2D,de,Ee,pe.width,pe.height),F&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,pe.width,pe.height,Xe,Oe,pe.data)):t.texImage2D(i.TEXTURE_2D,0,Ee,pe.width,pe.height,0,Xe,Oe,pe.data);else if(T.isCompressedTexture)if(T.isCompressedArrayTexture){ie&&we&&t.texStorage3D(i.TEXTURE_2D_ARRAY,de,Ee,P[0].width,P[0].height,pe.depth);for(let X=0,ue=P.length;X<ue;X++)Re=P[X],T.format!==$n?Xe!==null?ie?F&&t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,X,0,0,0,Re.width,Re.height,pe.depth,Xe,Re.data,0,0):t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,X,Ee,Re.width,Re.height,pe.depth,0,Re.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ie?F&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,X,0,0,0,Re.width,Re.height,pe.depth,Xe,Oe,Re.data):t.texImage3D(i.TEXTURE_2D_ARRAY,X,Ee,Re.width,Re.height,pe.depth,0,Xe,Oe,Re.data)}else{ie&&we&&t.texStorage2D(i.TEXTURE_2D,de,Ee,P[0].width,P[0].height);for(let X=0,ue=P.length;X<ue;X++)Re=P[X],T.format!==$n?Xe!==null?ie?F&&t.compressedTexSubImage2D(i.TEXTURE_2D,X,0,0,Re.width,Re.height,Xe,Re.data):t.compressedTexImage2D(i.TEXTURE_2D,X,Ee,Re.width,Re.height,0,Re.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):ie?F&&t.texSubImage2D(i.TEXTURE_2D,X,0,0,Re.width,Re.height,Xe,Oe,Re.data):t.texImage2D(i.TEXTURE_2D,X,Ee,Re.width,Re.height,0,Xe,Oe,Re.data)}else if(T.isDataArrayTexture)ie?(we&&t.texStorage3D(i.TEXTURE_2D_ARRAY,de,Ee,pe.width,pe.height,pe.depth),F&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,pe.width,pe.height,pe.depth,Xe,Oe,pe.data)):t.texImage3D(i.TEXTURE_2D_ARRAY,0,Ee,pe.width,pe.height,pe.depth,0,Xe,Oe,pe.data);else if(T.isData3DTexture)ie?(we&&t.texStorage3D(i.TEXTURE_3D,de,Ee,pe.width,pe.height,pe.depth),F&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,pe.width,pe.height,pe.depth,Xe,Oe,pe.data)):t.texImage3D(i.TEXTURE_3D,0,Ee,pe.width,pe.height,pe.depth,0,Xe,Oe,pe.data);else if(T.isFramebufferTexture){if(we)if(ie)t.texStorage2D(i.TEXTURE_2D,de,Ee,pe.width,pe.height);else{let X=pe.width,ue=pe.height;for(let ve=0;ve<de;ve++)t.texImage2D(i.TEXTURE_2D,ve,Ee,X,ue,0,Xe,Oe,null),X>>=1,ue>>=1}}else if(P.length>0&&xt){if(ie&&we){const X=Be(P[0]);t.texStorage2D(i.TEXTURE_2D,de,Ee,X.width,X.height)}for(let X=0,ue=P.length;X<ue;X++)Re=P[X],ie?F&&t.texSubImage2D(i.TEXTURE_2D,X,0,0,Xe,Oe,Re):t.texImage2D(i.TEXTURE_2D,X,Ee,Xe,Oe,Re);T.generateMipmaps=!1}else if(ie){if(we){const X=Be(pe);t.texStorage2D(i.TEXTURE_2D,de,Ee,X.width,X.height)}F&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Xe,Oe,pe)}else t.texImage2D(i.TEXTURE_2D,0,Ee,Xe,Oe,pe);y(T,xt)&&S(te),We.__version=re.version,T.onUpdate&&T.onUpdate(T)}I.__version=T.version}function Se(I,T,Z){if(T.image.length!==6)return;const te=J(I,T),le=T.source;t.bindTexture(i.TEXTURE_CUBE_MAP,I.__webglTexture,i.TEXTURE0+Z);const re=n.get(le);if(le.version!==re.__version||te===!0){t.activeTexture(i.TEXTURE0+Z);const We=rt.getPrimaries(rt.workingColorSpace),Ne=T.colorSpace===ts?null:rt.getPrimaries(T.colorSpace),fe=T.colorSpace===ts||We===Ne?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,T.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,T.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,fe);const ge=T.isCompressedTexture||T.image[0].isCompressedTexture,ze=T.image[0]&&T.image[0].isDataTexture,pe=[];for(let X=0;X<6;X++)!ge&&!ze?pe[X]=p(T.image[X],!1,!0,s.maxCubemapSize):pe[X]=ze?T.image[X].image:T.image[X],pe[X]=ye(T,pe[X]);const xt=pe[0],Xe=d(xt)||o,Oe=r.convert(T.format,T.colorSpace),Ee=r.convert(T.type),Re=b(T.internalFormat,Oe,Ee,T.colorSpace),P=o&&T.isVideoTexture!==!0,ie=re.__version===void 0||te===!0,we=le.dataReady;let F=w(T,xt,Xe);K(i.TEXTURE_CUBE_MAP,T,Xe);let de;if(ge){P&&ie&&t.texStorage2D(i.TEXTURE_CUBE_MAP,F,Re,xt.width,xt.height);for(let X=0;X<6;X++){de=pe[X].mipmaps;for(let ue=0;ue<de.length;ue++){const ve=de[ue];T.format!==$n?Oe!==null?P?we&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue,0,0,ve.width,ve.height,Oe,ve.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue,Re,ve.width,ve.height,0,ve.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):P?we&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue,0,0,ve.width,ve.height,Oe,Ee,ve.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue,Re,ve.width,ve.height,0,Oe,Ee,ve.data)}}}else{if(de=T.mipmaps,P&&ie){de.length>0&&F++;const X=Be(pe[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,F,Re,X.width,X.height)}for(let X=0;X<6;X++)if(ze){P?we&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,0,0,0,pe[X].width,pe[X].height,Oe,Ee,pe[X].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,0,Re,pe[X].width,pe[X].height,0,Oe,Ee,pe[X].data);for(let ue=0;ue<de.length;ue++){const et=de[ue].image[X].image;P?we&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue+1,0,0,et.width,et.height,Oe,Ee,et.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue+1,Re,et.width,et.height,0,Oe,Ee,et.data)}}else{P?we&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,0,0,0,Oe,Ee,pe[X]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,0,Re,Oe,Ee,pe[X]);for(let ue=0;ue<de.length;ue++){const ve=de[ue];P?we&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue+1,0,0,Oe,Ee,ve.image[X]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+X,ue+1,Re,Oe,Ee,ve.image[X])}}}y(T,Xe)&&S(i.TEXTURE_CUBE_MAP),re.__version=le.version,T.onUpdate&&T.onUpdate(T)}I.__version=T.version}function ne(I,T,Z,te,le,re){const We=r.convert(Z.format,Z.colorSpace),Ne=r.convert(Z.type),fe=b(Z.internalFormat,We,Ne,Z.colorSpace);if(!n.get(T).__hasExternalTextures){const ze=Math.max(1,T.width>>re),pe=Math.max(1,T.height>>re);le===i.TEXTURE_3D||le===i.TEXTURE_2D_ARRAY?t.texImage3D(le,re,fe,ze,pe,T.depth,0,We,Ne,null):t.texImage2D(le,re,fe,ze,pe,0,We,Ne,null)}t.bindFramebuffer(i.FRAMEBUFFER,I),De(T)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,te,le,n.get(Z).__webglTexture,0,oe(T)):(le===i.TEXTURE_2D||le>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&le<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,te,le,n.get(Z).__webglTexture,re),t.bindFramebuffer(i.FRAMEBUFFER,null)}function me(I,T,Z){if(i.bindRenderbuffer(i.RENDERBUFFER,I),T.depthBuffer&&!T.stencilBuffer){let te=o===!0?i.DEPTH_COMPONENT24:i.DEPTH_COMPONENT16;if(Z||De(T)){const le=T.depthTexture;le&&le.isDepthTexture&&(le.type===li?te=i.DEPTH_COMPONENT32F:le.type===ss&&(te=i.DEPTH_COMPONENT24));const re=oe(T);De(T)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,re,te,T.width,T.height):i.renderbufferStorageMultisample(i.RENDERBUFFER,re,te,T.width,T.height)}else i.renderbufferStorage(i.RENDERBUFFER,te,T.width,T.height);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,I)}else if(T.depthBuffer&&T.stencilBuffer){const te=oe(T);Z&&De(T)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,te,i.DEPTH24_STENCIL8,T.width,T.height):De(T)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,te,i.DEPTH24_STENCIL8,T.width,T.height):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,T.width,T.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,I)}else{const te=T.textures;for(let le=0;le<te.length;le++){const re=te[le],We=r.convert(re.format,re.colorSpace),Ne=r.convert(re.type),fe=b(re.internalFormat,We,Ne,re.colorSpace),ge=oe(T);Z&&De(T)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,ge,fe,T.width,T.height):De(T)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,ge,fe,T.width,T.height):i.renderbufferStorage(i.RENDERBUFFER,fe,T.width,T.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Ve(I,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,I),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),W(T.depthTexture,0);const te=n.get(T.depthTexture).__webglTexture,le=oe(T);if(T.depthTexture.format===ks)De(T)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,te,0,le):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,te,0);else if(T.depthTexture.format===Us)De(T)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,te,0,le):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,te,0);else throw new Error("Unknown depthTexture format")}function Le(I){const T=n.get(I),Z=I.isWebGLCubeRenderTarget===!0;if(I.depthTexture&&!T.__autoAllocateDepthBuffer){if(Z)throw new Error("target.depthTexture not supported in Cube render targets");Ve(T.__webglFramebuffer,I)}else if(Z){T.__webglDepthbuffer=[];for(let te=0;te<6;te++)t.bindFramebuffer(i.FRAMEBUFFER,T.__webglFramebuffer[te]),T.__webglDepthbuffer[te]=i.createRenderbuffer(),me(T.__webglDepthbuffer[te],I,!1)}else t.bindFramebuffer(i.FRAMEBUFFER,T.__webglFramebuffer),T.__webglDepthbuffer=i.createRenderbuffer(),me(T.__webglDepthbuffer,I,!1);t.bindFramebuffer(i.FRAMEBUFFER,null)}function z(I,T,Z){const te=n.get(I);T!==void 0&&ne(te.__webglFramebuffer,I,I.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),Z!==void 0&&Le(I)}function pt(I){const T=I.texture,Z=n.get(I),te=n.get(T);I.addEventListener("dispose",O);const le=I.textures,re=I.isWebGLCubeRenderTarget===!0,We=le.length>1,Ne=d(I)||o;if(We||(te.__webglTexture===void 0&&(te.__webglTexture=i.createTexture()),te.__version=T.version,a.memory.textures++),re){Z.__webglFramebuffer=[];for(let fe=0;fe<6;fe++)if(o&&T.mipmaps&&T.mipmaps.length>0){Z.__webglFramebuffer[fe]=[];for(let ge=0;ge<T.mipmaps.length;ge++)Z.__webglFramebuffer[fe][ge]=i.createFramebuffer()}else Z.__webglFramebuffer[fe]=i.createFramebuffer()}else{if(o&&T.mipmaps&&T.mipmaps.length>0){Z.__webglFramebuffer=[];for(let fe=0;fe<T.mipmaps.length;fe++)Z.__webglFramebuffer[fe]=i.createFramebuffer()}else Z.__webglFramebuffer=i.createFramebuffer();if(We)if(s.drawBuffers)for(let fe=0,ge=le.length;fe<ge;fe++){const ze=n.get(le[fe]);ze.__webglTexture===void 0&&(ze.__webglTexture=i.createTexture(),a.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&I.samples>0&&De(I)===!1){Z.__webglMultisampledFramebuffer=i.createFramebuffer(),Z.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,Z.__webglMultisampledFramebuffer);for(let fe=0;fe<le.length;fe++){const ge=le[fe];Z.__webglColorRenderbuffer[fe]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,Z.__webglColorRenderbuffer[fe]);const ze=r.convert(ge.format,ge.colorSpace),pe=r.convert(ge.type),xt=b(ge.internalFormat,ze,pe,ge.colorSpace,I.isXRRenderTarget===!0),Xe=oe(I);i.renderbufferStorageMultisample(i.RENDERBUFFER,Xe,xt,I.width,I.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+fe,i.RENDERBUFFER,Z.__webglColorRenderbuffer[fe])}i.bindRenderbuffer(i.RENDERBUFFER,null),I.depthBuffer&&(Z.__webglDepthRenderbuffer=i.createRenderbuffer(),me(Z.__webglDepthRenderbuffer,I,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(re){t.bindTexture(i.TEXTURE_CUBE_MAP,te.__webglTexture),K(i.TEXTURE_CUBE_MAP,T,Ne);for(let fe=0;fe<6;fe++)if(o&&T.mipmaps&&T.mipmaps.length>0)for(let ge=0;ge<T.mipmaps.length;ge++)ne(Z.__webglFramebuffer[fe][ge],I,T,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+fe,ge);else ne(Z.__webglFramebuffer[fe],I,T,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0);y(T,Ne)&&S(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(We){for(let fe=0,ge=le.length;fe<ge;fe++){const ze=le[fe],pe=n.get(ze);t.bindTexture(i.TEXTURE_2D,pe.__webglTexture),K(i.TEXTURE_2D,ze,Ne),ne(Z.__webglFramebuffer,I,ze,i.COLOR_ATTACHMENT0+fe,i.TEXTURE_2D,0),y(ze,Ne)&&S(i.TEXTURE_2D)}t.unbindTexture()}else{let fe=i.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(o?fe=I.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(fe,te.__webglTexture),K(fe,T,Ne),o&&T.mipmaps&&T.mipmaps.length>0)for(let ge=0;ge<T.mipmaps.length;ge++)ne(Z.__webglFramebuffer[ge],I,T,i.COLOR_ATTACHMENT0,fe,ge);else ne(Z.__webglFramebuffer,I,T,i.COLOR_ATTACHMENT0,fe,0);y(T,Ne)&&S(fe),t.unbindTexture()}I.depthBuffer&&Le(I)}function Pe(I){const T=d(I)||o,Z=I.textures;for(let te=0,le=Z.length;te<le;te++){const re=Z[te];if(y(re,T)){const We=I.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:i.TEXTURE_2D,Ne=n.get(re).__webglTexture;t.bindTexture(We,Ne),S(We),t.unbindTexture()}}}function se(I){if(o&&I.samples>0&&De(I)===!1){const T=I.textures,Z=I.width,te=I.height;let le=i.COLOR_BUFFER_BIT;const re=[],We=I.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Ne=n.get(I),fe=T.length>1;if(fe)for(let ge=0;ge<T.length;ge++)t.bindFramebuffer(i.FRAMEBUFFER,Ne.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,Ne.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,Ne.__webglMultisampledFramebuffer),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ne.__webglFramebuffer);for(let ge=0;ge<T.length;ge++){re.push(i.COLOR_ATTACHMENT0+ge),I.depthBuffer&&re.push(We);const ze=Ne.__ignoreDepthValues!==void 0?Ne.__ignoreDepthValues:!1;if(ze===!1&&(I.depthBuffer&&(le|=i.DEPTH_BUFFER_BIT),I.stencilBuffer&&(le|=i.STENCIL_BUFFER_BIT)),fe&&i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Ne.__webglColorRenderbuffer[ge]),ze===!0&&(i.invalidateFramebuffer(i.READ_FRAMEBUFFER,[We]),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[We])),fe){const pe=n.get(T[ge]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,pe,0)}i.blitFramebuffer(0,0,Z,te,0,0,Z,te,le,i.NEAREST),l&&i.invalidateFramebuffer(i.READ_FRAMEBUFFER,re)}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),fe)for(let ge=0;ge<T.length;ge++){t.bindFramebuffer(i.FRAMEBUFFER,Ne.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.RENDERBUFFER,Ne.__webglColorRenderbuffer[ge]);const ze=n.get(T[ge]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,Ne.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.TEXTURE_2D,ze,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ne.__webglMultisampledFramebuffer)}}function oe(I){return Math.min(s.maxSamples,I.samples)}function De(I){const T=n.get(I);return o&&I.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&T.__useRenderToTexture!==!1}function be(I){const T=a.render.frame;u.get(I)!==T&&(u.set(I,T),I.update())}function ye(I,T){const Z=I.colorSpace,te=I.format,le=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||I.format===dh||Z!==vs&&Z!==ts&&(rt.getTransfer(Z)===ut?o===!1?e.has("EXT_sRGB")===!0&&te===$n?(I.format=dh,I.minFilter=yn,I.generateMipmaps=!1):T=Tp.sRGBToLinear(T):(te!==$n||le!==ls)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Z)),T}function Be(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(h.width=I.naturalWidth||I.width,h.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(h.width=I.displayWidth,h.height=I.displayHeight):(h.width=I.width,h.height=I.height),h}this.allocateTextureUnit=G,this.resetTextureUnits=D,this.setTexture2D=W,this.setTexture2DArray=H,this.setTexture3D=B,this.setTextureCube=j,this.rebindTextures=z,this.setupRenderTarget=pt,this.updateRenderTargetMipmap=Pe,this.updateMultisampleRenderTarget=se,this.setupDepthRenderbuffer=Le,this.setupFrameBufferTexture=ne,this.useMultisampledRTT=De}function gS(i,e,t){const n=t.isWebGL2;function s(r,a=ts){let o;const c=rt.getTransfer(a);if(r===ls)return i.UNSIGNED_BYTE;if(r===pp)return i.UNSIGNED_SHORT_4_4_4_4;if(r===mp)return i.UNSIGNED_SHORT_5_5_5_1;if(r===Bg)return i.BYTE;if(r===Vg)return i.SHORT;if(r===Fh)return i.UNSIGNED_SHORT;if(r===fp)return i.INT;if(r===ss)return i.UNSIGNED_INT;if(r===li)return i.FLOAT;if(r===ps)return n?i.HALF_FLOAT:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===zg)return i.ALPHA;if(r===$n)return i.RGBA;if(r===gp)return i.LUMINANCE;if(r===Gg)return i.LUMINANCE_ALPHA;if(r===ks)return i.DEPTH_COMPONENT;if(r===Us)return i.DEPTH_STENCIL;if(r===dh)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===_p)return i.RED;if(r===yp)return i.RED_INTEGER;if(r===Hg)return i.RG;if(r===vp)return i.RG_INTEGER;if(r===xp)return i.RGBA_INTEGER;if(r===Sl||r===bl||r===Ml||r===wl)if(c===ut)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===Sl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===bl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ml)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===wl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===Sl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===bl)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ml)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===wl)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Wu||r===qu||r===ju||r===Ku)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===Wu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===qu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===ju)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ku)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Sp)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Xu||r===Yu)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===Xu)return c===ut?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===Yu)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===$u||r===Zu||r===Qu||r===Ju||r===ed||r===td||r===nd||r===id||r===sd||r===rd||r===od||r===ad||r===cd||r===ld)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===$u)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Zu)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Qu)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Ju)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===ed)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===td)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===nd)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===id)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===sd)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===rd)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===od)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===ad)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===cd)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===ld)return c===ut?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Tl||r===hd||r===ud)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===Tl)return c===ut?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===hd)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===ud)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===Wg||r===dd||r===fd||r===pd)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(r===Tl)return o.COMPRESSED_RED_RGTC1_EXT;if(r===dd)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===fd)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===pd)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===hs?n?i.UNSIGNED_INT_24_8:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}class _S extends Cn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ia extends $t{constructor(){super(),this.isGroup=!0,this.type="Group"}}const yS={type:"move"};class $l{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ia,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ia,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new k,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new k),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ia,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new k,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new k),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let s=null,r=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(l&&e.hand){a=!0;for(const _ of e.hand.values()){const p=t.getJointPose(_,n),d=this._getHandJoint(l,_);p!==null&&(d.matrix.fromArray(p.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.matrixWorldNeedsUpdate=!0,d.jointRadius=p.radius),d.visible=p!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],f=h.position.distanceTo(u.position),m=.02,g=.005;l.inputState.pinching&&f>m+g?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&f<=m-g&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(s=t.getPose(e.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(yS)))}return o!==null&&(o.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Ia;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const vS=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,xS=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class SS{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const s=new Gt,r=e.properties.get(s);r.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=s}}render(e,t){if(this.texture!==null){if(this.mesh===null){const n=t.cameras[0].viewport,s=new rn({extensions:{fragDepth:!0},vertexShader:vS,fragmentShader:xS,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new un(new el(20,20),s)}e.render(this.mesh,t)}}reset(){this.texture=null,this.mesh=null}}class bS extends xs{constructor(e,t){super();const n=this;let s=null,r=1,a=null,o="local-floor",c=1,l=null,h=null,u=null,f=null,m=null,g=null;const _=new SS,p=t.getContextAttributes();let d=null,x=null;const y=[],S=[],b=new Me;let w=null;const M=new Cn;M.layers.enable(1),M.viewport=new Mt;const C=new Cn;C.layers.enable(2),C.viewport=new Mt;const O=[M,C],v=new _S;v.layers.enable(1),v.layers.enable(2);let E=null,L=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(K){let J=y[K];return J===void 0&&(J=new $l,y[K]=J),J.getTargetRaySpace()},this.getControllerGrip=function(K){let J=y[K];return J===void 0&&(J=new $l,y[K]=J),J.getGripSpace()},this.getHand=function(K){let J=y[K];return J===void 0&&(J=new $l,y[K]=J),J.getHandSpace()};function V(K){const J=S.indexOf(K.inputSource);if(J===-1)return;const he=y[J];he!==void 0&&(he.update(K.inputSource,K.frame,l||a),he.dispatchEvent({type:K.type,data:K.inputSource}))}function D(){s.removeEventListener("select",V),s.removeEventListener("selectstart",V),s.removeEventListener("selectend",V),s.removeEventListener("squeeze",V),s.removeEventListener("squeezestart",V),s.removeEventListener("squeezeend",V),s.removeEventListener("end",D),s.removeEventListener("inputsourceschange",G);for(let K=0;K<y.length;K++){const J=S[K];J!==null&&(S[K]=null,y[K].disconnect(J))}E=null,L=null,_.reset(),e.setRenderTarget(d),m=null,f=null,u=null,s=null,x=null,Ce.stop(),n.isPresenting=!1,e.setPixelRatio(w),e.setSize(b.width,b.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(K){r=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(K){o=K,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(K){l=K},this.getBaseLayer=function(){return f!==null?f:m},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(K){if(s=K,s!==null){if(d=e.getRenderTarget(),s.addEventListener("select",V),s.addEventListener("selectstart",V),s.addEventListener("selectend",V),s.addEventListener("squeeze",V),s.addEventListener("squeezestart",V),s.addEventListener("squeezeend",V),s.addEventListener("end",D),s.addEventListener("inputsourceschange",G),p.xrCompatible!==!0&&await t.makeXRCompatible(),w=e.getPixelRatio(),e.getSize(b),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const J={antialias:s.renderState.layers===void 0?p.antialias:!0,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};m=new XRWebGLLayer(s,t,J),s.updateRenderState({baseLayer:m}),e.setPixelRatio(1),e.setSize(m.framebufferWidth,m.framebufferHeight,!1),x=new pi(m.framebufferWidth,m.framebufferHeight,{format:$n,type:ls,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil})}else{let J=null,he=null,Se=null;p.depth&&(Se=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,J=p.stencil?Us:ks,he=p.stencil?hs:ss);const ne={colorFormat:t.RGBA8,depthFormat:Se,scaleFactor:r};u=new XRWebGLBinding(s,t),f=u.createProjectionLayer(ne),s.updateRenderState({layers:[f]}),e.setPixelRatio(1),e.setSize(f.textureWidth,f.textureHeight,!1),x=new pi(f.textureWidth,f.textureHeight,{format:$n,type:ls,depthTexture:new qh(f.textureWidth,f.textureHeight,he,void 0,void 0,void 0,void 0,void 0,void 0,J),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0});const me=e.properties.get(x);me.__ignoreDepthValues=f.ignoreDepthValues}x.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await s.requestReferenceSpace(o),Ce.setContext(s),Ce.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode};function G(K){for(let J=0;J<K.removed.length;J++){const he=K.removed[J],Se=S.indexOf(he);Se>=0&&(S[Se]=null,y[Se].disconnect(he))}for(let J=0;J<K.added.length;J++){const he=K.added[J];let Se=S.indexOf(he);if(Se===-1){for(let me=0;me<y.length;me++)if(me>=S.length){S.push(he),Se=me;break}else if(S[me]===null){S[me]=he,Se=me;break}if(Se===-1)break}const ne=y[Se];ne&&ne.connect(he)}}const U=new k,W=new k;function H(K,J,he){U.setFromMatrixPosition(J.matrixWorld),W.setFromMatrixPosition(he.matrixWorld);const Se=U.distanceTo(W),ne=J.projectionMatrix.elements,me=he.projectionMatrix.elements,Ve=ne[14]/(ne[10]-1),Le=ne[14]/(ne[10]+1),z=(ne[9]+1)/ne[5],pt=(ne[9]-1)/ne[5],Pe=(ne[8]-1)/ne[0],se=(me[8]+1)/me[0],oe=Ve*Pe,De=Ve*se,be=Se/(-Pe+se),ye=be*-Pe;J.matrixWorld.decompose(K.position,K.quaternion,K.scale),K.translateX(ye),K.translateZ(be),K.matrixWorld.compose(K.position,K.quaternion,K.scale),K.matrixWorldInverse.copy(K.matrixWorld).invert();const Be=Ve+be,I=Le+be,T=oe-ye,Z=De+(Se-ye),te=z*Le/I*Be,le=pt*Le/I*Be;K.projectionMatrix.makePerspective(T,Z,te,le,Be,I),K.projectionMatrixInverse.copy(K.projectionMatrix).invert()}function B(K,J){J===null?K.matrixWorld.copy(K.matrix):K.matrixWorld.multiplyMatrices(J.matrixWorld,K.matrix),K.matrixWorldInverse.copy(K.matrixWorld).invert()}this.updateCamera=function(K){if(s===null)return;_.texture!==null&&(K.near=_.depthNear,K.far=_.depthFar),v.near=C.near=M.near=K.near,v.far=C.far=M.far=K.far,(E!==v.near||L!==v.far)&&(s.updateRenderState({depthNear:v.near,depthFar:v.far}),E=v.near,L=v.far,M.near=E,M.far=L,C.near=E,C.far=L,M.updateProjectionMatrix(),C.updateProjectionMatrix(),K.updateProjectionMatrix());const J=K.parent,he=v.cameras;B(v,J);for(let Se=0;Se<he.length;Se++)B(he[Se],J);he.length===2?H(v,M,C):v.projectionMatrix.copy(M.projectionMatrix),j(K,v,J)};function j(K,J,he){he===null?K.matrix.copy(J.matrixWorld):(K.matrix.copy(he.matrixWorld),K.matrix.invert(),K.matrix.multiply(J.matrixWorld)),K.matrix.decompose(K.position,K.quaternion,K.scale),K.updateMatrixWorld(!0),K.projectionMatrix.copy(J.projectionMatrix),K.projectionMatrixInverse.copy(J.projectionMatrixInverse),K.isPerspectiveCamera&&(K.fov=ko*2*Math.atan(1/K.projectionMatrix.elements[5]),K.zoom=1)}this.getCamera=function(){return v},this.getFoveation=function(){if(!(f===null&&m===null))return c},this.setFoveation=function(K){c=K,f!==null&&(f.fixedFoveation=K),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=K)},this.hasDepthSensing=function(){return _.texture!==null};let ee=null;function ce(K,J){if(h=J.getViewerPose(l||a),g=J,h!==null){const he=h.views;m!==null&&(e.setRenderTargetFramebuffer(x,m.framebuffer),e.setRenderTarget(x));let Se=!1;he.length!==v.cameras.length&&(v.cameras.length=0,Se=!0);for(let me=0;me<he.length;me++){const Ve=he[me];let Le=null;if(m!==null)Le=m.getViewport(Ve);else{const pt=u.getViewSubImage(f,Ve);Le=pt.viewport,me===0&&(e.setRenderTargetTextures(x,pt.colorTexture,f.ignoreDepthValues?void 0:pt.depthStencilTexture),e.setRenderTarget(x))}let z=O[me];z===void 0&&(z=new Cn,z.layers.enable(me),z.viewport=new Mt,O[me]=z),z.matrix.fromArray(Ve.transform.matrix),z.matrix.decompose(z.position,z.quaternion,z.scale),z.projectionMatrix.fromArray(Ve.projectionMatrix),z.projectionMatrixInverse.copy(z.projectionMatrix).invert(),z.viewport.set(Le.x,Le.y,Le.width,Le.height),me===0&&(v.matrix.copy(z.matrix),v.matrix.decompose(v.position,v.quaternion,v.scale)),Se===!0&&v.cameras.push(z)}const ne=s.enabledFeatures;if(ne&&ne.includes("depth-sensing")){const me=u.getDepthInformation(he[0]);me&&me.isValid&&me.texture&&_.init(e,me,s.renderState)}}for(let he=0;he<y.length;he++){const Se=S[he],ne=y[he];Se!==null&&ne!==void 0&&ne.update(Se,J,l||a)}_.render(e,v),ee&&ee(K,J),J.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:J}),g=null}const Ce=new Op;Ce.setAnimationLoop(ce),this.setAnimationLoop=function(K){ee=K},this.dispose=function(){}}}const Ds=new Vn,MS=new dt;function wS(i,e){function t(p,d){p.matrixAutoUpdate===!0&&p.updateMatrix(),d.value.copy(p.matrix)}function n(p,d){d.color.getRGB(p.fogColor.value,Pp(i)),d.isFog?(p.fogNear.value=d.near,p.fogFar.value=d.far):d.isFogExp2&&(p.fogDensity.value=d.density)}function s(p,d,x,y,S){d.isMeshBasicMaterial||d.isMeshLambertMaterial?r(p,d):d.isMeshToonMaterial?(r(p,d),u(p,d)):d.isMeshPhongMaterial?(r(p,d),h(p,d)):d.isMeshStandardMaterial?(r(p,d),f(p,d),d.isMeshPhysicalMaterial&&m(p,d,S)):d.isMeshMatcapMaterial?(r(p,d),g(p,d)):d.isMeshDepthMaterial?r(p,d):d.isMeshDistanceMaterial?(r(p,d),_(p,d)):d.isMeshNormalMaterial?r(p,d):d.isLineBasicMaterial?(a(p,d),d.isLineDashedMaterial&&o(p,d)):d.isPointsMaterial?c(p,d,x,y):d.isSpriteMaterial?l(p,d):d.isShadowMaterial?(p.color.value.copy(d.color),p.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function r(p,d){p.opacity.value=d.opacity,d.color&&p.diffuse.value.copy(d.color),d.emissive&&p.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(p.map.value=d.map,t(d.map,p.mapTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,t(d.alphaMap,p.alphaMapTransform)),d.bumpMap&&(p.bumpMap.value=d.bumpMap,t(d.bumpMap,p.bumpMapTransform),p.bumpScale.value=d.bumpScale,d.side===mn&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,t(d.normalMap,p.normalMapTransform),p.normalScale.value.copy(d.normalScale),d.side===mn&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,t(d.displacementMap,p.displacementMapTransform),p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap,t(d.emissiveMap,p.emissiveMapTransform)),d.specularMap&&(p.specularMap.value=d.specularMap,t(d.specularMap,p.specularMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);const x=e.get(d),y=x.envMap,S=x.envMapRotation;if(y&&(p.envMap.value=y,Ds.copy(S),Ds.x*=-1,Ds.y*=-1,Ds.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Ds.y*=-1,Ds.z*=-1),p.envMapRotation.value.setFromMatrix4(MS.makeRotationFromEuler(Ds)),p.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=d.reflectivity,p.ior.value=d.ior,p.refractionRatio.value=d.refractionRatio),d.lightMap){p.lightMap.value=d.lightMap;const b=i._useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=d.lightMapIntensity*b,t(d.lightMap,p.lightMapTransform)}d.aoMap&&(p.aoMap.value=d.aoMap,p.aoMapIntensity.value=d.aoMapIntensity,t(d.aoMap,p.aoMapTransform))}function a(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,d.map&&(p.map.value=d.map,t(d.map,p.mapTransform))}function o(p,d){p.dashSize.value=d.dashSize,p.totalSize.value=d.dashSize+d.gapSize,p.scale.value=d.scale}function c(p,d,x,y){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.size.value=d.size*x,p.scale.value=y*.5,d.map&&(p.map.value=d.map,t(d.map,p.uvTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,t(d.alphaMap,p.alphaMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest)}function l(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.rotation.value=d.rotation,d.map&&(p.map.value=d.map,t(d.map,p.mapTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,t(d.alphaMap,p.alphaMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest)}function h(p,d){p.specular.value.copy(d.specular),p.shininess.value=Math.max(d.shininess,1e-4)}function u(p,d){d.gradientMap&&(p.gradientMap.value=d.gradientMap)}function f(p,d){p.metalness.value=d.metalness,d.metalnessMap&&(p.metalnessMap.value=d.metalnessMap,t(d.metalnessMap,p.metalnessMapTransform)),p.roughness.value=d.roughness,d.roughnessMap&&(p.roughnessMap.value=d.roughnessMap,t(d.roughnessMap,p.roughnessMapTransform)),e.get(d).envMap&&(p.envMapIntensity.value=d.envMapIntensity)}function m(p,d,x){p.ior.value=d.ior,d.sheen>0&&(p.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),p.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(p.sheenColorMap.value=d.sheenColorMap,t(d.sheenColorMap,p.sheenColorMapTransform)),d.sheenRoughnessMap&&(p.sheenRoughnessMap.value=d.sheenRoughnessMap,t(d.sheenRoughnessMap,p.sheenRoughnessMapTransform))),d.clearcoat>0&&(p.clearcoat.value=d.clearcoat,p.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(p.clearcoatMap.value=d.clearcoatMap,t(d.clearcoatMap,p.clearcoatMapTransform)),d.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap,t(d.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),d.clearcoatNormalMap&&(p.clearcoatNormalMap.value=d.clearcoatNormalMap,t(d.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),d.side===mn&&p.clearcoatNormalScale.value.negate())),d.iridescence>0&&(p.iridescence.value=d.iridescence,p.iridescenceIOR.value=d.iridescenceIOR,p.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(p.iridescenceMap.value=d.iridescenceMap,t(d.iridescenceMap,p.iridescenceMapTransform)),d.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=d.iridescenceThicknessMap,t(d.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),d.transmission>0&&(p.transmission.value=d.transmission,p.transmissionSamplerMap.value=x.texture,p.transmissionSamplerSize.value.set(x.width,x.height),d.transmissionMap&&(p.transmissionMap.value=d.transmissionMap,t(d.transmissionMap,p.transmissionMapTransform)),p.thickness.value=d.thickness,d.thicknessMap&&(p.thicknessMap.value=d.thicknessMap,t(d.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=d.attenuationDistance,p.attenuationColor.value.copy(d.attenuationColor)),d.anisotropy>0&&(p.anisotropyVector.value.set(d.anisotropy*Math.cos(d.anisotropyRotation),d.anisotropy*Math.sin(d.anisotropyRotation)),d.anisotropyMap&&(p.anisotropyMap.value=d.anisotropyMap,t(d.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=d.specularIntensity,p.specularColor.value.copy(d.specularColor),d.specularColorMap&&(p.specularColorMap.value=d.specularColorMap,t(d.specularColorMap,p.specularColorMapTransform)),d.specularIntensityMap&&(p.specularIntensityMap.value=d.specularIntensityMap,t(d.specularIntensityMap,p.specularIntensityMapTransform))}function g(p,d){d.matcap&&(p.matcap.value=d.matcap)}function _(p,d){const x=e.get(d).light;p.referencePosition.value.setFromMatrixPosition(x.matrixWorld),p.nearDistance.value=x.shadow.camera.near,p.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function TS(i,e,t,n){let s={},r={},a=[];const o=t.isWebGL2?i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS):0;function c(x,y){const S=y.program;n.uniformBlockBinding(x,S)}function l(x,y){let S=s[x.id];S===void 0&&(g(x),S=h(x),s[x.id]=S,x.addEventListener("dispose",p));const b=y.program;n.updateUBOMapping(x,b);const w=e.render.frame;r[x.id]!==w&&(f(x),r[x.id]=w)}function h(x){const y=u();x.__bindingPointIndex=y;const S=i.createBuffer(),b=x.__size,w=x.usage;return i.bindBuffer(i.UNIFORM_BUFFER,S),i.bufferData(i.UNIFORM_BUFFER,b,w),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,y,S),S}function u(){for(let x=0;x<o;x++)if(a.indexOf(x)===-1)return a.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(x){const y=s[x.id],S=x.uniforms,b=x.__cache;i.bindBuffer(i.UNIFORM_BUFFER,y);for(let w=0,M=S.length;w<M;w++){const C=Array.isArray(S[w])?S[w]:[S[w]];for(let O=0,v=C.length;O<v;O++){const E=C[O];if(m(E,w,O,b)===!0){const L=E.__offset,V=Array.isArray(E.value)?E.value:[E.value];let D=0;for(let G=0;G<V.length;G++){const U=V[G],W=_(U);typeof U=="number"||typeof U=="boolean"?(E.__data[0]=U,i.bufferSubData(i.UNIFORM_BUFFER,L+D,E.__data)):U.isMatrix3?(E.__data[0]=U.elements[0],E.__data[1]=U.elements[1],E.__data[2]=U.elements[2],E.__data[3]=0,E.__data[4]=U.elements[3],E.__data[5]=U.elements[4],E.__data[6]=U.elements[5],E.__data[7]=0,E.__data[8]=U.elements[6],E.__data[9]=U.elements[7],E.__data[10]=U.elements[8],E.__data[11]=0):(U.toArray(E.__data,D),D+=W.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,L,E.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function m(x,y,S,b){const w=x.value,M=y+"_"+S;if(b[M]===void 0)return typeof w=="number"||typeof w=="boolean"?b[M]=w:b[M]=w.clone(),!0;{const C=b[M];if(typeof w=="number"||typeof w=="boolean"){if(C!==w)return b[M]=w,!0}else if(C.equals(w)===!1)return C.copy(w),!0}return!1}function g(x){const y=x.uniforms;let S=0;const b=16;for(let M=0,C=y.length;M<C;M++){const O=Array.isArray(y[M])?y[M]:[y[M]];for(let v=0,E=O.length;v<E;v++){const L=O[v],V=Array.isArray(L.value)?L.value:[L.value];for(let D=0,G=V.length;D<G;D++){const U=V[D],W=_(U),H=S%b;H!==0&&b-H<W.boundary&&(S+=b-H),L.__data=new Float32Array(W.storage/Float32Array.BYTES_PER_ELEMENT),L.__offset=S,S+=W.storage}}}const w=S%b;return w>0&&(S+=b-w),x.__size=S,x.__cache={},this}function _(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function p(x){const y=x.target;y.removeEventListener("dispose",p);const S=a.indexOf(y.__bindingPointIndex);a.splice(S,1),i.deleteBuffer(s[y.id]),delete s[y.id],delete r[y.id]}function d(){for(const x in s)i.deleteBuffer(s[x]);a=[],s={},r={}}return{bind:c,update:l,dispose:d}}class zp{constructor(e={}){const{canvas:t=m_(),context:n=null,depth:s=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=e;this.isWebGLRenderer=!0;let f;n!==null?f=n.getContextAttributes().alpha:f=a;const m=new Uint32Array(4),g=new Int32Array(4);let _=null,p=null;const d=[],x=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=oi,this._useLegacyLights=!1,this.toneMapping=cs,this.toneMappingExposure=1;const y=this;let S=!1,b=0,w=0,M=null,C=-1,O=null;const v=new Mt,E=new Mt;let L=null;const V=new xe(0);let D=0,G=t.width,U=t.height,W=1,H=null,B=null;const j=new Mt(0,0,G,U),ee=new Mt(0,0,G,U);let ce=!1;const Ce=new Gh;let K=!1,J=!1,he=null;const Se=new dt,ne=new Me,me=new k,Ve={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Le(){return M===null?W:1}let z=n;function pt(R,q){for(let $=0;$<R.length;$++){const Q=R[$],Y=t.getContext(Q,q);if(Y!==null)return Y}return null}try{const R={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Oh}`),t.addEventListener("webglcontextlost",we,!1),t.addEventListener("webglcontextrestored",F,!1),t.addEventListener("webglcontextcreationerror",de,!1),z===null){const q=["webgl2","webgl","experimental-webgl"];if(y.isWebGL1Renderer===!0&&q.shift(),z=pt(q,R),z===null)throw pt(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&z instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),z.getShaderPrecisionFormat===void 0&&(z.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(R){throw console.error("THREE.WebGLRenderer: "+R.message),R}let Pe,se,oe,De,be,ye,Be,I,T,Z,te,le,re,We,Ne,fe,ge,ze,pe,xt,Xe,Oe,Ee,Re;function P(){Pe=new D0(z),se=new T0(z,Pe,e),Pe.init(se),Oe=new gS(z,Pe,se),oe=new pS(z,Pe,se),De=new N0(z),be=new eS,ye=new mS(z,Pe,oe,be,se,Oe,De),Be=new A0(y),I=new I0(y),T=new V_(z,se),Ee=new M0(z,Pe,T,se),Z=new P0(z,T,De,Ee),te=new U0(z,Z,T,De),pe=new k0(z,se,ye),fe=new E0(be),le=new Jx(y,Be,I,Pe,se,Ee,fe),re=new wS(y,be),We=new nS,Ne=new cS(Pe,se),ze=new b0(y,Be,I,oe,te,f,c),ge=new fS(y,te,se),Re=new TS(z,De,se,oe),xt=new w0(z,Pe,De,se),Xe=new L0(z,Pe,De,se),De.programs=le.programs,y.capabilities=se,y.extensions=Pe,y.properties=be,y.renderLists=We,y.shadowMap=ge,y.state=oe,y.info=De}P();const ie=new bS(y,z);this.xr=ie,this.getContext=function(){return z},this.getContextAttributes=function(){return z.getContextAttributes()},this.forceContextLoss=function(){const R=Pe.get("WEBGL_lose_context");R&&R.loseContext()},this.forceContextRestore=function(){const R=Pe.get("WEBGL_lose_context");R&&R.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(R){R!==void 0&&(W=R,this.setSize(G,U,!1))},this.getSize=function(R){return R.set(G,U)},this.setSize=function(R,q,$=!0){if(ie.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}G=R,U=q,t.width=Math.floor(R*W),t.height=Math.floor(q*W),$===!0&&(t.style.width=R+"px",t.style.height=q+"px"),this.setViewport(0,0,R,q)},this.getDrawingBufferSize=function(R){return R.set(G*W,U*W).floor()},this.setDrawingBufferSize=function(R,q,$){G=R,U=q,W=$,t.width=Math.floor(R*$),t.height=Math.floor(q*$),this.setViewport(0,0,R,q)},this.getCurrentViewport=function(R){return R.copy(v)},this.getViewport=function(R){return R.copy(j)},this.setViewport=function(R,q,$,Q){R.isVector4?j.set(R.x,R.y,R.z,R.w):j.set(R,q,$,Q),oe.viewport(v.copy(j).multiplyScalar(W).round())},this.getScissor=function(R){return R.copy(ee)},this.setScissor=function(R,q,$,Q){R.isVector4?ee.set(R.x,R.y,R.z,R.w):ee.set(R,q,$,Q),oe.scissor(E.copy(ee).multiplyScalar(W).round())},this.getScissorTest=function(){return ce},this.setScissorTest=function(R){oe.setScissorTest(ce=R)},this.setOpaqueSort=function(R){H=R},this.setTransparentSort=function(R){B=R},this.getClearColor=function(R){return R.copy(ze.getClearColor())},this.setClearColor=function(){ze.setClearColor.apply(ze,arguments)},this.getClearAlpha=function(){return ze.getClearAlpha()},this.setClearAlpha=function(){ze.setClearAlpha.apply(ze,arguments)},this.clear=function(R=!0,q=!0,$=!0){let Q=0;if(R){let Y=!1;if(M!==null){const Te=M.texture.format;Y=Te===xp||Te===vp||Te===yp}if(Y){const Te=M.texture.type,ke=Te===ls||Te===ss||Te===Fh||Te===hs||Te===pp||Te===mp,He=ze.getClearColor(),qe=ze.getClearAlpha(),Je=He.r,Ke=He.g,Ye=He.b;ke?(m[0]=Je,m[1]=Ke,m[2]=Ye,m[3]=qe,z.clearBufferuiv(z.COLOR,0,m)):(g[0]=Je,g[1]=Ke,g[2]=Ye,g[3]=qe,z.clearBufferiv(z.COLOR,0,g))}else Q|=z.COLOR_BUFFER_BIT}q&&(Q|=z.DEPTH_BUFFER_BIT),$&&(Q|=z.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),z.clear(Q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",we,!1),t.removeEventListener("webglcontextrestored",F,!1),t.removeEventListener("webglcontextcreationerror",de,!1),We.dispose(),Ne.dispose(),be.dispose(),Be.dispose(),I.dispose(),te.dispose(),Ee.dispose(),Re.dispose(),le.dispose(),ie.dispose(),ie.removeEventListener("sessionstart",Tt),ie.removeEventListener("sessionend",it),he&&(he.dispose(),he=null),mt.stop()};function we(R){R.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function F(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const R=De.autoReset,q=ge.enabled,$=ge.autoUpdate,Q=ge.needsUpdate,Y=ge.type;P(),De.autoReset=R,ge.enabled=q,ge.autoUpdate=$,ge.needsUpdate=Q,ge.type=Y}function de(R){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",R.statusMessage)}function X(R){const q=R.target;q.removeEventListener("dispose",X),ue(q)}function ue(R){ve(R),be.remove(R)}function ve(R){const q=be.get(R).programs;q!==void 0&&(q.forEach(function($){le.releaseProgram($)}),R.isShaderMaterial&&le.releaseShaderCache(R))}this.renderBufferDirect=function(R,q,$,Q,Y,Te){q===null&&(q=Ve);const ke=Y.isMesh&&Y.matrixWorld.determinant()<0,He=lg(R,q,$,Q,Y);oe.setMaterial(Q,ke);let qe=$.index,Je=1;if(Q.wireframe===!0){if(qe=Z.getWireframeAttribute($),qe===void 0)return;Je=2}const Ke=$.drawRange,Ye=$.attributes.position;let It=Ke.start*Je,Tn=(Ke.start+Ke.count)*Je;Te!==null&&(It=Math.max(It,Te.start*Je),Tn=Math.min(Tn,(Te.start+Te.count)*Je)),qe!==null?(It=Math.max(It,0),Tn=Math.min(Tn,qe.count)):Ye!=null&&(It=Math.max(It,0),Tn=Math.min(Tn,Ye.count));const Bt=Tn-It;if(Bt<0||Bt===1/0)return;Ee.setup(Y,Q,He,$,qe);let Mi,wt=xt;if(qe!==null&&(Mi=T.get(qe),wt=Xe,wt.setIndex(Mi)),Y.isMesh)Q.wireframe===!0?(oe.setLineWidth(Q.wireframeLinewidth*Le()),wt.setMode(z.LINES)):wt.setMode(z.TRIANGLES);else if(Y.isLine){let $e=Q.linewidth;$e===void 0&&($e=1),oe.setLineWidth($e*Le()),Y.isLineSegments?wt.setMode(z.LINES):Y.isLineLoop?wt.setMode(z.LINE_LOOP):wt.setMode(z.LINE_STRIP)}else Y.isPoints?wt.setMode(z.POINTS):Y.isSprite&&wt.setMode(z.TRIANGLES);if(Y.isBatchedMesh)wt.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else if(Y.isInstancedMesh)wt.renderInstances(It,Bt,Y.count);else if($.isInstancedBufferGeometry){const $e=$._maxInstanceCount!==void 0?$._maxInstanceCount:1/0,gl=Math.min($.instanceCount,$e);wt.renderInstances(It,Bt,gl)}else wt.render(It,Bt)};function et(R,q,$){R.transparent===!0&&R.side===ci&&R.forceSinglePass===!1?(R.side=mn,R.needsUpdate=!0,ca(R,q,$),R.side=fs,R.needsUpdate=!0,ca(R,q,$),R.side=ci):ca(R,q,$)}this.compile=function(R,q,$=null){$===null&&($=R),p=Ne.get($),p.init(),x.push(p),$.traverseVisible(function(Y){Y.isLight&&Y.layers.test(q.layers)&&(p.pushLight(Y),Y.castShadow&&p.pushShadow(Y))}),R!==$&&R.traverseVisible(function(Y){Y.isLight&&Y.layers.test(q.layers)&&(p.pushLight(Y),Y.castShadow&&p.pushShadow(Y))}),p.setupLights(y._useLegacyLights);const Q=new Set;return R.traverse(function(Y){const Te=Y.material;if(Te)if(Array.isArray(Te))for(let ke=0;ke<Te.length;ke++){const He=Te[ke];et(He,$,Y),Q.add(He)}else et(Te,$,Y),Q.add(Te)}),x.pop(),p=null,Q},this.compileAsync=function(R,q,$=null){const Q=this.compile(R,q,$);return new Promise(Y=>{function Te(){if(Q.forEach(function(ke){be.get(ke).currentProgram.isReady()&&Q.delete(ke)}),Q.size===0){Y(R);return}setTimeout(Te,10)}Pe.get("KHR_parallel_shader_compile")!==null?Te():setTimeout(Te,10)})};let st=null;function ct(R){st&&st(R)}function Tt(){mt.stop()}function it(){mt.start()}const mt=new Op;mt.setAnimationLoop(ct),typeof self<"u"&&mt.setContext(self),this.setAnimationLoop=function(R){st=R,ie.setAnimationLoop(R),R===null?mt.stop():mt.start()},ie.addEventListener("sessionstart",Tt),ie.addEventListener("sessionend",it),this.render=function(R,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;R.matrixWorldAutoUpdate===!0&&R.updateMatrixWorld(),q.parent===null&&q.matrixWorldAutoUpdate===!0&&q.updateMatrixWorld(),ie.enabled===!0&&ie.isPresenting===!0&&(ie.cameraAutoUpdate===!0&&ie.updateCamera(q),q=ie.getCamera()),R.isScene===!0&&R.onBeforeRender(y,R,q,M),p=Ne.get(R,x.length),p.init(),x.push(p),Se.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),Ce.setFromProjectionMatrix(Se),J=this.localClippingEnabled,K=fe.init(this.clippingPlanes,J),_=We.get(R,d.length),_.init(),d.push(_),Jt(R,q,0,y.sortObjects),_.finish(),y.sortObjects===!0&&_.sort(H,B),this.info.render.frame++,K===!0&&fe.beginShadows();const $=p.state.shadowsArray;if(ge.render($,R,q),K===!0&&fe.endShadows(),this.info.autoReset===!0&&this.info.reset(),(ie.enabled===!1||ie.isPresenting===!1||ie.hasDepthSensing()===!1)&&ze.render(_,R),p.setupLights(y._useLegacyLights),q.isArrayCamera){const Q=q.cameras;for(let Y=0,Te=Q.length;Y<Te;Y++){const ke=Q[Y];Ms(_,R,ke,ke.viewport)}}else Ms(_,R,q);M!==null&&(ye.updateMultisampleRenderTarget(M),ye.updateRenderTargetMipmap(M)),R.isScene===!0&&R.onAfterRender(y,R,q),Ee.resetDefaultState(),C=-1,O=null,x.pop(),x.length>0?p=x[x.length-1]:p=null,d.pop(),d.length>0?_=d[d.length-1]:_=null};function Jt(R,q,$,Q){if(R.visible===!1)return;if(R.layers.test(q.layers)){if(R.isGroup)$=R.renderOrder;else if(R.isLOD)R.autoUpdate===!0&&R.update(q);else if(R.isLight)p.pushLight(R),R.castShadow&&p.pushShadow(R);else if(R.isSprite){if(!R.frustumCulled||Ce.intersectsSprite(R)){Q&&me.setFromMatrixPosition(R.matrixWorld).applyMatrix4(Se);const ke=te.update(R),He=R.material;He.visible&&_.push(R,ke,He,$,me.z,null)}}else if((R.isMesh||R.isLine||R.isPoints)&&(!R.frustumCulled||Ce.intersectsObject(R))){const ke=te.update(R),He=R.material;if(Q&&(R.boundingSphere!==void 0?(R.boundingSphere===null&&R.computeBoundingSphere(),me.copy(R.boundingSphere.center)):(ke.boundingSphere===null&&ke.computeBoundingSphere(),me.copy(ke.boundingSphere.center)),me.applyMatrix4(R.matrixWorld).applyMatrix4(Se)),Array.isArray(He)){const qe=ke.groups;for(let Je=0,Ke=qe.length;Je<Ke;Je++){const Ye=qe[Je],It=He[Ye.materialIndex];It&&It.visible&&_.push(R,ke,It,$,me.z,Ye)}}else He.visible&&_.push(R,ke,He,$,me.z,null)}}const Te=R.children;for(let ke=0,He=Te.length;ke<He;ke++)Jt(Te[ke],q,$,Q)}function Ms(R,q,$,Q){const Y=R.opaque,Te=R.transmissive,ke=R.transparent;p.setupLightsView($),K===!0&&fe.setGlobalState(y.clippingPlanes,$),Te.length>0&&oa(Y,Te,q,$),Q&&oe.viewport(v.copy(Q)),Y.length>0&&aa(Y,q,$),Te.length>0&&aa(Te,q,$),ke.length>0&&aa(ke,q,$),oe.buffers.depth.setTest(!0),oe.buffers.depth.setMask(!0),oe.buffers.color.setMask(!0),oe.setPolygonOffset(!1)}function oa(R,q,$,Q){if(($.isScene===!0?$.overrideMaterial:null)!==null)return;const Te=se.isWebGL2;he===null&&(he=new pi(1,1,{generateMipmaps:!0,type:Pe.has("EXT_color_buffer_half_float")?ps:ls,minFilter:Os,samples:Te?4:0})),y.getDrawingBufferSize(ne),Te?he.setSize(ne.x,ne.y):he.setSize($a(ne.x),$a(ne.y));const ke=y.getRenderTarget();y.setRenderTarget(he),y.getClearColor(V),D=y.getClearAlpha(),D<1&&y.setClearColor(16777215,.5),y.clear();const He=y.toneMapping;y.toneMapping=cs,aa(R,$,Q),ye.updateMultisampleRenderTarget(he),ye.updateRenderTargetMipmap(he);let qe=!1;for(let Je=0,Ke=q.length;Je<Ke;Je++){const Ye=q[Je],It=Ye.object,Tn=Ye.geometry,Bt=Ye.material,Mi=Ye.group;if(Bt.side===ci&&It.layers.test(Q.layers)){const wt=Bt.side;Bt.side=mn,Bt.needsUpdate=!0,Lu(It,$,Q,Tn,Bt,Mi),Bt.side=wt,Bt.needsUpdate=!0,qe=!0}}qe===!0&&(ye.updateMultisampleRenderTarget(he),ye.updateRenderTargetMipmap(he)),y.setRenderTarget(ke),y.setClearColor(V,D),y.toneMapping=He}function aa(R,q,$){const Q=q.isScene===!0?q.overrideMaterial:null;for(let Y=0,Te=R.length;Y<Te;Y++){const ke=R[Y],He=ke.object,qe=ke.geometry,Je=Q===null?ke.material:Q,Ke=ke.group;He.layers.test($.layers)&&Lu(He,q,$,qe,Je,Ke)}}function Lu(R,q,$,Q,Y,Te){R.onBeforeRender(y,q,$,Q,Y,Te),R.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,R.matrixWorld),R.normalMatrix.getNormalMatrix(R.modelViewMatrix),Y.onBeforeRender(y,q,$,Q,R,Te),Y.transparent===!0&&Y.side===ci&&Y.forceSinglePass===!1?(Y.side=mn,Y.needsUpdate=!0,y.renderBufferDirect($,q,Q,Y,R,Te),Y.side=fs,Y.needsUpdate=!0,y.renderBufferDirect($,q,Q,Y,R,Te),Y.side=ci):y.renderBufferDirect($,q,Q,Y,R,Te),R.onAfterRender(y,q,$,Q,Y,Te)}function ca(R,q,$){q.isScene!==!0&&(q=Ve);const Q=be.get(R),Y=p.state.lights,Te=p.state.shadowsArray,ke=Y.state.version,He=le.getParameters(R,Y.state,Te,q,$),qe=le.getProgramCacheKey(He);let Je=Q.programs;Q.environment=R.isMeshStandardMaterial?q.environment:null,Q.fog=q.fog,Q.envMap=(R.isMeshStandardMaterial?I:Be).get(R.envMap||Q.environment),Q.envMapRotation=Q.environment!==null&&R.envMap===null?q.environmentRotation:R.envMapRotation,Je===void 0&&(R.addEventListener("dispose",X),Je=new Map,Q.programs=Je);let Ke=Je.get(qe);if(Ke!==void 0){if(Q.currentProgram===Ke&&Q.lightsStateVersion===ke)return Ou(R,He),Ke}else He.uniforms=le.getUniforms(R),R.onBuild($,He,y),R.onBeforeCompile(He,y),Ke=le.acquireProgram(He,qe),Je.set(qe,Ke),Q.uniforms=He.uniforms;const Ye=Q.uniforms;return(!R.isShaderMaterial&&!R.isRawShaderMaterial||R.clipping===!0)&&(Ye.clippingPlanes=fe.uniform),Ou(R,He),Q.needsLights=ug(R),Q.lightsStateVersion=ke,Q.needsLights&&(Ye.ambientLightColor.value=Y.state.ambient,Ye.lightProbe.value=Y.state.probe,Ye.directionalLights.value=Y.state.directional,Ye.directionalLightShadows.value=Y.state.directionalShadow,Ye.spotLights.value=Y.state.spot,Ye.spotLightShadows.value=Y.state.spotShadow,Ye.rectAreaLights.value=Y.state.rectArea,Ye.ltc_1.value=Y.state.rectAreaLTC1,Ye.ltc_2.value=Y.state.rectAreaLTC2,Ye.pointLights.value=Y.state.point,Ye.pointLightShadows.value=Y.state.pointShadow,Ye.hemisphereLights.value=Y.state.hemi,Ye.directionalShadowMap.value=Y.state.directionalShadowMap,Ye.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,Ye.spotShadowMap.value=Y.state.spotShadowMap,Ye.spotLightMatrix.value=Y.state.spotLightMatrix,Ye.spotLightMap.value=Y.state.spotLightMap,Ye.pointShadowMap.value=Y.state.pointShadowMap,Ye.pointShadowMatrix.value=Y.state.pointShadowMatrix),Q.currentProgram=Ke,Q.uniformsList=null,Ke}function Nu(R){if(R.uniformsList===null){const q=R.currentProgram.getUniforms();R.uniformsList=Va.seqWithValue(q.seq,R.uniforms)}return R.uniformsList}function Ou(R,q){const $=be.get(R);$.outputColorSpace=q.outputColorSpace,$.batching=q.batching,$.instancing=q.instancing,$.instancingColor=q.instancingColor,$.instancingMorph=q.instancingMorph,$.skinning=q.skinning,$.morphTargets=q.morphTargets,$.morphNormals=q.morphNormals,$.morphColors=q.morphColors,$.morphTargetsCount=q.morphTargetsCount,$.numClippingPlanes=q.numClippingPlanes,$.numIntersection=q.numClipIntersection,$.vertexAlphas=q.vertexAlphas,$.vertexTangents=q.vertexTangents,$.toneMapping=q.toneMapping}function lg(R,q,$,Q,Y){q.isScene!==!0&&(q=Ve),ye.resetTextureUnits();const Te=q.fog,ke=Q.isMeshStandardMaterial?q.environment:null,He=M===null?y.outputColorSpace:M.isXRRenderTarget===!0?M.texture.colorSpace:vs,qe=(Q.isMeshStandardMaterial?I:Be).get(Q.envMap||ke),Je=Q.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,Ke=!!$.attributes.tangent&&(!!Q.normalMap||Q.anisotropy>0),Ye=!!$.morphAttributes.position,It=!!$.morphAttributes.normal,Tn=!!$.morphAttributes.color;let Bt=cs;Q.toneMapped&&(M===null||M.isXRRenderTarget===!0)&&(Bt=y.toneMapping);const Mi=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,wt=Mi!==void 0?Mi.length:0,$e=be.get(Q),gl=p.state.lights;if(K===!0&&(J===!0||R!==O)){const On=R===O&&Q.id===C;fe.setState(Q,R,On)}let St=!1;Q.version===$e.__version?($e.needsLights&&$e.lightsStateVersion!==gl.state.version||$e.outputColorSpace!==He||Y.isBatchedMesh&&$e.batching===!1||!Y.isBatchedMesh&&$e.batching===!0||Y.isInstancedMesh&&$e.instancing===!1||!Y.isInstancedMesh&&$e.instancing===!0||Y.isSkinnedMesh&&$e.skinning===!1||!Y.isSkinnedMesh&&$e.skinning===!0||Y.isInstancedMesh&&$e.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&$e.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&$e.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&$e.instancingMorph===!1&&Y.morphTexture!==null||$e.envMap!==qe||Q.fog===!0&&$e.fog!==Te||$e.numClippingPlanes!==void 0&&($e.numClippingPlanes!==fe.numPlanes||$e.numIntersection!==fe.numIntersection)||$e.vertexAlphas!==Je||$e.vertexTangents!==Ke||$e.morphTargets!==Ye||$e.morphNormals!==It||$e.morphColors!==Tn||$e.toneMapping!==Bt||se.isWebGL2===!0&&$e.morphTargetsCount!==wt)&&(St=!0):(St=!0,$e.__version=Q.version);let ws=$e.currentProgram;St===!0&&(ws=ca(Q,q,Y));let Fu=!1,bo=!1,_l=!1;const en=ws.getUniforms(),Ts=$e.uniforms;if(oe.useProgram(ws.program)&&(Fu=!0,bo=!0,_l=!0),Q.id!==C&&(C=Q.id,bo=!0),Fu||O!==R){en.setValue(z,"projectionMatrix",R.projectionMatrix),en.setValue(z,"viewMatrix",R.matrixWorldInverse);const On=en.map.cameraPosition;On!==void 0&&On.setValue(z,me.setFromMatrixPosition(R.matrixWorld)),se.logarithmicDepthBuffer&&en.setValue(z,"logDepthBufFC",2/(Math.log(R.far+1)/Math.LN2)),(Q.isMeshPhongMaterial||Q.isMeshToonMaterial||Q.isMeshLambertMaterial||Q.isMeshBasicMaterial||Q.isMeshStandardMaterial||Q.isShaderMaterial)&&en.setValue(z,"isOrthographic",R.isOrthographicCamera===!0),O!==R&&(O=R,bo=!0,_l=!0)}if(Y.isSkinnedMesh){en.setOptional(z,Y,"bindMatrix"),en.setOptional(z,Y,"bindMatrixInverse");const On=Y.skeleton;On&&(se.floatVertexTextures?(On.boneTexture===null&&On.computeBoneTexture(),en.setValue(z,"boneTexture",On.boneTexture,ye)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}Y.isBatchedMesh&&(en.setOptional(z,Y,"batchingTexture"),en.setValue(z,"batchingTexture",Y._matricesTexture,ye));const yl=$.morphAttributes;if((yl.position!==void 0||yl.normal!==void 0||yl.color!==void 0&&se.isWebGL2===!0)&&pe.update(Y,$,ws),(bo||$e.receiveShadow!==Y.receiveShadow)&&($e.receiveShadow=Y.receiveShadow,en.setValue(z,"receiveShadow",Y.receiveShadow)),Q.isMeshGouraudMaterial&&Q.envMap!==null&&(Ts.envMap.value=qe,Ts.flipEnvMap.value=qe.isCubeTexture&&qe.isRenderTargetTexture===!1?-1:1),bo&&(en.setValue(z,"toneMappingExposure",y.toneMappingExposure),$e.needsLights&&hg(Ts,_l),Te&&Q.fog===!0&&re.refreshFogUniforms(Ts,Te),re.refreshMaterialUniforms(Ts,Q,W,U,he),Va.upload(z,Nu($e),Ts,ye)),Q.isShaderMaterial&&Q.uniformsNeedUpdate===!0&&(Va.upload(z,Nu($e),Ts,ye),Q.uniformsNeedUpdate=!1),Q.isSpriteMaterial&&en.setValue(z,"center",Y.center),en.setValue(z,"modelViewMatrix",Y.modelViewMatrix),en.setValue(z,"normalMatrix",Y.normalMatrix),en.setValue(z,"modelMatrix",Y.matrixWorld),Q.isShaderMaterial||Q.isRawShaderMaterial){const On=Q.uniformsGroups;for(let vl=0,dg=On.length;vl<dg;vl++)if(se.isWebGL2){const ku=On[vl];Re.update(ku,ws),Re.bind(ku,ws)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ws}function hg(R,q){R.ambientLightColor.needsUpdate=q,R.lightProbe.needsUpdate=q,R.directionalLights.needsUpdate=q,R.directionalLightShadows.needsUpdate=q,R.pointLights.needsUpdate=q,R.pointLightShadows.needsUpdate=q,R.spotLights.needsUpdate=q,R.spotLightShadows.needsUpdate=q,R.rectAreaLights.needsUpdate=q,R.hemisphereLights.needsUpdate=q}function ug(R){return R.isMeshLambertMaterial||R.isMeshToonMaterial||R.isMeshPhongMaterial||R.isMeshStandardMaterial||R.isShadowMaterial||R.isShaderMaterial&&R.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(R,q,$){be.get(R.texture).__webglTexture=q,be.get(R.depthTexture).__webglTexture=$;const Q=be.get(R);Q.__hasExternalTextures=!0,Q.__autoAllocateDepthBuffer=$===void 0,Q.__autoAllocateDepthBuffer||Pe.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Q.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(R,q){const $=be.get(R);$.__webglFramebuffer=q,$.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(R,q=0,$=0){M=R,b=q,w=$;let Q=!0,Y=null,Te=!1,ke=!1;if(R){const qe=be.get(R);qe.__useDefaultFramebuffer!==void 0?(oe.bindFramebuffer(z.FRAMEBUFFER,null),Q=!1):qe.__webglFramebuffer===void 0?ye.setupRenderTarget(R):qe.__hasExternalTextures&&ye.rebindTextures(R,be.get(R.texture).__webglTexture,be.get(R.depthTexture).__webglTexture);const Je=R.texture;(Je.isData3DTexture||Je.isDataArrayTexture||Je.isCompressedArrayTexture)&&(ke=!0);const Ke=be.get(R).__webglFramebuffer;R.isWebGLCubeRenderTarget?(Array.isArray(Ke[q])?Y=Ke[q][$]:Y=Ke[q],Te=!0):se.isWebGL2&&R.samples>0&&ye.useMultisampledRTT(R)===!1?Y=be.get(R).__webglMultisampledFramebuffer:Array.isArray(Ke)?Y=Ke[$]:Y=Ke,v.copy(R.viewport),E.copy(R.scissor),L=R.scissorTest}else v.copy(j).multiplyScalar(W).floor(),E.copy(ee).multiplyScalar(W).floor(),L=ce;if(oe.bindFramebuffer(z.FRAMEBUFFER,Y)&&se.drawBuffers&&Q&&oe.drawBuffers(R,Y),oe.viewport(v),oe.scissor(E),oe.setScissorTest(L),Te){const qe=be.get(R.texture);z.framebufferTexture2D(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,z.TEXTURE_CUBE_MAP_POSITIVE_X+q,qe.__webglTexture,$)}else if(ke){const qe=be.get(R.texture),Je=q||0;z.framebufferTextureLayer(z.FRAMEBUFFER,z.COLOR_ATTACHMENT0,qe.__webglTexture,$||0,Je)}C=-1},this.readRenderTargetPixels=function(R,q,$,Q,Y,Te,ke){if(!(R&&R.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let He=be.get(R).__webglFramebuffer;if(R.isWebGLCubeRenderTarget&&ke!==void 0&&(He=He[ke]),He){oe.bindFramebuffer(z.FRAMEBUFFER,He);try{const qe=R.texture,Je=qe.format,Ke=qe.type;if(Je!==$n&&Oe.convert(Je)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ye=Ke===ps&&(Pe.has("EXT_color_buffer_half_float")||se.isWebGL2&&Pe.has("EXT_color_buffer_float"));if(Ke!==ls&&Oe.convert(Ke)!==z.getParameter(z.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ke===li&&(se.isWebGL2||Pe.has("OES_texture_float")||Pe.has("WEBGL_color_buffer_float")))&&!Ye){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=R.width-Q&&$>=0&&$<=R.height-Y&&z.readPixels(q,$,Q,Y,Oe.convert(Je),Oe.convert(Ke),Te)}finally{const qe=M!==null?be.get(M).__webglFramebuffer:null;oe.bindFramebuffer(z.FRAMEBUFFER,qe)}}},this.copyFramebufferToTexture=function(R,q,$=0){const Q=Math.pow(2,-$),Y=Math.floor(q.image.width*Q),Te=Math.floor(q.image.height*Q);ye.setTexture2D(q,0),z.copyTexSubImage2D(z.TEXTURE_2D,$,0,0,R.x,R.y,Y,Te),oe.unbindTexture()},this.copyTextureToTexture=function(R,q,$,Q=0){const Y=q.image.width,Te=q.image.height,ke=Oe.convert($.format),He=Oe.convert($.type);ye.setTexture2D($,0),z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,$.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,$.unpackAlignment),q.isDataTexture?z.texSubImage2D(z.TEXTURE_2D,Q,R.x,R.y,Y,Te,ke,He,q.image.data):q.isCompressedTexture?z.compressedTexSubImage2D(z.TEXTURE_2D,Q,R.x,R.y,q.mipmaps[0].width,q.mipmaps[0].height,ke,q.mipmaps[0].data):z.texSubImage2D(z.TEXTURE_2D,Q,R.x,R.y,ke,He,q.image),Q===0&&$.generateMipmaps&&z.generateMipmap(z.TEXTURE_2D),oe.unbindTexture()},this.copyTextureToTexture3D=function(R,q,$,Q,Y=0){if(y.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Te=Math.round(R.max.x-R.min.x),ke=Math.round(R.max.y-R.min.y),He=R.max.z-R.min.z+1,qe=Oe.convert(Q.format),Je=Oe.convert(Q.type);let Ke;if(Q.isData3DTexture)ye.setTexture3D(Q,0),Ke=z.TEXTURE_3D;else if(Q.isDataArrayTexture||Q.isCompressedArrayTexture)ye.setTexture2DArray(Q,0),Ke=z.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}z.pixelStorei(z.UNPACK_FLIP_Y_WEBGL,Q.flipY),z.pixelStorei(z.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Q.premultiplyAlpha),z.pixelStorei(z.UNPACK_ALIGNMENT,Q.unpackAlignment);const Ye=z.getParameter(z.UNPACK_ROW_LENGTH),It=z.getParameter(z.UNPACK_IMAGE_HEIGHT),Tn=z.getParameter(z.UNPACK_SKIP_PIXELS),Bt=z.getParameter(z.UNPACK_SKIP_ROWS),Mi=z.getParameter(z.UNPACK_SKIP_IMAGES),wt=$.isCompressedTexture?$.mipmaps[Y]:$.image;z.pixelStorei(z.UNPACK_ROW_LENGTH,wt.width),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,wt.height),z.pixelStorei(z.UNPACK_SKIP_PIXELS,R.min.x),z.pixelStorei(z.UNPACK_SKIP_ROWS,R.min.y),z.pixelStorei(z.UNPACK_SKIP_IMAGES,R.min.z),$.isDataTexture||$.isData3DTexture?z.texSubImage3D(Ke,Y,q.x,q.y,q.z,Te,ke,He,qe,Je,wt.data):Q.isCompressedArrayTexture?z.compressedTexSubImage3D(Ke,Y,q.x,q.y,q.z,Te,ke,He,qe,wt.data):z.texSubImage3D(Ke,Y,q.x,q.y,q.z,Te,ke,He,qe,Je,wt),z.pixelStorei(z.UNPACK_ROW_LENGTH,Ye),z.pixelStorei(z.UNPACK_IMAGE_HEIGHT,It),z.pixelStorei(z.UNPACK_SKIP_PIXELS,Tn),z.pixelStorei(z.UNPACK_SKIP_ROWS,Bt),z.pixelStorei(z.UNPACK_SKIP_IMAGES,Mi),Y===0&&Q.generateMipmaps&&z.generateMipmap(Ke),oe.unbindTexture()},this.initTexture=function(R){R.isCubeTexture?ye.setTextureCube(R,0):R.isData3DTexture?ye.setTexture3D(R,0):R.isDataArrayTexture||R.isCompressedArrayTexture?ye.setTexture2DArray(R,0):ye.setTexture2D(R,0),oe.unbindTexture()},this.resetState=function(){b=0,w=0,M=null,oe.reset(),Ee.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Fi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===kh?"display-p3":"srgb",t.unpackColorSpace=rt.workingColorSpace===Jc?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(e){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=e}}class ES extends zp{}ES.prototype.isWebGL1Renderer=!0;class AS extends $t{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Vn,this.environmentRotation=new Vn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class CS extends Gt{constructor(e=null,t=1,n=1,s,r,a,o,c,l=Nt,h=Nt,u,f){super(null,a,o,c,l,h,s,r,u,f),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class jh extends ti{constructor(e=[],t=[],n=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:s};const r=[],a=[];o(s),l(n),h(),this.setAttribute("position",new gn(r,3)),this.setAttribute("normal",new gn(r.slice(),3)),this.setAttribute("uv",new gn(a,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function o(x){const y=new k,S=new k,b=new k;for(let w=0;w<t.length;w+=3)m(t[w+0],y),m(t[w+1],S),m(t[w+2],b),c(y,S,b,x)}function c(x,y,S,b){const w=b+1,M=[];for(let C=0;C<=w;C++){M[C]=[];const O=x.clone().lerp(S,C/w),v=y.clone().lerp(S,C/w),E=w-C;for(let L=0;L<=E;L++)L===0&&C===w?M[C][L]=O:M[C][L]=O.clone().lerp(v,L/E)}for(let C=0;C<w;C++)for(let O=0;O<2*(w-C)-1;O++){const v=Math.floor(O/2);O%2===0?(f(M[C][v+1]),f(M[C+1][v]),f(M[C][v])):(f(M[C][v+1]),f(M[C+1][v+1]),f(M[C+1][v]))}}function l(x){const y=new k;for(let S=0;S<r.length;S+=3)y.x=r[S+0],y.y=r[S+1],y.z=r[S+2],y.normalize().multiplyScalar(x),r[S+0]=y.x,r[S+1]=y.y,r[S+2]=y.z}function h(){const x=new k;for(let y=0;y<r.length;y+=3){x.x=r[y+0],x.y=r[y+1],x.z=r[y+2];const S=p(x)/2/Math.PI+.5,b=d(x)/Math.PI+.5;a.push(S,1-b)}g(),u()}function u(){for(let x=0;x<a.length;x+=6){const y=a[x+0],S=a[x+2],b=a[x+4],w=Math.max(y,S,b),M=Math.min(y,S,b);w>.9&&M<.1&&(y<.2&&(a[x+0]+=1),S<.2&&(a[x+2]+=1),b<.2&&(a[x+4]+=1))}}function f(x){r.push(x.x,x.y,x.z)}function m(x,y){const S=x*3;y.x=e[S+0],y.y=e[S+1],y.z=e[S+2]}function g(){const x=new k,y=new k,S=new k,b=new k,w=new Me,M=new Me,C=new Me;for(let O=0,v=0;O<r.length;O+=9,v+=6){x.set(r[O+0],r[O+1],r[O+2]),y.set(r[O+3],r[O+4],r[O+5]),S.set(r[O+6],r[O+7],r[O+8]),w.set(a[v+0],a[v+1]),M.set(a[v+2],a[v+3]),C.set(a[v+4],a[v+5]),b.copy(x).add(y).add(S).divideScalar(3);const E=p(b);_(w,v+0,x,E),_(M,v+2,y,E),_(C,v+4,S,E)}}function _(x,y,S,b){b<0&&x.x===1&&(a[y]=x.x-1),S.x===0&&S.z===0&&(a[y]=b/2/Math.PI+.5)}function p(x){return Math.atan2(x.z,-x.x)}function d(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new jh(e.vertices,e.indices,e.radius,e.details)}}class Kh extends jh{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],s=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,s,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Kh(e.radius,e.detail)}}class wr extends ti{constructor(e=1,t=32,n=16,s=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:s,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let l=0;const h=[],u=new k,f=new k,m=[],g=[],_=[],p=[];for(let d=0;d<=n;d++){const x=[],y=d/n;let S=0;d===0&&a===0?S=.5/t:d===n&&c===Math.PI&&(S=-.5/t);for(let b=0;b<=t;b++){const w=b/t;u.x=-e*Math.cos(s+w*r)*Math.sin(a+y*o),u.y=e*Math.cos(a+y*o),u.z=e*Math.sin(s+w*r)*Math.sin(a+y*o),g.push(u.x,u.y,u.z),f.copy(u).normalize(),_.push(f.x,f.y,f.z),p.push(w+S,1-y),x.push(l++)}h.push(x)}for(let d=0;d<n;d++)for(let x=0;x<t;x++){const y=h[d][x+1],S=h[d][x],b=h[d+1][x],w=h[d+1][x+1];(d!==0||a>0)&&m.push(y,S,w),(d!==n-1||c<Math.PI)&&m.push(S,b,w)}this.setIndex(m),this.setAttribute("position",new gn(g,3)),this.setAttribute("normal",new gn(_,3)),this.setAttribute("uv",new gn(p,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class RS extends rn{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class mh extends ei{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new xe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xs,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Vn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class IS extends mh{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Me(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new xe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new xe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new xe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class DS extends ei{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new xe(16777215),this.specular=new xe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xs,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Vn,this.combine=Zc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class PS extends ei{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new xe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xs,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class LS extends ei{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xs,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class NS extends ei{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xs,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Vn,this.combine=Zc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Fs extends ei{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new xe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Xs,this.normalScale=new Me(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class OS{constructor(e,t,n){const s=this;let r=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){o++,r===!1&&s.onStart!==void 0&&s.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,s.onProgress!==void 0&&s.onProgress(h,a,o),a===o&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=l.length;u<f;u+=2){const m=l[u],g=l[u+1];if(m.global&&(m.lastIndex=0),m.test(h))return g}return null}}}class Xh extends $t{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new xe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const Zl=new dt,of=new k,af=new k;class Gp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Me(512,512),this.map=null,this.mapPass=null,this.matrix=new dt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Gh,this._frameExtents=new Me(1,1),this._viewportCount=1,this._viewports=[new Mt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;of.setFromMatrixPosition(e.matrixWorld),t.position.copy(of),af.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(af),t.updateMatrixWorld(),Zl.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Zl)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const cf=new dt,Co=new k,Ql=new k;class FS extends Gp{constructor(){super(new Cn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Me(4,2),this._viewportCount=6,this._viewports=[new Mt(2,1,1,1),new Mt(0,1,1,1),new Mt(3,1,1,1),new Mt(1,1,1,1),new Mt(3,0,1,1),new Mt(1,0,1,1)],this._cubeDirections=[new k(1,0,0),new k(-1,0,0),new k(0,0,1),new k(0,0,-1),new k(0,1,0),new k(0,-1,0)],this._cubeUps=[new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,0,1),new k(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,s=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Co.setFromMatrixPosition(e.matrixWorld),n.position.copy(Co),Ql.copy(n.position),Ql.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Ql),n.updateMatrixWorld(),s.makeTranslation(-Co.x,-Co.y,-Co.z),cf.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(cf)}}class kS extends Xh{constructor(e,t,n=0,s=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new FS}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class US extends Gp{constructor(){super(new Hh(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class BS extends Xh{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy($t.DEFAULT_UP),this.updateMatrix(),this.target=new $t,this.shadow=new US}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class lf extends Xh{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}let gh=class{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=hf(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=hf();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}};function hf(){return(typeof performance>"u"?Date:performance).now()}const uf=new dt;class nl{constructor(e,t,n=0,s=1/0){this.ray=new Vh(e,t),this.near=n,this.far=s,this.camera=null,this.layers=new zh,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return uf.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(uf),this}intersectObject(e,t=!0,n=[]){return _h(e,this,n,t),n.sort(df),n}intersectObjects(e,t=!0,n=[]){for(let s=0,r=e.length;s<r;s++)_h(e[s],this,n,t);return n.sort(df),n}}function df(i,e){return i.distance-e.distance}function _h(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const s=i.children;for(let r=0,a=s.length;r<a;r++)_h(s[r],e,t,!0)}}class ff{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(jt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Oh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Oh);const Yh="14.7.77",pf=(i,e,t)=>({endTime:e,insertTime:t,type:"exponentialRampToValue",value:i}),mf=(i,e,t)=>({endTime:e,insertTime:t,type:"linearRampToValue",value:i}),yh=(i,e)=>({startTime:e,type:"setValue",value:i}),Hp=(i,e,t)=>({duration:t,startTime:e,type:"setValueCurve",values:i}),Wp=(i,e,{startTime:t,target:n,timeConstant:s})=>n+(e-n)*Math.exp((t-i)/s),Tr=i=>i.type==="exponentialRampToValue",Qa=i=>i.type==="linearRampToValue",es=i=>Tr(i)||Qa(i),$h=i=>i.type==="setValue",Pi=i=>i.type==="setValueCurve",Ja=(i,e,t,n)=>{const s=i[e];return s===void 0?n:es(s)||$h(s)?s.value:Pi(s)?s.values[s.values.length-1]:Wp(t,Ja(i,e-1,s.startTime,n),s)},gf=(i,e,t,n,s)=>t===void 0?[n.insertTime,s]:es(t)?[t.endTime,t.value]:$h(t)?[t.startTime,t.value]:Pi(t)?[t.startTime+t.duration,t.values[t.values.length-1]]:[t.startTime,Ja(i,e-1,t.startTime,s)],vh=i=>i.type==="cancelAndHold",xh=i=>i.type==="cancelScheduledValues",Zi=i=>vh(i)||xh(i)?i.cancelTime:Tr(i)||Qa(i)?i.endTime:i.startTime,_f=(i,e,t,{endTime:n,value:s})=>t===s?s:0<t&&0<s||t<0&&s<0?t*(s/t)**((i-e)/(n-e)):0,yf=(i,e,t,{endTime:n,value:s})=>t+(i-e)/(n-e)*(s-t),VS=(i,e)=>{const t=Math.floor(e),n=Math.ceil(e);return t===n?i[t]:(1-(e-t))*i[t]+(1-(n-e))*i[n]},zS=(i,{duration:e,startTime:t,values:n})=>{const s=(i-t)/e*(n.length-1);return VS(n,s)},Da=i=>i.type==="setTarget";class GS{constructor(e){this._automationEvents=[],this._currenTime=0,this._defaultValue=e}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(e){const t=Zi(e);if(vh(e)||xh(e)){const n=this._automationEvents.findIndex(r=>xh(e)&&Pi(r)?r.startTime+r.duration>=t:Zi(r)>=t),s=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),vh(e)){const r=this._automationEvents[this._automationEvents.length-1];if(s!==void 0&&es(s)){if(r!==void 0&&Da(r))throw new Error("The internal list is malformed.");const a=r===void 0?s.insertTime:Pi(r)?r.startTime+r.duration:Zi(r),o=r===void 0?this._defaultValue:Pi(r)?r.values[r.values.length-1]:r.value,c=Tr(s)?_f(t,a,o,s):yf(t,a,o,s),l=Tr(s)?pf(c,t,this._currenTime):mf(c,t,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&Da(r)&&this._automationEvents.push(yh(this.getValue(t),t)),r!==void 0&&Pi(r)&&r.startTime+r.duration>t){const a=t-r.startTime,o=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(a*o)),l=a/(c-1)*o,h=r.values.slice(0,c);if(l<1)for(let u=1;u<c;u+=1){const f=l*u%1;h[u]=r.values[u-1]*(1-f)+r.values[u]*f}this._automationEvents[this._automationEvents.length-1]=Hp(h,r.startTime,a)}}}else{const n=this._automationEvents.findIndex(a=>Zi(a)>t),s=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(s!==void 0&&Pi(s)&&Zi(s)+s.duration>t)return!1;const r=Tr(e)?pf(e.value,e.endTime,this._currenTime):Qa(e)?mf(e.value,t,this._currenTime):e;if(n===-1)this._automationEvents.push(r);else{if(Pi(e)&&t+e.duration>Zi(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(e){const t=this._automationEvents.findIndex(n=>Zi(n)>e);if(t>1){const n=this._automationEvents.slice(t-1),s=n[0];Da(s)&&n.unshift(yh(Ja(this._automationEvents,t-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}getValue(e){if(this._automationEvents.length===0)return this._defaultValue;const t=this._automationEvents.findIndex(a=>Zi(a)>e),n=this._automationEvents[t],s=(t===-1?this._automationEvents.length:t)-1,r=this._automationEvents[s];if(r!==void 0&&Da(r)&&(n===void 0||!es(n)||n.insertTime>e))return Wp(e,Ja(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(r!==void 0&&$h(r)&&(n===void 0||!es(n)))return r.value;if(r!==void 0&&Pi(r)&&(n===void 0||!es(n)||r.startTime+r.duration>e))return e<r.startTime+r.duration?zS(e,r):r.values[r.values.length-1];if(r!==void 0&&es(r)&&(n===void 0||!es(n)))return r.value;if(n!==void 0&&Tr(n)){const[a,o]=gf(this._automationEvents,s,r,n,this._defaultValue);return _f(e,a,o,n)}if(n!==void 0&&Qa(n)){const[a,o]=gf(this._automationEvents,s,r,n,this._defaultValue);return yf(e,a,o,n)}return this._defaultValue}}const HS=i=>({cancelTime:i,type:"cancelAndHold"}),WS=i=>({cancelTime:i,type:"cancelScheduledValues"}),qS=(i,e)=>({endTime:e,type:"exponentialRampToValue",value:i}),jS=(i,e)=>({endTime:e,type:"linearRampToValue",value:i}),KS=(i,e,t)=>({startTime:e,target:i,timeConstant:t,type:"setTarget"}),XS=()=>new DOMException("","AbortError"),YS=i=>(e,t,[n,s,r],a)=>{i(e[s],[t,n,r],o=>o[0]===t&&o[1]===n,a)},$S=i=>(e,t,n)=>{const s=[];for(let r=0;r<n.numberOfInputs;r+=1)s.push(new Set);i.set(e,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:t})},ZS=i=>(e,t)=>{i.set(e,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:t})},Or=new WeakSet,qp=new WeakMap,Zh=new WeakMap,jp=new WeakMap,Qh=new WeakMap,il=new WeakMap,Kp=new WeakMap,Sh=new WeakMap,bh=new WeakMap,Mh=new WeakMap,Xp={construct(){return Xp}},QS=i=>{try{const e=new Proxy(i,Xp);new e}catch{return!1}return!0},vf=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,xf=(i,e)=>{const t=[];let n=i.replace(/^[\s]+/,""),s=n.match(vf);for(;s!==null;){const r=s[1].slice(1,-1),a=s[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,e).toString());t.push(a),n=n.slice(s[0].length).replace(/^[\s]+/,""),s=n.match(vf)}return[t.join(";"),n]},Sf=i=>{if(i!==void 0&&!Array.isArray(i))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},bf=i=>{if(!QS(i))throw new TypeError("The given value for processorCtor should be a constructor.");if(i.prototype===null||typeof i.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},JS=(i,e,t,n,s,r,a,o,c,l,h,u,f)=>{let m=0;return(g,_,p={credentials:"omit"})=>{const d=h.get(g);if(d!==void 0&&d.has(_))return Promise.resolve();const x=l.get(g);if(x!==void 0){const b=x.get(_);if(b!==void 0)return b}const y=r(g),S=y.audioWorklet===void 0?s(_).then(([b,w])=>{const[M,C]=xf(b,w),O=`${M};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${C}
})})(window,'_AWGS')`;return t(O)}).then(()=>{const b=f._AWGS.pop();if(b===void 0)throw new SyntaxError;n(y.currentTime,y.sampleRate,()=>b(class{},void 0,(w,M)=>{if(w.trim()==="")throw e();const C=bh.get(y);if(C!==void 0){if(C.has(w))throw e();bf(M),Sf(M.parameterDescriptors),C.set(w,M)}else bf(M),Sf(M.parameterDescriptors),bh.set(y,new Map([[w,M]]))},y.sampleRate,void 0,void 0))}):Promise.all([s(_),Promise.resolve(i(u,u))]).then(([[b,w],M])=>{const C=m+1;m=C;const[O,v]=xf(b,w),D=`${O};((AudioWorkletProcessor,registerProcessor)=>{${v}
})(${M?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${M?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${M?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${C}',class extends AudioWorkletProcessor{process(){return !1}})`,G=new Blob([D],{type:"application/javascript; charset=utf-8"}),U=URL.createObjectURL(G);return y.audioWorklet.addModule(U,p).then(()=>{if(o(y))return y;const W=a(y);return W.audioWorklet.addModule(U,p).then(()=>W)}).then(W=>{if(c===null)throw new SyntaxError;try{new c(W,`__sac${C}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(U))});return x===void 0?l.set(g,new Map([[_,S]])):x.set(_,S),S.then(()=>{const b=h.get(g);b===void 0?h.set(g,new Set([_])):b.add(_)}).finally(()=>{const b=l.get(g);b!==void 0&&b.delete(_)}),S}},Qn=(i,e)=>{const t=i.get(e);if(t===void 0)throw new Error("A value with the given key could not be found.");return t},sl=(i,e)=>{const t=Array.from(i).filter(e);if(t.length>1)throw Error("More than one element was found.");if(t.length===0)throw Error("No element was found.");const[n]=t;return i.delete(n),n},Yp=(i,e,t,n)=>{const s=Qn(i,e),r=sl(s,a=>a[0]===t&&a[1]===n);return s.size===0&&i.delete(e),r},Ko=i=>Qn(Kp,i),Fr=i=>{if(Or.has(i))throw new Error("The AudioNode is already stored.");Or.add(i),Ko(i).forEach(e=>e(!0))},$p=i=>"port"in i,Xo=i=>{if(!Or.has(i))throw new Error("The AudioNode is not stored.");Or.delete(i),Ko(i).forEach(e=>e(!1))},wh=(i,e)=>{!$p(i)&&e.every(t=>t.size===0)&&Xo(i)},eb=(i,e,t,n,s,r,a,o,c,l,h,u,f)=>{const m=new WeakMap;return(g,_,p,d,x)=>{const{activeInputs:y,passiveInputs:S}=r(_),{outputs:b}=r(g),w=o(g),M=C=>{const O=c(_),v=c(g);if(C){const E=Yp(S,g,p,d);i(y,g,E,!1),!x&&!u(g)&&t(v,O,p,d),f(_)&&Fr(_)}else{const E=n(y,g,p,d);e(S,d,E,!1),!x&&!u(g)&&s(v,O,p,d);const L=a(_);if(L===0)h(_)&&wh(_,y);else{const V=m.get(_);V!==void 0&&clearTimeout(V),m.set(_,setTimeout(()=>{h(_)&&wh(_,y)},L*1e3))}}};return l(b,[_,p,d],C=>C[0]===_&&C[1]===p&&C[2]===d,!0)?(w.add(M),h(g)?i(y,g,[p,d,M],!0):e(S,d,[g,p,M],!0),!0):!1}},tb=i=>(e,t,[n,s,r],a)=>{const o=e.get(n);o===void 0?e.set(n,new Set([[s,t,r]])):i(o,[s,t,r],c=>c[0]===s&&c[1]===t,a)},nb=i=>(e,t)=>{const n=i(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});t.connect(n).connect(e.destination);const s=()=>{t.removeEventListener("ended",s),t.disconnect(n),n.disconnect()};t.addEventListener("ended",s)},ib=i=>(e,t)=>{i(e).add(t)},sb={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},rb=(i,e,t,n,s,r)=>class extends i{constructor(o,c){const l=s(o),h={...sb,...c},u=n(l,h),f=r(l)?e():null;super(o,!1,u,f),this._nativeAnalyserNode=u}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(o){this._nativeAnalyserNode.fftSize=o}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(o){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=o,!(o>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,t()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(o){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=o,!(this._nativeAnalyserNode.maxDecibels>o))throw this._nativeAnalyserNode.minDecibels=c,t()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(o){this._nativeAnalyserNode.smoothingTimeConstant=o}getByteFrequencyData(o){this._nativeAnalyserNode.getByteFrequencyData(o)}getByteTimeDomainData(o){this._nativeAnalyserNode.getByteTimeDomainData(o)}getFloatFrequencyData(o){this._nativeAnalyserNode.getFloatFrequencyData(o)}getFloatTimeDomainData(o){this._nativeAnalyserNode.getFloatTimeDomainData(o)}},an=(i,e)=>i.context===e,ob=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=e(r);if(!an(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,fftSize:o.fftSize,maxDecibels:o.maxDecibels,minDecibels:o.minDecibels,smoothingTimeConstant:o.smoothingTimeConstant};o=i(a,l)}return n.set(a,o),await t(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},ec=i=>{try{i.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},xi=()=>new DOMException("","IndexSizeError"),Jh=i=>{i.getChannelData=(e=>t=>{try{return e.call(i,t)}catch(n){throw n.code===12?xi():n}})(i.getChannelData)},ab={numberOfChannels:1},cb=(i,e,t,n,s,r,a,o)=>{let c=null;return class Zp{constructor(h){if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:u,numberOfChannels:f,sampleRate:m}={...ab,...h};c===null&&(c=new s(1,1,44100));const g=n!==null&&e(r,r)?new n({length:u,numberOfChannels:f,sampleRate:m}):c.createBuffer(f,u,m);if(g.numberOfChannels===0)throw t();return typeof g.copyFromChannel!="function"?(a(g),Jh(g)):e(ec,()=>ec(g))||o(g),i.add(g),g}static[Symbol.hasInstance](h){return h!==null&&typeof h=="object"&&Object.getPrototypeOf(h)===Zp.prototype||i.has(h)}}},vn=-34028234663852886e22,hn=-vn,ki=i=>Or.has(i),lb={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},hb=(i,e,t,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f={...lb,...h},m=s(u,f),g=a(u),_=g?e():null;super(l,!1,m,_),this._audioBufferSourceNodeRenderer=_,this._isBufferNullified=!1,this._isBufferSet=f.buffer!==null,this._nativeAudioBufferSourceNode=m,this._onended=null,this._playbackRate=t(this,g,m.playbackRate,hn,vn)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const h=typeof l=="function"?o(this,l):null;this._nativeAudioBufferSourceNode.onended=h;const u=this._nativeAudioBufferSourceNode.onended;this._onended=u!==null&&u===h?l:u}get playbackRate(){return this._playbackRate}start(l=0,h=0,u){if(this._nativeAudioBufferSourceNode.start(l,h,u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=u===void 0?[l,h]:[l,h,u]),this.context.state!=="closed"){Fr(this);const f=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",f),ki(this)&&Xo(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",f)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},ub=(i,e,t,n,s)=>()=>{const r=new WeakMap;let a=null,o=null;const c=async(l,h)=>{let u=t(l);const f=an(u,h);if(!f){const m={buffer:u.buffer,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,loop:u.loop,loopEnd:u.loopEnd,loopStart:u.loopStart,playbackRate:u.playbackRate.value};u=e(h,m),a!==null&&u.start(...a),o!==null&&u.stop(o)}return r.set(h,u),f?await i(h,l.playbackRate,u.playbackRate):await n(h,l.playbackRate,u.playbackRate),await s(l,h,u),u};return{set start(l){a=l},set stop(l){o=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},db=i=>"playbackRate"in i,fb=i=>"frequency"in i&&"gain"in i,pb=i=>"offset"in i,mb=i=>!("frequency"in i)&&"gain"in i,gb=i=>"detune"in i&&"frequency"in i,_b=i=>"pan"in i,dn=i=>Qn(qp,i),Yo=i=>Qn(jp,i),Th=(i,e)=>{const{activeInputs:t}=dn(i);t.forEach(s=>s.forEach(([r])=>{e.includes(i)||Th(r,[...e,i])}));const n=db(i)?[i.playbackRate]:$p(i)?Array.from(i.parameters.values()):fb(i)?[i.Q,i.detune,i.frequency,i.gain]:pb(i)?[i.offset]:mb(i)?[i.gain]:gb(i)?[i.detune,i.frequency]:_b(i)?[i.pan]:[];for(const s of n){const r=Yo(s);r!==void 0&&r.activeInputs.forEach(([a])=>Th(a,e))}ki(i)&&Xo(i)},Qp=i=>{Th(i.destination,[])},yb=i=>i===void 0||typeof i=="number"||typeof i=="string"&&(i==="balanced"||i==="interactive"||i==="playback"),vb=(i,e,t,n,s,r,a,o,c)=>class extends i{constructor(h={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let u;try{u=new c(h)}catch(g){throw g.code===12&&g.message==="sampleRate is not in range"?t():g}if(u===null)throw n();if(!yb(h.latencyHint))throw new TypeError(`The provided value '${h.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(h.sampleRate!==void 0&&u.sampleRate!==h.sampleRate)throw t();super(u,2);const{latencyHint:f}=h,{sampleRate:m}=u;if(this._baseLatency=typeof u.baseLatency=="number"?u.baseLatency:f==="balanced"?512/m:f==="interactive"||f===void 0?256/m:f==="playback"?1024/m:Math.max(2,Math.min(128,Math.round(f*m/128)))*128/m,this._nativeAudioContext=u,c.name==="webkitAudioContext"?(this._nativeGainNode=u.createGain(),this._nativeOscillatorNode=u.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(u.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,u.state==="running"){this._state="suspended";const g=()=>{this._state==="suspended"&&(this._state=null),u.removeEventListener("statechange",g)};u.addEventListener("statechange",g)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw e()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),Qp(this)}))}createMediaElementSource(h){return new s(this,{mediaElement:h})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(h){return new a(this,{mediaStream:h})}createMediaStreamTrackSource(h){return new o(this,{mediaStreamTrack:h})}resume(){return this._state==="suspended"?new Promise((h,u)=>{const f=()=>{this._nativeAudioContext.removeEventListener("statechange",f),this._nativeAudioContext.state==="running"?h():this.resume().then(h,u)};this._nativeAudioContext.addEventListener("statechange",f)}):this._nativeAudioContext.resume().catch(h=>{throw h===void 0||h.code===15?e():h})}suspend(){return this._nativeAudioContext.suspend().catch(h=>{throw h===void 0?e():h})}},xb=(i,e,t,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f=a(u),m=s(u,h,f),g=f?e(o):null;super(l,!1,m,g),this._isNodeOfNativeOfflineAudioContext=f,this._nativeAudioDestinationNode=m}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw t();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},Sb=i=>{const e=new WeakMap,t=async(n,s)=>{const r=s.destination;return e.set(s,r),await i(n,s,r),r};return{render(n,s){const r=e.get(s);return r!==void 0?Promise.resolve(r):t(n,s)}}},bb=(i,e,t,n,s,r,a,o)=>(c,l)=>{const h=l.listener,u=()=>{const b=new Float32Array(1),w=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),M=a(l);let C=!1,O=[0,0,-1,0,1,0],v=[0,0,0];const E=()=>{if(C)return;C=!0;const G=n(l,256,9,0);G.onaudioprocess=({inputBuffer:U})=>{const W=[r(U,b,0),r(U,b,1),r(U,b,2),r(U,b,3),r(U,b,4),r(U,b,5)];W.some((B,j)=>B!==O[j])&&(h.setOrientation(...W),O=W);const H=[r(U,b,6),r(U,b,7),r(U,b,8)];H.some((B,j)=>B!==v[j])&&(h.setPosition(...H),v=H)},w.connect(G)},L=G=>U=>{U!==O[G]&&(O[G]=U,h.setOrientation(...O))},V=G=>U=>{U!==v[G]&&(v[G]=U,h.setPosition(...v))},D=(G,U,W)=>{const H=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:U});H.connect(w,0,G),H.start(),Object.defineProperty(H.offset,"defaultValue",{get(){return U}});const B=i({context:c},M,H.offset,hn,vn);return o(B,"value",j=>()=>j.call(B),j=>ee=>{try{j.call(B,ee)}catch(ce){if(ce.code!==9)throw ce}E(),M&&W(ee)}),B.cancelAndHoldAtTime=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.cancelAndHoldAtTime),B.cancelScheduledValues=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.cancelScheduledValues),B.exponentialRampToValueAtTime=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.exponentialRampToValueAtTime),B.linearRampToValueAtTime=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.linearRampToValueAtTime),B.setTargetAtTime=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.setTargetAtTime),B.setValueAtTime=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.setValueAtTime),B.setValueCurveAtTime=(j=>M?()=>{throw s()}:(...ee)=>{const ce=j.apply(B,ee);return E(),ce})(B.setValueCurveAtTime),B};return{forwardX:D(0,0,L(0)),forwardY:D(1,0,L(1)),forwardZ:D(2,-1,L(2)),positionX:D(6,0,V(0)),positionY:D(7,0,V(1)),positionZ:D(8,0,V(2)),upX:D(3,0,L(3)),upY:D(4,1,L(4)),upZ:D(5,0,L(5))}},{forwardX:f,forwardY:m,forwardZ:g,positionX:_,positionY:p,positionZ:d,upX:x,upY:y,upZ:S}=h.forwardX===void 0?u():h;return{get forwardX(){return f},get forwardY(){return m},get forwardZ(){return g},get positionX(){return _},get positionY(){return p},get positionZ(){return d},get upX(){return x},get upY(){return y},get upZ(){return S}}},tc=i=>"context"in i,$o=i=>tc(i[0]),Ys=(i,e,t,n)=>{for(const s of i)if(t(s)){if(n)return!1;throw Error("The set contains at least one similar element.")}return i.add(e),!0},Mf=(i,e,[t,n],s)=>{Ys(i,[e,t,n],r=>r[0]===e&&r[1]===t,s)},wf=(i,[e,t,n],s)=>{const r=i.get(e);r===void 0?i.set(e,new Set([[t,n]])):Ys(r,[t,n],a=>a[0]===t,s)},co=i=>"inputs"in i,nc=(i,e,t,n)=>{if(co(e)){const s=e.inputs[n];return i.connect(s,t,0),[s,t,0]}return i.connect(e,t,n),[e,t,n]},Jp=(i,e,t)=>{for(const n of i)if(n[0]===e&&n[1]===t)return i.delete(n),n;return null},Mb=(i,e,t)=>sl(i,n=>n[0]===e&&n[1]===t),em=(i,e)=>{if(!Ko(i).delete(e))throw new Error("Missing the expected event listener.")},tm=(i,e,t)=>{const n=Qn(i,e),s=sl(n,r=>r[0]===t);return n.size===0&&i.delete(e),s},ic=(i,e,t,n)=>{co(e)?i.disconnect(e.inputs[n],t,0):i.disconnect(e,t,n)},vt=i=>Qn(Zh,i),Uo=i=>Qn(Qh,i),Vs=i=>Sh.has(i),za=i=>!Or.has(i),Tf=(i,e)=>new Promise(t=>{if(e!==null)t(!0);else{const n=i.createScriptProcessor(256,1,1),s=i.createGain(),r=i.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const o=i.createBufferSource();o.buffer=r,o.loop=!0,o.connect(n).connect(i.destination),o.connect(s),o.disconnect(s),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,h=>h===1)?t(!0):t(!1),o.stop(),n.onaudioprocess=null,o.disconnect(n),n.disconnect(i.destination)},o.start()}}),Jl=(i,e)=>{const t=new Map;for(const n of i)for(const s of n){const r=t.get(s);t.set(s,r===void 0?1:r+1)}t.forEach((n,s)=>e(s,n))},sc=i=>"context"in i,wb=i=>{const e=new Map;i.connect=(t=>(n,s=0,r=0)=>{const a=sc(n)?t(n,s,r):t(n,s),o=e.get(n);return o===void 0?e.set(n,[{input:r,output:s}]):o.every(c=>c.input!==r||c.output!==s)&&o.push({input:r,output:s}),a})(i.connect.bind(i)),i.disconnect=(t=>(n,s,r)=>{if(t.apply(i),n===void 0)e.clear();else if(typeof n=="number")for(const[a,o]of e){const c=o.filter(l=>l.output!==n);c.length===0?e.delete(a):e.set(a,c)}else if(e.has(n))if(s===void 0)e.delete(n);else{const a=e.get(n);if(a!==void 0){const o=a.filter(c=>c.output!==s&&(c.input!==r||r===void 0));o.length===0?e.delete(n):e.set(n,o)}}for(const[a,o]of e)o.forEach(c=>{sc(a)?i.connect(a,c.output,c.input):i.connect(a,c.output)})})(i.disconnect)},Tb=(i,e,t,n)=>{const{activeInputs:s,passiveInputs:r}=Yo(e),{outputs:a}=dn(i),o=Ko(i),c=l=>{const h=vt(i),u=Uo(e);if(l){const f=tm(r,i,t);Mf(s,i,f,!1),!n&&!Vs(i)&&h.connect(u,t)}else{const f=Mb(s,i,t);wf(r,f,!1),!n&&!Vs(i)&&h.disconnect(u,t)}};return Ys(a,[e,t],l=>l[0]===e&&l[1]===t,!0)?(o.add(c),ki(i)?Mf(s,i,[t,c],!0):wf(r,[i,t,c],!0),!0):!1},Eb=(i,e,t,n)=>{const{activeInputs:s,passiveInputs:r}=dn(e),a=Jp(s[n],i,t);return a===null?[Yp(r,i,t,n)[2],!1]:[a[2],!0]},Ab=(i,e,t)=>{const{activeInputs:n,passiveInputs:s}=Yo(e),r=Jp(n,i,t);return r===null?[tm(s,i,t)[1],!1]:[r[2],!0]},eu=(i,e,t,n,s)=>{const[r,a]=Eb(i,t,n,s);if(r!==null&&(em(i,r),a&&!e&&!Vs(i)&&ic(vt(i),vt(t),n,s)),ki(t)){const{activeInputs:o}=dn(t);wh(t,o)}},tu=(i,e,t,n)=>{const[s,r]=Ab(i,t,n);s!==null&&(em(i,s),r&&!e&&!Vs(i)&&vt(i).disconnect(Uo(t),n))},Cb=(i,e)=>{const t=dn(i),n=[];for(const s of t.outputs)$o(s)?eu(i,e,...s):tu(i,e,...s),n.push(s[0]);return t.outputs.clear(),n},Rb=(i,e,t)=>{const n=dn(i),s=[];for(const r of n.outputs)r[1]===t&&($o(r)?eu(i,e,...r):tu(i,e,...r),s.push(r[0]),n.outputs.delete(r));return s},Ib=(i,e,t,n,s)=>{const r=dn(i);return Array.from(r.outputs).filter(a=>a[0]===t&&(n===void 0||a[1]===n)&&(s===void 0||a[2]===s)).map(a=>($o(a)?eu(i,e,...a):tu(i,e,...a),r.outputs.delete(a),a[0]))},Db=(i,e,t,n,s,r,a,o,c,l,h,u,f,m,g,_)=>class extends l{constructor(d,x,y,S){super(y),this._context=d,this._nativeAudioNode=y;const b=h(d);u(b)&&t(Tf,()=>Tf(b,_))!==!0&&wb(y),Zh.set(this,y),Kp.set(this,new Set),d.state!=="closed"&&x&&Fr(this),i(this,S,y)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(d){this._nativeAudioNode.channelCount=d}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(d){this._nativeAudioNode.channelCountMode=d}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(d){this._nativeAudioNode.channelInterpretation=d}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(d,x=0,y=0){if(x<0||x>=this._nativeAudioNode.numberOfOutputs)throw s();const S=h(this._context),b=g(S);if(f(d)||m(d))throw r();if(tc(d)){const C=vt(d);try{const v=nc(this._nativeAudioNode,C,x,y),E=za(this);(b||E)&&this._nativeAudioNode.disconnect(...v),this.context.state!=="closed"&&!E&&za(d)&&Fr(d)}catch(v){throw v.code===12?r():v}if(e(this,d,x,y,b)){const v=c([this],d);Jl(v,n(b))}return d}const w=Uo(d);if(w.name==="playbackRate"&&w.maxValue===1024)throw a();try{this._nativeAudioNode.connect(w,x),(b||za(this))&&this._nativeAudioNode.disconnect(w,x)}catch(C){throw C.code===12?r():C}if(Tb(this,d,x,b)){const C=c([this],d);Jl(C,n(b))}}disconnect(d,x,y){let S;const b=h(this._context),w=g(b);if(d===void 0)S=Cb(this,w);else if(typeof d=="number"){if(d<0||d>=this.numberOfOutputs)throw s();S=Rb(this,w,d)}else{if(x!==void 0&&(x<0||x>=this.numberOfOutputs)||tc(d)&&y!==void 0&&(y<0||y>=d.numberOfInputs))throw s();if(S=Ib(this,w,d,x,y),S.length===0)throw r()}for(const M of S){const C=c([this],M);Jl(C,o)}}},Pb=(i,e,t,n,s,r,a,o,c,l,h,u,f)=>(m,g,_,p=null,d=null)=>{const x=_.value,y=new GS(x),S=g?n(y):null,b={get defaultValue(){return x},get maxValue(){return p===null?_.maxValue:p},get minValue(){return d===null?_.minValue:d},get value(){return _.value},set value(w){_.value=w,b.setValueAtTime(w,m.context.currentTime)},cancelAndHoldAtTime(w){if(typeof _.cancelAndHoldAtTime=="function")S===null&&y.flush(m.context.currentTime),y.add(s(w)),_.cancelAndHoldAtTime(w);else{const M=Array.from(y).pop();S===null&&y.flush(m.context.currentTime),y.add(s(w));const C=Array.from(y).pop();_.cancelScheduledValues(w),M!==C&&C!==void 0&&(C.type==="exponentialRampToValue"?_.exponentialRampToValueAtTime(C.value,C.endTime):C.type==="linearRampToValue"?_.linearRampToValueAtTime(C.value,C.endTime):C.type==="setValue"?_.setValueAtTime(C.value,C.startTime):C.type==="setValueCurve"&&_.setValueCurveAtTime(C.values,C.startTime,C.duration))}return b},cancelScheduledValues(w){return S===null&&y.flush(m.context.currentTime),y.add(r(w)),_.cancelScheduledValues(w),b},exponentialRampToValueAtTime(w,M){if(w===0)throw new RangeError;if(!Number.isFinite(M)||M<0)throw new RangeError;const C=m.context.currentTime;return S===null&&y.flush(C),Array.from(y).length===0&&(y.add(l(x,C)),_.setValueAtTime(x,C)),y.add(a(w,M)),_.exponentialRampToValueAtTime(w,M),b},linearRampToValueAtTime(w,M){const C=m.context.currentTime;return S===null&&y.flush(C),Array.from(y).length===0&&(y.add(l(x,C)),_.setValueAtTime(x,C)),y.add(o(w,M)),_.linearRampToValueAtTime(w,M),b},setTargetAtTime(w,M,C){return S===null&&y.flush(m.context.currentTime),y.add(c(w,M,C)),_.setTargetAtTime(w,M,C),b},setValueAtTime(w,M){return S===null&&y.flush(m.context.currentTime),y.add(l(w,M)),_.setValueAtTime(w,M),b},setValueCurveAtTime(w,M,C){const O=w instanceof Float32Array?w:new Float32Array(w);if(u!==null&&u.name==="webkitAudioContext"){const v=M+C,E=m.context.sampleRate,L=Math.ceil(M*E),V=Math.floor(v*E),D=V-L,G=new Float32Array(D);for(let W=0;W<D;W+=1){const H=(O.length-1)/C*((L+W)/E-M),B=Math.floor(H),j=Math.ceil(H);G[W]=B===j?O[B]:(1-(H-B))*O[B]+(1-(j-H))*O[j]}S===null&&y.flush(m.context.currentTime),y.add(h(G,M,C)),_.setValueCurveAtTime(G,M,C);const U=V/E;U<v&&f(b,G[G.length-1],U),f(b,O[O.length-1],v)}else S===null&&y.flush(m.context.currentTime),y.add(h(O,M,C)),_.setValueCurveAtTime(O,M,C);return b}};return t.set(b,_),e.set(b,m),i(b,S),b},Lb=i=>({replay(e){for(const t of i)if(t.type==="exponentialRampToValue"){const{endTime:n,value:s}=t;e.exponentialRampToValueAtTime(s,n)}else if(t.type==="linearRampToValue"){const{endTime:n,value:s}=t;e.linearRampToValueAtTime(s,n)}else if(t.type==="setTarget"){const{startTime:n,target:s,timeConstant:r}=t;e.setTargetAtTime(s,n,r)}else if(t.type==="setValue"){const{startTime:n,value:s}=t;e.setValueAtTime(s,n)}else if(t.type==="setValueCurve"){const{duration:n,startTime:s,values:r}=t;e.setValueCurveAtTime(r,s,n)}else throw new Error("Can't apply an unknown automation.")}});class nm{constructor(e){this._map=new Map(e)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(e,t=null){return this._map.forEach((n,s)=>e.call(t,n,s,this))}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){return this._map.keys()}values(){return this._map.values()}}const Nb={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Ob=(i,e,t,n,s,r,a,o,c,l,h,u,f,m)=>class extends e{constructor(_,p,d){var x;const y=o(_),S=c(y),b=h({...Nb,...d});f(b);const w=bh.get(y),M=w==null?void 0:w.get(p),C=S||y.state!=="closed"?y:(x=a(y))!==null&&x!==void 0?x:y,O=s(C,S?null:_.baseLatency,l,p,M,b),v=S?n(p,b,M):null;super(_,!0,O,v);const E=[];O.parameters.forEach((V,D)=>{const G=t(this,S,V);E.push([D,G])}),this._nativeAudioWorkletNode=O,this._onprocessorerror=null,this._parameters=new nm(E),S&&i(y,this);const{activeInputs:L}=r(this);u(O,L)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(_){const p=typeof _=="function"?m(this,_):null;this._nativeAudioWorkletNode.onprocessorerror=p;const d=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=d!==null&&d===p?_:d}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function rc(i,e,t,n,s){if(typeof i.copyFromChannel=="function")e[t].byteLength===0&&(e[t]=new Float32Array(128)),i.copyFromChannel(e[t],n,s);else{const r=i.getChannelData(n);if(e[t].byteLength===0)e[t]=r.slice(s,s+128);else{const a=new Float32Array(r.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);e[t].set(a)}}}const im=(i,e,t,n,s)=>{typeof i.copyToChannel=="function"?e[t].byteLength!==0&&i.copyToChannel(e[t],n,s):e[t].byteLength!==0&&i.getChannelData(n).set(e[t],s)},oc=(i,e)=>{const t=[];for(let n=0;n<i;n+=1){const s=[],r=typeof e=="number"?e:e[n];for(let a=0;a<r;a+=1)s.push(new Float32Array(128));t.push(s)}return t},Fb=(i,e)=>{const t=Qn(Mh,i),n=vt(e);return Qn(t,n)},kb=async(i,e,t,n,s,r,a)=>{const o=e===null?Math.ceil(i.context.length/128)*128:e.length,c=n.channelCount*n.numberOfInputs,l=s.reduce((p,d)=>p+d,0),h=l===0?null:t.createBuffer(l,o,t.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const u=dn(i),f=await Fb(t,i),m=oc(n.numberOfInputs,n.channelCount),g=oc(n.numberOfOutputs,s),_=Array.from(i.parameters.keys()).reduce((p,d)=>({...p,[d]:new Float32Array(128)}),{});for(let p=0;p<o;p+=128){if(n.numberOfInputs>0&&e!==null)for(let d=0;d<n.numberOfInputs;d+=1)for(let x=0;x<n.channelCount;x+=1)rc(e,m[d],x,x,p);r.parameterDescriptors!==void 0&&e!==null&&r.parameterDescriptors.forEach(({name:d},x)=>{rc(e,_,d,c+x,p)});for(let d=0;d<n.numberOfInputs;d+=1)for(let x=0;x<s[d];x+=1)g[d][x].byteLength===0&&(g[d][x]=new Float32Array(128));try{const d=m.map((y,S)=>u.activeInputs[S].size===0?[]:y),x=a(p/t.sampleRate,t.sampleRate,()=>f.process(d,g,_));if(h!==null)for(let y=0,S=0;y<n.numberOfOutputs;y+=1){for(let b=0;b<s[y];b+=1)im(h,g[y],b,S+b,p);S+=s[y]}if(!x)break}catch(d){i.dispatchEvent(new ErrorEvent("processorerror",{colno:d.colno,filename:d.filename,lineno:d.lineno,message:d.message}));break}}return h},Ub=(i,e,t,n,s,r,a,o,c,l,h,u,f,m,g,_)=>(p,d,x)=>{const y=new WeakMap;let S=null;const b=async(w,M)=>{let C=h(w),O=null;const v=an(C,M),E=Array.isArray(d.outputChannelCount)?d.outputChannelCount:Array.from(d.outputChannelCount);if(u===null){const L=E.reduce((U,W)=>U+W,0),V=s(M,{channelCount:Math.max(1,L),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,L)}),D=[];for(let U=0;U<w.numberOfOutputs;U+=1)D.push(n(M,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:E[U]}));const G=a(M,{channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,gain:1});G.connect=e.bind(null,D),G.disconnect=c.bind(null,D),O=[V,D,G]}else v||(C=new u(M,p));if(y.set(M,O===null?C:O[2]),O!==null){if(S===null){if(x===void 0)throw new Error("Missing the processor constructor.");if(f===null)throw new Error("Missing the native OfflineAudioContext constructor.");const W=w.channelCount*w.numberOfInputs,H=x.parameterDescriptors===void 0?0:x.parameterDescriptors.length,B=W+H;S=kb(w,B===0?null:await(async()=>{const ee=new f(B,Math.ceil(w.context.length/128)*128,M.sampleRate),ce=[],Ce=[];for(let he=0;he<d.numberOfInputs;he+=1)ce.push(a(ee,{channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,gain:1})),Ce.push(s(ee,{channelCount:d.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:d.channelCount}));const K=await Promise.all(Array.from(w.parameters.values()).map(async he=>{const Se=r(ee,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:he.value});return await m(ee,he,Se.offset),Se})),J=n(ee,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,W+H)});for(let he=0;he<d.numberOfInputs;he+=1){ce[he].connect(Ce[he]);for(let Se=0;Se<d.channelCount;Se+=1)Ce[he].connect(J,Se,he*d.channelCount+Se)}for(const[he,Se]of K.entries())Se.connect(J,0,W+he),Se.start(0);return J.connect(ee.destination),await Promise.all(ce.map(he=>g(w,ee,he))),_(ee)})(),M,d,E,x,l)}const L=await S,V=t(M,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[D,G,U]=O;L!==null&&(V.buffer=L,V.start(0)),V.connect(D);for(let W=0,H=0;W<w.numberOfOutputs;W+=1){const B=G[W];for(let j=0;j<E[W];j+=1)D.connect(B,H+j,j);H+=E[W]}return U}if(v)for(const[L,V]of w.parameters.entries())await i(M,V,C.parameters.get(L));else for(const[L,V]of w.parameters.entries())await m(M,V,C.parameters.get(L));return await g(w,M,C),C};return{render(w,M){o(M,w);const C=y.get(M);return C!==void 0?Promise.resolve(C):b(w,M)}}},Bb=(i,e,t,n,s,r,a,o,c,l,h,u,f,m,g,_,p,d,x,y)=>class extends g{constructor(b,w){super(b,w),this._nativeContext=b,this._audioWorklet=i===void 0?void 0:{addModule:(M,C)=>i(this,M,C)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new e(this)}createBiquadFilter(){return new s(this)}createBuffer(b,w,M){return new t({length:w,numberOfChannels:b,sampleRate:M})}createBufferSource(){return new n(this)}createChannelMerger(b=6){return new r(this,{numberOfInputs:b})}createChannelSplitter(b=6){return new a(this,{numberOfOutputs:b})}createConstantSource(){return new o(this)}createConvolver(){return new c(this)}createDelay(b=1){return new h(this,{maxDelayTime:b})}createDynamicsCompressor(){return new u(this)}createGain(){return new f(this)}createIIRFilter(b,w){return new m(this,{feedback:w,feedforward:b})}createOscillator(){return new _(this)}createPanner(){return new p(this)}createPeriodicWave(b,w,M={disableNormalization:!1}){return new d(this,{...M,imag:w,real:b})}createStereoPanner(){return new x(this)}createWaveShaper(){return new y(this)}decodeAudioData(b,w,M){return l(this._nativeContext,b).then(C=>(typeof w=="function"&&w(C),C),C=>{throw typeof M=="function"&&M(C),C})}},Vb={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},zb=(i,e,t,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f={...Vb,...h},m=s(u,f),g=a(u),_=g?t():null;super(l,!1,m,_),this._Q=e(this,g,m.Q,hn,vn),this._detune=e(this,g,m.detune,1200*Math.log2(hn),-1200*Math.log2(hn)),this._frequency=e(this,g,m.frequency,l.sampleRate/2,0),this._gain=e(this,g,m.gain,40*Math.log10(hn),vn),this._nativeBiquadFilterNode=m,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,h,u){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,h,u)}catch(f){throw f.code===11?n():f}if(l.length!==h.length||h.length!==u.length)throw n()}},Gb=(i,e,t,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=t(o);const h=an(l,c);if(!h){const u={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=e(c,u)}return r.set(c,l),h?(await i(c,o.Q,l.Q),await i(c,o.detune,l.detune),await i(c,o.frequency,l.frequency),await i(c,o.gain,l.gain)):(await n(c,o.Q,l.Q),await n(c,o.detune,l.detune),await n(c,o.frequency,l.frequency),await n(c,o.gain,l.gain)),await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},Hb=(i,e)=>(t,n)=>{const s=e.get(t);if(s!==void 0)return s;const r=i.get(t);if(r!==void 0)return r;try{const a=n();return a instanceof Promise?(i.set(t,a),a.catch(()=>!1).then(o=>(i.delete(t),e.set(t,o),o))):(e.set(t,a),a)}catch{return e.set(t,!1),!1}},Wb={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},qb=(i,e,t,n,s)=>class extends i{constructor(a,o){const c=n(a),l={...Wb,...o},h=t(c,l),u=s(c)?e():null;super(a,!1,h,u)}},jb=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=e(r);if(!an(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfInputs:o.numberOfInputs};o=i(a,l)}return n.set(a,o),await t(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},Kb={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Xb=(i,e,t,n,s,r)=>class extends i{constructor(o,c){const l=n(o),h=r({...Kb,...c}),u=t(l,h),f=s(l)?e():null;super(o,!1,u,f)}},Yb=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=e(r);if(!an(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfOutputs:o.numberOfOutputs};o=i(a,l)}return n.set(a,o),await t(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},$b=i=>(e,t,n)=>i(t,e,n),Zb=i=>(e,t,n=0,s=0)=>{const r=e[n];if(r===void 0)throw i();return sc(t)?r.connect(t,0,s):r.connect(t,0)},Qb=i=>(e,t)=>{const n=i(e,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=e.createBuffer(1,2,44100);return n.buffer=s,n.loop=!0,n.connect(t),n.start(),()=>{n.stop(),n.disconnect(t)}},Jb={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},eM=(i,e,t,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...Jb,...l},f=n(h,u),m=r(h),g=m?t():null;super(c,!1,f,g),this._constantSourceNodeRenderer=g,this._nativeConstantSourceNode=f,this._offset=e(this,m,f.offset,hn,vn),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?a(this,c):null;this._nativeConstantSourceNode.onended=l;const h=this._nativeConstantSourceNode.onended;this._onended=h!==null&&h===l?c:h}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Fr(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),ki(this)&&Xo(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},tM=(i,e,t,n,s)=>()=>{const r=new WeakMap;let a=null,o=null;const c=async(l,h)=>{let u=t(l);const f=an(u,h);if(!f){const m={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,offset:u.offset.value};u=e(h,m),a!==null&&u.start(a),o!==null&&u.stop(o)}return r.set(h,u),f?await i(h,l.offset,u.offset):await n(h,l.offset,u.offset),await s(l,h,u),u};return{set start(l){a=l},set stop(l){o=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},nM=i=>e=>(i[0]=e,i[0]),iM={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},sM=(i,e,t,n,s,r)=>class extends i{constructor(o,c){const l=n(o),h={...iM,...c},u=t(l,h),m=s(l)?e():null;super(o,!1,u,m),this._isBufferNullified=!1,this._nativeConvolverNode=u,h.buffer!==null&&r(this,h.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(o){if(this._nativeConvolverNode.buffer=o,o===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(o){this._nativeConvolverNode.normalize=o}},rM=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=e(r);if(!an(o,a)){const l={buffer:o.buffer,channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,disableNormalization:!o.normalize};o=i(a,l)}return n.set(a,o),co(o)?await t(r,a,o.inputs[0]):await t(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},oM=(i,e)=>(t,n,s)=>{if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new e(t,n,s)}catch(r){throw r.name==="SyntaxError"?i():r}},aM=()=>new DOMException("","DataCloneError"),Ef=i=>{const{port1:e,port2:t}=new MessageChannel;return new Promise(n=>{const s=()=>{t.onmessage=null,e.close(),t.close(),n()};t.onmessage=()=>s();try{e.postMessage(i,[i])}catch{}finally{s()}})},cM=(i,e,t,n,s,r,a,o,c,l,h)=>(u,f)=>{const m=a(u)?u:r(u);if(s.has(f)){const g=t();return Promise.reject(g)}try{s.add(f)}catch{}return e(c,()=>c(m))?m.decodeAudioData(f).then(g=>(Ef(f).catch(()=>{}),e(o,()=>o(g))||h(g),i.add(g),g)):new Promise((g,_)=>{const p=async()=>{try{await Ef(f)}catch{}},d=x=>{_(x),p()};try{m.decodeAudioData(f,x=>{typeof x.copyFromChannel!="function"&&(l(x),Jh(x)),i.add(x),p().then(()=>g(x))},x=>{d(x===null?n():x)})}catch(x){d(x)}})},lM=(i,e,t,n,s,r,a,o)=>(c,l)=>{const h=e.get(c);if(h===void 0)throw new Error("Missing the expected cycle count.");const u=r(c.context),f=o(u);if(h===l){if(e.delete(c),!f&&a(c)){const m=n(c),{outputs:g}=t(c);for(const _ of g)if($o(_)){const p=n(_[0]);i(m,p,_[1],_[2])}else{const p=s(_[0]);m.connect(p,_[1])}}}else e.set(c,h-l)},hM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},uM=(i,e,t,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...hM,...l},f=n(h,u),m=r(h),g=m?t(u.maxDelayTime):null;super(c,!1,f,g),this._delayTime=e(this,m,f.delayTime),a(this,u.maxDelayTime)}get delayTime(){return this._delayTime}},dM=(i,e,t,n,s)=>r=>{const a=new WeakMap,o=async(c,l)=>{let h=t(c);const u=an(h,l);if(!u){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,delayTime:h.delayTime.value,maxDelayTime:r};h=e(l,f)}return a.set(l,h),u?await i(l,c.delayTime,h.delayTime):await n(l,c.delayTime,h.delayTime),await s(c,l,h),h};return{render(c,l){const h=a.get(l);return h!==void 0?Promise.resolve(h):o(c,l)}}},fM=i=>(e,t,n,s)=>i(e[s],r=>r[0]===t&&r[1]===n),pM=i=>(e,t)=>{i(e).delete(t)},mM=i=>"delayTime"in i,gM=(i,e,t)=>function n(s,r){const a=tc(r)?r:t(i,r);if(mM(a))return[];if(s[0]===a)return[s];if(s.includes(a))return[];const{outputs:o}=e(a);return Array.from(o).map(c=>n([...s,a],c[0])).reduce((c,l)=>c.concat(l),[])},Pa=(i,e,t)=>{const n=e[t];if(n===void 0)throw i();return n},_M=i=>(e,t=void 0,n=void 0,s=0)=>t===void 0?e.forEach(r=>r.disconnect()):typeof t=="number"?Pa(i,e,t).disconnect():sc(t)?n===void 0?e.forEach(r=>r.disconnect(t)):s===void 0?Pa(i,e,n).disconnect(t,0):Pa(i,e,n).disconnect(t,0,s):n===void 0?e.forEach(r=>r.disconnect(t)):Pa(i,e,n).disconnect(t,0),yM={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},vM=(i,e,t,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f={...yM,...h},m=n(u,f),g=a(u),_=g?t():null;super(l,!1,m,_),this._attack=e(this,g,m.attack),this._knee=e(this,g,m.knee),this._nativeDynamicsCompressorNode=m,this._ratio=e(this,g,m.ratio),this._release=e(this,g,m.release),this._threshold=e(this,g,m.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const h=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=h,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const h=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=h,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},xM=(i,e,t,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=t(o);const h=an(l,c);if(!h){const u={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=e(c,u)}return r.set(c,l),h?(await i(c,o.attack,l.attack),await i(c,o.knee,l.knee),await i(c,o.ratio,l.ratio),await i(c,o.release,l.release),await i(c,o.threshold,l.threshold)):(await n(c,o.attack,l.attack),await n(c,o.knee,l.knee),await n(c,o.ratio,l.ratio),await n(c,o.release,l.release),await n(c,o.threshold,l.threshold)),await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},SM=()=>new DOMException("","EncodingError"),bM=i=>e=>new Promise((t,n)=>{if(i===null){n(new SyntaxError);return}const s=i.document.head;if(s===null)n(new SyntaxError);else{const r=i.document.createElement("script"),a=new Blob([e],{type:"application/javascript"}),o=URL.createObjectURL(a),c=i.onerror,l=()=>{i.onerror=c,URL.revokeObjectURL(o)};i.onerror=(h,u,f,m,g)=>{if(u===o||u===i.location.href&&f===1&&m===1)return l(),n(g),!1;if(c!==null)return c(h,u,f,m,g)},r.onerror=()=>{l(),n(new SyntaxError)},r.onload=()=>{l(),t()},r.src=o,r.type="module",s.appendChild(r)}}),MM=i=>class{constructor(t){this._nativeEventTarget=t,this._listeners=new WeakMap}addEventListener(t,n,s){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=i(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(t,r,s)}}dispatchEvent(t){return this._nativeEventTarget.dispatchEvent(t)}removeEventListener(t,n,s){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(t,r===void 0?null:r,s)}},wM=i=>(e,t,n)=>{Object.defineProperties(i,{currentFrame:{configurable:!0,get(){return Math.round(e*t)}},currentTime:{configurable:!0,get(){return e}}});try{return n()}finally{i!==null&&(delete i.currentFrame,delete i.currentTime)}},TM=i=>async e=>{try{const t=await fetch(e);if(t.ok)return[await t.text(),t.url]}catch{}throw i()},EM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},AM=(i,e,t,n,s,r)=>class extends i{constructor(o,c){const l=s(o),h={...EM,...c},u=n(l,h),f=r(l),m=f?t():null;super(o,!1,u,m),this._gain=e(this,f,u.gain,hn,vn)}get gain(){return this._gain}},CM=(i,e,t,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=t(o);const h=an(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=e(c,u)}return r.set(c,l),h?await i(c,o.gain,l.gain):await n(c,o.gain,l.gain),await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},RM=(i,e)=>t=>e(i,t),IM=i=>e=>{const t=i(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return t.renderer},DM=i=>e=>{var t;return(t=i.get(e))!==null&&t!==void 0?t:0},PM=i=>e=>{const t=i(e);if(t.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return t.renderer},LM=i=>e=>i.get(e),Ht=()=>new DOMException("","InvalidStateError"),NM=i=>e=>{const t=i.get(e);if(t===void 0)throw Ht();return t},OM=(i,e)=>t=>{let n=i.get(t);if(n!==void 0)return n;if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new e(1,1,44100),i.set(t,n),n},FM=i=>e=>{const t=i.get(e);if(t===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return t},rl=()=>new DOMException("","InvalidAccessError"),kM=i=>{i.getFrequencyResponse=(e=>(t,n,s)=>{if(t.length!==n.length||n.length!==s.length)throw rl();return e.call(i,t,n,s)})(i.getFrequencyResponse)},UM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},BM=(i,e,t,n,s,r)=>class extends i{constructor(o,c){const l=n(o),h=s(l),u={...UM,...c},f=e(l,h?null:o.baseLatency,u),m=h?t(u.feedback,u.feedforward):null;super(o,!1,f,m),kM(f),this._nativeIIRFilterNode=f,r(this,1)}getFrequencyResponse(o,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(o,c,l)}},sm=(i,e,t,n,s,r,a,o,c,l,h)=>{const u=l.length;let f=o;for(let m=0;m<u;m+=1){let g=t[0]*l[m];for(let _=1;_<s;_+=1){const p=f-_&c-1;g+=t[_]*r[p],g-=i[_]*a[p]}for(let _=s;_<n;_+=1)g+=t[_]*r[f-_&c-1];for(let _=s;_<e;_+=1)g-=i[_]*a[f-_&c-1];r[f]=l[m],a[f]=g,f=f+1&c-1,h[m]=g}return f},VM=(i,e,t,n)=>{const s=t instanceof Float64Array?t:new Float64Array(t),r=n instanceof Float64Array?n:new Float64Array(n),a=s.length,o=r.length,c=Math.min(a,o);if(s[0]!==1){for(let g=0;g<a;g+=1)r[g]/=s[0];for(let g=1;g<o;g+=1)s[g]/=s[0]}const l=32,h=new Float32Array(l),u=new Float32Array(l),f=e.createBuffer(i.numberOfChannels,i.length,i.sampleRate),m=i.numberOfChannels;for(let g=0;g<m;g+=1){const _=i.getChannelData(g),p=f.getChannelData(g);h.fill(0),u.fill(0),sm(s,a,r,o,c,h,u,0,l,_,p)}return f},zM=(i,e,t,n,s)=>(r,a)=>{const o=new WeakMap;let c=null;const l=async(h,u)=>{let f=null,m=e(h);const g=an(m,u);if(u.createIIRFilter===void 0?f=i(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):g||(m=u.createIIRFilter(a,r)),o.set(u,f===null?m:f),f!==null){if(c===null){if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");const p=new t(h.context.destination.channelCount,h.context.length,u.sampleRate);c=(async()=>{await n(h,p,p.destination);const d=await s(p);return VM(d,u,r,a)})()}const _=await c;return f.buffer=_,f.start(0),f}return await n(h,u,m),m};return{render(h,u){const f=o.get(u);return f!==void 0?Promise.resolve(f):l(h,u)}}},GM=(i,e,t,n,s,r)=>a=>(o,c)=>{const l=i.get(o);if(l===void 0){if(!a&&r(o)){const h=n(o),{outputs:u}=t(o);for(const f of u)if($o(f)){const m=n(f[0]);e(h,m,f[1],f[2])}else{const m=s(f[0]);h.disconnect(m,f[1])}}i.set(o,c)}else i.set(o,l+c)},HM=(i,e)=>t=>{const n=i.get(t);return e(n)||e(t)},WM=(i,e)=>t=>i.has(t)||e(t),qM=(i,e)=>t=>i.has(t)||e(t),jM=(i,e)=>t=>{const n=i.get(t);return e(n)||e(t)},KM=i=>e=>i!==null&&e instanceof i,XM=i=>e=>i!==null&&typeof i.AudioNode=="function"&&e instanceof i.AudioNode,YM=i=>e=>i!==null&&typeof i.AudioParam=="function"&&e instanceof i.AudioParam,$M=(i,e)=>t=>i(t)||e(t),ZM=i=>e=>i!==null&&e instanceof i,QM=i=>i!==null&&i.isSecureContext,JM=async(i,e,t,n,s,r,a,o,c,l,h,u,f,m,g,_)=>i(e,e)&&i(t,t)&&i(s,s)&&i(r,r)&&i(o,o)&&i(c,c)&&i(l,l)&&i(h,h)&&i(u,u)&&i(f,f)&&i(m,m)?(await Promise.all([i(n,n),i(a,a),i(g,g),i(_,_)])).every(d=>d):!1,ew=(i,e,t,n)=>class extends i{constructor(r,a){const o=t(r),c=e(o,a);if(n(o))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},tw={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},nw=(i,e,t,n)=>class extends i{constructor(r,a){const o=t(r);if(n(o))throw new TypeError;const c={...tw,...a},l=e(o,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},iw=(i,e,t,n)=>class extends i{constructor(r,a){const o=t(r),c=e(o,a);if(n(o))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},sw=(i,e,t)=>class extends i{constructor(s,r){const a=t(s),o=e(a,r);super(s,!0,o,null)}},rw=(i,e,t,n,s,r)=>class extends t{constructor(o,c){super(o),this._nativeContext=o,il.set(this,o),n(o)&&s.set(o,new Set),this._destination=new i(this,c),this._listener=e(this,o),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(o){const c=typeof o=="function"?r(this,o):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?o:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Bo=i=>{const e=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const t=i.decodeAudioData(e.buffer,()=>{});return t===void 0?!1:(t.catch(()=>{}),!0)}catch{}return!1},ow=(i,e)=>(t,n,s)=>{const r=new Set;return t.connect=(a=>(o,c=0,l=0)=>{const h=r.size===0;if(e(o))return a.call(t,o,c,l),i(r,[o,c,l],u=>u[0]===o&&u[1]===c&&u[2]===l,!0),h&&n(),o;a.call(t,o,c),i(r,[o,c],u=>u[0]===o&&u[1]===c,!0),h&&n()})(t.connect),t.disconnect=(a=>(o,c,l)=>{const h=r.size>0;if(o===void 0)a.apply(t),r.clear();else if(typeof o=="number"){a.call(t,o);for(const f of r)f[1]===o&&r.delete(f)}else{e(o)?a.call(t,o,c,l):a.call(t,o,c);for(const f of r)f[0]===o&&(c===void 0||f[1]===c)&&(l===void 0||f[2]===l)&&r.delete(f)}const u=r.size===0;h&&u&&s()})(t.disconnect),t},bt=(i,e,t)=>{const n=e[t];n!==void 0&&n!==i[t]&&(i[t]=n)},kt=(i,e)=>{bt(i,e,"channelCount"),bt(i,e,"channelCountMode"),bt(i,e,"channelInterpretation")},Af=i=>typeof i.getFloatTimeDomainData=="function",aw=i=>{i.getFloatTimeDomainData=e=>{const t=new Uint8Array(e.length);i.getByteTimeDomainData(t);const n=Math.max(t.length,i.fftSize);for(let s=0;s<n;s+=1)e[s]=(t[s]-128)*.0078125;return e}},cw=(i,e)=>(t,n)=>{const s=t.createAnalyser();if(kt(s,n),!(n.maxDecibels>n.minDecibels))throw e();return bt(s,n,"fftSize"),bt(s,n,"maxDecibels"),bt(s,n,"minDecibels"),bt(s,n,"smoothingTimeConstant"),i(Af,()=>Af(s))||aw(s),s},lw=i=>i===null?null:i.hasOwnProperty("AudioBuffer")?i.AudioBuffer:null,Ct=(i,e,t)=>{const n=e[t];n!==void 0&&n!==i[t].value&&(i[t].value=n)},hw=i=>{i.start=(e=>{let t=!1;return(n=0,s=0,r)=>{if(t)throw Ht();e.call(i,n,s,r),t=!0}})(i.start)},nu=i=>{i.start=(e=>(t=0,n=0,s)=>{if(typeof s=="number"&&s<0||n<0||t<0)throw new RangeError("The parameters can't be negative.");e.call(i,t,n,s)})(i.start)},iu=i=>{i.stop=(e=>(t=0)=>{if(t<0)throw new RangeError("The parameter can't be negative.");e.call(i,t)})(i.stop)},uw=(i,e,t,n,s,r,a,o,c,l,h)=>(u,f)=>{const m=u.createBufferSource();return kt(m,f),Ct(m,f,"playbackRate"),bt(m,f,"buffer"),bt(m,f,"loop"),bt(m,f,"loopEnd"),bt(m,f,"loopStart"),e(t,()=>t(u))||hw(m),e(n,()=>n(u))||c(m),e(s,()=>s(u))||l(m,u),e(r,()=>r(u))||nu(m),e(a,()=>a(u))||h(m,u),e(o,()=>o(u))||iu(m),i(u,m),m},dw=i=>i===null?null:i.hasOwnProperty("AudioContext")?i.AudioContext:i.hasOwnProperty("webkitAudioContext")?i.webkitAudioContext:null,fw=(i,e)=>(t,n,s)=>{const r=t.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}s&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const a=i(t,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return e(a,"channelCount",o=>()=>o.call(a),o=>c=>{o.call(a,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),e(a,"channelCountMode",o=>()=>o.call(a),o=>c=>{o.call(a,c),r.channelCountMode=c}),e(a,"channelInterpretation",o=>()=>o.call(a),o=>c=>{o.call(a,c),r.channelInterpretation=c}),Object.defineProperty(a,"maxChannelCount",{get:()=>r.maxChannelCount}),a.connect(r),a},pw=i=>i===null?null:i.hasOwnProperty("AudioWorkletNode")?i.AudioWorkletNode:null,mw=i=>{const{port1:e}=new MessageChannel;try{e.postMessage(i)}finally{e.close()}},gw=(i,e,t,n,s)=>(r,a,o,c,l,h)=>{if(o!==null)try{const u=new o(r,c,h),f=new Map;let m=null;if(Object.defineProperties(u,{channelCount:{get:()=>h.channelCount,set:()=>{throw i()}},channelCountMode:{get:()=>"explicit",set:()=>{throw i()}},onprocessorerror:{get:()=>m,set:g=>{typeof m=="function"&&u.removeEventListener("processorerror",m),m=typeof g=="function"?g:null,typeof m=="function"&&u.addEventListener("processorerror",m)}}}),u.addEventListener=(g=>(..._)=>{if(_[0]==="processorerror"){const p=typeof _[1]=="function"?_[1]:typeof _[1]=="object"&&_[1]!==null&&typeof _[1].handleEvent=="function"?_[1].handleEvent:null;if(p!==null){const d=f.get(_[1]);d!==void 0?_[1]=d:(_[1]=x=>{x.type==="error"?(Object.defineProperties(x,{type:{value:"processorerror"}}),p(x)):p(new ErrorEvent(_[0],{...x}))},f.set(p,_[1]))}}return g.call(u,"error",_[1],_[2]),g.call(u,..._)})(u.addEventListener),u.removeEventListener=(g=>(..._)=>{if(_[0]==="processorerror"){const p=f.get(_[1]);p!==void 0&&(f.delete(_[1]),_[1]=p)}return g.call(u,"error",_[1],_[2]),g.call(u,_[0],_[1],_[2])})(u.removeEventListener),h.numberOfOutputs!==0){const g=t(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return u.connect(g).connect(r.destination),s(u,()=>g.disconnect(),()=>g.connect(r.destination))}return u}catch(u){throw u.code===11?n():u}if(l===void 0)throw n();return mw(h),e(r,a,l,h)},rm=(i,e)=>i===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(i*e))))),_w=i=>new Promise((e,t)=>{const{port1:n,port2:s}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),s.close(),e(r)},n.onmessageerror=({data:r})=>{n.close(),s.close(),t(r)},s.postMessage(i)}),yw=async(i,e)=>{const t=await _w(e);return new i(t)},vw=(i,e,t,n)=>{let s=Mh.get(i);s===void 0&&(s=new WeakMap,Mh.set(i,s));const r=yw(t,n);return s.set(e,r),r},xw=(i,e,t,n,s,r,a,o,c,l,h,u,f)=>(m,g,_,p)=>{if(p.numberOfInputs===0&&p.numberOfOutputs===0)throw c();const d=Array.isArray(p.outputChannelCount)?p.outputChannelCount:Array.from(p.outputChannelCount);if(d.some(se=>se<1))throw c();if(d.length!==p.numberOfOutputs)throw e();if(p.channelCountMode!=="explicit")throw c();const x=p.channelCount*p.numberOfInputs,y=d.reduce((se,oe)=>se+oe,0),S=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length;if(x+S>6||y>6)throw c();const b=new MessageChannel,w=[],M=[];for(let se=0;se<p.numberOfInputs;se+=1)w.push(a(m,{channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,gain:1})),M.push(s(m,{channelCount:p.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:p.channelCount}));const C=[];if(_.parameterDescriptors!==void 0)for(const{defaultValue:se,maxValue:oe,minValue:De,name:be}of _.parameterDescriptors){const ye=r(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:p.parameterData[be]!==void 0?p.parameterData[be]:se===void 0?0:se});Object.defineProperties(ye.offset,{defaultValue:{get:()=>se===void 0?0:se},maxValue:{get:()=>oe===void 0?hn:oe},minValue:{get:()=>De===void 0?vn:De}}),C.push(ye)}const O=n(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,x+S)}),v=rm(g,m.sampleRate),E=o(m,v,x+S,Math.max(1,y)),L=s(m,{channelCount:Math.max(1,y),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,y)}),V=[];for(let se=0;se<p.numberOfOutputs;se+=1)V.push(n(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:d[se]}));for(let se=0;se<p.numberOfInputs;se+=1){w[se].connect(M[se]);for(let oe=0;oe<p.channelCount;oe+=1)M[se].connect(O,oe,se*p.channelCount+oe)}const D=new nm(_.parameterDescriptors===void 0?[]:_.parameterDescriptors.map(({name:se},oe)=>{const De=C[oe];return De.connect(O,0,x+oe),De.start(0),[se,De.offset]}));O.connect(E);let G=p.channelInterpretation,U=null;const W=p.numberOfOutputs===0?[E]:V,H={get bufferSize(){return v},get channelCount(){return p.channelCount},set channelCount(se){throw t()},get channelCountMode(){return p.channelCountMode},set channelCountMode(se){throw t()},get channelInterpretation(){return G},set channelInterpretation(se){for(const oe of w)oe.channelInterpretation=se;G=se},get context(){return E.context},get inputs(){return w},get numberOfInputs(){return p.numberOfInputs},get numberOfOutputs(){return p.numberOfOutputs},get onprocessorerror(){return U},set onprocessorerror(se){typeof U=="function"&&H.removeEventListener("processorerror",U),U=typeof se=="function"?se:null,typeof U=="function"&&H.addEventListener("processorerror",U)},get parameters(){return D},get port(){return b.port2},addEventListener(...se){return E.addEventListener(se[0],se[1],se[2])},connect:i.bind(null,W),disconnect:l.bind(null,W),dispatchEvent(...se){return E.dispatchEvent(se[0])},removeEventListener(...se){return E.removeEventListener(se[0],se[1],se[2])}},B=new Map;b.port1.addEventListener=(se=>(...oe)=>{if(oe[0]==="message"){const De=typeof oe[1]=="function"?oe[1]:typeof oe[1]=="object"&&oe[1]!==null&&typeof oe[1].handleEvent=="function"?oe[1].handleEvent:null;if(De!==null){const be=B.get(oe[1]);be!==void 0?oe[1]=be:(oe[1]=ye=>{h(m.currentTime,m.sampleRate,()=>De(ye))},B.set(De,oe[1]))}}return se.call(b.port1,oe[0],oe[1],oe[2])})(b.port1.addEventListener),b.port1.removeEventListener=(se=>(...oe)=>{if(oe[0]==="message"){const De=B.get(oe[1]);De!==void 0&&(B.delete(oe[1]),oe[1]=De)}return se.call(b.port1,oe[0],oe[1],oe[2])})(b.port1.removeEventListener);let j=null;Object.defineProperty(b.port1,"onmessage",{get:()=>j,set:se=>{typeof j=="function"&&b.port1.removeEventListener("message",j),j=typeof se=="function"?se:null,typeof j=="function"&&(b.port1.addEventListener("message",j),b.port1.start())}}),_.prototype.port=b.port1;let ee=null;vw(m,H,_,p).then(se=>ee=se);const Ce=oc(p.numberOfInputs,p.channelCount),K=oc(p.numberOfOutputs,d),J=_.parameterDescriptors===void 0?[]:_.parameterDescriptors.reduce((se,{name:oe})=>({...se,[oe]:new Float32Array(128)}),{});let he=!0;const Se=()=>{p.numberOfOutputs>0&&E.disconnect(L);for(let se=0,oe=0;se<p.numberOfOutputs;se+=1){const De=V[se];for(let be=0;be<d[se];be+=1)L.disconnect(De,oe+be,be);oe+=d[se]}},ne=new Map;E.onaudioprocess=({inputBuffer:se,outputBuffer:oe})=>{if(ee!==null){const De=u(H);for(let be=0;be<v;be+=128){for(let ye=0;ye<p.numberOfInputs;ye+=1)for(let Be=0;Be<p.channelCount;Be+=1)rc(se,Ce[ye],Be,Be,be);_.parameterDescriptors!==void 0&&_.parameterDescriptors.forEach(({name:ye},Be)=>{rc(se,J,ye,x+Be,be)});for(let ye=0;ye<p.numberOfInputs;ye+=1)for(let Be=0;Be<d[ye];Be+=1)K[ye][Be].byteLength===0&&(K[ye][Be]=new Float32Array(128));try{const ye=Ce.map((I,T)=>{if(De[T].size>0)return ne.set(T,v/128),I;const te=ne.get(T);return te===void 0?[]:(I.every(le=>le.every(re=>re===0))&&(te===1?ne.delete(T):ne.set(T,te-1)),I)});he=h(m.currentTime+be/m.sampleRate,m.sampleRate,()=>ee.process(ye,K,J));for(let I=0,T=0;I<p.numberOfOutputs;I+=1){for(let Z=0;Z<d[I];Z+=1)im(oe,K[I],Z,T+Z,be);T+=d[I]}}catch(ye){he=!1,H.dispatchEvent(new ErrorEvent("processorerror",{colno:ye.colno,filename:ye.filename,lineno:ye.lineno,message:ye.message}))}if(!he){for(let ye=0;ye<p.numberOfInputs;ye+=1){w[ye].disconnect(M[ye]);for(let Be=0;Be<p.channelCount;Be+=1)M[be].disconnect(O,Be,ye*p.channelCount+Be)}if(_.parameterDescriptors!==void 0){const ye=_.parameterDescriptors.length;for(let Be=0;Be<ye;Be+=1){const I=C[Be];I.disconnect(O,0,x+Be),I.stop()}}O.disconnect(E),E.onaudioprocess=null,me?Se():z();break}}}};let me=!1;const Ve=a(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Le=()=>E.connect(Ve).connect(m.destination),z=()=>{E.disconnect(Ve),Ve.disconnect()},pt=()=>{if(he){z(),p.numberOfOutputs>0&&E.connect(L);for(let se=0,oe=0;se<p.numberOfOutputs;se+=1){const De=V[se];for(let be=0;be<d[se];be+=1)L.connect(De,oe+be,be);oe+=d[se]}}me=!0},Pe=()=>{he&&(Le(),Se()),me=!1};return Le(),f(H,pt,Pe)},om=(i,e)=>{const t=i.createBiquadFilter();return kt(t,e),Ct(t,e,"Q"),Ct(t,e,"detune"),Ct(t,e,"frequency"),Ct(t,e,"gain"),bt(t,e,"type"),t},Sw=(i,e)=>(t,n)=>{const s=t.createChannelMerger(n.numberOfInputs);return i!==null&&i.name==="webkitAudioContext"&&e(t,s),kt(s,n),s},bw=i=>{const e=i.numberOfOutputs;Object.defineProperty(i,"channelCount",{get:()=>e,set:t=>{if(t!==e)throw Ht()}}),Object.defineProperty(i,"channelCountMode",{get:()=>"explicit",set:t=>{if(t!=="explicit")throw Ht()}}),Object.defineProperty(i,"channelInterpretation",{get:()=>"discrete",set:t=>{if(t!=="discrete")throw Ht()}})},Zo=(i,e)=>{const t=i.createChannelSplitter(e.numberOfOutputs);return kt(t,e),bw(t),t},Mw=(i,e,t,n,s)=>(r,a)=>{if(r.createConstantSource===void 0)return t(r,a);const o=r.createConstantSource();return kt(o,a),Ct(o,a,"offset"),e(n,()=>n(r))||nu(o),e(s,()=>s(r))||iu(o),i(r,o),o},lo=(i,e)=>(i.connect=e.connect.bind(e),i.disconnect=e.disconnect.bind(e),i),ww=(i,e,t,n)=>(s,{offset:r,...a})=>{const o=s.createBuffer(1,2,44100),c=e(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=t(s,{...a,gain:r}),h=o.getChannelData(0);h[0]=1,h[1]=1,c.buffer=o,c.loop=!0;const u={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(g){l.channelCount=g},get channelCountMode(){return l.channelCountMode},set channelCountMode(g){l.channelCountMode=g},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(g){l.channelInterpretation=g},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(g){c.onended=g},addEventListener(...g){return c.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return c.dispatchEvent(g[0])},removeEventListener(...g){return c.removeEventListener(g[0],g[1],g[2])},start(g=0){c.start.call(c,g)},stop(g=0){c.stop.call(c,g)}},f=()=>c.connect(l),m=()=>c.disconnect(l);return i(s,c),n(lo(u,l),f,m)},Tw=(i,e)=>(t,n)=>{const s=t.createConvolver();if(kt(s,n),n.disableNormalization===s.normalize&&(s.normalize=!n.disableNormalization),bt(s,n,"buffer"),n.channelCount>2||(e(s,"channelCount",r=>()=>r.call(s),r=>a=>{if(a>2)throw i();return r.call(s,a)}),n.channelCountMode==="max"))throw i();return e(s,"channelCountMode",r=>()=>r.call(s),r=>a=>{if(a==="max")throw i();return r.call(s,a)}),s},am=(i,e)=>{const t=i.createDelay(e.maxDelayTime);return kt(t,e),Ct(t,e,"delayTime"),t},Ew=i=>(e,t)=>{const n=e.createDynamicsCompressor();if(kt(n,t),t.channelCount>2||t.channelCountMode==="max")throw i();return Ct(n,t,"attack"),Ct(n,t,"knee"),Ct(n,t,"ratio"),Ct(n,t,"release"),Ct(n,t,"threshold"),n},Mn=(i,e)=>{const t=i.createGain();return kt(t,e),Ct(t,e,"gain"),t},Aw=i=>(e,t,n)=>{if(e.createIIRFilter===void 0)return i(e,t,n);const s=e.createIIRFilter(n.feedforward,n.feedback);return kt(s,n),s};function Cw(i,e){const t=e[0]*e[0]+e[1]*e[1];return[(i[0]*e[0]+i[1]*e[1])/t,(i[1]*e[0]-i[0]*e[1])/t]}function Rw(i,e){return[i[0]*e[0]-i[1]*e[1],i[0]*e[1]+i[1]*e[0]]}function Cf(i,e){let t=[0,0];for(let n=i.length-1;n>=0;n-=1)t=Rw(t,e),t[0]+=i[n];return t}const Iw=(i,e,t,n)=>(s,r,{channelCount:a,channelCountMode:o,channelInterpretation:c,feedback:l,feedforward:h})=>{const u=rm(r,s.sampleRate),f=l instanceof Float64Array?l:new Float64Array(l),m=h instanceof Float64Array?h:new Float64Array(h),g=f.length,_=m.length,p=Math.min(g,_);if(g===0||g>20)throw n();if(f[0]===0)throw e();if(_===0||_>20)throw n();if(m[0]===0)throw e();if(f[0]!==1){for(let C=0;C<_;C+=1)m[C]/=f[0];for(let C=1;C<g;C+=1)f[C]/=f[0]}const d=t(s,u,a,a);d.channelCount=a,d.channelCountMode=o,d.channelInterpretation=c;const x=32,y=[],S=[],b=[];for(let C=0;C<a;C+=1){y.push(0);const O=new Float32Array(x),v=new Float32Array(x);O.fill(0),v.fill(0),S.push(O),b.push(v)}d.onaudioprocess=C=>{const O=C.inputBuffer,v=C.outputBuffer,E=O.numberOfChannels;for(let L=0;L<E;L+=1){const V=O.getChannelData(L),D=v.getChannelData(L);y[L]=sm(f,g,m,_,p,S[L],b[L],y[L],x,V,D)}};const w=s.sampleRate/2;return lo({get bufferSize(){return u},get channelCount(){return d.channelCount},set channelCount(C){d.channelCount=C},get channelCountMode(){return d.channelCountMode},set channelCountMode(C){d.channelCountMode=C},get channelInterpretation(){return d.channelInterpretation},set channelInterpretation(C){d.channelInterpretation=C},get context(){return d.context},get inputs(){return[d]},get numberOfInputs(){return d.numberOfInputs},get numberOfOutputs(){return d.numberOfOutputs},addEventListener(...C){return d.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return d.dispatchEvent(C[0])},getFrequencyResponse(C,O,v){if(C.length!==O.length||O.length!==v.length)throw i();const E=C.length;for(let L=0;L<E;L+=1){const V=-Math.PI*(C[L]/w),D=[Math.cos(V),Math.sin(V)],G=Cf(m,D),U=Cf(f,D),W=Cw(G,U);O[L]=Math.sqrt(W[0]*W[0]+W[1]*W[1]),v[L]=Math.atan2(W[1],W[0])}},removeEventListener(...C){return d.removeEventListener(C[0],C[1],C[2])}},d)},Dw=(i,e)=>i.createMediaElementSource(e.mediaElement),Pw=(i,e)=>{const t=i.createMediaStreamDestination();return kt(t,e),t.numberOfOutputs===1&&Object.defineProperty(t,"numberOfOutputs",{get:()=>0}),t},Lw=(i,{mediaStream:e})=>{const t=e.getAudioTracks();t.sort((r,a)=>r.id<a.id?-1:r.id>a.id?1:0);const n=t.slice(0,1),s=i.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(s,"mediaStream",{value:e}),s},Nw=(i,e)=>(t,{mediaStreamTrack:n})=>{if(typeof t.createMediaStreamTrackSource=="function")return t.createMediaStreamTrackSource(n);const s=new MediaStream([n]),r=t.createMediaStreamSource(s);if(n.kind!=="audio")throw i();if(e(t))throw new TypeError;return r},Ow=i=>i===null?null:i.hasOwnProperty("OfflineAudioContext")?i.OfflineAudioContext:i.hasOwnProperty("webkitOfflineAudioContext")?i.webkitOfflineAudioContext:null,Fw=(i,e,t,n,s,r)=>(a,o)=>{const c=a.createOscillator();return kt(c,o),Ct(c,o,"detune"),Ct(c,o,"frequency"),o.periodicWave!==void 0?c.setPeriodicWave(o.periodicWave):bt(c,o,"type"),e(t,()=>t(a))||nu(c),e(n,()=>n(a))||r(c,a),e(s,()=>s(a))||iu(c),i(a,c),c},kw=i=>(e,t)=>{const n=e.createPanner();return n.orientationX===void 0?i(e,t):(kt(n,t),Ct(n,t,"orientationX"),Ct(n,t,"orientationY"),Ct(n,t,"orientationZ"),Ct(n,t,"positionX"),Ct(n,t,"positionY"),Ct(n,t,"positionZ"),bt(n,t,"coneInnerAngle"),bt(n,t,"coneOuterAngle"),bt(n,t,"coneOuterGain"),bt(n,t,"distanceModel"),bt(n,t,"maxDistance"),bt(n,t,"panningModel"),bt(n,t,"refDistance"),bt(n,t,"rolloffFactor"),n)},Uw=(i,e,t,n,s,r,a,o,c,l)=>(h,{coneInnerAngle:u,coneOuterAngle:f,coneOuterGain:m,distanceModel:g,maxDistance:_,orientationX:p,orientationY:d,orientationZ:x,panningModel:y,positionX:S,positionY:b,positionZ:w,refDistance:M,rolloffFactor:C,...O})=>{const v=h.createPanner();if(O.channelCount>2||O.channelCountMode==="max")throw a();kt(v,O);const E={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},L=t(h,{...E,channelInterpretation:"speakers",numberOfInputs:6}),V=n(h,{...O,gain:1}),D=n(h,{...E,gain:1}),G=n(h,{...E,gain:0}),U=n(h,{...E,gain:0}),W=n(h,{...E,gain:0}),H=n(h,{...E,gain:0}),B=n(h,{...E,gain:0}),j=s(h,256,6,1),ee=r(h,{...E,curve:new Float32Array([1,1]),oversample:"none"});let ce=[p,d,x],Ce=[S,b,w];const K=new Float32Array(1);j.onaudioprocess=({inputBuffer:ne})=>{const me=[c(ne,K,0),c(ne,K,1),c(ne,K,2)];me.some((Le,z)=>Le!==ce[z])&&(v.setOrientation(...me),ce=me);const Ve=[c(ne,K,3),c(ne,K,4),c(ne,K,5)];Ve.some((Le,z)=>Le!==Ce[z])&&(v.setPosition(...Ve),Ce=Ve)},Object.defineProperty(G.gain,"defaultValue",{get:()=>0}),Object.defineProperty(U.gain,"defaultValue",{get:()=>0}),Object.defineProperty(W.gain,"defaultValue",{get:()=>0}),Object.defineProperty(H.gain,"defaultValue",{get:()=>0}),Object.defineProperty(B.gain,"defaultValue",{get:()=>0});const J={get bufferSize(){},get channelCount(){return v.channelCount},set channelCount(ne){if(ne>2)throw a();V.channelCount=ne,v.channelCount=ne},get channelCountMode(){return v.channelCountMode},set channelCountMode(ne){if(ne==="max")throw a();V.channelCountMode=ne,v.channelCountMode=ne},get channelInterpretation(){return v.channelInterpretation},set channelInterpretation(ne){V.channelInterpretation=ne,v.channelInterpretation=ne},get coneInnerAngle(){return v.coneInnerAngle},set coneInnerAngle(ne){v.coneInnerAngle=ne},get coneOuterAngle(){return v.coneOuterAngle},set coneOuterAngle(ne){v.coneOuterAngle=ne},get coneOuterGain(){return v.coneOuterGain},set coneOuterGain(ne){if(ne<0||ne>1)throw e();v.coneOuterGain=ne},get context(){return v.context},get distanceModel(){return v.distanceModel},set distanceModel(ne){v.distanceModel=ne},get inputs(){return[V]},get maxDistance(){return v.maxDistance},set maxDistance(ne){if(ne<0)throw new RangeError;v.maxDistance=ne},get numberOfInputs(){return v.numberOfInputs},get numberOfOutputs(){return v.numberOfOutputs},get orientationX(){return D.gain},get orientationY(){return G.gain},get orientationZ(){return U.gain},get panningModel(){return v.panningModel},set panningModel(ne){v.panningModel=ne},get positionX(){return W.gain},get positionY(){return H.gain},get positionZ(){return B.gain},get refDistance(){return v.refDistance},set refDistance(ne){if(ne<0)throw new RangeError;v.refDistance=ne},get rolloffFactor(){return v.rolloffFactor},set rolloffFactor(ne){if(ne<0)throw new RangeError;v.rolloffFactor=ne},addEventListener(...ne){return V.addEventListener(ne[0],ne[1],ne[2])},dispatchEvent(...ne){return V.dispatchEvent(ne[0])},removeEventListener(...ne){return V.removeEventListener(ne[0],ne[1],ne[2])}};u!==J.coneInnerAngle&&(J.coneInnerAngle=u),f!==J.coneOuterAngle&&(J.coneOuterAngle=f),m!==J.coneOuterGain&&(J.coneOuterGain=m),g!==J.distanceModel&&(J.distanceModel=g),_!==J.maxDistance&&(J.maxDistance=_),p!==J.orientationX.value&&(J.orientationX.value=p),d!==J.orientationY.value&&(J.orientationY.value=d),x!==J.orientationZ.value&&(J.orientationZ.value=x),y!==J.panningModel&&(J.panningModel=y),S!==J.positionX.value&&(J.positionX.value=S),b!==J.positionY.value&&(J.positionY.value=b),w!==J.positionZ.value&&(J.positionZ.value=w),M!==J.refDistance&&(J.refDistance=M),C!==J.rolloffFactor&&(J.rolloffFactor=C),(ce[0]!==1||ce[1]!==0||ce[2]!==0)&&v.setOrientation(...ce),(Ce[0]!==0||Ce[1]!==0||Ce[2]!==0)&&v.setPosition(...Ce);const he=()=>{V.connect(v),i(V,ee,0,0),ee.connect(D).connect(L,0,0),ee.connect(G).connect(L,0,1),ee.connect(U).connect(L,0,2),ee.connect(W).connect(L,0,3),ee.connect(H).connect(L,0,4),ee.connect(B).connect(L,0,5),L.connect(j).connect(h.destination)},Se=()=>{V.disconnect(v),o(V,ee,0,0),ee.disconnect(D),D.disconnect(L),ee.disconnect(G),G.disconnect(L),ee.disconnect(U),U.disconnect(L),ee.disconnect(W),W.disconnect(L),ee.disconnect(H),H.disconnect(L),ee.disconnect(B),B.disconnect(L),L.disconnect(j),j.disconnect(h.destination)};return l(lo(J,v),he,Se)},Bw=i=>(e,{disableNormalization:t,imag:n,real:s})=>{const r=n instanceof Float32Array?n:new Float32Array(n),a=s instanceof Float32Array?s:new Float32Array(s),o=e.createPeriodicWave(a,r,{disableNormalization:t});if(Array.from(n).length<2)throw i();return o},Qo=(i,e,t,n)=>i.createScriptProcessor(e,t,n),Vw=(i,e)=>(t,n)=>{const s=n.channelCountMode;if(s==="clamped-max")throw e();if(t.createStereoPanner===void 0)return i(t,n);const r=t.createStereoPanner();return kt(r,n),Ct(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>s,set:a=>{if(a!==s)throw e()}}),r},zw=(i,e,t,n,s,r)=>{const o=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},h={...l,oversample:"none"},u=(g,_,p,d)=>{const x=new Float32Array(16385),y=new Float32Array(16385);for(let O=0;O<16385;O+=1){const v=O/16384*c;x[O]=Math.cos(v),y[O]=Math.sin(v)}const S=t(g,{...l,gain:0}),b=n(g,{...h,curve:x}),w=n(g,{...h,curve:o}),M=t(g,{...l,gain:0}),C=n(g,{...h,curve:y});return{connectGraph(){_.connect(S),_.connect(w.inputs===void 0?w:w.inputs[0]),_.connect(M),w.connect(p),p.connect(b.inputs===void 0?b:b.inputs[0]),p.connect(C.inputs===void 0?C:C.inputs[0]),b.connect(S.gain),C.connect(M.gain),S.connect(d,0,0),M.connect(d,0,1)},disconnectGraph(){_.disconnect(S),_.disconnect(w.inputs===void 0?w:w.inputs[0]),_.disconnect(M),w.disconnect(p),p.disconnect(b.inputs===void 0?b:b.inputs[0]),p.disconnect(C.inputs===void 0?C:C.inputs[0]),b.disconnect(S.gain),C.disconnect(M.gain),S.disconnect(d,0,0),M.disconnect(d,0,1)}}},f=(g,_,p,d)=>{const x=new Float32Array(16385),y=new Float32Array(16385),S=new Float32Array(16385),b=new Float32Array(16385),w=Math.floor(16385/2);for(let W=0;W<16385;W+=1)if(W>w){const H=(W-w)/(16384-w)*c;x[W]=Math.cos(H),y[W]=Math.sin(H),S[W]=0,b[W]=1}else{const H=W/(16384-w)*c;x[W]=1,y[W]=0,S[W]=Math.cos(H),b[W]=Math.sin(H)}const M=e(g,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),C=t(g,{...l,gain:0}),O=n(g,{...h,curve:x}),v=t(g,{...l,gain:0}),E=n(g,{...h,curve:y}),L=n(g,{...h,curve:o}),V=t(g,{...l,gain:0}),D=n(g,{...h,curve:S}),G=t(g,{...l,gain:0}),U=n(g,{...h,curve:b});return{connectGraph(){_.connect(M),_.connect(L.inputs===void 0?L:L.inputs[0]),M.connect(C,0),M.connect(v,0),M.connect(V,1),M.connect(G,1),L.connect(p),p.connect(O.inputs===void 0?O:O.inputs[0]),p.connect(E.inputs===void 0?E:E.inputs[0]),p.connect(D.inputs===void 0?D:D.inputs[0]),p.connect(U.inputs===void 0?U:U.inputs[0]),O.connect(C.gain),E.connect(v.gain),D.connect(V.gain),U.connect(G.gain),C.connect(d,0,0),V.connect(d,0,0),v.connect(d,0,1),G.connect(d,0,1)},disconnectGraph(){_.disconnect(M),_.disconnect(L.inputs===void 0?L:L.inputs[0]),M.disconnect(C,0),M.disconnect(v,0),M.disconnect(V,1),M.disconnect(G,1),L.disconnect(p),p.disconnect(O.inputs===void 0?O:O.inputs[0]),p.disconnect(E.inputs===void 0?E:E.inputs[0]),p.disconnect(D.inputs===void 0?D:D.inputs[0]),p.disconnect(U.inputs===void 0?U:U.inputs[0]),O.disconnect(C.gain),E.disconnect(v.gain),D.disconnect(V.gain),U.disconnect(G.gain),C.disconnect(d,0,0),V.disconnect(d,0,0),v.disconnect(d,0,1),G.disconnect(d,0,1)}}},m=(g,_,p,d,x)=>{if(_===1)return u(g,p,d,x);if(_===2)return f(g,p,d,x);throw s()};return(g,{channelCount:_,channelCountMode:p,pan:d,...x})=>{if(p==="max")throw s();const y=i(g,{...x,channelCount:1,channelCountMode:p,numberOfInputs:2}),S=t(g,{...x,channelCount:_,channelCountMode:p,gain:1}),b=t(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:d});let{connectGraph:w,disconnectGraph:M}=m(g,_,S,b,y);Object.defineProperty(b.gain,"defaultValue",{get:()=>0}),Object.defineProperty(b.gain,"maxValue",{get:()=>1}),Object.defineProperty(b.gain,"minValue",{get:()=>-1});const C={get bufferSize(){},get channelCount(){return S.channelCount},set channelCount(L){S.channelCount!==L&&(O&&M(),{connectGraph:w,disconnectGraph:M}=m(g,L,S,b,y),O&&w()),S.channelCount=L},get channelCountMode(){return S.channelCountMode},set channelCountMode(L){if(L==="clamped-max"||L==="max")throw s();S.channelCountMode=L},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(L){S.channelInterpretation=L},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},get pan(){return b.gain},addEventListener(...L){return S.addEventListener(L[0],L[1],L[2])},dispatchEvent(...L){return S.dispatchEvent(L[0])},removeEventListener(...L){return S.removeEventListener(L[0],L[1],L[2])}};let O=!1;const v=()=>{w(),O=!0},E=()=>{M(),O=!1};return r(lo(C,y),v,E)}},Gw=(i,e,t,n,s,r,a)=>(o,c)=>{const l=o.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&o.createGain().gain.automationRate===void 0)return t(o,c);kt(l,c);const h=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(h!==null&&h.length<2)throw e();bt(l,{curve:h},"curve"),bt(l,c,"oversample");let u=null,f=!1;return a(l,"curve",_=>()=>_.call(l),_=>p=>(_.call(l,p),f&&(n(p)&&u===null?u=i(o,l):!n(p)&&u!==null&&(u(),u=null)),p)),s(l,()=>{f=!0,n(l.curve)&&(u=i(o,l))},()=>{f=!1,u!==null&&(u(),u=null)})},Hw=(i,e,t,n,s)=>(r,{curve:a,oversample:o,...c})=>{const l=r.createWaveShaper(),h=r.createWaveShaper();kt(l,c),kt(h,c);const u=t(r,{...c,gain:1}),f=t(r,{...c,gain:-1}),m=t(r,{...c,gain:1}),g=t(r,{...c,gain:-1});let _=null,p=!1,d=null;const x={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(b){u.channelCount=b,f.channelCount=b,l.channelCount=b,m.channelCount=b,h.channelCount=b,g.channelCount=b},get channelCountMode(){return l.channelCountMode},set channelCountMode(b){u.channelCountMode=b,f.channelCountMode=b,l.channelCountMode=b,m.channelCountMode=b,h.channelCountMode=b,g.channelCountMode=b},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(b){u.channelInterpretation=b,f.channelInterpretation=b,l.channelInterpretation=b,m.channelInterpretation=b,h.channelInterpretation=b,g.channelInterpretation=b},get context(){return l.context},get curve(){return d},set curve(b){if(b!==null&&b.length<2)throw e();if(b===null)l.curve=b,h.curve=b;else{const w=b.length,M=new Float32Array(w+2-w%2),C=new Float32Array(w+2-w%2);M[0]=b[0],C[0]=-b[w-1];const O=Math.ceil((w+1)/2),v=(w+1)/2-1;for(let E=1;E<O;E+=1){const L=E/O*v,V=Math.floor(L),D=Math.ceil(L);M[E]=V===D?b[V]:(1-(L-V))*b[V]+(1-(D-L))*b[D],C[E]=V===D?-b[w-1-V]:-((1-(L-V))*b[w-1-V])-(1-(D-L))*b[w-1-D]}M[O]=w%2===1?b[O-1]:(b[O-2]+b[O-1])/2,l.curve=M,h.curve=C}d=b,p&&(n(d)&&_===null?_=i(r,u):_!==null&&(_(),_=null))},get inputs(){return[u]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(b){l.oversample=b,h.oversample=b},addEventListener(...b){return u.addEventListener(b[0],b[1],b[2])},dispatchEvent(...b){return u.dispatchEvent(b[0])},removeEventListener(...b){return u.removeEventListener(b[0],b[1],b[2])}};a!==null&&(x.curve=a instanceof Float32Array?a:new Float32Array(a)),o!==x.oversample&&(x.oversample=o);const y=()=>{u.connect(l).connect(m),u.connect(f).connect(h).connect(g).connect(m),p=!0,n(d)&&(_=i(r,u))},S=()=>{u.disconnect(l),l.disconnect(m),u.disconnect(f),f.disconnect(h),h.disconnect(g),g.disconnect(m),p=!1,_!==null&&(_(),_=null)};return s(lo(x,m),y,S)},_n=()=>new DOMException("","NotSupportedError"),Ww={numberOfChannels:1},qw=(i,e,t,n,s)=>class extends i{constructor(a,o,c){let l;if(typeof a=="number"&&o!==void 0&&c!==void 0)l={length:o,numberOfChannels:a,sampleRate:c};else if(typeof a=="object")l=a;else throw new Error("The given parameters are not valid.");const{length:h,numberOfChannels:u,sampleRate:f}={...Ww,...l},m=n(u,h,f);e(Bo,()=>Bo(m))||m.addEventListener("statechange",(()=>{let g=0;const _=p=>{this._state==="running"&&(g>0?(m.removeEventListener("statechange",_),p.stopImmediatePropagation(),this._waitForThePromiseToSettle(p)):g+=1)};return _})()),super(m,u),this._length=h,this._nativeOfflineAudioContext=m,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(t()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,Qp(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},jw={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Kw=(i,e,t,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...jw,...l},f=t(h,u),m=r(h),g=m?n():null,_=c.sampleRate/2;super(c,!1,f,g),this._detune=e(this,m,f.detune,153600,-153600),this._frequency=e(this,m,f.frequency,_,-_),this._nativeOscillatorNode=f,this._onended=null,this._oscillatorNodeRenderer=g,this._oscillatorNodeRenderer!==null&&u.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=u.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?a(this,c):null;this._nativeOscillatorNode.onended=l;const h=this._nativeOscillatorNode.onended;this._onended=h!==null&&h===l?c:h}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Fr(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),ki(this)&&Xo(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Xw=(i,e,t,n,s)=>()=>{const r=new WeakMap;let a=null,o=null,c=null;const l=async(h,u)=>{let f=t(h);const m=an(f,u);if(!m){const g={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,detune:f.detune.value,frequency:f.frequency.value,periodicWave:a===null?void 0:a,type:f.type};f=e(u,g),o!==null&&f.start(o),c!==null&&f.stop(c)}return r.set(u,f),m?(await i(u,h.detune,f.detune),await i(u,h.frequency,f.frequency)):(await n(u,h.detune,f.detune),await n(u,h.frequency,f.frequency)),await s(h,u,f),f};return{set periodicWave(h){a=h},set start(h){o=h},set stop(h){c=h},render(h,u){const f=r.get(u);return f!==void 0?Promise.resolve(f):l(h,u)}}},Yw={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},$w=(i,e,t,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...Yw,...l},f=t(h,u),m=r(h),g=m?n():null;super(c,!1,f,g),this._nativePannerNode=f,this._orientationX=e(this,m,f.orientationX,hn,vn),this._orientationY=e(this,m,f.orientationY,hn,vn),this._orientationZ=e(this,m,f.orientationZ,hn,vn),this._positionX=e(this,m,f.positionX,hn,vn),this._positionY=e(this,m,f.positionY,hn,vn),this._positionZ=e(this,m,f.positionZ,hn,vn),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Zw=(i,e,t,n,s,r,a,o,c,l)=>()=>{const h=new WeakMap;let u=null;const f=async(m,g)=>{let _=null,p=r(m);const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation},x={...d,coneInnerAngle:p.coneInnerAngle,coneOuterAngle:p.coneOuterAngle,coneOuterGain:p.coneOuterGain,distanceModel:p.distanceModel,maxDistance:p.maxDistance,panningModel:p.panningModel,refDistance:p.refDistance,rolloffFactor:p.rolloffFactor},y=an(p,g);if("bufferSize"in p)_=n(g,{...d,gain:1});else if(!y){const S={...x,orientationX:p.orientationX.value,orientationY:p.orientationY.value,orientationZ:p.orientationZ.value,positionX:p.positionX.value,positionY:p.positionY.value,positionZ:p.positionZ.value};p=s(g,S)}if(h.set(g,_===null?p:_),_!==null){if(u===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const E=new a(6,m.context.length,g.sampleRate),L=e(E,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});L.connect(E.destination),u=(async()=>{const V=await Promise.all([m.orientationX,m.orientationY,m.orientationZ,m.positionX,m.positionY,m.positionZ].map(async(D,G)=>{const U=t(E,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:G===0?1:0});return await o(E,D,U.offset),U}));for(let D=0;D<6;D+=1)V[D].connect(L,0,D),V[D].start(0);return l(E)})()}const S=await u,b=n(g,{...d,gain:1});await c(m,g,b);const w=[];for(let E=0;E<S.numberOfChannels;E+=1)w.push(S.getChannelData(E));let M=[w[0][0],w[1][0],w[2][0]],C=[w[3][0],w[4][0],w[5][0]],O=n(g,{...d,gain:1}),v=s(g,{...x,orientationX:M[0],orientationY:M[1],orientationZ:M[2],positionX:C[0],positionY:C[1],positionZ:C[2]});b.connect(O).connect(v.inputs[0]),v.connect(_);for(let E=128;E<S.length;E+=128){const L=[w[0][E],w[1][E],w[2][E]],V=[w[3][E],w[4][E],w[5][E]];if(L.some((D,G)=>D!==M[G])||V.some((D,G)=>D!==C[G])){M=L,C=V;const D=E/g.sampleRate;O.gain.setValueAtTime(0,D),O=n(g,{...d,gain:0}),v=s(g,{...x,orientationX:M[0],orientationY:M[1],orientationZ:M[2],positionX:C[0],positionY:C[1],positionZ:C[2]}),O.gain.setValueAtTime(1,D),b.connect(O).connect(v.inputs[0]),v.connect(_)}}return _}return y?(await i(g,m.orientationX,p.orientationX),await i(g,m.orientationY,p.orientationY),await i(g,m.orientationZ,p.orientationZ),await i(g,m.positionX,p.positionX),await i(g,m.positionY,p.positionY),await i(g,m.positionZ,p.positionZ)):(await o(g,m.orientationX,p.orientationX),await o(g,m.orientationY,p.orientationY),await o(g,m.orientationZ,p.orientationZ),await o(g,m.positionX,p.positionX),await o(g,m.positionY,p.positionY),await o(g,m.positionZ,p.positionZ)),co(p)?await c(m,g,p.inputs[0]):await c(m,g,p),p};return{render(m,g){const _=h.get(g);return _!==void 0?Promise.resolve(_):f(m,g)}}},Qw={disableNormalization:!1},Jw=(i,e,t,n)=>class cm{constructor(r,a){const o=e(r),c=n({...Qw,...a}),l=i(o,c);return t.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===cm.prototype||t.has(r)}},eT=(i,e)=>(t,n,s)=>(i(n).replay(s),e(n,t,s)),tT=(i,e,t)=>async(n,s,r)=>{const a=i(n);await Promise.all(a.activeInputs.map((o,c)=>Array.from(o).map(async([l,h])=>{const f=await e(l).render(l,s),m=n.context.destination;!t(l)&&(n!==m||!t(n))&&f.connect(r,h,c)})).reduce((o,c)=>[...o,...c],[]))},nT=(i,e,t)=>async(n,s,r)=>{const a=e(n);await Promise.all(Array.from(a.activeInputs).map(async([o,c])=>{const h=await i(o).render(o,s);t(o)||h.connect(r,c)}))},iT=(i,e,t,n)=>s=>i(Bo,()=>Bo(s))?Promise.resolve(i(n,n)).then(r=>{if(!r){const a=t(s,512,0,1);s.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>s.currentTime,a.connect(s.destination)}return s.startRendering()}):new Promise(r=>{const a=e(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=o=>{a.disconnect(),r(o.renderedBuffer)},a.connect(s.destination),s.startRendering()}),sT=i=>(e,t)=>{i.set(e,t)},rT=i=>(e,t)=>i.set(e,t),oT=(i,e,t,n,s,r,a,o)=>(c,l)=>t(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(h=>t(h).render(h,l)))).then(()=>s(l)).then(h=>(typeof h.copyFromChannel!="function"?(a(h),Jh(h)):e(r,()=>r(h))||o(h),i.add(h),h)),aT={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},cT=(i,e,t,n,s,r)=>class extends i{constructor(o,c){const l=s(o),h={...aT,...c},u=t(l,h),f=r(l),m=f?n():null;super(o,!1,u,m),this._pan=e(this,f,u.pan)}get pan(){return this._pan}},lT=(i,e,t,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=t(o);const h=an(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=e(c,u)}return r.set(c,l),h?await i(c,o.pan,l.pan):await n(c,o.pan,l.pan),co(l)?await s(o,c,l.inputs[0]):await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},hT=i=>()=>{if(i===null)return!1;try{new i({length:1,sampleRate:44100})}catch{return!1}return!0},uT=i=>()=>{if(i===null)return!1;const t=new i(1,1,44100).createBuffer(1,1,44100);if(t.copyToChannel===void 0)return!0;const n=new Float32Array(2);try{t.copyFromChannel(n,0,0)}catch{return!1}return!0},dT=i=>()=>{if(i===null)return!1;if(i.prototype!==void 0&&i.prototype.close!==void 0)return!0;const e=new i,t=e.close!==void 0;try{e.close()}catch{}return t},fT=i=>()=>{if(i===null)return Promise.resolve(!1);const e=new i(1,1,44100);return new Promise(t=>{let n=!0;const s=a=>{n&&(n=!1,e.startRendering(),t(a instanceof TypeError))};let r;try{r=e.decodeAudioData(null,()=>{},s)}catch(a){s(a)}r!==void 0&&r.catch(s)})},pT=i=>()=>{if(i===null)return!1;let e;try{e=new i({latencyHint:"balanced"})}catch{return!1}return e.close(),!0},mT=i=>()=>{if(i===null)return!1;const t=new i(1,1,44100).createGain(),n=t.connect(t)===t;return t.disconnect(t),n},gT=(i,e)=>async()=>{if(i===null)return!0;if(e===null)return!1;const t=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new MessageChannel,s=new e(1,128,44100),r=URL.createObjectURL(t);let a=!1;try{await s.audioWorklet.addModule(r);const o=new i(s,"a",{numberOfOutputs:0}),c=s.createOscillator();await new Promise(l=>{o.port.onmessage=()=>l(),o.port.postMessage(n.port2,[n.port2])}),o.port.onmessage=()=>a=!0,c.connect(o),c.start(0),await s.startRendering(),a=await new Promise(l=>{n.port1.onmessage=({data:h})=>l(h===1),n.port1.postMessage(0)})}catch{}finally{n.port1.close(),URL.revokeObjectURL(r)}return a},_T=(i,e)=>async()=>{if(i===null)return!0;if(e===null)return!1;const t=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new e(1,128,44100),s=URL.createObjectURL(t);let r=!1,a=!1;try{await n.audioWorklet.addModule(s);const o=new i(n,"a",{numberOfOutputs:0}),c=n.createOscillator();o.port.onmessage=()=>r=!0,o.onprocessorerror=()=>a=!0,c.connect(o),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(s)}return r&&!a},yT=i=>()=>{if(i===null)return!1;const t=new i(1,1,44100).createChannelMerger();if(t.channelCountMode==="max")return!0;try{t.channelCount=2}catch{return!0}return!1},vT=i=>()=>{if(i===null)return!1;const e=new i(1,1,44100);return e.createConstantSource===void 0?!0:e.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},xT=i=>()=>{if(i===null)return!1;const e=new i(1,1,44100),t=e.createConvolver();t.buffer=e.createBuffer(1,1,e.sampleRate);try{t.buffer=e.createBuffer(1,1,e.sampleRate)}catch{return!1}return!0},ST=i=>()=>{if(i===null)return!1;const t=new i(1,1,44100).createConvolver();try{t.channelCount=1}catch{return!1}return!0},bT=i=>()=>i!==null&&i.hasOwnProperty("isSecureContext"),MT=i=>()=>{if(i===null)return!1;const e=new i;try{return e.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{e.close()}},wT=(i,e)=>()=>{if(e===null)return Promise.resolve(!1);const t=new e(1,1,44100),n=i(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(s=>{t.oncomplete=()=>{n.disconnect(),s(t.currentTime!==0)},t.startRendering()})},TT=i=>()=>{if(i===null)return Promise.resolve(!1);const e=new i(1,1,44100);if(e.createStereoPanner===void 0||e.createConstantSource===void 0)return Promise.resolve(!0);const t=e.createConstantSource(),n=e.createStereoPanner();return t.channelCount=1,t.offset.value=1,n.channelCount=1,t.start(),t.connect(n).connect(e.destination),e.startRendering().then(s=>s.getChannelData(0)[0]!==1)},ET=()=>new DOMException("","UnknownError"),AT={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},CT=(i,e,t,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...AT,...l},f=t(h,u),g=r(h)?n():null;super(c,!0,f,g),this._isCurveNullified=!1,this._nativeWaveShaperNode=f,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw e();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},RT=(i,e,t)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=e(r);if(!an(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,curve:o.curve,oversample:o.oversample};o=i(a,l)}return n.set(a,o),co(o)?await t(r,a,o.inputs[0]):await t(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},IT=()=>typeof window>"u"?null:window,DT=(i,e)=>t=>{t.copyFromChannel=(n,s,r=0)=>{const a=i(r),o=i(s);if(o>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(o),h=n.length;for(let u=a<0?-a:0;u+a<c&&u<h;u+=1)n[u]=l[u+a]},t.copyToChannel=(n,s,r=0)=>{const a=i(r),o=i(s);if(o>=t.numberOfChannels)throw e();const c=t.length,l=t.getChannelData(o),h=n.length;for(let u=a<0?-a:0;u+a<c&&u<h;u+=1)l[u+a]=n[u]}},PT=i=>e=>{e.copyFromChannel=(t=>(n,s,r=0)=>{const a=i(r),o=i(s);if(a<e.length)return t.call(e,n,o,a)})(e.copyFromChannel),e.copyToChannel=(t=>(n,s,r=0)=>{const a=i(r),o=i(s);if(a<e.length)return t.call(e,n,o,a)})(e.copyToChannel)},LT=i=>(e,t)=>{const n=t.createBuffer(1,1,44100);e.buffer===null&&(e.buffer=n),i(e,"buffer",s=>()=>{const r=s.call(e);return r===n?null:r},s=>r=>s.call(e,r===null?n:r))},NT=(i,e)=>(t,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw i()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw i()}});const s=t.createBufferSource();e(n,()=>{const o=n.numberOfInputs;for(let c=0;c<o;c+=1)s.connect(n,0,c)},()=>s.disconnect(n))},lm=(i,e,t)=>i.copyFromChannel===void 0?i.getChannelData(t)[0]:(i.copyFromChannel(e,t),e[0]),hm=i=>{if(i===null)return!1;const e=i.length;return e%2!==0?i[Math.floor(e/2)]!==0:i[e/2-1]+i[e/2]!==0},Jo=(i,e,t,n)=>{let s=i;for(;!s.hasOwnProperty(e);)s=Object.getPrototypeOf(s);const{get:r,set:a}=Object.getOwnPropertyDescriptor(s,e);Object.defineProperty(i,e,{get:t(r),set:n(a)})},OT=i=>({...i,outputChannelCount:i.outputChannelCount!==void 0?i.outputChannelCount:i.numberOfInputs===1&&i.numberOfOutputs===1?[i.channelCount]:Array.from({length:i.numberOfOutputs},()=>1)}),FT=i=>({...i,channelCount:i.numberOfOutputs}),kT=i=>{const{imag:e,real:t}=i;return e===void 0?t===void 0?{...i,imag:[0,0],real:[0,0]}:{...i,imag:Array.from(t,()=>0),real:t}:t===void 0?{...i,imag:e,real:Array.from(e,()=>0)}:{...i,imag:e,real:t}},um=(i,e,t)=>{try{i.setValueAtTime(e,t)}catch(n){if(n.code!==9)throw n;um(i,e,t+1e-7)}},UT=i=>{const e=i.createBufferSource();e.start();try{e.start()}catch{return!0}return!1},BT=i=>{const e=i.createBufferSource(),t=i.createBuffer(1,1,44100);e.buffer=t;try{e.start(0,1)}catch{return!1}return!0},VT=i=>{const e=i.createBufferSource();e.start();try{e.stop()}catch{return!1}return!0},su=i=>{const e=i.createOscillator();try{e.start(-1)}catch(t){return t instanceof RangeError}return!1},dm=i=>{const e=i.createBuffer(1,1,44100),t=i.createBufferSource();t.buffer=e,t.start(),t.stop();try{return t.stop(),!0}catch{return!1}},ru=i=>{const e=i.createOscillator();try{e.stop(-1)}catch(t){return t instanceof RangeError}return!1},zT=i=>{const{port1:e,port2:t}=new MessageChannel;try{e.postMessage(i)}finally{e.close(),t.close()}},GT=()=>{try{new DOMException}catch{return!1}return!0},HT=()=>new Promise(i=>{const e=new ArrayBuffer(0),{port1:t,port2:n}=new MessageChannel;t.onmessage=({data:s})=>i(s!==null),n.postMessage(e,[e])}),WT=i=>{i.start=(e=>(t=0,n=0,s)=>{const r=i.buffer,a=r===null?n:Math.min(r.duration,n);r!==null&&a>r.duration-.5/i.context.sampleRate?e.call(i,t,0,0):e.call(i,t,a,s)})(i.start)},fm=(i,e)=>{const t=e.createGain();i.connect(t);const n=(s=>()=>{s.call(i,t),i.removeEventListener("ended",n)})(i.disconnect);i.addEventListener("ended",n),lo(i,t),i.stop=(s=>{let r=!1;return(a=0)=>{if(r)try{s.call(i,a)}catch{t.gain.setValueAtTime(0,a)}else s.call(i,a),r=!0}})(i.stop)},ho=(i,e)=>t=>{const n={value:i};return Object.defineProperties(t,{currentTarget:n,target:n}),typeof e=="function"?e.call(i,t):e.handleEvent.call(i,t)},qT=YS(Ys),jT=tb(Ys),KT=fM(sl),pm=new WeakMap,XT=DM(pm),Hn=Hb(new Map,new WeakMap),Jn=IT(),mm=cw(Hn,xi),ou=IM(dn),Qt=tT(dn,ou,Vs),YT=ob(mm,vt,Qt),ft=NM(il),zt=Ow(Jn),ot=ZM(zt),gm=new WeakMap,_m=MM(ho),us=dw(Jn),au=KM(us),cu=XM(Jn),ym=YM(Jn),kr=pw(Jn),Dt=Db($S(qp),eb(qT,jT,nc,KT,ic,dn,XT,Ko,vt,Ys,ki,Vs,za),Hn,GM(Sh,ic,dn,vt,Uo,ki),xi,rl,_n,lM(nc,Sh,dn,vt,Uo,ft,ki,ot),gM(gm,dn,Qn),_m,ft,au,cu,ym,ot,kr),$T=rb(Dt,YT,xi,mm,ft,ot),lu=new WeakSet,Rf=lw(Jn),vm=nM(new Uint32Array(1)),hu=DT(vm,xi),uu=PT(vm),ZT=cb(lu,Hn,_n,Rf,zt,hT(Rf),hu,uu),ol=nb(Mn),xm=nT(ou,Yo,Vs),Si=$b(xm),uo=uw(ol,Hn,UT,BT,VT,su,dm,ru,WT,LT(Jo),fm),bi=eT(PM(Yo),xm),QT=ub(Si,uo,vt,bi,Qt),ni=Pb(ZS(jp),gm,Qh,Lb,HS,WS,qS,jS,KS,yh,Hp,us,um),JT=hb(Dt,QT,ni,Ht,uo,ft,ot,ho),eE=xb(Dt,Sb,xi,Ht,fw(Mn,Jo),ft,ot,Qt),tE=Gb(Si,om,vt,bi,Qt),$s=rT(pm),nE=zb(Dt,ni,tE,rl,om,ft,ot,$s),Ss=ow(Ys,cu),iE=NT(Ht,Ss),bs=Sw(us,iE),sE=jb(bs,vt,Qt),rE=qb(Dt,sE,bs,ft,ot),oE=Yb(Zo,vt,Qt),aE=Xb(Dt,oE,Zo,ft,ot,FT),cE=ww(ol,uo,Mn,Ss),fo=Mw(ol,Hn,cE,su,ru),lE=tM(Si,fo,vt,bi,Qt),hE=eM(Dt,ni,lE,fo,ft,ot,ho),Sm=Tw(_n,Jo),uE=rM(Sm,vt,Qt),dE=sM(Dt,uE,Sm,ft,ot,$s),fE=dM(Si,am,vt,bi,Qt),pE=uM(Dt,ni,fE,am,ft,ot,$s),bm=Ew(_n),mE=xM(Si,bm,vt,bi,Qt),gE=vM(Dt,ni,mE,bm,_n,ft,ot,$s),_E=CM(Si,Mn,vt,bi,Qt),yE=AM(Dt,ni,_E,Mn,ft,ot),vE=Iw(rl,Ht,Qo,_n),al=iT(Hn,Mn,Qo,wT(Mn,zt)),xE=zM(uo,vt,zt,Qt,al),SE=Aw(vE),bE=BM(Dt,SE,xE,ft,ot,$s),ME=bb(ni,bs,fo,Qo,_n,lm,ot,Jo),Mm=new WeakMap,wE=rw(eE,ME,_m,ot,Mm,ho),wm=Fw(ol,Hn,su,dm,ru,fm),TE=Xw(Si,wm,vt,bi,Qt),EE=Kw(Dt,ni,wm,TE,ft,ot,ho),Tm=Qb(uo),AE=Hw(Tm,Ht,Mn,hm,Ss),cl=Gw(Tm,Ht,AE,hm,Ss,us,Jo),CE=Uw(nc,Ht,bs,Mn,Qo,cl,_n,ic,lm,Ss),Em=kw(CE),RE=Zw(Si,bs,fo,Mn,Em,vt,zt,bi,Qt,al),IE=$w(Dt,ni,Em,RE,ft,ot,$s),DE=Bw(xi),PE=Jw(DE,ft,new WeakSet,kT),LE=zw(bs,Zo,Mn,cl,_n,Ss),Am=Vw(LE,_n),NE=lT(Si,Am,vt,bi,Qt),OE=cT(Dt,ni,Am,NE,ft,ot),FE=RT(cl,vt,Qt),kE=CT(Dt,Ht,cl,FE,ft,ot,$s),Cm=QM(Jn),du=wM(Jn),Rm=new WeakMap,UE=OM(Rm,zt),BE=Cm?JS(Hn,_n,bM(Jn),du,TM(XS),ft,UE,ot,kr,new WeakMap,new WeakMap,_T(kr,zt),Jn):void 0,VE=$M(au,ot),zE=cM(lu,Hn,aM,SM,new WeakSet,ft,VE,ec,Bo,hu,uu),Im=Bb(BE,$T,ZT,JT,nE,rE,aE,hE,dE,zE,pE,gE,yE,bE,wE,EE,IE,PE,OE,kE),GE=ew(Dt,Dw,ft,ot),HE=nw(Dt,Pw,ft,ot),WE=iw(Dt,Lw,ft,ot),qE=Nw(Ht,ot),jE=sw(Dt,qE,ft),KE=vb(Im,Ht,_n,ET,GE,HE,WE,jE,us),fu=FM(Mm),XE=ib(fu),Dm=Zb(xi),YE=pM(fu),Pm=_M(xi),Lm=new WeakMap,$E=RM(Lm,Qn),ZE=xw(Dm,xi,Ht,bs,Zo,fo,Mn,Qo,_n,Pm,du,$E,Ss),QE=gw(Ht,ZE,Mn,_n,Ss),JE=Ub(Si,Dm,uo,bs,Zo,fo,Mn,YE,Pm,du,vt,kr,zt,bi,Qt,al),eA=LM(Rm),tA=sT(Lm),If=Cm?Ob(XE,Dt,ni,JE,QE,dn,eA,ft,ot,kr,OT,tA,zT,ho):void 0,nA=oM(_n,zt),iA=oT(lu,Hn,ou,fu,al,ec,hu,uu),sA=qw(Im,Hn,Ht,nA,iA),rA=HM(il,au),oA=WM(Zh,cu),aA=qM(Qh,ym),cA=jM(il,ot),lA=()=>JM(Hn,uT(zt),dT(us),fT(zt),pT(us),mT(zt),gT(kr,zt),yT(zt),vT(zt),xT(zt),ST(zt),GT,bT(Jn),MT(us),TT(zt),HT);function Ie(i,e){if(!i)throw new Error(e)}function Kt(i,e,t=1/0){if(!(e<=i&&i<=t))throw new RangeError(`Value must be within [${e}, ${t}], got: ${i}`)}function pu(i){!i.isOffline&&i.state!=="running"&&ea('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let mu=console;function hA(i){mu=i}function Nm(...i){mu.log(...i)}function ea(...i){mu.warn(...i)}const uA=Object.freeze(Object.defineProperty({__proto__:null,assert:Ie,assertContextRunning:pu,assertRange:Kt,log:Nm,setLogger:hA,warn:ea},Symbol.toStringTag,{value:"Module"}));function Sn(i){return typeof i>"u"}function je(i){return!Sn(i)}function Om(i){return typeof i=="function"}function In(i){return typeof i=="number"}function Ui(i){return Object.prototype.toString.call(i)==="[object Object]"&&i.constructor===Object}function gu(i){return typeof i=="boolean"}function Zt(i){return Array.isArray(i)}function zn(i){return typeof i=="string"}function Do(i){return zn(i)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(i)}function dA(i){return new KE(i)}function fA(i,e,t){return new sA(i,e,t)}const Bi=typeof self=="object"?self:null,pA=Bi&&(Bi.hasOwnProperty("AudioContext")||Bi.hasOwnProperty("webkitAudioContext"));function mA(i,e,t){return Ie(je(If),"This node only works in a secure context (https or localhost)"),new If(i,e,t)}function ii(i,e,t,n){var s=arguments.length,r=s<3?e:n===null?n=Object.getOwnPropertyDescriptor(e,t):n,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(i,e,t,n);else for(var o=i.length-1;o>=0;o--)(a=i[o])&&(r=(s<3?a(r):s>3?a(e,t,r):a(e,t))||r);return s>3&&r&&Object.defineProperty(e,t,r),r}function ht(i,e,t,n){function s(r){return r instanceof t?r:new t(function(a){a(r)})}return new(t||(t=Promise))(function(r,a){function o(h){try{l(n.next(h))}catch(u){a(u)}}function c(h){try{l(n.throw(h))}catch(u){a(u)}}function l(h){h.done?r(h.value):s(h.value).then(o,c)}l((n=n.apply(i,e||[])).next())})}class gA{constructor(e,t,n){this._callback=e,this._type=t,this._updateInterval=n,this._createClock()}_createWorker(){const e=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),t=URL.createObjectURL(e),n=new Worker(t);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(e){this._updateInterval=Math.max(e,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(e*1e3,1))}get type(){return this._type}set type(e){this._disposeClock(),this._type=e,this._createClock()}dispose(){this._disposeClock()}}function zs(i){return aA(i)}function ds(i){return oA(i)}function Ga(i){return cA(i)}function Sr(i){return rA(i)}function Fm(i){return i instanceof AudioBuffer}function _A(i,e){return i==="value"||zs(e)||ds(e)||Fm(e)}function Un(i,...e){if(!e.length)return i;const t=e.shift();if(Ui(i)&&Ui(t))for(const n in t)_A(n,t[n])?i[n]=t[n]:Ui(t[n])?(i[n]||Object.assign(i,{[n]:{}}),Un(i[n],t[n])):Object.assign(i,{[n]:t[n]});return Un(i,...e)}function yA(i,e){return i.length===e.length&&i.every((t,n)=>e[n]===t)}function N(i,e,t=[],n){const s={},r=Array.from(e);if(Ui(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(o=>Reflect.has(i,o))||(Un(s,{[n]:r[0]}),t.splice(t.indexOf(n),1),r.shift())),r.length===1&&Ui(r[0]))Un(s,r[0]);else for(let a=0;a<t.length;a++)je(r[a])&&(s[t[a]]=r[a]);return Un(i,s)}function vA(i){return i.constructor.getDefaults()}function Bn(i,e){return Sn(i)?e:i}function Xt(i,e){return e.forEach(t=>{Reflect.has(i,t)&&delete i[t]}),i}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */let Hi=class{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...e){(this.debug||Bi&&this.toString()===Bi.TONE_DEBUG_CLASS)&&Nm(this,...e)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}};Hi.version=Yh;const _u=1e-6;function ac(i,e){return i>e+_u}function Eh(i,e){return ac(i,e)||Xn(i,e)}function km(i,e){return i+_u<e}function Xn(i,e){return Math.abs(i-e)<_u}function Um(i,e,t){return Math.max(Math.min(i,t),e)}class si extends Hi{constructor(){super(),this.name="Timeline",this._timeline=[];const e=N(si.getDefaults(),arguments,["memory"]);this.memory=e.memory,this.increasing=e.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(e){if(Ie(Reflect.has(e,"time"),"Timeline: events must have a time attribute"),e.time=e.time.valueOf(),this.increasing&&this.length){const t=this._timeline[this.length-1];Ie(Eh(e.time,t.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(e)}else{const t=this._search(e.time);this._timeline.splice(t+1,0,e)}if(this.length>this.memory){const t=this.length-this.memory;this._timeline.splice(0,t)}return this}remove(e){const t=this._timeline.indexOf(e);return t!==-1&&this._timeline.splice(t,1),this}get(e,t="time"){const n=this._search(e,t);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(e,t="time"){const n=this._search(e,t);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(e){const t=this._timeline.length;if(t>0&&this._timeline[t-1].time<e)return this._timeline[t-1];const n=this._search(e);return n-1>=0?this._timeline[n-1]:null}cancel(e){if(this._timeline.length>1){let t=this._search(e);if(t>=0)if(Xn(this._timeline[t].time,e)){for(let n=t;n>=0&&Xn(this._timeline[n].time,e);n--)t=n;this._timeline=this._timeline.slice(0,t)}else this._timeline=this._timeline.slice(0,t+1);else this._timeline=[]}else this._timeline.length===1&&Eh(this._timeline[0].time,e)&&(this._timeline=[]);return this}cancelBefore(e){const t=this._search(e);return t>=0&&(this._timeline=this._timeline.slice(t+1)),this}previousEvent(e){const t=this._timeline.indexOf(e);return t>0?this._timeline[t-1]:null}_search(e,t="time"){if(this._timeline.length===0)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][t]<=e)return s-1;for(;n<r;){let a=Math.floor(n+(r-n)/2);const o=this._timeline[a],c=this._timeline[a+1];if(Xn(o[t],e)){for(let l=a;l<this._timeline.length;l++){const h=this._timeline[l];if(Xn(h[t],e))a=l;else break}return a}else{if(km(o[t],e)&&ac(c[t],e))return a;ac(o[t],e)?r=a:n=a+1}}return-1}_iterate(e,t=0,n=this._timeline.length-1){this._timeline.slice(t,n+1).forEach(e)}forEach(e){return this._iterate(e),this}forEachBefore(e,t){const n=this._search(e);return n!==-1&&this._iterate(t,0,n),this}forEachAfter(e,t){const n=this._search(e);return this._iterate(t,n+1),this}forEachBetween(e,t,n){let s=this._search(e),r=this._search(t);return s!==-1&&r!==-1?(this._timeline[s].time!==e&&(s+=1),this._timeline[r].time===t&&(r-=1),this._iterate(n,s,r)):s===-1&&this._iterate(n,0,r),this}forEachFrom(e,t){let n=this._search(e);for(;n>=0&&this._timeline[n].time>=e;)n--;return this._iterate(t,n+1),this}forEachAtTime(e,t){const n=this._search(e);if(n!==-1&&Xn(this._timeline[n].time,e)){let s=n;for(let r=n;r>=0&&Xn(this._timeline[r].time,e);r--)s=r;this._iterate(r=>{t(r)},s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Bm=[];function ll(i){Bm.push(i)}function xA(i){Bm.forEach(e=>e(i))}const Vm=[];function hl(i){Vm.push(i)}function SA(i){Vm.forEach(e=>e(i))}class po extends Hi{constructor(){super(...arguments),this.name="Emitter"}on(e,t){return e.split(/\W+/).forEach(s=>{Sn(this._events)&&(this._events={}),this._events.hasOwnProperty(s)||(this._events[s]=[]),this._events[s].push(t)}),this}once(e,t){const n=(...s)=>{t(...s),this.off(e,n)};return this.on(e,n),this}off(e,t){return e.split(/\W+/).forEach(s=>{if(Sn(this._events)&&(this._events={}),this._events.hasOwnProperty(e))if(Sn(t))this._events[e]=[];else{const r=this._events[e];for(let a=r.length-1;a>=0;a--)r[a]===t&&r.splice(a,1)}}),this}emit(e,...t){if(this._events&&this._events.hasOwnProperty(e)){const n=this._events[e].slice(0);for(let s=0,r=n.length;s<r;s++)n[s].apply(this,t)}return this}static mixin(e){["on","once","off","emit"].forEach(t=>{const n=Object.getOwnPropertyDescriptor(po.prototype,t);Object.defineProperty(e.prototype,t,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class yu extends po{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class mo extends yu{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new si,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const e=N(mo.getDefaults(),arguments,["context"]);e.context?this._context=e.context:this._context=dA({latencyHint:e.latencyHint}),this._ticker=new gA(this.emit.bind(this,"tick"),e.clockSource,e.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(e.latencyHint),this.lookAhead=e.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(xA(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(e,t,n){return this._context.createBuffer(e,t,n)}createChannelMerger(e){return this._context.createChannelMerger(e)}createChannelSplitter(e){return this._context.createChannelSplitter(e)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(e){return this._context.createDelay(e)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(e,t){return this._context.createIIRFilter(e,t)}createPanner(){return this._context.createPanner()}createPeriodicWave(e,t,n){return this._context.createPeriodicWave(e,t,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(e){return Ie(Sr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(e)}createMediaElementSource(e){return Ie(Sr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(e)}createMediaStreamDestination(){return Ie(Sr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(e){return this._context.decodeAudioData(e)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(e){Ie(!this._initialized,"The listener cannot be set after initialization."),this._listener=e}get transport(){return this.initialize(),this._transport}set transport(e){Ie(!this._initialized,"The transport cannot be set after initialization."),this._transport=e}get draw(){return this.initialize(),this._draw}set draw(e){Ie(!this._initialized,"Draw cannot be set after initialization."),this._draw=e}get destination(){return this.initialize(),this._destination}set destination(e){Ie(!this._initialized,"The destination cannot be set after initialization."),this._destination=e}createAudioWorkletNode(e,t){return mA(this.rawContext,e,t)}addAudioWorkletModule(e,t){return ht(this,void 0,void 0,function*(){Ie(je(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(t)||this._workletModules.set(t,this.rawContext.audioWorklet.addModule(e)),yield this._workletModules.get(t)})}workletsAreReady(){return ht(this,void 0,void 0,function*(){const e=[];this._workletModules.forEach(t=>e.push(t)),yield Promise.all(e)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(e){this._ticker.updateInterval=e}get clockSource(){return this._ticker.type}set clockSource(e){this._ticker.type=e}get latencyHint(){return this._latencyHint}_setLatencyHint(e){let t=0;if(this._latencyHint=e,zn(e))switch(e){case"interactive":t=.1;break;case"playback":t=.5;break;case"balanced":t=.25;break}this.lookAhead=t,this.updateInterval=t/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return Sr(this._context)?this._context.resume():Promise.resolve()}close(){return ht(this,void 0,void 0,function*(){Sr(this._context)&&(yield this._context.close()),this._initialized&&SA(this)})}getConstant(e){if(this._constants.has(e))return this._constants.get(e);{const t=this._context.createBuffer(1,128,this._context.sampleRate),n=t.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=e;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=t,s.loop=!0,s.start(0),this._constants.set(e,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(e=>this._constants[e].disconnect()),this}_timeoutLoop(){const e=this.now();let t=this._timeouts.peek();for(;this._timeouts.length&&t&&t.time<=e;)t.callback(),this._timeouts.shift(),t=this._timeouts.peek()}setTimeout(e,t){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:e,id:this._timeoutIds,time:n+t}),this._timeoutIds}clearTimeout(e){return this._timeouts.forEach(t=>{t.id===e&&this._timeouts.remove(t)}),this}clearInterval(e){return this.clearTimeout(e)}setInterval(e,t){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{e(),s()},id:n,time:r+t})};return s(),n}}class bA extends yu{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(e,t,n){return{}}createChannelMerger(e){return{}}createChannelSplitter(e){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(e){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(e,t){return{}}createPanner(){return{}}createPeriodicWave(e,t,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(e){return{}}createMediaElementSource(e){return{}}createMediaStreamDestination(){return{}}decodeAudioData(e){return Promise.resolve({})}createAudioWorkletNode(e,t){return{}}get rawContext(){return{}}addAudioWorkletModule(e,t){return ht(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(e,t){return 0}clearTimeout(e){return this}setInterval(e,t){return 0}clearInterval(e){return this}getConstant(e){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(e){}get destination(){return{}}set destination(e){}now(){return 0}immediate(){return 0}}function Fe(i,e){Zt(e)?e.forEach(t=>Fe(i,t)):Object.defineProperty(i,e,{enumerable:!0,writable:!1})}function ta(i,e){Zt(e)?e.forEach(t=>ta(i,t)):Object.defineProperty(i,e,{writable:!0})}const tt=()=>{};class nt extends Hi{constructor(){super(),this.name="ToneAudioBuffer",this.onload=tt;const e=N(nt.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=e.reverse,this.onload=e.onload,e.url&&Fm(e.url)||e.url instanceof nt?this.set(e.url):zn(e.url)&&this.load(e.url).catch(e.onerror)}static getDefaults(){return{onerror:tt,onload:tt,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:_t().sampleRate}set(e){return e instanceof nt?e.loaded?this._buffer=e.get():e.onload=()=>{this.set(e),this.onload(this)}:this._buffer=e,this._reversed&&this._reverse(),this}get(){return this._buffer}load(e){return ht(this,void 0,void 0,function*(){const t=nt.load(e).then(n=>{this.set(n),this.onload(this)});nt.downloads.push(t);try{yield t}finally{const n=nt.downloads.indexOf(t);nt.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(e){const t=Zt(e)&&e[0].length>0,n=t?e.length:1,s=t?e[0].length:e.length,r=_t(),a=r.createBuffer(n,s,r.sampleRate),o=!t&&n===1?[e]:e;for(let c=0;c<n;c++)a.copyToChannel(o[c],c);return this._buffer=a,this}toMono(e){if(In(e))this.fromArray(this.toArray(e));else{let t=new Float32Array(this.length);const n=this.numberOfChannels;for(let s=0;s<n;s++){const r=this.toArray(s);for(let a=0;a<r.length;a++)t[a]+=r[a]}t=t.map(s=>s/n),this.fromArray(t)}return this}toArray(e){if(In(e))return this.getChannelData(e);if(this.numberOfChannels===1)return this.toArray(0);{const t=[];for(let n=0;n<this.numberOfChannels;n++)t[n]=this.getChannelData(n);return t}}getChannelData(e){return this._buffer?this._buffer.getChannelData(e):new Float32Array(0)}slice(e,t=this.duration){const n=Math.floor(e*this.sampleRate),s=Math.floor(t*this.sampleRate);Ie(n<s,"The start time must be less than the end time");const r=s-n,a=_t().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let o=0;o<this.numberOfChannels;o++)a.copyToChannel(this.getChannelData(o).subarray(n,s),o);return new nt(a)}_reverse(){if(this.loaded)for(let e=0;e<this.numberOfChannels;e++)this.getChannelData(e).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(e){this._reversed!==e&&(this._reversed=e,this._reverse())}static fromArray(e){return new nt().fromArray(e)}static fromUrl(e){return ht(this,void 0,void 0,function*(){return yield new nt().load(e)})}static load(e){return ht(this,void 0,void 0,function*(){const t=e.match(/\[([^\]\[]+\|.+)\]$/);if(t){const o=t[1].split("|");let c=o[0];for(const l of o)if(nt.supportsType(l)){c=l;break}e=e.replace(t[0],c)}const n=nt.baseUrl===""||nt.baseUrl.endsWith("/")?nt.baseUrl:nt.baseUrl+"/",s=yield fetch(n+e);if(!s.ok)throw new Error(`could not load url: ${e}`);const r=yield s.arrayBuffer();return yield _t().decodeAudioData(r)})}static supportsType(e){const t=e.split("."),n=t[t.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return ht(this,void 0,void 0,function*(){for(yield Promise.resolve();nt.downloads.length;)yield nt.downloads[0]})}}nt.baseUrl="";nt.downloads=[];class go extends mo{constructor(){super({clockSource:"offline",context:Ga(arguments[0])?arguments[0]:fA(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Ga(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Ga(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(e){return ht(this,void 0,void 0,function*(){let t=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,t++;const n=Math.floor(this.sampleRate/128);e&&t%n===0&&(yield new Promise(s=>setTimeout(s,1)))}})}render(e=!0){return ht(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(e);const t=yield this._context.startRendering();return new nt(t)})}close(){return Promise.resolve()}}const zm=new bA;let Rr=zm;function _t(){return Rr===zm&&pA&&cc(new mo),Rr}function cc(i){Sr(i)?Rr=new mo(i):Ga(i)?Rr=new go(i):Rr=i}function Gm(){return Rr.resume()}if(Bi&&!Bi.TONE_SILENCE_LOGGING){const e=` * Tone.js v${Yh} * `;console.log(`%c${e}`,"background: #000; color: #fff")}function Ur(i){return Math.pow(10,i/20)}function na(i){return 20*(Math.log(i)/Math.LN10)}function Br(i){return Math.pow(2,i/12)}let ul=440;function MA(){return ul}function wA(i){ul=i}function os(i){return Math.round(Hm(i))}function Hm(i){return 69+12*Math.log2(i/ul)}function vu(i){return ul*Math.pow(2,(i-69)/12)}class xu extends Hi{constructor(e,t,n){super(),this.defaultUnits="s",this._val=t,this._units=n,this.context=e,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:e=>this._frequencyToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:e=>this._ticksToUnits(parseInt(e,10)),regexp:/^(\d+)i$/i},m:{method:e=>this._beatsToUnits(parseInt(e,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(e,t)=>{const n=parseInt(e,10),s=t==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:e=>this._expressions[this.defaultUnits].method.call(this,e),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:e=>this._secondsToUnits(parseFloat(e)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:e=>parseInt(e,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:e=>{const t=parseInt(e,10);return this._beatsToUnits(8/(Math.floor(t)*3))},regexp:/^(\d+)t$/i},tr:{method:(e,t,n)=>{let s=0;return e&&e!=="0"&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(s+=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof xu&&this.fromType(this._val),Sn(this._val))return this._noArg();if(zn(this._val)&&Sn(this._units)){for(const e in this._expressions)if(this._expressions[e].regexp.test(this._val.trim())){this._units=e;break}}else if(Ui(this._val)){let e=0;for(const t in this._val)if(je(this._val[t])){const n=this._val[t],s=new this.constructor(this.context,t).valueOf()*n;e+=s}return e}if(je(this._units)){const e=this._expressions[this._units],t=this._val.toString().trim().match(e.regexp);return t?e.method.apply(this,t.slice(1)):e.method.call(this,this._val)}else return zn(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(e){return 1/e}_beatsToUnits(e){return 60/this._getBpm()*e}_secondsToUnits(e){return e}_ticksToUnits(e){return e*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(e){switch(this._units=void 0,this.defaultUnits){case"s":this._val=e.toSeconds();break;case"i":this._val=e.toTicks();break;case"hz":this._val=e.toFrequency();break;case"midi":this._val=e.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Rn extends xu{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:e=>this._now()+new this.constructor(this.context,e).valueOf(),regexp:/^\+(.+)/},quantize:{method:e=>{const t=new Rn(this.context,e).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(t))},regexp:/^@(.+)/}})}quantize(e,t=1){const n=new this.constructor(this.context,e).valueOf(),s=this.valueOf(),o=Math.round(s/n)*n-s;return s+o*t}toNotation(){const e=this.toSeconds(),t=["1m"];for(let r=1;r<9;r++){const a=Math.pow(2,r);t.push(a+"n."),t.push(a+"n"),t.push(a+"t")}t.push("0");let n=t[0],s=new Rn(this.context,t[0]).toSeconds();return t.forEach(r=>{const a=new Rn(this.context,r).toSeconds();Math.abs(a-e)<Math.abs(s-e)&&(n=r,s=a)}),n}toBarsBeatsSixteenths(){const e=this._beatsToUnits(1);let t=this.valueOf()/e;t=parseFloat(t.toFixed(4));const n=Math.floor(t/this._getTimeSignature());let s=t%1*4;t=Math.floor(t)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,t,s].join(":")}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.round(t*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return os(this.toFrequency())}_now(){return this.context.now()}}function TA(i,e){return new Rn(_t(),i,e)}class fn extends Rn{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return MA()}static set A4(e){wA(e)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(e){return this.defaultUnits==="midi"?e:fn.mtof(e)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(e,t){const s=EA[e.toLowerCase()]+(parseInt(t,10)+1)*12;return this.defaultUnits==="midi"?s:fn.mtof(s)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(e,t,n){let s=1;return e&&e!=="0"&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(e))),t&&t!=="0"&&(s*=this._beatsToUnits(parseFloat(t))),n&&n!=="0"&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(e){return new fn(this.context,this.valueOf()*Br(e))}harmonize(e){return e.map(t=>this.transpose(t))}toMidi(){return os(this.valueOf())}toNote(){const e=this.toFrequency(),t=Math.log2(e/fn.A4);let n=Math.round(12*t)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),AA[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const e=this._beatsToUnits(1),t=this.valueOf()/e;return Math.floor(t*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(e){return e}_ticksToUnits(e){return 1/(e*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(e){return 1/super._beatsToUnits(e)}_secondsToUnits(e){return 1/e}static mtof(e){return vu(e)}static ftom(e){return os(e)}}const EA={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},AA=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function Ah(i,e){return new fn(_t(),i,e)}class Lt extends Rn{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function CA(i,e){return new Lt(_t(),i,e)}class Wt extends Hi{constructor(){super();const e=N(Wt.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=e.context}static getDefaults(){return{context:_t()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(e){return new Rn(this.context,e).toSeconds()}toFrequency(e){return new fn(this.context,e).toFrequency()}toTicks(e){return new Lt(this.context,e).toTicks()}_getPartialProperties(e){const t=this.get();return Object.keys(t).forEach(n=>{Sn(e[n])&&delete t[n]}),t}get(){const e=vA(this);return Object.keys(e).forEach(t=>{if(Reflect.has(this,t)){const n=this[t];je(n)&&je(n.value)&&je(n.setValueAtTime)?e[t]=n.value:n instanceof Wt?e[t]=n._getPartialProperties(e[t]):Zt(n)||In(n)||zn(n)||gu(n)?e[t]=n:delete e[t]}}),e}set(e){return Object.keys(e).forEach(t=>{Reflect.has(this,t)&&je(this[t])&&(this[t]&&je(this[t].value)&&je(this[t].setValueAtTime)?this[t].value!==e[t]&&(this[t].value=e[t]):this[t]instanceof Wt?this[t].set(e[t]):this[t]=e[t])}),this}}class _o extends si{constructor(e="stopped"){super(),this.name="StateTimeline",this._initial=e,this.setStateAtTime(this._initial,0)}getValueAtTime(e){const t=this.get(e);return t!==null?t.state:this._initial}setStateAtTime(e,t,n){return Kt(t,0),this.add(Object.assign({},n,{state:e,time:t})),this}getLastState(e,t){const n=this._search(t);for(let s=n;s>=0;s--){const r=this._timeline[s];if(r.state===e)return r}}getNextState(e,t){const n=this._search(t);if(n!==-1)for(let s=n;s<this._timeline.length;s++){const r=this._timeline[s];if(r.state===e)return r}}}class Ge extends Wt{constructor(){super(N(Ge.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const e=N(Ge.getDefaults(),arguments,["param","units","convert"]);for(Ie(je(e.param)&&(zs(e.param)||e.param instanceof Ge),"param must be an AudioParam");!zs(e.param);)e.param=e.param._param;this._swappable=je(e.swappable)?e.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=e.param,this.input.connect(this._param)):this._param=this.input=e.param,this._events=new si(1e3),this._initialValue=this._param.defaultValue,this.units=e.units,this.convert=e.convert,this._minValue=e.minValue,this._maxValue=e.maxValue,je(e.value)&&e.value!==this._toType(this._initialValue)&&this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Wt.getDefaults(),{convert:!0,units:"number"})}get value(){const e=this.now();return this.getValueAtTime(e)}set value(e){this.cancelScheduledValues(this.now()),this.setValueAtTime(e,this.now())}get minValue(){return je(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return je(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(e,t){return this.units===t}_assertRange(e){return je(this.maxValue)&&je(this.minValue)&&Kt(e,this._fromType(this.minValue),this._fromType(this.maxValue)),e}_fromType(e){return this.convert&&!this.overridden?this._is(e,"time")?this.toSeconds(e):this._is(e,"decibels")?Ur(e):this._is(e,"frequency")?this.toFrequency(e):e:this.overridden?0:e}_toType(e){return this.convert&&this.units==="decibels"?na(e):e}setValueAtTime(e,t){const n=this.toSeconds(t),s=this._fromType(e);return Ie(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",e,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(e){const t=Math.max(this.toSeconds(e),0),n=this._events.getAfter(t),s=this._events.get(t);let r=this._initialValue;if(s===null)r=this._initialValue;else if(s.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const a=this._events.getBefore(s.time);let o;a===null?o=this._initialValue:o=a.value,s.type==="setTargetAtTime"&&(r=this._exponentialApproach(s.time,o,s.value,s.constant,t))}else if(n===null)r=s.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let a=s.value;if(s.type==="setTargetAtTime"){const o=this._events.getBefore(s.time);o===null?a=this._initialValue:a=o.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(s.time,a,n.time,n.value,t):r=this._exponentialInterpolate(s.time,a,n.time,n.value,t)}else r=s.value;return this._toType(r)}setRampPoint(e){e=this.toSeconds(e);let t=this.getValueAtTime(e);return this.cancelAndHoldAtTime(e),this._fromType(t)===0&&(t=this._toType(this._minOutput)),this.setValueAtTime(t,e),this}linearRampToValueAtTime(e,t){const n=this._fromType(e),s=this.toSeconds(t);return Ie(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",e,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(e,t){let n=this._fromType(e);n=Xn(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(t);return Ie(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",e,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(e,n+this.toSeconds(t)),this}linearRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(e,n+this.toSeconds(t)),this}targetRampTo(e,t,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(e,n,t),this}exponentialApproachValueAtTime(e,t,n){t=this.toSeconds(t),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(e,t,s),this.cancelAndHoldAtTime(t+n*.9),this.linearRampToValueAtTime(e,t+n),this}setTargetAtTime(e,t,n){const s=this._fromType(e);Ie(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(t);return this._assertRange(s),Ie(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(e)}, ${JSON.stringify(t)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",e,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(e,t,n,s=1){n=this.toSeconds(n),t=this.toSeconds(t);const r=this._fromType(e[0])*s;this.setValueAtTime(this._toType(r),t);const a=n/(e.length-1);for(let o=1;o<e.length;o++){const c=this._fromType(e[o])*s;this.linearRampToValueAtTime(this._toType(c),t+o*a)}return this}cancelScheduledValues(e){const t=this.toSeconds(e);return Ie(isFinite(t),`Invalid argument to cancelScheduledValues: ${JSON.stringify(e)}`),this._events.cancel(t),this._param.cancelScheduledValues(t),this.log(this.units,"cancelScheduledValues",t),this}cancelAndHoldAtTime(e){const t=this.toSeconds(e),n=this._fromType(this.getValueAtTime(t));Ie(isFinite(t),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(e)}`),this.log(this.units,"cancelAndHoldAtTime",t,"value="+n);const s=this._events.get(t),r=this._events.getAfter(t);return s&&Xn(s.time,t)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(t),this._events.cancel(t+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),t):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),t)),this._events.add({time:t,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,t),this}rampTo(e,t=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(e,t,n):this.linearRampTo(e,t,n),this}apply(e){const t=this.context.currentTime;e.setValueAtTime(this.getValueAtTime(t),t);const n=this._events.get(t);if(n&&n.type==="setTargetAtTime"){const s=this._events.getAfter(n.time),r=s?s.time:t+2,a=(r-t)/10;for(let o=t;o<r;o+=a)e.linearRampToValueAtTime(this.getValueAtTime(o),o)}return this._events.forEachAfter(this.context.currentTime,s=>{s.type==="cancelScheduledValues"?e.cancelScheduledValues(s.time):s.type==="setTargetAtTime"?e.setTargetAtTime(s.value,s.time,s.constant):e[s.type](s.value,s.time)}),this}setParam(e){Ie(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const t=this.input;return t.disconnect(this._param),this.apply(e),this._param=e,t.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(e,t,n,s,r){return n+(t-n)*Math.exp(-(r-e)/s)}_linearInterpolate(e,t,n,s,r){return t+(s-t)*((r-e)/(n-e))}_exponentialInterpolate(e,t,n,s,r){return t*Math.pow(s/t,(r-e)/(n-e))}}class ae extends Wt{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return je(this.input)?zs(this.input)||this.input instanceof Ge?1:this.input.numberOfInputs:0}get numberOfOutputs(){return je(this.output)?this.output.numberOfOutputs:0}_isAudioNode(e){return je(e)&&(e instanceof ae||ds(e))}_getInternalNodes(){const e=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&e.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&e.push(this.output),e}_setChannelProperties(e){this._getInternalNodes().forEach(n=>{n.channelCount=e.channelCount,n.channelCountMode=e.channelCountMode,n.channelInterpretation=e.channelInterpretation})}_getChannelProperties(){const e=this._getInternalNodes();Ie(e.length>0,"ToneAudioNode does not have any internal nodes");const t=e[0];return{channelCount:t.channelCount,channelCountMode:t.channelCountMode,channelInterpretation:t.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCount:e}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelCountMode:e}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(e){const t=this._getChannelProperties();this._setChannelProperties(Object.assign(t,{channelInterpretation:e}))}connect(e,t=0,n=0){return wn(this,e,t,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return ea("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(e,t=0,n=0){return Su(this,e,t,n),this}chain(...e){return Dn(this,...e),this}fan(...e){return e.forEach(t=>this.connect(t)),this}dispose(){return super.dispose(),je(this.input)&&(this.input instanceof ae?this.input.dispose():ds(this.input)&&this.input.disconnect()),je(this.output)&&(this.output instanceof ae?this.output.dispose():ds(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Dn(...i){const e=i.shift();i.reduce((t,n)=>(t instanceof ae?t.connect(n):ds(t)&&wn(t,n),n),e)}function wn(i,e,t=0,n=0){for(Ie(je(i),"Cannot connect from undefined node"),Ie(je(e),"Cannot connect to undefined node"),(e instanceof ae||ds(e))&&Ie(e.numberOfInputs>0,"Cannot connect to node with no inputs"),Ie(i.numberOfOutputs>0,"Cannot connect from node with no outputs");e instanceof ae||e instanceof Ge;)je(e.input)&&(e=e.input);for(;i instanceof ae;)je(i.output)&&(i=i.output);zs(e)?i.connect(e,t):i.connect(e,t,n)}function Su(i,e,t=0,n=0){if(je(e))for(;e instanceof ae;)e=e.input;for(;!ds(i);)je(i.output)&&(i=i.output);zs(e)?i.disconnect(e,t):ds(e)?i.disconnect(e,t,n):i.disconnect()}class Ae extends ae{constructor(){super(N(Ae.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const e=N(Ae.getDefaults(),arguments,["gain","units"]);this.gain=new Ge({context:this.context,convert:e.convert,param:this._gainNode.gain,units:e.units,value:e.gain,minValue:e.minValue,maxValue:e.maxValue}),Fe(this,"gain")}static getDefaults(){return Object.assign(ae.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Vr extends ae{constructor(e){super(e),this.onended=tt,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Ae({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(t){const n=this.toSeconds(t);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut,this._curve=e.curve,this.onended=e.onended}static getDefaults(){return Object.assign(ae.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:tt})}_startGain(e,t=1){Ie(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=e+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,e),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(t,e+n):this._gainNode.gain.exponentialApproachValueAtTime(t,e,n)):this._gainNode.gain.setValueAtTime(t,e),this}stop(e){return this.log("stop",e),this._stopGain(this.toSeconds(e)),this}_stopGain(e){Ie(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const t=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(e)+t,this._stopTime=Math.max(this._stopTime,this.context.currentTime),t>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,t,e):this._gainNode.gain.targetRampTo(0,t,e):(this._gainNode.gain.cancelAndHoldAtTime(e),this._gainNode.gain.setValueAtTime(0,e)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?t*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==tt&&(this.onended(this),this.onended=tt,!this.context.isOffline)){const e=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(e):setTimeout(e,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),Ie(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class Vo extends Vr{constructor(){super(N(Vo.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const e=N(Vo.getDefaults(),arguments,["offset"]);wn(this._source,this._gainNode),this.offset=new Ge({context:this.context,convert:e.convert,param:this._source.offset,units:e.units,value:e.offset,minValue:e.minValue,maxValue:e.maxValue})}static getDefaults(){return Object.assign(Vr.getDefaults(),{convert:!0,offset:1,units:"number"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._source.start(t),this}_stopSource(e){this._source.stop(e)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Ue extends ae{constructor(){super(N(Ue.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const e=N(Ue.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new Vo({context:this.context,convert:e.convert,offset:e.value,units:e.units,minValue:e.minValue,maxValue:e.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(ae.getDefaults(),{convert:!0,units:"number",value:0})}connect(e,t=0,n=0){return ia(this,e,t,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(e,t){return this._param.setValueAtTime(e,t),this}getValueAtTime(e){return this._param.getValueAtTime(e)}setRampPoint(e){return this._param.setRampPoint(e),this}linearRampToValueAtTime(e,t){return this._param.linearRampToValueAtTime(e,t),this}exponentialRampToValueAtTime(e,t){return this._param.exponentialRampToValueAtTime(e,t),this}exponentialRampTo(e,t,n){return this._param.exponentialRampTo(e,t,n),this}linearRampTo(e,t,n){return this._param.linearRampTo(e,t,n),this}targetRampTo(e,t,n){return this._param.targetRampTo(e,t,n),this}exponentialApproachValueAtTime(e,t,n){return this._param.exponentialApproachValueAtTime(e,t,n),this}setTargetAtTime(e,t,n){return this._param.setTargetAtTime(e,t,n),this}setValueCurveAtTime(e,t,n,s){return this._param.setValueCurveAtTime(e,t,n,s),this}cancelScheduledValues(e){return this._param.cancelScheduledValues(e),this}cancelAndHoldAtTime(e){return this._param.cancelAndHoldAtTime(e),this}rampTo(e,t,n){return this._param.rampTo(e,t,n),this}get value(){return this._param.value}set value(e){this._param.value=e}get convert(){return this._param.convert}set convert(e){this._param.convert=e}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(e){this._param.overridden=e}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(e){return this._param.apply(e),this}}function ia(i,e,t,n){(e instanceof Ge||zs(e)||e instanceof Ue&&e.override)&&(e.cancelScheduledValues(0),e.setValueAtTime(0,0),e instanceof Ue&&(e.overridden=!0)),wn(i,e,t,n)}class lc extends Ge{constructor(){super(N(lc.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new si(1/0),this._multiplier=1;const e=N(lc.getDefaults(),arguments,["value"]);this._multiplier=e.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(e.value)}),this.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Ge.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(e,t,n){t=this.toSeconds(t),this.setRampPoint(t);const s=this._fromType(e),r=this._events.get(t),a=Math.round(Math.max(1/n,1));for(let o=0;o<=a;o++){const c=n*o+t,l=this._exponentialApproach(r.time,r.value,s,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(e,t){const n=this.toSeconds(t);super.setValueAtTime(e,t);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}linearRampToValueAtTime(e,t){const n=this.toSeconds(t);super.linearRampToValueAtTime(e,t);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(e,t){t=this.toSeconds(t);const n=this._fromType(e),s=this._events.get(t),r=Math.round(Math.max((t-s.time)*10,1)),a=(t-s.time)/r;for(let o=0;o<=r;o++){const c=a*o+s.time,l=this._exponentialInterpolate(s.time,s.value,t,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(e,t){if(e===null)e={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Sn(e.ticks)){const a=this._events.previousEvent(e);e.ticks=this._getTicksUntilEvent(a,e.time)}const n=this._fromType(this.getValueAtTime(e.time));let s=this._fromType(this.getValueAtTime(t));const r=this._events.get(t);return r&&r.time===t&&r.type==="setValueAtTime"&&(s=this._fromType(this.getValueAtTime(t-this.sampleTime))),.5*(t-e.time)*(n+s)+e.ticks}getTicksAtTime(e){const t=this.toSeconds(e),n=this._events.get(t);return Math.max(this._getTicksUntilEvent(n,t),0)}getDurationOfTicks(e,t){const n=this.toSeconds(t),s=this.getTicksAtTime(t);return this.getTimeOfTick(s+e)-n}getTimeOfTick(e){const t=this._events.get(e,"ticks"),n=this._events.getAfter(e,"ticks");if(t&&t.ticks===e)return t.time;if(t&&n&&n.type==="linearRampToValueAtTime"&&t.value!==n.value){const s=this._fromType(this.getValueAtTime(t.time)),a=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-t.time),o=Math.sqrt(Math.pow(s,2)-2*a*(t.ticks-e)),c=(-s+o)/a,l=(-s-o)/a;return(c>0?c:l)+t.time}else return t?t.value===0?1/0:t.time+(e-t.ticks)/t.value:e/this._initialValue}ticksToTime(e,t){return this.getDurationOfTicks(e,t)}timeToTicks(e,t){const n=this.toSeconds(t),s=this.toSeconds(e),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(e){return this.units==="bpm"&&this.multiplier?1/(60/e/this.multiplier):super._fromType(e)}_toType(e){return this.units==="bpm"&&this.multiplier?e/this.multiplier*60:super._toType(e)}get multiplier(){return this._multiplier}set multiplier(e){const t=this.value;this._multiplier=e,this.cancelScheduledValues(0),this.setValueAtTime(t,0)}}class hc extends Ue{constructor(){super(N(hc.getDefaults(),arguments,["value"])),this.name="TickSignal";const e=N(hc.getDefaults(),arguments,["value"]);this.input=this._param=new lc({context:this.context,convert:e.convert,multiplier:e.multiplier,param:this._constantSource.offset,units:e.units,value:e.value})}static getDefaults(){return Object.assign(Ue.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(e,t){return this._param.ticksToTime(e,t)}timeToTicks(e,t){return this._param.timeToTicks(e,t)}getTimeOfTick(e){return this._param.getTimeOfTick(e)}getDurationOfTicks(e,t){return this._param.getDurationOfTicks(e,t)}getTicksAtTime(e){return this._param.getTicksAtTime(e)}get multiplier(){return this._param.multiplier}set multiplier(e){this._param.multiplier=e}dispose(){return super.dispose(),this._param.dispose(),this}}class uc extends Wt{constructor(){super(N(uc.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new _o,this._tickOffset=new si;const e=N(uc.getDefaults(),arguments,["frequency"]);this.frequency=new hc({context:this.context,units:e.units,value:e.frequency}),Fe(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Wt.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(e,t){const n=this.toSeconds(e);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),je(t)&&this.setTicksAtTime(t,n)),this}stop(e){const t=this.toSeconds(e);if(this._state.getValueAtTime(t)==="stopped"){const n=this._state.get(t);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this.setTicksAtTime(0,t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&this._state.setStateAtTime("paused",t),this}cancel(e){return e=this.toSeconds(e),this._state.cancel(e),this._tickOffset.cancel(e),this}getTicksAtTime(e){const t=this.toSeconds(e),n=this._state.getLastState("stopped",t),s={state:"paused",time:t};this._state.add(s);let r=n,a=0;return this._state.forEachBetween(n.time,t+this.sampleTime,o=>{let c=r.time;const l=this._tickOffset.get(o.time);l&&l.time>=r.time&&(a=l.ticks,c=l.time),r.state==="started"&&o.state!=="started"&&(a+=this.frequency.getTicksAtTime(o.time)-this.frequency.getTicksAtTime(c)),r=o}),this._state.remove(s),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(e){this.setTicksAtTime(e,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(e){const t=this.now(),n=this.frequency.timeToTicks(e,t);this.setTicksAtTime(n,t)}getSecondsAtTime(e){e=this.toSeconds(e);const t=this._state.getLastState("stopped",e),n={state:"paused",time:e};this._state.add(n);let s=t,r=0;return this._state.forEachBetween(t.time,e+this.sampleTime,a=>{let o=s.time;const c=this._tickOffset.get(a.time);c&&c.time>=s.time&&(r=c.seconds,o=c.time),s.state==="started"&&a.state!=="started"&&(r+=a.time-o),s=a}),this._state.remove(n),r}setTicksAtTime(e,t){return t=this.toSeconds(t),this._tickOffset.cancel(t),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(e,t),ticks:e,time:t}),this}getStateAtTime(e){return e=this.toSeconds(e),this._state.getValueAtTime(e)}getTimeOfTick(e,t=this.now()){const n=this._tickOffset.get(t),s=this._state.get(t),r=Math.max(n.time,s.time),a=this.frequency.getTicksAtTime(r)+e-n.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(e,t,n){let s=this._state.get(e);this._state.forEachBetween(e,t,a=>{s&&s.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(s.time,e),a.time-this.sampleTime,n),s=a});let r=null;if(s&&s.state==="started"){const a=Math.max(s.time,e),o=this.frequency.getTicksAtTime(a),c=this.frequency.getTicksAtTime(s.time),l=o-c;let h=Math.ceil(l)-l;h=Xn(h,1)?0:h;let u=this.frequency.getTimeOfTick(o+h);for(;u<t;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(f){r=f;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class Gs extends Wt{constructor(){super(N(Gs.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=tt,this._lastUpdate=0,this._state=new _o("stopped"),this._boundLoop=this._loop.bind(this);const e=N(Gs.getDefaults(),arguments,["callback","frequency"]);this.callback=e.callback,this._tickSource=new uc({context:this.context,frequency:e.frequency,units:e.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Fe(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Wt.getDefaults(),{callback:tt,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(e,t){pu(this.context);const n=this.toSeconds(e);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,t),n<this._lastUpdate&&this.emit("start",n,t)),this}stop(e){const t=this.toSeconds(e);return this.log("stop",t),this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._tickSource.stop(t),t<this._lastUpdate&&this.emit("stop",t),this}pause(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)==="started"&&(this._state.setStateAtTime("paused",t),this._tickSource.pause(t),t<this._lastUpdate&&this.emit("pause",t)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(e){this._tickSource.ticks=e}get seconds(){return this._tickSource.seconds}set seconds(e){this._tickSource.seconds=e}getSecondsAtTime(e){return this._tickSource.getSecondsAtTime(e)}setTicksAtTime(e,t){return this._tickSource.setTicksAtTime(e,t),this}getTimeOfTick(e,t=this.now()){return this._tickSource.getTimeOfTick(e,t)}getTicksAtTime(e){return this._tickSource.getTicksAtTime(e)}nextTickTime(e,t){const n=this.toSeconds(t),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+e,n)}_loop(){const e=this._lastUpdate,t=this.now();this._lastUpdate=t,this.log("loop",e,t),e!==t&&(this._state.forEachBetween(e,t,n=>{switch(n.state){case"started":const s=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,s);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(e,t,(n,s)=>{this.callback(n,s)}))}getStateAtTime(e){const t=this.toSeconds(e);return this._state.getValueAtTime(t)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}po.mixin(Gs);class bn extends ae{constructor(){super(N(bn.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const e=N(bn.getDefaults(),arguments,["delayTime","maxDelay"]),t=this.toSeconds(e.maxDelay);this._maxDelay=Math.max(t,this.toSeconds(e.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(t),this.delayTime=new Ge({context:this.context,param:this._delayNode.delayTime,units:"time",value:e.delayTime,minValue:0,maxValue:this.maxDelay}),Fe(this,"delayTime")}static getDefaults(){return Object.assign(ae.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function RA(i,e,t=2,n=_t().sampleRate){return ht(this,void 0,void 0,function*(){const s=_t(),r=new go(t,e,n);cc(r),yield i(r);const a=r.render();cc(s);const o=yield a;return new nt(o)})}class yo extends Hi{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const e=N(yo.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=e.baseUrl,Object.keys(e.urls).forEach(t=>{this._loadingCount++;const n=e.urls[t];this.add(t,n,this._bufferLoaded.bind(this,e.onload),e.onerror)})}static getDefaults(){return{baseUrl:"",onerror:tt,onload:tt,urls:{}}}has(e){return this._buffers.has(e.toString())}get(e){return Ie(this.has(e),`ToneAudioBuffers has no buffer named: ${e}`),this._buffers.get(e.toString())}_bufferLoaded(e){this._loadingCount--,this._loadingCount===0&&e&&e()}get loaded(){return Array.from(this._buffers).every(([e,t])=>t.loaded)}add(e,t,n=tt,s=tt){return zn(t)?this._buffers.set(e.toString(),new nt(this.baseUrl+t,n,s)):this._buffers.set(e.toString(),new nt(t,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach(e=>e.dispose()),this._buffers.clear(),this}}class zr extends fn{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(e){return os(super._frequencyToUnits(e))}_ticksToUnits(e){return os(super._ticksToUnits(e))}_beatsToUnits(e){return os(super._beatsToUnits(e))}_secondsToUnits(e){return os(super._secondsToUnits(e))}toMidi(){return this.valueOf()}toFrequency(){return vu(this.toMidi())}transpose(e){return new zr(this.context,this.toMidi()+e)}}function IA(i,e){return new zr(_t(),i,e)}class lt extends Lt{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(e){return this._getPPQ()*e}_secondsToUnits(e){return Math.floor(e/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(e){return e}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function DA(i,e){return new lt(_t(),i,e)}let PA=class extends Wt{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new si,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(e,t){return this._events.add({callback:e,time:this.toSeconds(t)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(e){return this._events.cancel(this.toSeconds(e)),this}_drawLoop(){const e=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=e;){const t=this._events.shift();t&&e-t.time<=this.expiration&&t.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};ll(i=>{i.draw=new PA({context:i})});hl(i=>{i.draw.dispose()});class Wm extends Hi{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(e){Ie(je(e.time),"Events must have a time property"),Ie(je(e.duration),"Events must have a duration parameter"),e.time=e.time.valueOf();let t=new LA(e.time,e.time+e.duration,e);for(this._root===null?this._root=t:this._root.insert(t),this._length++;t!==null;)t.updateHeight(),t.updateMax(),this._rebalance(t),t=t.parent;return this}remove(e){if(this._root!==null){const t=[];this._root.search(e.time,t);for(const n of t)if(n.event===e){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(e){return this.forEachFrom(e,t=>this.remove(t)),this}_setRoot(e){this._root=e,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(e,t){e.parent!==null?(e.isLeftChild()?e.parent.left=t:e.parent.right=t,this._rebalance(e.parent)):this._setRoot(t)}_removeNode(e){if(e.left===null&&e.right===null)this._replaceNodeInParent(e,null);else if(e.right===null)this._replaceNodeInParent(e,e.left);else if(e.left===null)this._replaceNodeInParent(e,e.right);else{const t=e.getBalance();let n,s=null;if(t>0)if(e.left.right===null)n=e.left,n.right=e.right,s=n;else{for(n=e.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,s=n.parent,n.left=e.left,n.right=e.right)}else if(e.right.left===null)n=e.right,n.left=e.left,s=n;else{for(n=e.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,s=n.parent,n.left=e.left,n.right=e.right)}e.parent!==null?e.isLeftChild()?e.parent.left=n:e.parent.right=n:this._setRoot(n),s&&this._rebalance(s)}e.dispose()}_rotateLeft(e){const t=e.parent,n=e.isLeftChild(),s=e.right;s&&(e.right=s.left,s.left=e),t!==null?n?t.left=s:t.right=s:this._setRoot(s)}_rotateRight(e){const t=e.parent,n=e.isLeftChild(),s=e.left;s&&(e.left=s.right,s.right=e),t!==null?n?t.left=s:t.right=s:this._setRoot(s)}_rebalance(e){const t=e.getBalance();t>1&&e.left?e.left.getBalance()<0?this._rotateLeft(e.left):this._rotateRight(e):t<-1&&e.right&&(e.right.getBalance()>0?this._rotateRight(e.right):this._rotateLeft(e))}get(e){if(this._root!==null){const t=[];if(this._root.search(e,t),t.length>0){let n=t[0];for(let s=1;s<t.length;s++)t[s].low>n.low&&(n=t[s]);return n.event}}return null}forEach(e){if(this._root!==null){const t=[];this._root.traverse(n=>t.push(n)),t.forEach(n=>{n.event&&e(n.event)})}return this}forEachAtTime(e,t){if(this._root!==null){const n=[];this._root.search(e,n),n.forEach(s=>{s.event&&t(s.event)})}return this}forEachFrom(e,t){if(this._root!==null){const n=[];this._root.searchAfter(e,n),n.forEach(s=>{s.event&&t(s.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(e=>e.dispose()),this._root=null,this}}class LA{constructor(e,t,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=e,this.high=t,this.max=this.high}insert(e){e.low<=this.low?this.left===null?this.left=e:this.left.insert(e):this.right===null?this.right=e:this.right.insert(e)}search(e,t){e>this.max||(this.left!==null&&this.left.search(e,t),this.low<=e&&this.high>e&&t.push(this),!(this.low>e)&&this.right!==null&&this.right.search(e,t))}searchAfter(e,t){this.low>=e&&(t.push(this),this.left!==null&&this.left.searchAfter(e,t)),this.right!==null&&this.right.searchAfter(e,t)}traverse(e){e(this),this.left!==null&&this.left.traverse(e),this.right!==null&&this.right.traverse(e)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let e=0;return this.left!==null&&this.right!==null?e=this.left.height-this.right.height:this.left!==null?e=this.left.height+1:this.right!==null&&(e=-(this.right.height+1)),e}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(e){this._left=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(e){this._right=e,e!==null&&(e.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const NA=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class gi extends ae{constructor(){super(N(gi.getDefaults(),arguments,["volume"])),this.name="Volume";const e=N(gi.getDefaults(),arguments,["volume"]);this.input=this.output=new Ae({context:this.context,gain:e.volume,units:"decibels"}),this.volume=this.output.gain,Fe(this,"volume"),this._unmutedVolume=e.volume,this.mute=e.mute}static getDefaults(){return Object.assign(ae.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(e){!this.mute&&e?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!e&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let OA=class Ch extends ae{constructor(){super(N(Ch.getDefaults(),arguments)),this.name="Destination",this.input=new gi({context:this.context}),this.output=new Ae({context:this.context}),this.volume=this.input.volume;const e=N(Ch.getDefaults(),arguments);Dn(this.input,this.output,this.context.rawContext.destination),this.mute=e.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(ae.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(e){this.input.mute=e}chain(...e){return this.input.disconnect(),e.unshift(this.input),e.push(this.output),Dn(...e),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};ll(i=>{i.destination=new OA({context:i})});hl(i=>{i.destination.dispose()});class FA extends Hi{constructor(e){super(),this.name="TimelineValue",this._timeline=new si({memory:10}),this._initialValue=e}set(e,t){return this._timeline.add({value:e,time:t}),this}get(e){const t=this._timeline.get(e);return t?t.value:this._initialValue}}class gs{constructor(e,t){this.id=gs._eventId++;const n=Object.assign(gs.getDefaults(),t);this.transport=e,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:tt,once:!1,time:0}}invoke(e){this.callback&&(this.callback(e),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}gs._eventId=0;class bu extends gs{constructor(e,t){super(e,t),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(bu.getDefaults(),t);this.duration=new lt(e.context,n.duration).valueOf(),this._interval=new lt(e.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},gs.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(e){this._createEvents(e),super.invoke(e)}_createEvents(e){const t=this.transport.getTicksAtTime(e);t>=this.time&&t>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new lt(this.context,this._nextTick).toSeconds()))}_restart(e){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const t=this.transport.getTicksAtTime(e);t>this.time&&(this._nextTick=this.time+Math.ceil((t-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new lt(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new lt(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}let qm=class Rh extends Wt{constructor(){super(N(Rh.getDefaults(),arguments)),this.name="Transport",this._loop=new FA(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new si,this._repeatedEvents=new Wm,this._syncedSignals=[],this._swingAmount=0;const e=N(Rh.getDefaults(),arguments);this._ppq=e.ppq,this._clock=new Gs({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=e.ppq,this.bpm.setValueAtTime(e.bpm,0),Fe(this,"bpm"),this._timeSignature=e.timeSignature,this._swingTicks=e.ppq/2}static getDefaults(){return Object.assign(Wt.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(e,t){if(this._loop.get(e)&&t>=this._loopEnd&&(this.emit("loopEnd",e),this._clock.setTicksAtTime(this._loopStart,e),t=this._loopStart,this.emit("loopStart",e,this._clock.getSecondsAtTime(e)),this.emit("loop",e)),this._swingAmount>0&&t%this._ppq!==0&&t%(this._swingTicks*2)!==0){const n=t%(this._swingTicks*2)/(this._swingTicks*2),s=Math.sin(n*Math.PI)*this._swingAmount;e+=new lt(this.context,this._swingTicks*2/3).toSeconds()*s}this._timeline.forEachAtTime(t,n=>n.invoke(e))}schedule(e,t){const n=new gs(this,{callback:e,time:new Lt(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(e,t,n,s=1/0){const r=new bu(this,{callback:e,duration:new Rn(this.context,s).toTicks(),interval:new Rn(this.context,t).toTicks(),time:new Lt(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(e,t){const n=new gs(this,{callback:e,once:!0,time:new Lt(this.context,t).toTicks()});return this._addEvent(n,this._timeline)}clear(e){if(this._scheduledEvents.hasOwnProperty(e)){const t=this._scheduledEvents[e.toString()];t.timeline.remove(t.event),t.event.dispose(),delete this._scheduledEvents[e.toString()]}return this}_addEvent(e,t){return this._scheduledEvents[e.id.toString()]={event:e,timeline:t},t.add(e),e.id}cancel(e=0){const t=this.toTicks(e);return this._timeline.forEachFrom(t,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(t,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(e,t)=>{t=new lt(this.context,t).toSeconds(),this.emit("start",e,t)}),this._clock.on("stop",e=>{this.emit("stop",e)}),this._clock.on("pause",e=>{this.emit("pause",e)})}get state(){return this._clock.getStateAtTime(this.now())}start(e,t){let n;return je(t)&&(n=this.toTicks(t)),this._clock.start(e,n),this}stop(e){return this._clock.stop(e),this}pause(e){return this._clock.pause(e),this}toggle(e){return e=this.toSeconds(e),this._clock.getStateAtTime(e)!=="started"?this.start(e):this.stop(e),this}get timeSignature(){return this._timeSignature}set timeSignature(e){Zt(e)&&(e=e[0]/e[1]*4),this._timeSignature=e}get loopStart(){return new Rn(this.context,this._loopStart,"i").toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e)}get loopEnd(){return new Rn(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e)}get loop(){return this._loop.get(this.now())}set loop(e){this._loop.set(e,this.now())}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get swing(){return this._swingAmount}set swing(e){this._swingAmount=e}get swingSubdivision(){return new lt(this.context,this._swingTicks).toNotation()}set swingSubdivision(e){this._swingTicks=this.toTicks(e)}get position(){const e=this.now(),t=this._clock.getTicksAtTime(e);return new lt(this.context,t).toBarsBeatsSixteenths()}set position(e){const t=this.toTicks(e);this.ticks=t}get seconds(){return this._clock.seconds}set seconds(e){const t=this.now(),n=this._clock.frequency.timeToTicks(e,t);this.ticks=n}get progress(){if(this.loop){const e=this.now();return(this._clock.getTicksAtTime(e)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(e){if(this._clock.ticks!==e){const t=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(t),s=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,t),r=t+s;this.emit("stop",r),this._clock.setTicksAtTime(e,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(e,t)}}getTicksAtTime(e){return Math.round(this._clock.getTicksAtTime(e))}getSecondsAtTime(e){return this._clock.getSecondsAtTime(e)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(e){this._clock.frequency.multiplier=e}nextSubdivision(e){if(e=this.toTicks(e),this.state!=="started")return 0;{const t=this.now(),n=this.getTicksAtTime(t),s=e-n%e;return this._clock.nextTickTime(s,t)}}syncSignal(e,t){if(!t){const s=this.now();if(e.getValueAtTime(s)!==0){const a=1/(60/this.bpm.getValueAtTime(s)/this.PPQ);t=e.getValueAtTime(s)/a}else t=0}const n=new Ae(t);return this.bpm.connect(n),n.connect(e._param),this._syncedSignals.push({initial:e.value,ratio:n,signal:e}),e.value=0,this}unsyncSignal(e){for(let t=this._syncedSignals.length-1;t>=0;t--){const n=this._syncedSignals[t];n.signal===e&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(t,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),ta(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};po.mixin(qm);ll(i=>{i.transport=new qm({context:i})});hl(i=>{i.transport.dispose()});class Rt extends ae{constructor(e){super(e),this.input=void 0,this._state=new _o("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=tt,this._syncedStop=tt,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new gi({context:this.context,mute:e.mute,volume:e.volume}),this.volume=this._volume.volume,Fe(this,"volume"),this.onstop=e.onstop}static getDefaults(){return Object.assign(ae.getDefaults(),{mute:!1,onstop:tt,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}_clampToCurrentTime(e){return this._synced?e:Math.max(e,this.context.currentTime)}start(e,t,n){let s=Sn(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(s=this._clampToCurrentTime(s),!this._synced&&this._state.getValueAtTime(s)==="started")Ie(ac(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,t,n);else if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const r=this._state.get(s);r&&(r.offset=this.toSeconds(Bn(t,0)),r.duration=n?this.toSeconds(n):void 0);const a=this.context.transport.schedule(o=>{this._start(o,t,n)},s);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else pu(this.context),this._start(s,t,n);return this}stop(e){let t=Sn(e)&&this._synced?this.context.transport.seconds:this.toSeconds(e);if(t=this._clampToCurrentTime(t),this._state.getValueAtTime(t)==="started"||je(this._state.getNextState("started",t))){if(this.log("stop",t),!this._synced)this._stop(t);else{const n=this.context.transport.schedule(this._stop.bind(this),t);this._scheduled.push(n)}this._state.cancel(t),this._state.setStateAtTime("stopped",t)}return this}restart(e,t,n){return e=this.toSeconds(e),this._state.getValueAtTime(e)==="started"&&(this._state.cancel(e),this._restart(e,t,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(e,t)=>{if(t>0){const n=this._state.get(t);if(n&&n.state==="started"&&n.time!==t){const s=t-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(e,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=e=>{const t=this.context.transport.getSecondsAtTime(Math.max(e-this.sampleTime,0));this._state.getValueAtTime(t)==="started"&&this._stop(e)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(e=>this.context.transport.clear(e)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=tt,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class Vi extends Vr{constructor(){super(N(Vi.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const e=N(Vi.getDefaults(),arguments,["url","onload"]);wn(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Ge({context:this.context,param:this._source.playbackRate,units:"positive",value:e.playbackRate}),this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this._buffer=new nt(e.url,e.onload,e.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Vr.getDefaults(),{url:new nt,loop:!1,loopEnd:0,loopStart:0,onload:tt,onerror:tt,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e}get curve(){return this._curve}set curve(e){this._curve=e}start(e,t,n,s=1){Ie(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(e);this._startGain(r,s),this.loop?t=Bn(t,this.loopStart):t=Bn(t,0);let a=Math.max(this.toSeconds(t),0);if(this.loop){const o=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=o-c;Eh(a,o)&&(a=(a-c)%l+c),Xn(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,km(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),je(n)){let o=this.toSeconds(n);o=Math.max(o,0),this.stop(r+o)}return this}_stopSource(e){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(e)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(e){this._source.loopStart=this.toSeconds(e)}get loopEnd(){return this._source.loopEnd}set loopEnd(e){this._source.loopEnd=this.toSeconds(e)}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._source.loop}set loop(e){this._source.loop=e,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class zi extends Rt{constructor(){super(N(zi.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const e=N(zi.getDefaults(),arguments,["type"]);this._playbackRate=e.playbackRate,this.type=e.type,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Rt.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(e){if(Ie(e in Df,"Noise: invalid type: "+e),this._type!==e&&(this._type=e,this.state==="started")){const t=this.now();this._stop(t),this._start(t)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._source&&(this._source.playbackRate.value=e)}_start(e){const t=Df[this._type];this._source=new Vi({url:t,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(e),Math.random()*(t.duration-.001))}_stop(e){this._source&&(this._source.stop(this.toSeconds(e)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(e){this._stop(e),this._start(e)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const yr=44100*5,eh=2,Ri={brown:null,pink:null,white:null},Df={get brown(){if(!Ri.brown){const i=[];for(let e=0;e<eh;e++){const t=new Float32Array(yr);i[e]=t;let n=0;for(let s=0;s<yr;s++){const r=Math.random()*2-1;t[s]=(n+.02*r)/1.02,n=t[s],t[s]*=3.5}}Ri.brown=new nt().fromArray(i)}return Ri.brown},get pink(){if(!Ri.pink){const i=[];for(let e=0;e<eh;e++){const t=new Float32Array(yr);i[e]=t;let n,s,r,a,o,c,l;n=s=r=a=o=c=l=0;for(let h=0;h<yr;h++){const u=Math.random()*2-1;n=.99886*n+u*.0555179,s=.99332*s+u*.0750759,r=.969*r+u*.153852,a=.8665*a+u*.3104856,o=.55*o+u*.5329522,c=-.7616*c-u*.016898,t[h]=n+s+r+a+o+c+l+u*.5362,t[h]*=.11,l=u*.115926}}Ri.pink=new nt().fromArray(i)}return Ri.pink},get white(){if(!Ri.white){const i=[];for(let e=0;e<eh;e++){const t=new Float32Array(yr);i[e]=t;for(let n=0;n<yr;n++)t[n]=Math.random()*2-1}Ri.white=new nt().fromArray(i)}return Ri.white}};class Er extends ae{constructor(){super(N(Er.getDefaults(),arguments,["volume"])),this.name="UserMedia";const e=N(Er.getDefaults(),arguments,["volume"]);this._volume=this.output=new gi({context:this.context,volume:e.volume}),this.volume=this._volume.volume,Fe(this,"volume"),this.mute=e.mute}static getDefaults(){return Object.assign(ae.getDefaults(),{mute:!1,volume:0})}open(e){return ht(this,void 0,void 0,function*(){Ie(Er.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const t=yield Er.enumerateDevices();In(e)?this._device=t[e]:(this._device=t.find(r=>r.label===e||r.deviceId===e),!this._device&&t.length>0&&(this._device=t[0]),Ie(je(this._device),`No matching device ${e}`));const n={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(n.audio.deviceId=this._device.deviceId);const s=yield navigator.mediaDevices.getUserMedia(n);if(!this._stream){this._stream=s;const r=this.context.createMediaStreamSource(s);wn(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(e=>{e.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return ht(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(t=>t.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return je(navigator.mediaDevices)&&je(navigator.mediaDevices.getUserMedia)}}function Zs(i,e){return ht(this,void 0,void 0,function*(){const t=e/i.context.sampleRate,n=new go(1,t,i.context.sampleRate);return new i.constructor(Object.assign(i.get(),{frequency:2/t,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class Gr extends Vr{constructor(){super(N(Gr.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const e=N(Gr.getDefaults(),arguments,["frequency","type"]);wn(this._oscillator,this._gainNode),this.type=e.type,this.frequency=new Ge({context:this.context,param:this._oscillator.frequency,units:"frequency",value:e.frequency}),this.detune=new Ge({context:this.context,param:this._oscillator.detune,units:"cents",value:e.detune}),Fe(this,["frequency","detune"])}static getDefaults(){return Object.assign(Vr.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(e){const t=this.toSeconds(e);return this.log("start",t),this._startGain(t),this._oscillator.start(t),this}_stopSource(e){this._oscillator.stop(e)}setPeriodicWave(e){return this._oscillator.setPeriodicWave(e),this}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class gt extends Rt{constructor(){super(N(gt.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const e=N(gt.getDefaults(),arguments,["frequency","type"]);this.frequency=new Ue({context:this.context,units:"frequency",value:e.frequency}),Fe(this,"frequency"),this.detune=new Ue({context:this.context,units:"cents",value:e.detune}),Fe(this,"detune"),this._partials=e.partials,this._partialCount=e.partialCount,this._type=e.type,e.partialCount&&e.type!=="custom"&&(this._type=this.baseType+e.partialCount.toString()),this.phase=e.phase}static getDefaults(){return Object.assign(Rt.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(e){const t=this.toSeconds(e),n=new Gr({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(t)}_stop(e){const t=this.toSeconds(e);this._oscillator&&this._oscillator.stop(t)}_restart(e){const t=this.toSeconds(e);return this.log("restart",t),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(t),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return gt._periodicWaveCache.find(t=>t.phase===this._phase&&yA(t.partials,this._partials));{const e=gt._periodicWaveCache.find(t=>t.type===this._type&&t.phase===this._phase);return this._partialCount=e?e.partialCount:this._partialCount,e}}get type(){return this._type}set type(e){this._type=e;const t=["sine","square","sawtooth","triangle"].indexOf(e)!==-1;if(this._phase===0&&t)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=e);else{const n=this._getCachedPeriodicWave();if(je(n)){const{partials:s,wave:r}=n;this._wave=r,this._partials=s,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[s,r]=this._getRealImaginary(e,this._phase),a=this.context.createPeriodicWave(s,r);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),gt._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:s,type:this._type,wave:this._wave}),gt._periodicWaveCache.length>100&&gt._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(e){this.partialCount&&this._type!=="custom"&&e!=="custom"?this.type=e+this.partialCount:this.type=e}get partialCount(){return this._partialCount}set partialCount(e){Kt(e,0);let t=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(t=n[1]),this._type!=="custom")e===0?this.type=t:this.type=t+e.toString();else{const s=new Float32Array(e);this._partials.forEach((r,a)=>s[a]=r),this._partials=Array.from(s),this.type=this._type}}_getRealImaginary(e,t){let s=2048;const r=new Float32Array(s),a=new Float32Array(s);let o=1;if(e==="custom"){if(o=this._partials.length+1,this._partialCount=this._partials.length,s=o,this._partials.length===0)return[r,a]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(e);c?(o=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),e=c[1],o=Math.max(o,2),s=o):this._partialCount=0,this._partials=[]}for(let c=1;c<s;++c){const l=2/(c*Math.PI);let h;switch(e){case"sine":h=c<=o?1:0,this._partials[c-1]=h;break;case"square":h=c&1?2*l:0,this._partials[c-1]=h;break;case"sawtooth":h=l*(c&1?1:-1),this._partials[c-1]=h;break;case"triangle":c&1?h=2*(l*l)*(c-1>>1&1?-1:1):h=0,this._partials[c-1]=h;break;case"custom":h=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+e)}h!==0?(r[c]=-h*Math.sin(t*c),a[c]=h*Math.cos(t*c)):(r[c]=0,a[c]=0)}return[r,a]}_inverseFFT(e,t,n){let s=0;const r=e.length;for(let a=0;a<r;a++)s+=e[a]*Math.cos(a*n)+t[a]*Math.sin(a*n);return s}getInitialValue(){const[e,t]=this._getRealImaginary(this._type,0);let n=0;const s=Math.PI*2,r=32;for(let a=0;a<r;a++)n=Math.max(this._inverseFFT(e,t,a/r*s),n);return Um(-this._inverseFFT(e,t,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(e){this._phase=e*Math.PI/180,this.type=this._type}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}gt._periodicWaveCache=[];class Pn extends ae{constructor(){super(Object.assign(N(Pn.getDefaults(),arguments,["context"])))}connect(e,t=0,n=0){return ia(this,e,t,n),this}}class Gn extends Pn{constructor(){super(Object.assign(N(Gn.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const e=N(Gn.getDefaults(),arguments,["mapping","length"]);Zt(e.mapping)||e.mapping instanceof Float32Array?this.curve=Float32Array.from(e.mapping):Om(e.mapping)&&this.setMap(e.mapping,e.length)}static getDefaults(){return Object.assign(Ue.getDefaults(),{length:1024})}setMap(e,t=1024){const n=new Float32Array(t);for(let s=0,r=t;s<r;s++){const a=s/(r-1)*2-1;n[s]=e(a,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(e){this._shaper.curve=e}get oversample(){return this._shaper.oversample}set oversample(e){const t=["none","2x","4x"].some(n=>n.includes(e));Ie(t,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class dl extends Pn{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new Gn({context:this.context,mapping:e=>(e+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class yt extends Ue{constructor(){super(Object.assign(N(yt.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const e=N(yt.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Ae({context:this.context,minValue:e.minValue,maxValue:e.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(e.value,0)}static getDefaults(){return Object.assign(Ue.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Hr extends Rt{constructor(){super(N(Hr.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new dl({context:this.context}),this._modulationNode=new Ae({context:this.context});const e=N(Hr.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new gt({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new gt({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new yt({context:this.context,units:"positive",value:e.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Fe(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(gt.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){this._modulator.restart(e),this._carrier.restart(e)}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Hs extends Rt{constructor(){super(N(Hs.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Ae({context:this.context,gain:0});const e=N(Hs.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new gt({context:this.context,detune:e.detune,frequency:0,onstop:()=>this.onstop(this),phase:e.phase,type:e.type}),this.detune=this._carrier.detune,this.frequency=new Ue({context:this.context,units:"frequency",value:e.frequency}),this._modulator=new gt({context:this.context,phase:e.phase,type:e.modulationType}),this.harmonicity=new yt({context:this.context,units:"positive",value:e.harmonicity}),this.modulationIndex=new yt({context:this.context,units:"positive",value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Fe(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(gt.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(e){this._modulator.start(e),this._carrier.start(e)}_stop(e){this._modulator.stop(e),this._carrier.stop(e)}_restart(e){return this._modulator.restart(e),this._carrier.restart(e),this}get type(){return this._carrier.type}set type(e){this._carrier.type=e}get baseType(){return this._carrier.baseType}set baseType(e){this._carrier.baseType=e}get partialCount(){return this._carrier.partialCount}set partialCount(e){this._carrier.partialCount=e}get modulationType(){return this._modulator.type}set modulationType(e){this._modulator.type=e}get phase(){return this._carrier.phase}set phase(e){this._carrier.phase=e,this._modulator.phase=e}get partials(){return this._carrier.partials}set partials(e){this._carrier.partials=e}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Ws extends Rt{constructor(){super(N(Ws.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Ae({context:this.context,gain:0}),this._thresh=new Gn({context:this.context,mapping:t=>t<=0?-1:1});const e=N(Ws.getDefaults(),arguments,["frequency","width"]);this.width=new Ue({context:this.context,units:"audioRange",value:e.width}),this._triangle=new gt({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Fe(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Rt.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(e){e=this.toSeconds(e),this._triangle.start(e),this._widthGate.gain.setValueAtTime(1,e)}_stop(e){e=this.toSeconds(e),this._triangle.stop(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(0,e)}_restart(e){this._triangle.restart(e),this._widthGate.gain.cancelScheduledValues(e),this._widthGate.gain.setValueAtTime(1,e)}get phase(){return this._triangle.phase}set phase(e){this._triangle.phase=e}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(e){this._triangle.type=e}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Wr extends Rt{constructor(){super(N(Wr.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const e=N(Wr.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Ue({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Ue({context:this.context,units:"cents",value:e.detune}),this._spread=e.spread,this._type=e.type,this._phase=e.phase,this._partials=e.partials,this._partialCount=e.partialCount,this.count=e.count,Fe(this,["frequency","detune"])}static getDefaults(){return Object.assign(gt.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(e){e=this.toSeconds(e),this._forEach(t=>t.start(e))}_stop(e){e=this.toSeconds(e),this._forEach(t=>t.stop(e))}_restart(e){this._forEach(t=>t.restart(e))}_forEach(e){for(let t=0;t<this._oscillators.length;t++)e(this._oscillators[t],t)}get type(){return this._type}set type(e){this._type=e,this._forEach(t=>t.type=e)}get spread(){return this._spread}set spread(e){if(this._spread=e,this._oscillators.length>1){const t=-e/2,n=e/(this._oscillators.length-1);this._forEach((s,r)=>s.detune.value=t+n*r)}}get count(){return this._oscillators.length}set count(e){if(Kt(e,1),this._oscillators.length!==e){this._forEach(t=>t.dispose()),this._oscillators=[];for(let t=0;t<e;t++){const n=new gt({context:this.context,volume:-6-e*1.1,type:this._type,phase:this._phase+t/e*360,partialCount:this._partialCount,onstop:t===0?()=>this.onstop(this):tt});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[t]=n}this.spread=this._spread,this.state==="started"&&this._forEach(t=>t.start())}}get phase(){return this._phase}set phase(e){this._phase=e,this._forEach((t,n)=>t.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(e){this._forEach(t=>t.baseType=e),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(e){this._partials=e,this._partialCount=this._partials.length,e.length&&(this._type="custom",this._forEach(t=>t.partials=e))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(e){this._partialCount=e,this._forEach(t=>t.partialCount=e),this._type=this._oscillators[0].type}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(e=>e.dispose()),this}}class qr extends Rt{constructor(){super(N(qr.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new yt({context:this.context,value:2});const e=N(qr.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new Ws({context:this.context,frequency:e.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new gt({context:this.context,detune:e.detune,frequency:e.frequency,onstop:()=>this.onstop(this),phase:e.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Fe(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Rt.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(e){e=this.toSeconds(e),this._modulator.start(e),this._pulse.start(e)}_stop(e){e=this.toSeconds(e),this._modulator.stop(e),this._pulse.stop(e)}_restart(e){this._modulator.restart(e),this._pulse.restart(e)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(e){this._modulator.phase=e}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Pf={am:Hr,fat:Wr,fm:Hs,oscillator:gt,pulse:Ws,pwm:qr};class _i extends Rt{constructor(){super(N(_i.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const e=N(_i.getDefaults(),arguments,["frequency","type"]);this.frequency=new Ue({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Ue({context:this.context,units:"cents",value:e.detune}),Fe(this,["frequency","detune"]),this.set(e)}static getDefaults(){return Object.assign(gt.getDefaults(),Hs.getDefaults(),Hr.getDefaults(),Wr.getDefaults(),Ws.getDefaults(),qr.getDefaults())}_start(e){this._oscillator.start(e)}_stop(e){this._oscillator.stop(e)}_restart(e){return this._oscillator.restart(e),this}get type(){let e="";return["am","fm","fat"].some(t=>this._sourceType===t)&&(e=this._sourceType),e+this._oscillator.type}set type(e){e.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(2)):e.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=e.substr(3)):e==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):e==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=e)}get partials(){return this._oscillator.partials}set partials(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=e)}get partialCount(){return this._oscillator.partialCount}set partialCount(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=e)}set(e){return Reflect.has(e,"type")&&e.type&&(this.type=e.type),super.set(e),this}_createNewOscillator(e){if(e!==this._sourceType){this._sourceType=e;const t=Pf[e],n=this.now();if(this._oscillator){const s=this._oscillator;s.stop(n),this.context.setTimeout(()=>s.dispose(),this.blockTime)}this._oscillator=new t({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e}get sourceType(){return this._sourceType}set sourceType(e){let t="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(t=this._oscillator.type),e==="fm"?this.type="fm"+t:e==="am"?this.type="am"+t:e==="fat"?this.type="fat"+t:e==="oscillator"?this.type=t:e==="pulse"?this.type="pulse":e==="pwm"&&(this.type="pwm")}_getOscType(e,t){return e instanceof Pf[t]}get baseType(){return this._oscillator.baseType}set baseType(e){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&e!=="pulse"&&e!=="pwm"&&(this._oscillator.baseType=e)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(e){this._getOscType(this._oscillator,"fat")&&In(e)&&(this._oscillator.count=e)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(e){this._getOscType(this._oscillator,"fat")&&In(e)&&(this._oscillator.spread=e)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(e){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&zn(e)&&(this._oscillator.modulationType=e)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(e=1024){return ht(this,void 0,void 0,function*(){return Zs(this,e)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class Qs extends Ue{constructor(){super(Object.assign(N(Qs.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new Ae({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,Dn(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Ue.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class yi extends Pn{constructor(){super(Object.assign(N(yi.getDefaults(),arguments,["min","max"]))),this.name="Scale";const e=N(yi.getDefaults(),arguments,["min","max"]);this._mult=this.input=new yt({context:this.context,value:e.max-e.min}),this._add=this.output=new Qs({context:this.context,value:e.min}),this._min=e.min,this._max=e.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Pn.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(e){this._min=e,this._setRange()}get max(){return this._max}set max(e){this._max=e,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class fl extends Pn{constructor(){super(Object.assign(N(fl.getDefaults(),arguments))),this.name="Zero",this._gain=new Ae({context:this.context}),this.output=this._gain,this.input=void 0,wn(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Su(this.context.getConstant(0),this._gain),this}}class on extends ae{constructor(){super(N(on.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Ge.prototype._fromType,this._toType=Ge.prototype._toType,this._is=Ge.prototype._is,this._clampValue=Ge.prototype._clampValue;const e=N(on.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new gt(e),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Ae({context:this.context,gain:e.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Ue({context:this.context,units:"audioRange",value:0}),this._zeros=new fl({context:this.context}),this._a2g=new dl({context:this.context}),this._scaler=this.output=new yi({context:this.context,max:e.max,min:e.min}),this.units=e.units,this.min=e.min,this.max=e.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Fe(this,["amplitude","frequency"]),this.phase=e.phase}static getDefaults(){return Object.assign(gt.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(0,e),this._oscillator.start(e),this}stop(e){return e=this.toSeconds(e),this._stoppedSignal.setValueAtTime(this._stoppedValue,e),this._oscillator.stop(e),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(e){e=this._fromType(e),this._scaler.min=e}get max(){return this._toType(this._scaler.max)}set max(e){e=this._fromType(e),this._scaler.max=e}get type(){return this._oscillator.type}set type(e){this._oscillator.type=e,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(e){this._oscillator.partials=e,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(e){this._oscillator.phase=e,this._setStoppedValue()}get units(){return this._units}set units(e){const t=this.min,n=this.max;this._units=e,this.min=t,this.max=n}get state(){return this._oscillator.state}connect(e,t,n){return(e instanceof Ge||e instanceof Ue)&&(this.convert=e.convert,this.units=e.units),ia(this,e,t,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function jm(i,e=1/0){const t=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){Kt(r,i,e),t.set(this,r)}})}}function Wi(i,e=1/0){const t=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return t.get(this)},set:function(r){Kt(this.toSeconds(r),i,e),t.set(this,r)}})}}class qs extends Rt{constructor(){super(N(qs.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const e=N(qs.getDefaults(),arguments,["url","onload"]);this._buffer=new nt({onload:this._onload.bind(this,e.onload),onerror:e.onerror,reverse:e.reverse,url:e.url}),this.autostart=e.autostart,this._loop=e.loop,this._loopStart=e.loopStart,this._loopEnd=e.loopEnd,this._playbackRate=e.playbackRate,this.fadeIn=e.fadeIn,this.fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Rt.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:tt,onerror:tt,playbackRate:1,reverse:!1})}load(e){return ht(this,void 0,void 0,function*(){return yield this._buffer.load(e),this._onload(),this})}_onload(e=tt){e(),this.autostart&&this.start()}_onSourceEnd(e){this.onstop(this),this._activeSources.delete(e),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(e,t,n){return super.start(e,t,n),this}_start(e,t,n){this._loop?t=Bn(t,this._loopStart):t=Bn(t,0);const s=this.toSeconds(t),r=n;n=Bn(n,Math.max(this._buffer.duration-s,0));let a=this.toSeconds(n);a=a/this._playbackRate,e=this.toSeconds(e);const o=new Vi({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(e+a),this._state.setStateAtTime("stopped",e+a,{implicitEnd:!0})),this._activeSources.add(o),this._loop&&Sn(r)?o.start(e,s):o.start(e,s,a-this.toSeconds(this.fadeOut))}_stop(e){const t=this.toSeconds(e);this._activeSources.forEach(n=>n.stop(t))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){this._stop(e),this._start(e,t,n)}seek(e,t){const n=this.toSeconds(t);if(this._state.getValueAtTime(n)==="started"){const s=this.toSeconds(e);this._stop(n),this._start(n,s)}return this}setLoopPoints(e,t){return this.loopStart=e,this.loopEnd=t,this}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this.buffer.loaded&&Kt(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopStart=e})}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,this.buffer.loaded&&Kt(this.toSeconds(e),0,this.buffer.duration),this._activeSources.forEach(t=>{t.loopEnd=e})}get buffer(){return this._buffer}set buffer(e){this._buffer.set(e)}get loop(){return this._loop}set loop(e){if(this._loop!==e&&(this._loop=e,this._activeSources.forEach(t=>{t.loop=e}),e)){const t=this._state.getNextState("stopped",this.now());t&&this._state.cancel(t.time)}}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e;const t=this.now(),n=this._state.getNextState("stopped",t);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(s=>s.cancelStop())),this._activeSources.forEach(s=>{s.playbackRate.setValueAtTime(e,t)})}get reverse(){return this._buffer.reverse}set reverse(e){this._buffer.reverse=e}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(e=>e.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}ii([Wi(0)],qs.prototype,"fadeIn",void 0);ii([Wi(0)],qs.prototype,"fadeOut",void 0);class dc extends ae{constructor(){super(N(dc.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const e=N(dc.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new gi({context:this.context,volume:e.volume}),this.volume=this._volume.volume,Fe(this,"volume"),this._buffers=new yo({urls:e.urls,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.mute=e.mute,this._fadeIn=e.fadeIn,this._fadeOut=e.fadeOut}static getDefaults(){return Object.assign(Rt.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:tt,onerror:tt,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}get fadeIn(){return this._fadeIn}set fadeIn(e){this._fadeIn=e,this._players.forEach(t=>{t.fadeIn=e})}get fadeOut(){return this._fadeOut}set fadeOut(e){this._fadeOut=e,this._players.forEach(t=>{t.fadeOut=e})}get state(){return Array.from(this._players).some(([t,n])=>n.state==="started")?"started":"stopped"}has(e){return this._buffers.has(e)}player(e){if(Ie(this.has(e),`No Player with the name ${e} exists on this object`),!this._players.has(e)){const t=new qs({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(e)}).connect(this.output);this._players.set(e,t)}return this._players.get(e)}get loaded(){return this._buffers.loaded}add(e,t,n){return Ie(!this._buffers.has(e),"A buffer with that name already exists on this object"),this._buffers.add(e,t,n),this}stopAll(e){return this._players.forEach(t=>t.stop(e)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(e=>e.dispose()),this._buffers.dispose(),this}}class fc extends Rt{constructor(){super(N(fc.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const e=N(fc.getDefaults(),arguments,["url","onload"]);this.buffer=new nt({onload:e.onload,onerror:e.onerror,reverse:e.reverse,url:e.url}),this._clock=new Gs({context:this.context,callback:this._tick.bind(this),frequency:1/e.grainSize}),this._playbackRate=e.playbackRate,this._grainSize=e.grainSize,this._overlap=e.overlap,this.detune=e.detune,this.overlap=e.overlap,this.loop=e.loop,this.playbackRate=e.playbackRate,this.grainSize=e.grainSize,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.reverse=e.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Rt.getDefaults(),{onload:tt,onerror:tt,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(e,t,n){t=Bn(t,0),t=this.toSeconds(t),e=this.toSeconds(e);const s=1/this._clock.frequency.getValueAtTime(e);this._clock.start(e,t/s),n&&this.stop(e+this.toSeconds(n))}restart(e,t,n){return super.restart(e,t,n),this}_restart(e,t,n){this._stop(e),this._start(e,t,n)}_stop(e){this._clock.stop(e)}_onstop(e){this._activeSources.forEach(t=>{t.fadeOut=0,t.stop(e)}),this.onstop(this)}_tick(e){const t=this._clock.getTicksAtTime(e),n=t*this._grainSize;if(this.log("offset",n),!this.loop&&n>this.buffer.duration){this.stop(e);return}const s=n<this._overlap?0:this._overlap,r=new Vi({context:this.context,url:this.buffer,fadeIn:s,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:Br(this.detune/100)}).connect(this.output);r.start(e,this._grainSize*t),r.stop(e+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const a=this._activeSources.indexOf(r);a!==-1&&this._activeSources.splice(a,1)}}get playbackRate(){return this._playbackRate}set playbackRate(e){Kt(e,.001),this._playbackRate=e,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(e){this.buffer.loaded&&Kt(this.toSeconds(e),0,this.buffer.duration),this._loopStart=this.toSeconds(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this.buffer.loaded&&Kt(this.toSeconds(e),0,this.buffer.duration),this._loopEnd=this.toSeconds(e)}get reverse(){return this.buffer.reverse}set reverse(e){this.buffer.reverse=e}get grainSize(){return this._grainSize}set grainSize(e){this._grainSize=this.toSeconds(e),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(e){const t=this.toSeconds(e);Kt(t,0),this._overlap=t}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(e=>e.dispose()),this}}class Km extends Pn{constructor(){super(...arguments),this.name="Abs",this._abs=new Gn({context:this.context,mapping:e=>Math.abs(e)<.001?0:Math.abs(e)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class Xm extends Pn{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new Gn({context:this.context,mapping:e=>Math.abs(e)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Mu extends Pn{constructor(){super(...arguments),this.name="Negate",this._multiply=new yt({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Js extends Ue{constructor(){super(Object.assign(N(Js.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new Ae({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new Mu({context:this.context}),this.subtrahend=this._param,Dn(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Ue.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class pl extends Pn{constructor(){super(Object.assign(N(pl.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new Gn({context:this.context,length:127,mapping:e=>e<=0?0:1}),this._scale=this.input=new yt({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class zo extends Ue{constructor(){super(Object.assign(N(zo.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const e=N(zo.getDefaults(),arguments,["value"]);this._subtract=this.input=new Js({context:this.context,value:e.value}),this._gtz=this.output=new pl({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,Fe(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Ue.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class jr extends Pn{constructor(){super(Object.assign(N(jr.getDefaults(),arguments,["value"]))),this.name="Pow";const e=N(jr.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new Gn({context:this.context,mapping:this._expFunc(e.value),length:8192}),this._exponent=e.value}static getDefaults(){return Object.assign(Pn.getDefaults(),{value:1})}_expFunc(e){return t=>Math.pow(Math.abs(t),e)}get value(){return this._exponent}set value(e){this._exponent=e,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Go extends yi{constructor(){super(Object.assign(N(Go.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const e=N(Go.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new jr({context:this.context,value:e.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(yi.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(e){this._exp.value=e}dispose(){return super.dispose(),this._exp.dispose(),this}}class kA extends Ue{constructor(){super(N(Ue.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const e=N(Ue.getDefaults(),arguments,["value","units"]);this._lastVal=e.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new Vo({context:this.context,offset:e.value,units:e.units}).start(0),this.setValueAtTime(e.value,0)}_onTick(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==t&&(this._lastVal=t,this._constantSource.offset.setValueAtTime(t,e))}_anchorValue(e){const t=super.getValueAtTime(this.context.transport.seconds);this._lastVal=t,this._constantSource.offset.cancelAndHoldAtTime(e),this._constantSource.offset.setValueAtTime(t,e)}getValueAtTime(e){const t=new Lt(this.context,e).toSeconds();return super.getValueAtTime(t)}setValueAtTime(e,t){const n=new Lt(this.context,t).toSeconds();return super.setValueAtTime(e,n),this}linearRampToValueAtTime(e,t){const n=new Lt(this.context,t).toSeconds();return super.linearRampToValueAtTime(e,n),this}exponentialRampToValueAtTime(e,t){const n=new Lt(this.context,t).toSeconds();return super.exponentialRampToValueAtTime(e,n),this}setTargetAtTime(e,t,n){const s=new Lt(this.context,t).toSeconds();return super.setTargetAtTime(e,s,n),this}cancelScheduledValues(e){const t=new Lt(this.context,e).toSeconds();return super.cancelScheduledValues(t),this}setValueCurveAtTime(e,t,n,s){const r=new Lt(this.context,t).toSeconds();return n=this.toSeconds(n),super.setValueCurveAtTime(e,r,n,s),this}cancelAndHoldAtTime(e){const t=new Lt(this.context,e).toSeconds();return super.cancelAndHoldAtTime(t),this}setRampPoint(e){const t=new Lt(this.context,e).toSeconds();return super.setRampPoint(t),this}exponentialRampTo(e,t,n){const s=new Lt(this.context,n).toSeconds();return super.exponentialRampTo(e,t,s),this}linearRampTo(e,t,n){const s=new Lt(this.context,n).toSeconds();return super.linearRampTo(e,t,s),this}targetRampTo(e,t,n){const s=new Lt(this.context,n).toSeconds();return super.targetRampTo(e,t,s),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class qt extends ae{constructor(){super(N(qt.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Ue({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const e=N(qt.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=e.attack,this.decay=e.decay,this.sustain=e.sustain,this.release=e.release,this.attackCurve=e.attackCurve,this.releaseCurve=e.releaseCurve,this.decayCurve=e.decayCurve}static getDefaults(){return Object.assign(ae.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(e,t){if(zn(e))return e;{let n;for(n in La)if(La[n][t]===e)return n;return e}}_setCurve(e,t,n){if(zn(n)&&Reflect.has(La,n)){const s=La[n];Ui(s)?e!=="_decayCurve"&&(this[e]=s[t]):this[e]=s}else if(Zt(n)&&e!=="_decayCurve")this[e]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(e){this._setCurve("_attackCurve","In",e)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(e){this._setCurve("_releaseCurve","Out",e)}get decayCurve(){return this._decayCurve}set decayCurve(e){Ie(["linear","exponential"].some(t=>t===e),`Invalid envelope curve: ${e}`),this._decayCurve=e}triggerAttack(e,t=1){this.log("triggerAttack",e,t),e=this.toSeconds(e);let s=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),a=this.getValueAtTime(e);if(a>0){const o=1/s;s=(1-a)/o}if(s<this.sampleTime)this._sig.cancelScheduledValues(e),this._sig.setValueAtTime(t,e);else if(this._attackCurve==="linear")this._sig.linearRampTo(t,s,e);else if(this._attackCurve==="exponential")this._sig.targetRampTo(t,s,e);else{this._sig.cancelAndHoldAtTime(e);let o=this._attackCurve;for(let c=1;c<o.length;c++)if(o[c-1]<=a&&a<=o[c]){o=this._attackCurve.slice(c),o[0]=a;break}this._sig.setValueCurveAtTime(o,e,s,t)}if(r&&this.sustain<1){const o=t*this.sustain,c=e+s;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(o,r+c):this._sig.exponentialApproachValueAtTime(o,c,r)}return this}triggerRelease(e){this.log("triggerRelease",e),e=this.toSeconds(e);const t=this.getValueAtTime(e);if(t>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,e):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,e):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,e):(Ie(Zt(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(e),this._sig.setValueCurveAtTime(this._releaseCurve,e,n,t))}return this}getValueAtTime(e){return this._sig.getValueAtTime(e)}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),this.triggerAttack(t,n),this.triggerRelease(t+this.toSeconds(e)),this}cancel(e){return this._sig.cancelScheduledValues(this.toSeconds(e)),this}connect(e,t=0,n=0){return ia(this,e,t,n),this}asArray(e=1024){return ht(this,void 0,void 0,function*(){const t=e/this.context.sampleRate,n=new go(1,t,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),a=r*.1,o=r+a,c=new this.constructor(Object.assign(this.get(),{attack:t*this.toSeconds(this.attack)/o,decay:t*this.toSeconds(this.decay)/o,release:t*this.toSeconds(this.release)/o,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(t*(s+a)/o,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}ii([Wi(0)],qt.prototype,"attack",void 0);ii([Wi(0)],qt.prototype,"decay",void 0);ii([jm(0,1)],qt.prototype,"sustain",void 0);ii([Wi(0)],qt.prototype,"release",void 0);const La=(()=>{let e,t;const n=[];for(e=0;e<128;e++)n[e]=Math.sin(e/127*(Math.PI/2));const s=[],r=6.4;for(e=0;e<127;e++){t=e/127;const f=Math.sin(t*(Math.PI*2)*r-Math.PI/2)+1;s[e]=f/10+t*.83}s[127]=1;const a=[],o=5;for(e=0;e<128;e++)a[e]=Math.ceil(e/127*o)/o;const c=[];for(e=0;e<128;e++)t=e/127,c[e]=.5*(1-Math.cos(Math.PI*t));const l=[];for(e=0;e<128;e++){t=e/127;const f=Math.pow(t,3)*4+.2,m=Math.cos(f*Math.PI*2*t);l[e]=Math.abs(m*(1-t))}function h(f){const m=new Array(f.length);for(let g=0;g<f.length;g++)m[g]=1-f[g];return m}function u(f){return f.slice(0).reverse()}return{bounce:{In:h(l),Out:l},cosine:{In:n,Out:u(n)},exponential:"exponential",linear:"linear",ripple:{In:s,Out:h(s)},sine:{In:c,Out:h(c)},step:{In:a,Out:h(a)}}})();class Ln extends ae{constructor(){super(N(Ln.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const e=N(Ln.getDefaults(),arguments);this._volume=this.output=new gi({context:this.context,volume:e.volume}),this.volume=this._volume.volume,Fe(this,"volume")}static getDefaults(){return Object.assign(ae.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let e=!1;return this._synced||(this._synced=!0,e=!0),e}_syncMethod(e,t){const n=this["_original_"+e]=this[e];this[e]=(...s)=>{const r=s[t],a=this.context.transport.schedule(o=>{s[t]=o,n.apply(this,s)},r);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(e=>this.context.transport.clear(e)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(e,t,n,s){const r=this.toSeconds(n),a=this.toSeconds(t);return this.triggerAttack(e,r,s),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Yt extends Ln{constructor(){super(N(Yt.getDefaults(),arguments));const e=N(Yt.getDefaults(),arguments);this.portamento=e.portamento,this.onsilence=e.onsilence}static getDefaults(){return Object.assign(Ln.getDefaults(),{detune:0,onsilence:tt,portamento:0})}triggerAttack(e,t,n=1){this.log("triggerAttack",e,t,n);const s=this.toSeconds(t);return this._triggerEnvelopeAttack(s,n),this.setNote(e,s),this}triggerRelease(e){this.log("triggerRelease",e);const t=this.toSeconds(e);return this._triggerEnvelopeRelease(t),this}setNote(e,t){const n=this.toSeconds(t),s=e instanceof fn?e.toFrequency():e;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,r,n)}else this.frequency.setValueAtTime(s,n);return this}}ii([Wi(0)],Yt.prototype,"portamento",void 0);class vo extends qt{constructor(){super(N(vo.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Ae({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class xn extends Yt{constructor(){super(N(xn.getDefaults(),arguments)),this.name="Synth";const e=N(xn.getDefaults(),arguments);this.oscillator=new _i(Object.assign({context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)},e.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new vo(Object.assign({context:this.context},e.envelope)),this.oscillator.chain(this.envelope,this.output),Fe(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Yt.getDefaults(),{envelope:Object.assign(Xt(qt.getDefaults(),Object.keys(ae.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Xt(_i.getDefaults(),[...Object.keys(Rt.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(e,t){if(this.envelope.triggerAttack(e,t),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+s)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class Kr extends Yt{constructor(){super(N(Kr.getDefaults(),arguments)),this.name="ModulationSynth";const e=N(Kr.getDefaults(),arguments);this._carrier=new xn({context:this.context,oscillator:e.oscillator,envelope:e.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new xn({context:this.context,oscillator:e.modulation,envelope:e.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Ue({context:this.context,units:"frequency"}),this.detune=new Ue({context:this.context,value:e.detune,units:"cents"}),this.harmonicity=new yt({context:this.context,value:e.harmonicity,minValue:0}),this._modulationNode=new Ae({context:this.context,gain:0}),Fe(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Yt.getDefaults(),{harmonicity:3,oscillator:Object.assign(Xt(_i.getDefaults(),[...Object.keys(Rt.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(Xt(qt.getDefaults(),Object.keys(ae.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(Xt(_i.getDefaults(),[...Object.keys(Rt.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(Xt(qt.getDefaults(),Object.keys(ae.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(e,t){this._carrier._triggerEnvelopeAttack(e,t),this._modulator._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this._carrier._triggerEnvelopeRelease(e),this._modulator._triggerEnvelopeRelease(e),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class wu extends Kr{constructor(){super(N(wu.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new dl({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class Xr extends ae{constructor(){super(N(Xr.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const e=N(Xr.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Ge({context:this.context,units:"number",value:e.Q,param:this._filter.Q}),this.frequency=new Ge({context:this.context,units:"frequency",value:e.frequency,param:this._filter.frequency}),this.detune=new Ge({context:this.context,units:"cents",value:e.detune,param:this._filter.detune}),this.gain=new Ge({context:this.context,units:"decibels",convert:!1,value:e.gain,param:this._filter.gain}),this.type=e.type}static getDefaults(){return Object.assign(ae.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(e){Ie(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._filter.type=e}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let a=0;a<e;a++){const c=Math.pow(a/e,2)*19980+20;t[a]=c}const n=new Float32Array(e),s=new Float32Array(e),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(t,n,s),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class pn extends ae{constructor(){super(N(pn.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new Ae({context:this.context}),this.output=new Ae({context:this.context}),this._filters=[];const e=N(pn.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Ue({context:this.context,units:"positive",value:e.Q}),this.frequency=new Ue({context:this.context,units:"frequency",value:e.frequency}),this.detune=new Ue({context:this.context,units:"cents",value:e.detune}),this.gain=new Ue({context:this.context,units:"decibels",convert:!1,value:e.gain}),this._type=e.type,this.rolloff=e.rolloff,Fe(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(ae.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(e){Ie(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(e)!==-1,`Invalid filter type: ${e}`),this._type=e,this._filters.forEach(n=>n.type=e)}get rolloff(){return this._rolloff}set rolloff(e){const t=In(e)?e:parseInt(e,10),n=[-12,-24,-48,-96];let s=n.indexOf(t);Ie(s!==-1,`rolloff can only be ${n.join(", ")}`),s+=1,this._rolloff=t,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(s);for(let r=0;r<s;r++){const a=new Xr({context:this.context});a.type=this._type,this.frequency.connect(a.frequency),this.detune.connect(a.detune),this.Q.connect(a.Q),this.gain.connect(a.gain),this._filters[r]=a}this._internalChannels=this._filters,Dn(this.input,...this._internalChannels,this.output)}getFrequencyResponse(e=128){const t=new Xr({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(e).map(()=>1);return this._filters.forEach(()=>{t.getFrequencyResponse(e).forEach((r,a)=>n[a]*=r)}),t.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(e=>{e.dispose()}),ta(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class Yr extends qt{constructor(){super(N(Yr.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const e=N(Yr.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=e.octaves,this._baseFrequency=this.toFrequency(e.baseFrequency),this._exponent=this.input=new jr({context:this.context,value:e.exponent}),this._scale=this.output=new yi({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(qt.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){const t=this.toFrequency(e);Kt(t,0),this._baseFrequency=t,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._scale.max=this._baseFrequency*Math.pow(2,e)}get exponent(){return this._exponent.value}set exponent(e){this._exponent.value=e}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class as extends Yt{constructor(){super(N(as.getDefaults(),arguments)),this.name="MonoSynth";const e=N(as.getDefaults(),arguments);this.oscillator=new _i(Object.assign(e.oscillator,{context:this.context,detune:e.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new pn(Object.assign(e.filter,{context:this.context})),this.filterEnvelope=new Yr(Object.assign(e.filterEnvelope,{context:this.context})),this.envelope=new vo(Object.assign(e.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),Fe(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Yt.getDefaults(),{envelope:Object.assign(Xt(qt.getDefaults(),Object.keys(ae.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(Xt(pn.getDefaults(),Object.keys(ae.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(Xt(Yr.getDefaults(),Object.keys(ae.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(Xt(_i.getDefaults(),Object.keys(Rt.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(e,t=1){if(this.envelope.triggerAttack(e,t),this.filterEnvelope.triggerAttack(e),this.oscillator.start(e),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(e+n+s)}}_triggerEnvelopeRelease(e){this.envelope.triggerRelease(e),this.filterEnvelope.triggerRelease(e),this.oscillator.stop(e+this.toSeconds(this.envelope.release))}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class Ho extends Yt{constructor(){super(N(Ho.getDefaults(),arguments)),this.name="DuoSynth";const e=N(Ho.getDefaults(),arguments);this.voice0=new as(Object.assign(e.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new as(Object.assign(e.voice1,{context:this.context})),this.harmonicity=new yt({context:this.context,units:"positive",value:e.harmonicity}),this._vibrato=new on({frequency:e.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Ae({context:this.context,units:"normalRange",gain:e.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Ue({context:this.context,units:"frequency",value:440}),this.detune=new Ue({context:this.context,units:"cents",value:e.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),Fe(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(e){return e=this.toSeconds(e),this.voice0.envelope.getValueAtTime(e)+this.voice1.envelope.getValueAtTime(e)}static getDefaults(){return Un(Yt.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:Un(Xt(as.getDefaults(),Object.keys(Yt.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:Un(Xt(as.getDefaults(),Object.keys(Yt.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(e,t){this.voice0._triggerEnvelopeAttack(e,t),this.voice1._triggerEnvelopeAttack(e,t)}_triggerEnvelopeRelease(e){return this.voice0._triggerEnvelopeRelease(e),this.voice1._triggerEnvelopeRelease(e),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class pc extends Kr{constructor(){super(N(pc.getDefaults(),arguments)),this.name="FMSynth";const e=N(pc.getDefaults(),arguments);this.modulationIndex=new yt({context:this.context,value:e.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(Kr.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const Lf=[1,1.483,1.932,2.546,2.63,3.897];class mc extends Yt{constructor(){super(N(mc.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const e=N(mc.getDefaults(),arguments);this.detune=new Ue({context:this.context,units:"cents",value:e.detune}),this.frequency=new Ue({context:this.context,units:"frequency"}),this._amplitude=new Ae({context:this.context,gain:0}).connect(this.output),this._highpass=new pn({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let t=0;t<Lf.length;t++){const n=new Hs({context:this.context,harmonicity:e.harmonicity,modulationIndex:e.modulationIndex,modulationType:"square",onstop:t===0?()=>this.onsilence(this):tt,type:"square"});n.connect(this._highpass),this._oscillators[t]=n;const s=new yt({context:this.context,value:Lf[t]});this._freqMultipliers[t]=s,this.frequency.chain(s,n.frequency),this.detune.connect(n.detune)}this._filterFreqScaler=new yi({context:this.context,max:7e3,min:this.toFrequency(e.resonance)}),this.envelope=new qt({attack:e.envelope.attack,attackCurve:"linear",context:this.context,decay:e.envelope.decay,release:e.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=e.octaves,this.octaves=e.octaves}static getDefaults(){return Un(Yt.getDefaults(),{envelope:Object.assign(Xt(qt.getDefaults(),Object.keys(ae.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(e,t=1){return this.envelope.triggerAttack(e,t),this._oscillators.forEach(n=>n.start(e)),this.envelope.sustain===0&&this._oscillators.forEach(n=>{n.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(e){return this.envelope.triggerRelease(e),this._oscillators.forEach(t=>t.stop(e+this.toSeconds(this.envelope.release))),this}getLevelAtTime(e){return e=this.toSeconds(e),this.envelope.getValueAtTime(e)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(e){this._oscillators.forEach(t=>t.modulationIndex.value=e)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(e){this._oscillators.forEach(t=>t.harmonicity.value=e)}get resonance(){return this._filterFreqScaler.min}set resonance(e){this._filterFreqScaler.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,e)}dispose(){return super.dispose(),this._oscillators.forEach(e=>e.dispose()),this._freqMultipliers.forEach(e=>e.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class js extends xn{constructor(){super(N(js.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const e=N(js.getDefaults(),arguments);this.pitchDecay=e.pitchDecay,this.octaves=e.octaves,Fe(this,["oscillator","envelope"])}static getDefaults(){return Un(Yt.getDefaults(),xn.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(e,t){const n=this.toSeconds(t),s=this.toFrequency(e instanceof fn?e.toFrequency():e),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}ii([jm(0)],js.prototype,"octaves",void 0);ii([Wi(0)],js.prototype,"pitchDecay",void 0);class gc extends Ln{constructor(){super(N(gc.getDefaults(),arguments)),this.name="NoiseSynth";const e=N(gc.getDefaults(),arguments);this.noise=new zi(Object.assign({context:this.context},e.noise)),this.envelope=new vo(Object.assign({context:this.context},e.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Ln.getDefaults(),{envelope:Object.assign(Xt(qt.getDefaults(),Object.keys(ae.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(Xt(zi.getDefaults(),Object.keys(Rt.getDefaults())),{type:"white"})})}triggerAttack(e,t=1){return e=this.toSeconds(e),this.envelope.triggerAttack(e,t),this.noise.start(e),this.envelope.sustain===0&&this.noise.stop(e+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(e){return e=this.toSeconds(e),this.envelope.triggerRelease(e),this.noise.stop(e+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(e,t,n=1){return t=this.toSeconds(t),e=this.toSeconds(e),this.triggerAttack(t,n),this.triggerRelease(t+e),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const Tu=new Set;function Eu(i){Tu.add(i)}function Ym(i,e){const t=`registerProcessor("${i}", ${e})`;Tu.add(t)}function UA(){return Array.from(Tu).join(`
`)}class Ih extends ae{constructor(e){super(e),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=tt;const t=URL.createObjectURL(new Blob([UA()],{type:"text/javascript"})),n=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(t,n).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(n,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const BA=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;Eu(BA);const VA=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;Eu(VA);const zA=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;Eu(zA);const $m="feedback-comb-filter",GA=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Ym($m,GA);class $r extends Ih{constructor(){super(N($r.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const e=N($r.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Ae({context:this.context}),this.output=new Ae({context:this.context}),this.delayTime=new Ge({context:this.context,value:e.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Ge({context:this.context,value:e.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),Fe(this,["resonance","delayTime"])}_audioWorkletName(){return $m}static getDefaults(){return Object.assign(ae.getDefaults(),{delayTime:.1,resonance:.5})}onReady(e){Dn(this.input,e,this.output);const t=e.parameters.get("delayTime");this.delayTime.setParam(t);const n=e.parameters.get("feedback");this.resonance.setParam(n)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class Zr extends ae{constructor(){super(N(Zr.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const e=N(Zr.getDefaults(),arguments,["frequency","type"]);this._frequency=e.frequency,this._type=e.type,this.input=new Ae({context:this.context}),this.output=new Ae({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(ae.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const e=this._filter,t=this.toFrequency(this._frequency),n=1/(2*Math.PI*t);if(this._type==="lowpass"){const s=1/(n*this.context.sampleRate),r=s-1;this._filter=this.context.createIIRFilter([s,0],[1,r])}else{const s=1/(n*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,s])}this.input.chain(this._filter,this.output),e&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(e),e.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(e){this._frequency=e,this._createFilter()}get type(){return this._type}set type(e){this._type=e,this._createFilter()}getFrequencyResponse(e=128){const t=new Float32Array(e);for(let r=0;r<e;r++){const o=Math.pow(r/e,2)*19980+20;t[r]=o}const n=new Float32Array(e),s=new Float32Array(e);return this._filter.getFrequencyResponse(t,n,s),n}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class Qr extends ae{constructor(){super(N(Qr.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const e=N(Qr.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new $r({context:this.context,delayTime:e.delayTime,resonance:e.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new Zr({context:this.context,frequency:e.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(ae.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(e){this._lowpass.frequency=e}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class Wo extends Ln{constructor(){super(N(Wo.getDefaults(),arguments)),this.name="PluckSynth";const e=N(Wo.getDefaults(),arguments);this._noise=new zi({context:this.context,type:"pink"}),this.attackNoise=e.attackNoise,this._lfcf=new Qr({context:this.context,dampening:e.dampening,resonance:e.resonance}),this.resonance=e.resonance,this.release=e.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return Un(Ln.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(e){this._lfcf.dampening=e}triggerAttack(e,t){const n=this.toFrequency(e);t=this.toSeconds(t);const s=1/n;return this._lfcf.delayTime.setValueAtTime(s,t),this._noise.start(t),this._noise.stop(t+s*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(t),this._lfcf.resonance.setValueAtTime(this.resonance,t),this}triggerRelease(e){return this._lfcf.resonance.linearRampTo(0,this.release,e),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class Oi extends Ln{constructor(){super(N(Oi.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const e=N(Oi.getDefaults(),arguments,["voice","options"]);Ie(!In(e.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const t=e.voice.getDefaults();this.options=Object.assign(t,e.options),this.voice=e.voice,this.maxPolyphony=e.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Ln.getDefaults(),{maxPolyphony:32,options:{},voice:xn})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(e){this._availableVoices.push(e);const t=this._activeVoices.findIndex(n=>n.voice===e);this._activeVoices.splice(t,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const e=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return e.connect(this.output),this._voices.push(e),e}else ea("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const e=this._availableVoices.shift(),t=this._voices.indexOf(e);this._voices.splice(t,1),this.context.isOffline||e.dispose()}}_triggerAttack(e,t,n){e.forEach(s=>{const r=new zr(this.context,s).toMidi(),a=this._getNextAvailableVoice();a&&(a.triggerAttack(s,t,n),this._activeVoices.push({midi:r,voice:a,released:!1}),this.log("triggerAttack",s,t))})}_triggerRelease(e,t){e.forEach(n=>{const s=new zr(this.context,n).toMidi(),r=this._activeVoices.find(({midi:a,released:o})=>a===s&&!o);r&&(r.voice.triggerRelease(t),r.released=!0,this.log("triggerRelease",n,t))})}_scheduleEvent(e,t,n,s){Ie(!this.disposed,"Synth was already disposed"),n<=this.now()?e==="attack"?this._triggerAttack(t,n,s):this._triggerRelease(t,n):this.context.setTimeout(()=>{this._scheduleEvent(e,t,n,s)},n-this.now())}triggerAttack(e,t,n){Array.isArray(e)||(e=[e]);const s=this.toSeconds(t);return this._scheduleEvent("attack",e,s,n),this}triggerRelease(e,t){Array.isArray(e)||(e=[e]);const n=this.toSeconds(t);return this._scheduleEvent("release",e,n),this}triggerAttackRelease(e,t,n,s){const r=this.toSeconds(n);if(this.triggerAttack(e,r,s),Zt(t)){Ie(Zt(e),"If the duration is an array, the notes must also be an array"),e=e;for(let a=0;a<e.length;a++){const o=t[Math.min(a,t.length-1)],c=this.toSeconds(o);Ie(c>0,"The duration must be greater than 0"),this.triggerRelease(e[a],r+c)}}else{const a=this.toSeconds(t);Ie(a>0,"The duration must be greater than 0"),this.triggerRelease(e,r+a)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(e){const t=Xt(e,["onsilence","context"]);return this.options=Un(this.options,t),this._voices.forEach(n=>n.set(t)),this._dummyVoice.set(t),this}get(){return this._dummyVoice.get()}releaseAll(e){const t=this.toSeconds(e);return this._activeVoices.forEach(({voice:n})=>{n.triggerRelease(t)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(e=>e.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Jr extends Ln{constructor(){super(N(Jr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const e=N(Jr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),t={};Object.keys(e.urls).forEach(n=>{const s=parseInt(n,10);if(Ie(Do(n)||In(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),Do(n)){const r=new fn(this.context,n).toMidi();t[r]=e.urls[n]}else In(s)&&isFinite(s)&&(t[s]=e.urls[s])}),this._buffers=new yo({urls:t,onload:e.onload,baseUrl:e.baseUrl,onerror:e.onerror}),this.attack=e.attack,this.release=e.release,this.curve=e.curve,this._buffers.loaded&&Promise.resolve().then(e.onload)}static getDefaults(){return Object.assign(Ln.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:tt,onerror:tt,release:.1,urls:{}})}_findClosest(e){let n=0;for(;n<96;){if(this._buffers.has(e+n))return-n;if(this._buffers.has(e-n))return n;n++}throw new Error(`No available buffers for note: ${e}`)}triggerAttack(e,t,n=1){return this.log("triggerAttack",e,t,n),Array.isArray(e)||(e=[e]),e.forEach(s=>{const r=Hm(new fn(this.context,s).toFrequency()),a=Math.round(r),o=r-a,c=this._findClosest(a),l=a-c,h=this._buffers.get(l),u=Br(c+o),f=new Vi({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);f.start(t,0,h.duration/u,n),Zt(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(f),f.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const m=this._activeSources.get(a),g=m.indexOf(f);g!==-1&&m.splice(g,1)}}}),this}triggerRelease(e,t){return this.log("triggerRelease",e,t),Array.isArray(e)||(e=[e]),e.forEach(n=>{const s=new fn(this.context,n).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const r=this._activeSources.get(s);t=this.toSeconds(t),r.forEach(a=>{a.stop(t)}),this._activeSources.set(s,[])}}),this}releaseAll(e){const t=this.toSeconds(e);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(t)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(e,t,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(e,r,s),Zt(t)?(Ie(Zt(e),"notes must be an array when duration is array"),e.forEach((a,o)=>{const c=t[Math.min(o,t.length-1)];this.triggerRelease(a,r+this.toSeconds(c))})):this.triggerRelease(e,r+this.toSeconds(t)),this}add(e,t,n){if(Ie(Do(e)||isFinite(e),`note must be a pitch or midi: ${e}`),Do(e)){const s=new fn(this.context,e).toMidi();this._buffers.add(s,t,n)}else this._buffers.add(e,t,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(e=>{e.forEach(t=>t.dispose())}),this._activeSources.clear(),this}}ii([Wi(0)],Jr.prototype,"attack",void 0);ii([Wi(0)],Jr.prototype,"release",void 0);class Zn extends Wt{constructor(){super(N(Zn.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new _o("stopped"),this._startOffset=0;const e=N(Zn.getDefaults(),arguments,["callback","value"]);this._loop=e.loop,this.callback=e.callback,this.value=e.value,this._loopStart=this.toTicks(e.loopStart),this._loopEnd=this.toTicks(e.loopEnd),this._playbackRate=e.playbackRate,this._probability=e.probability,this._humanize=e.humanize,this.mute=e.mute,this._playbackRate=e.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(Wt.getDefaults(),{callback:tt,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(e=-1){this._state.forEachFrom(e,t=>{let n;if(t.state==="started"){t.id!==-1&&this.context.transport.clear(t.id);const s=t.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||In(this._loop)&&this._loop>1){n=1/0,In(this._loop)&&(n=this._loop*this._getLoopDuration());const r=this._state.getAfter(s);r!==null&&(n=Math.min(n,r.time-s)),n!==1/0&&(this._state.setStateAtTime("stopped",s+n+1,{id:-1}),n=new lt(this.context,n));const a=new lt(this.context,this._getLoopDuration());t.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new lt(this.context,s),n)}else t.id=this.context.transport.schedule(this._tick.bind(this),new lt(this.context,s))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e}get probability(){return this._probability}set probability(e){this._probability=e}get humanize(){return this._humanize}set humanize(e){this._humanize=e}start(e){const t=this.toTicks(e);return this._state.getValueAtTime(t)==="stopped"&&(this._state.add({id:-1,state:"started",time:t}),this._rescheduleEvents(t)),this}stop(e){this.cancel(e);const t=this.toTicks(e);if(this._state.getValueAtTime(t)==="started"){this._state.setStateAtTime("stopped",t,{id:-1});const n=this._state.getBefore(t);let s=t;n!==null&&(s=n.time),this._rescheduleEvents(s)}return this}cancel(e){e=Bn(e,-1/0);const t=this.toTicks(e);return this._state.forEachFrom(t,n=>{this.context.transport.clear(n.id)}),this._state.cancel(t),this}_tick(e){const t=this.context.transport.getTicksAtTime(e);if(!this.mute&&this._state.getValueAtTime(t)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let n=.02;gu(this.humanize)||(n=this.toSeconds(this.humanize)),e+=(Math.random()*2-1)*n}this.callback(e,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(e){this._loop=e,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._rescheduleEvents()}get loopEnd(){return new lt(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._rescheduleEvents()}get loopStart(){return new lt(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const e=this.context.transport.ticks,t=this._state.get(e);if(t!==null&&t.state==="started"){const n=this._getLoopDuration();return(e-t.time)%n/n}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class eo extends Wt{constructor(){super(N(eo.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const e=N(eo.getDefaults(),arguments,["callback","interval"]);this._event=new Zn({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:e.interval,playbackRate:e.playbackRate,probability:e.probability}),this.callback=e.callback,this.iterations=e.iterations}static getDefaults(){return Object.assign(Wt.getDefaults(),{interval:"4n",callback:tt,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(e){return this._event.start(e),this}stop(e){return this._event.stop(e),this}cancel(e){return this._event.cancel(e),this}_tick(e){this.callback(e)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(e){this._event.loopEnd=e}get playbackRate(){return this._event.playbackRate}set playbackRate(e){this._event.playbackRate=e}get humanize(){return this._event.humanize}set humanize(e){this._event.humanize=e}get probability(){return this._event.probability}set probability(e){this._event.probability=e}get mute(){return this._event.mute}set mute(e){this._event.mute=e}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(e){e===1/0?this._event.loop=!0:this._event.loop=e}dispose(){return super.dispose(),this._event.dispose(),this}}class Ir extends Zn{constructor(){super(N(Ir.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new _o("stopped"),this._events=new Set;const e=N(Ir.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,e.events.forEach(t=>{Zt(t)?this.add(t[0],t[1]):this.add(t)})}static getDefaults(){return Object.assign(Zn.getDefaults(),{events:[]})}start(e,t){const n=this.toTicks(e);if(this._state.getValueAtTime(n)!=="started"){t=Bn(t,this._loop?this._loopStart:0),this._loop?t=Bn(t,this._loopStart):t=Bn(t,0);const s=this.toTicks(t);this._state.add({id:-1,offset:s,state:"started",time:n}),this._forEach(r=>{this._startNote(r,n,s)})}return this}_startNote(e,t,n){t-=n,this._loop?e.startOffset>=this._loopStart&&e.startOffset<this._loopEnd?(e.startOffset<n&&(t+=this._getLoopDuration()),e.start(new lt(this.context,t))):e.startOffset<this._loopStart&&e.startOffset>=n&&(e.loop=!1,e.start(new lt(this.context,t))):e.startOffset>=n&&e.start(new lt(this.context,t))}get startOffset(){return this._startOffset}set startOffset(e){this._startOffset=e,this._forEach(t=>{t.startOffset+=this._startOffset})}stop(e){const t=this.toTicks(e);return this._state.cancel(t),this._state.setStateAtTime("stopped",t),this._forEach(n=>{n.stop(e)}),this}at(e,t){const n=new Lt(this.context,e).toTicks(),s=new lt(this.context,1).toSeconds(),r=this._events.values();let a=r.next();for(;!a.done;){const o=a.value;if(Math.abs(n-o.startOffset)<s)return je(t)&&(o.value=t),o;a=r.next()}return je(t)?(this.add(e,t),this.at(e)):null}add(e,t){e instanceof Object&&Reflect.has(e,"time")&&(t=e,e=t.time);const n=this.toTicks(e);let s;return t instanceof Zn?(s=t,s.callback=this._tick.bind(this)):s=new Zn({callback:this._tick.bind(this),context:this.context,value:t}),s.startOffset=n,s.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(s),this._restartEvent(s),this}_restartEvent(e){this._state.forEach(t=>{t.state==="started"?this._startNote(e,t.time,t.offset):e.stop(new lt(this.context,t.time))})}remove(e,t){return Ui(e)&&e.hasOwnProperty("time")&&(t=e,e=t.time),e=this.toTicks(e),this._events.forEach(n=>{n.startOffset===e&&(Sn(t)||je(t)&&n.value===t)&&(this._events.delete(n),n.dispose())}),this}clear(){return this._forEach(e=>e.dispose()),this._events.clear(),this}cancel(e){return this._forEach(t=>t.cancel(e)),this._state.cancel(this.toTicks(e)),this}_forEach(e){return this._events&&this._events.forEach(t=>{t instanceof Ir?t._forEach(e):e(t)}),this}_setAll(e,t){this._forEach(n=>{n[e]=t})}_tick(e,t){this.mute||this.callback(e,t)}_testLoopBoundries(e){this._loop&&(e.startOffset<this._loopStart||e.startOffset>=this._loopEnd)?e.cancel(0):e.state==="stopped"&&this._restartEvent(e)}get probability(){return this._probability}set probability(e){this._probability=e,this._setAll("probability",e)}get humanize(){return this._humanize}set humanize(e){this._humanize=e,this._setAll("humanize",e)}get loop(){return this._loop}set loop(e){this._loop=e,this._forEach(t=>{t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.loop=e,this._testLoopBoundries(t)})}get loopEnd(){return new lt(this.context,this._loopEnd).toSeconds()}set loopEnd(e){this._loopEnd=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopEnd=e,this._testLoopBoundries(t)})}get loopStart(){return new lt(this.context,this._loopStart).toSeconds()}set loopStart(e){this._loopStart=this.toTicks(e),this._loop&&this._forEach(t=>{t.loopStart=this.loopStart,this._testLoopBoundries(t)})}get playbackRate(){return this._playbackRate}set playbackRate(e){this._playbackRate=e,this._setAll("playbackRate",e)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*HA(i){let e=0;for(;e<i.length;)e=xo(e,i),yield i[e],e++}function*WA(i){let e=i.length-1;for(;e>=0;)e=xo(e,i),yield i[e],e--}function*Ro(i,e){for(;;)yield*e(i)}function xo(i,e){return Um(i,0,e.length-1)}function*Nf(i,e){let t=e?0:i.length-1;for(;;)t=xo(t,i),yield i[t],e?(t++,t>=i.length-1&&(e=!1)):(t--,t<=0&&(e=!0))}function*qA(i){let e=0,t=0;for(;e<i.length;)e=xo(e,i),yield i[e],t++,e+=t%2?2:-1}function*jA(i){let e=i.length-1,t=0;for(;e>=0;)e=xo(e,i),yield i[e],t++,e+=t%2?-2:1}function*KA(i){for(;;){const e=Math.floor(Math.random()*i.length);yield i[e]}}function*XA(i){const e=[];for(let t=0;t<i.length;t++)e.push(t);for(;e.length>0;){const t=e.splice(Math.floor(e.length*Math.random()),1),n=xo(t[0],i);yield i[n]}}function*YA(i){let e=Math.floor(Math.random()*i.length);for(;;)e===0?e++:e===i.length-1||Math.random()<.5?e--:e++,yield i[e]}function*Of(i,e="up",t=0){switch(Ie(i.length>0,"The array must have more than one value in it"),e){case"up":yield*Ro(i,HA);case"down":yield*Ro(i,WA);case"upDown":yield*Nf(i,!0);case"downUp":yield*Nf(i,!1);case"alternateUp":yield*Ro(i,qA);case"alternateDown":yield*Ro(i,jA);case"random":yield*KA(i);case"randomOnce":yield*Ro(i,XA);case"randomWalk":yield*YA(i)}}class _c extends eo{constructor(){super(N(_c.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const e=N(_c.getDefaults(),arguments,["callback","values","pattern"]);this.callback=e.callback,this._values=e.values,this._pattern=Of(e.values,e.pattern),this._type=e.pattern}static getDefaults(){return Object.assign(eo.getDefaults(),{pattern:"up",values:[],callback:tt})}_tick(e){const t=this._pattern.next();this._value=t.value,this.callback(e,this._value)}get values(){return this._values}set values(e){this._values=e,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(e){this._type=e,this._pattern=Of(this._values,this._type)}}class yc extends Zn{constructor(){super(N(yc.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new Ir({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const e=N(yc.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(e.subdivision),this.events=e.events,this.loop=e.loop,this.loopStart=e.loopStart,this.loopEnd=e.loopEnd,this.playbackRate=e.playbackRate,this.probability=e.probability,this.humanize=e.humanize,this.mute=e.mute,this.playbackRate=e.playbackRate}static getDefaults(){return Object.assign(Xt(Zn.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(e,t){t!==null&&this.callback(e,t)}get events(){return this._events}set events(e){this.clear(),this._eventsArray=e,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(e,t){return this._part.start(e,t&&this._indexTime(t)),this}stop(e){return this._part.stop(e),this}get subdivision(){return new lt(this.context,this._subdivision).toSeconds()}_createSequence(e){return new Proxy(e,{get:(t,n)=>t[n],set:(t,n,s)=>(zn(n)&&isFinite(parseInt(n,10))&&Zt(s)?t[n]=this._createSequence(s):t[n]=s,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(e,t,n){e.forEach((s,r)=>{const a=r*t+n;if(Zt(s))this._rescheduleSequence(s,t/s.length,a);else{const o=new lt(this.context,a,"i").toSeconds();this._part.add(o,s)}})}_indexTime(e){return new lt(this.context,e*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(e){this._part.loop=e}get loopStart(){return this._loopStart}set loopStart(e){this._loopStart=e,this._part.loopStart=this._indexTime(e)}get loopEnd(){return this._loopEnd}set loopEnd(e){this._loopEnd=e,e===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(e)}get startOffset(){return this._part.startOffset}set startOffset(e){this._part.startOffset=e}get playbackRate(){return this._part.playbackRate}set playbackRate(e){this._part.playbackRate=e}get probability(){return this._part.probability}set probability(e){this._part.probability=e}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(e){this._part.humanize=e}get length(){return this._part.length}}class Ks extends ae{constructor(){super(Object.assign(N(Ks.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Xm({context:this.context}),this.a=new Ae({context:this.context,gain:0}),this.b=new Ae({context:this.context,gain:0}),this.output=new Ae({context:this.context}),this._internalChannels=[this.a,this.b];const e=N(Ks.getDefaults(),arguments,["fade"]);this.fade=new Ue({context:this.context,units:"normalRange",value:e.fade}),Fe(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",wn(this._split,this.a.gain,0),wn(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(ae.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Ut extends ae{constructor(e){super(e),this.name="Effect",this._dryWet=new Ks({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Ae({context:this.context}),this.effectReturn=new Ae({context:this.context}),this.input=new Ae({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(e.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Fe(this,"wet")}static getDefaults(){return Object.assign(ae.getDefaults(),{wet:1})}connectEffect(e){return this._internalChannels.push(e),this.effectSend.chain(e,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class vc extends Ut{constructor(e){super(e),this.name="LFOEffect",this._lfo=new on({context:this.context,frequency:e.frequency,amplitude:e.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=e.type,Fe(this,["frequency","depth"])}static getDefaults(){return Object.assign(Ut.getDefaults(),{frequency:1,type:"sine",depth:1})}start(e){return this._lfo.start(e),this}stop(e){return this._lfo.stop(e),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class xc extends vc{constructor(){super(N(xc.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const e=N(xc.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new pn(Object.assign(e.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=e.octaves,this.baseFrequency=e.baseFrequency}static getDefaults(){return Object.assign(vc.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(e){this._lfo.min=this.toFrequency(e),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._lfo.max=this._lfo.min*Math.pow(2,e)}dispose(){return super.dispose(),this.filter.dispose(),this}}class to extends ae{constructor(){super(Object.assign(N(to.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const e=N(to.getDefaults(),arguments,["pan"]);this.pan=new Ge({context:this.context,param:this._panner.pan,value:e.pan,minValue:-1,maxValue:1}),this._panner.channelCount=e.channelCount,this._panner.channelCountMode="explicit",Fe(this,"pan")}static getDefaults(){return Object.assign(ae.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class Sc extends vc{constructor(){super(N(Sc.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const e=N(Sc.getDefaults(),arguments,["frequency"]);this._panner=new to({context:this.context,channelCount:e.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(vc.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class no extends ae{constructor(){super(N(no.getDefaults(),arguments,["smoothing"])),this.name="Follower";const e=N(no.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new Km({context:this.context}),this._lowpass=this.output=new Zr({context:this.context,frequency:1/this.toSeconds(e.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=e.smoothing}static getDefaults(){return Object.assign(ae.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(e){this._smoothing=e,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class bc extends Ut{constructor(){super(N(bc.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const e=N(bc.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new no({context:this.context,smoothing:e.follower}),this._sweepRange=new Go({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this._inputBoost=new Ae({context:this.context}),this._bandpass=new pn({context:this.context,rolloff:-48,frequency:0,Q:e.Q}),this._peaking=new pn({context:this.context,type:"peaking"}),this._peaking.gain.value=e.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=e.sensitivity,Fe(this,["gain","Q"])}static getDefaults(){return Object.assign(Ut.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(e){this._octaves=e,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(e){this._follower.smoothing=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._setSweepRange()}get sensitivity(){return na(1/this._inputBoost.gain.value)}set sensitivity(e){this._inputBoost.gain.value=1/Ur(e)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const Zm="bit-crusher",$A=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Ym(Zm,$A);class Mc extends Ut{constructor(){super(N(Mc.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const e=N(Mc.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new wc({context:this.context,bits:e.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(Ut.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class wc extends Ih{constructor(){super(N(wc.getDefaults(),arguments)),this.name="BitCrusherWorklet";const e=N(wc.getDefaults(),arguments);this.input=new Ae({context:this.context}),this.output=new Ae({context:this.context}),this.bits=new Ge({context:this.context,value:e.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(Ih.getDefaults(),{bits:12})}_audioWorkletName(){return Zm}onReady(e){Dn(this.input,e,this.output);const t=e.parameters.get("bits");this.bits.setParam(t)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class Tc extends Ut{constructor(){super(N(Tc.getDefaults(),arguments,["order"])),this.name="Chebyshev";const e=N(Tc.getDefaults(),arguments,["order"]);this._shaper=new Gn({context:this.context,length:4096}),this._order=e.order,this.connectEffect(this._shaper),this.order=e.order,this.oversample=e.oversample}static getDefaults(){return Object.assign(Ut.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(e,t,n){return n.has(t)||(t===0?n.set(t,0):t===1?n.set(t,e):n.set(t,2*e*this._getCoefficient(e,t-1,n)-this._getCoefficient(e,t-2,n))),n.get(t)}get order(){return this._order}set order(e){this._order=e,this._shaper.setMap(t=>this._getCoefficient(t,e,new Map))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class _s extends ae{constructor(){super(N(_s.getDefaults(),arguments,["channels"])),this.name="Split";const e=N(_s.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(e.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(ae.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Gi extends ae{constructor(){super(N(Gi.getDefaults(),arguments,["channels"])),this.name="Merge";const e=N(Gi.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(e.channels)}static getDefaults(){return Object.assign(ae.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class vi extends ae{constructor(e){super(e),this.name="StereoEffect",this.input=new Ae({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new Ks({context:this.context,fade:e.wet}),this.wet=this._dryWet.fade,this._split=new _s({context:this.context,channels:2}),this._merge=new Gi({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),Fe(this,["wet"])}connectEffectLeft(...e){this._split.connect(e[0],0,0),Dn(...e),wn(e[e.length-1],this._merge,0,0)}connectEffectRight(...e){this._split.connect(e[0],1,0),Dn(...e),wn(e[e.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(ae.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class Dh extends vi{constructor(e){super(e),this.feedback=new Ue({context:this.context,value:e.feedback,units:"normalRange"}),this._feedbackL=new Ae({context:this.context}),this._feedbackR=new Ae({context:this.context}),this._feedbackSplit=new _s({context:this.context,channels:2}),this._feedbackMerge=new Gi({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),Fe(this,["feedback"])}static getDefaults(){return Object.assign(vi.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class Ec extends Dh{constructor(){super(N(Ec.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const e=N(Ec.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=e.depth,this._delayTime=e.delayTime/1e3,this._lfoL=new on({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new on({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._delayNodeL=new bn({context:this.context}),this._delayNodeR=new bn({context:this.context}),this.frequency=this._lfoL.frequency,Fe(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=e.type,this.spread=e.spread}static getDefaults(){return Object.assign(Dh.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(e){this._depth=e;const t=this._delayTime*e;this._lfoL.min=Math.max(this._delayTime-t,0),this._lfoL.max=this._delayTime+t,this._lfoR.min=Math.max(this._delayTime-t,0),this._lfoR.max=this._delayTime+t}get delayTime(){return this._delayTime*1e3}set delayTime(e){this._delayTime=e/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class Ac extends Ut{constructor(){super(N(Ac.getDefaults(),arguments,["distortion"])),this.name="Distortion";const e=N(Ac.getDefaults(),arguments,["distortion"]);this._shaper=new Gn({context:this.context,length:4096}),this._distortion=e.distortion,this.connectEffect(this._shaper),this.distortion=e.distortion,this.oversample=e.oversample}static getDefaults(){return Object.assign(Ut.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(e){this._distortion=e;const t=e*100,n=Math.PI/180;this._shaper.setMap(s=>Math.abs(s)<.001?0:(3+t)*s*20*n/(Math.PI+t*Math.abs(s)))}get oversample(){return this._shaper.oversample}set oversample(e){this._shaper.oversample=e}dispose(){return super.dispose(),this._shaper.dispose(),this}}class Cc extends Ut{constructor(e){super(e),this.name="FeedbackEffect",this._feedbackGain=new Ae({context:this.context,gain:e.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,Fe(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Ut.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class Rc extends Cc{constructor(){super(N(Rc.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const e=N(Rc.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new bn({context:this.context,delayTime:e.delayTime,maxDelay:e.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Fe(this,"delayTime")}static getDefaults(){return Object.assign(Cc.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class ZA extends ae{constructor(e){super(e),this.name="PhaseShiftAllpass",this.input=new Ae({context:this.context}),this.output=new Ae({context:this.context}),this.offset90=new Ae({context:this.context});const t=[.6923878,.9360654322959,.988229522686,.9987488452737],n=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(t),this._bank1=this._createAllPassFilterBank(n),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),Dn(this.input,...this._bank0,this._oneSampleDelay,this.output),Dn(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(e){return e.map(n=>{const s=[[n*n,0,-1],[1,0,-(n*n)]];return this.context.createIIRFilter(s[0],s[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(e=>e.disconnect()),this._bank1.forEach(e=>e.disconnect()),this._oneSampleDelay.disconnect(),this}}class Ic extends Ut{constructor(){super(N(Ic.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const e=N(Ic.getDefaults(),arguments,["frequency"]);this.frequency=new Ue({context:this.context,units:"frequency",value:e.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new Gr({context:this.context,type:"sine"}),this._cosine=new gt({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new yt({context:this.context}),this._cosineMultiply=new yt({context:this.context}),this._negate=new Mu({context:this.context}),this._add=new Qs({context:this.context}),this._phaseShifter=new ZA({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const t=this.immediate();this._sine.start(t),this._cosine.start(t)}static getDefaults(){return Object.assign(Ut.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const Ff=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],kf=[225,556,441,341];class Dc extends vi{constructor(){super(N(Dc.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const e=N(Dc.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Ue({context:this.context,value:e.roomSize,units:"normalRange"}),this._allpassFiltersL=kf.map(t=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=t,n}),this._allpassFiltersR=kf.map(t=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=t,n}),this._combFilters=Ff.map((t,n)=>{const s=new Qr({context:this.context,dampening:e.dampening,delayTime:t});return n<Ff.length/2?this.connectEffectLeft(s,...this._allpassFiltersL):this.connectEffectRight(s,...this._allpassFiltersR),this.roomSize.connect(s.resonance),s}),Fe(this,["roomSize"])}static getDefaults(){return Object.assign(vi.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(e){this._combFilters.forEach(t=>t.dampening=e)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(e=>e.disconnect()),this._allpassFiltersR.forEach(e=>e.disconnect()),this._combFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this}}const Uf=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],QA=[.773,.802,.753,.733],JA=[347,113,37];class Pc extends vi{constructor(){super(N(Pc.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const e=N(Pc.getDefaults(),arguments,["roomSize"]);this.roomSize=new Ue({context:this.context,value:e.roomSize,units:"normalRange"}),this._scaleRoomSize=new yi({context:this.context,min:-.733,max:.197}),this._allpassFilters=JA.map(t=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=t,n}),this._feedbackCombFilters=Uf.map((t,n)=>{const s=new $r({context:this.context,delayTime:t});return this._scaleRoomSize.connect(s.resonance),s.resonance.value=QA[n],n<Uf.length/2?this.connectEffectLeft(...this._allpassFilters,s):this.connectEffectRight(...this._allpassFilters,s),s}),this.roomSize.connect(this._scaleRoomSize),Fe(this,["roomSize"])}static getDefaults(){return Object.assign(vi.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(e=>e.disconnect()),this._feedbackCombFilters.forEach(e=>e.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class Bf extends Dh{constructor(e){super(e),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),Fe(this,["feedback"])}}class Lc extends Bf{constructor(){super(N(Lc.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const e=N(Lc.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new bn({context:this.context,maxDelay:e.maxDelay}),this._rightDelay=new bn({context:this.context,maxDelay:e.maxDelay}),this._rightPreDelay=new bn({context:this.context,maxDelay:e.maxDelay}),this.delayTime=new Ue({context:this.context,units:"time",value:e.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),Fe(this,["delayTime"])}static getDefaults(){return Object.assign(Bf.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class Nc extends Cc{constructor(){super(N(Nc.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const e=N(Nc.getDefaults(),arguments,["pitch"]);this._frequency=new Ue({context:this.context}),this._delayA=new bn({maxDelay:1,context:this.context}),this._lfoA=new on({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new bn({maxDelay:1,context:this.context}),this._lfoB=new on({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new Ks({context:this.context}),this._crossFadeLFO=new on({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new bn({delayTime:e.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,Fe(this,"delayTime"),this._pitch=e.pitch,this._windowSize=e.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const t=this.now();this._lfoA.start(t),this._lfoB.start(t),this._crossFadeLFO.start(t),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(Cc.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(e){this._pitch=e;let t=0;e<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,t=Br(e-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,t=Br(e)-1),this._frequency.value=t*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(e){this._windowSize=this.toSeconds(e),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Oc extends vi{constructor(){super(N(Oc.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const e=N(Oc.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new on({context:this.context,frequency:e.frequency,min:0,max:1}),this._lfoR=new on({context:this.context,frequency:e.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(e.baseFrequency),this._octaves=e.octaves,this.Q=new Ue({context:this.context,value:e.Q,units:"positive"}),this._filtersL=this._makeFilters(e.stages,this._lfoL),this._filtersR=this._makeFilters(e.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=e.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=e.baseFrequency,this.octaves=e.octaves,this._lfoL.start(),this._lfoR.start(),Fe(this,["frequency","Q"])}static getDefaults(){return Object.assign(vi.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(e,t){const n=[];for(let s=0;s<e;s++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),t.connect(r.frequency),n.push(r)}return n}get octaves(){return this._octaves}set octaves(e){this._octaves=e;const t=this._baseFrequency*Math.pow(2,e);this._lfoL.max=t,this._lfoR.max=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(e){this._baseFrequency=this.toFrequency(e),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(e=>e.disconnect()),this._filtersR.forEach(e=>e.disconnect()),this.frequency.dispose(),this}}class io extends Ut{constructor(){super(N(io.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const e=N(io.getDefaults(),arguments,["decay"]);this._decay=e.decay,this._preDelay=e.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Ut.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(e){e=this.toSeconds(e),Kt(e,.001),this._decay=e,this.generate()}get preDelay(){return this._preDelay}set preDelay(e){e=this.toSeconds(e),Kt(e,0),this._preDelay=e,this.generate()}generate(){return ht(this,void 0,void 0,function*(){const e=this.ready,t=new go(2,this._decay+this._preDelay,this.context.sampleRate),n=new zi({context:t}),s=new zi({context:t}),r=new Gi({context:t});n.connect(r,0,0),s.connect(r,0,1);const a=new Ae({context:t}).toDestination();r.connect(a),n.start(0),s.start(0),a.gain.setValueAtTime(0,0),a.gain.setValueAtTime(1,this._preDelay),a.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const o=t.render();return this.ready=o.then(tt),yield e,this._convolver.buffer=(yield o).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class sa extends ae{constructor(){super(N(sa.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new _s({channels:2,context:this.context}),this._midAdd=new Qs({context:this.context}),this.mid=new yt({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Js({context:this.context}),this.side=new yt({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class ra extends ae{constructor(){super(N(ra.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new Ae({context:this.context}),this.side=new Ae({context:this.context}),this._left=new Qs({context:this.context}),this._leftMult=new yt({context:this.context,value:Math.SQRT1_2}),this._right=new Js({context:this.context}),this._rightMult=new yt({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Gi({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Vf extends Ut{constructor(e){super(e),this.name="MidSideEffect",this._midSideMerge=new ra({context:this.context}),this._midSideSplit=new sa({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...e){this._midSend.chain(...e,this._midReturn)}connectEffectSide(...e){this._sideSend.chain(...e,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Fc extends Vf{constructor(){super(N(Fc.getDefaults(),arguments,["width"])),this.name="StereoWidener";const e=N(Fc.getDefaults(),arguments,["width"]);this.width=new Ue({context:this.context,value:e.width,units:"normalRange"}),Fe(this,["width"]),this._twoTimesWidthMid=new yt({context:this.context,value:2}),this._twoTimesWidthSide=new yt({context:this.context,value:2}),this._midMult=new yt({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Js({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),wn(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new yt({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Vf.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class kc extends vi{constructor(){super(N(kc.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const e=N(kc.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new on({context:this.context,type:e.type,min:1,max:0}),this._lfoR=new on({context:this.context,type:e.type,min:1,max:0}),this._amplitudeL=new Ae({context:this.context}),this._amplitudeR=new Ae({context:this.context}),this.frequency=new Ue({context:this.context,value:e.frequency,units:"frequency"}),this.depth=new Ue({context:this.context,value:e.depth,units:"normalRange"}),Fe(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=e.spread}static getDefaults(){return Object.assign(vi.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(e){return this._lfoL.start(e),this._lfoR.start(e),this}stop(e){return this._lfoL.stop(e),this._lfoR.stop(e),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(e){this._lfoL.type=e,this._lfoR.type=e}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(e){this._lfoL.phase=90-e/2,this._lfoR.phase=e/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Uc extends Ut{constructor(){super(N(Uc.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const e=N(Uc.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new bn({context:this.context,delayTime:0,maxDelay:e.maxDelay}),this._lfo=new on({context:this.context,type:e.type,min:0,max:e.maxDelay,frequency:e.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=e.depth,Fe(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(Ut.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(e){this._lfo.type=e}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class so extends ae{constructor(){super(N(so.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const e=N(so.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Ae({context:this.context}),this._split=new _s({context:this.context,channels:e.channels}),this.input.connect(this._split),Kt(e.channels,1);for(let t=0;t<e.channels;t++)this._analysers[t]=this.context.createAnalyser(),this._split.connect(this._analysers[t],t,0);this.size=e.size,this.type=e.type}static getDefaults(){return Object.assign(ae.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((e,t)=>{const n=this._buffers[t];this._type==="fft"?e.getFloatFrequencyData(n):this._type==="waveform"&&e.getFloatTimeDomainData(n)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(e){this._analysers.forEach((t,n)=>{t.fftSize=e*2,this._buffers[n]=new Float32Array(e)})}get channels(){return this._analysers.length}get type(){return this._type}set type(e){Ie(e==="waveform"||e==="fft",`Analyser: invalid type: ${e}`),this._type=e}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(e){this._analysers.forEach(t=>t.smoothingTimeConstant=e)}dispose(){return super.dispose(),this._analysers.forEach(e=>e.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class ys extends ae{constructor(){super(N(ys.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new so({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Bc extends ys{constructor(){super(N(Bc.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const e=N(Bc.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new so({context:this.context,size:256,type:"waveform",channels:e.channels}),this.smoothing=e.smoothing,this.normalRange=e.normalRange}static getDefaults(){return Object.assign(ys.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return ea("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const e=this._analyser.getValue(),n=(this.channels===1?[e]:e).map(s=>{const r=s.reduce((o,c)=>o+c*c,0),a=Math.sqrt(r/s.length);return this._rms=Math.max(a,this._rms*this.smoothing),this.normalRange?this._rms:na(this._rms)});return this.channels===1?n[0]:n}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Vc extends ys{constructor(){super(N(Vc.getDefaults(),arguments,["size"])),this.name="FFT";const e=N(Vc.getDefaults(),arguments,["size"]);this.normalRange=e.normalRange,this._analyser.type="fft",this.size=e.size}static getDefaults(){return Object.assign(ae.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(t=>this.normalRange?Ur(t):t)}get size(){return this._analyser.size}set size(e){this._analyser.size=e}get smoothing(){return this._analyser.smoothing}set smoothing(e){this._analyser.smoothing=e}getFrequencyOfIndex(e){return Ie(0<=e&&e<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),e*this.context.sampleRate/(this.size*2)}}class Au extends ys{constructor(){super(N(Au.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class zc extends ys{constructor(){super(N(zc.getDefaults(),arguments,["size"])),this.name="Waveform";const e=N(zc.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=e.size}static getDefaults(){return Object.assign(ys.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(e){this._analyser.size=e}}class At extends ae{constructor(){super(N(At.getDefaults(),arguments,["solo"])),this.name="Solo";const e=N(At.getDefaults(),arguments,["solo"]);this.input=this.output=new Ae({context:this.context}),At._allSolos.has(this.context)||At._allSolos.set(this.context,new Set),At._allSolos.get(this.context).add(this),this.solo=e.solo}static getDefaults(){return Object.assign(ae.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(e){e?this._addSolo():this._removeSolo(),At._allSolos.get(this.context).forEach(t=>t._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){At._soloed.has(this.context)||At._soloed.set(this.context,new Set),At._soloed.get(this.context).add(this)}_removeSolo(){At._soloed.has(this.context)&&At._soloed.get(this.context).delete(this)}_isSoloed(){return At._soloed.has(this.context)&&At._soloed.get(this.context).has(this)}_noSolos(){return!At._soloed.has(this.context)||At._soloed.has(this.context)&&At._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),At._allSolos.get(this.context).delete(this),this._removeSolo(),this}}At._allSolos=new Map;At._soloed=new Map;class qo extends ae{constructor(){super(N(qo.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const e=N(qo.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new to({context:this.context,pan:e.pan,channelCount:e.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new gi({context:this.context,volume:e.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=e.mute,Fe(this,["pan","volume"])}static getDefaults(){return Object.assign(ae.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(e){this._volume.mute=e}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class ns extends ae{constructor(){super(N(ns.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const e=N(ns.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new At({solo:e.solo,context:this.context}),this._panVol=this.output=new qo({context:this.context,pan:e.pan,volume:e.volume,mute:e.mute,channelCount:e.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Fe(this,["pan","volume"])}static getDefaults(){return Object.assign(ae.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(e){this._solo.solo=e}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(e){this._panVol.mute=e}_getBus(e){return ns.buses.has(e)||ns.buses.set(e,new Ae({context:this.context})),ns.buses.get(e)}send(e,t=0){const n=this._getBus(e),s=new Ae({context:this.context,units:"decibels",gain:t});return this.connect(s),s.connect(n),s}receive(e){return this._getBus(e).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}ns.buses=new Map;class Cu extends ae{constructor(){super(N(Cu.getDefaults(),arguments)),this.name="Mono",this.input=new Ae({context:this.context}),this._merge=this.output=new Gi({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class ro extends ae{constructor(){super(N(ro.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new Ae({context:this.context}),this.output=void 0,this.low=new pn({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new pn({context:this.context,frequency:0,type:"highpass"}),this.mid=new pn({context:this.context,frequency:0,type:"lowpass"}),this.high=new pn({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const e=N(ro.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Ue({context:this.context,units:"frequency",value:e.lowFrequency}),this.highFrequency=new Ue({context:this.context,units:"frequency",value:e.highFrequency}),this.Q=new Ue({context:this.context,units:"positive",value:e.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),Fe(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ae.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),ta(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let e1=class extends ae{constructor(){super(...arguments),this.name="Listener",this.positionX=new Ge({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Ge({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Ge({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Ge({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Ge({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Ge({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Ge({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Ge({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Ge({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(ae.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};ll(i=>{i.listener=new e1({context:i})});hl(i=>{i.listener.dispose()});class Gc extends ae{constructor(){super(N(Gc.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const e=N(Gc.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=e.panningModel,this.maxDistance=e.maxDistance,this.distanceModel=e.distanceModel,this.coneOuterGain=e.coneOuterGain,this.coneOuterAngle=e.coneOuterAngle,this.coneInnerAngle=e.coneInnerAngle,this.refDistance=e.refDistance,this.rolloffFactor=e.rolloffFactor,this.positionX=new Ge({context:this.context,param:this._panner.positionX,value:e.positionX}),this.positionY=new Ge({context:this.context,param:this._panner.positionY,value:e.positionY}),this.positionZ=new Ge({context:this.context,param:this._panner.positionZ,value:e.positionZ}),this.orientationX=new Ge({context:this.context,param:this._panner.orientationX,value:e.orientationX}),this.orientationY=new Ge({context:this.context,param:this._panner.orientationY,value:e.orientationY}),this.orientationZ=new Ge({context:this.context,param:this._panner.orientationZ,value:e.orientationZ})}static getDefaults(){return Object.assign(ae.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(e,t,n){return this.positionX.value=e,this.positionY.value=t,this.positionZ.value=n,this}setOrientation(e,t,n){return this.orientationX.value=e,this.orientationY.value=t,this.orientationZ.value=n,this}get panningModel(){return this._panner.panningModel}set panningModel(e){this._panner.panningModel=e}get refDistance(){return this._panner.refDistance}set refDistance(e){this._panner.refDistance=e}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(e){this._panner.rolloffFactor=e}get distanceModel(){return this._panner.distanceModel}set distanceModel(e){this._panner.distanceModel=e}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(e){this._panner.coneInnerAngle=e}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(e){this._panner.coneOuterAngle=e}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(e){this._panner.coneOuterGain=e}get maxDistance(){return this._panner.maxDistance}set maxDistance(e){this._panner.maxDistance=e}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class No extends ae{constructor(){super(N(No.getDefaults(),arguments)),this.name="Recorder";const e=N(No.getDefaults(),arguments);this.input=new Ae({context:this.context}),Ie(No.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:e.mimeType})}static getDefaults(){return ae.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return Bi!==null&&Reflect.has(Bi,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return ht(this,void 0,void 0,function*(){Ie(this.state!=="started","Recorder is already started");const e=new Promise(t=>{const n=()=>{this._recorder.removeEventListener("start",n,!1),t()};this._recorder.addEventListener("start",n,!1)});return this._recorder.start(),yield e})}stop(){return ht(this,void 0,void 0,function*(){Ie(this.state!=="stopped","Recorder is not started");const e=new Promise(t=>{const n=s=>{this._recorder.removeEventListener("dataavailable",n,!1),t(s.data)};this._recorder.addEventListener("dataavailable",n,!1)});return this._recorder.stop(),yield e})}pause(){return Ie(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class di extends ae{constructor(){super(N(di.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const e=N(di.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Ge({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:e.threshold}),this.attack=new Ge({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:e.attack}),this.release=new Ge({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:e.release}),this.knee=new Ge({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:e.knee}),this.ratio=new Ge({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:e.ratio}),Fe(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(ae.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Hc extends ae{constructor(){super(Object.assign(N(Hc.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const e=N(Hc.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new no({context:this.context,smoothing:e.smoothing}),this._gt=new zo({context:this.context,value:Ur(e.threshold)}),this.input=new Ae({context:this.context}),this._gate=this.output=new Ae({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(ae.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return na(this._gt.value)}set threshold(e){this._gt.value=Ur(e)}get smoothing(){return this._follower.smoothing}set smoothing(e){this._follower.smoothing=e}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Wc extends ae{constructor(){super(Object.assign(N(Wc.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const e=N(Wc.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new di({context:this.context,ratio:20,attack:.003,release:.01,threshold:e.threshold}),this.threshold=this._compressor.threshold,Fe(this,"threshold")}static getDefaults(){return Object.assign(ae.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class qc extends ae{constructor(){super(Object.assign(N(qc.getDefaults(),arguments))),this.name="MidSideCompressor";const e=N(qc.getDefaults(),arguments);this._midSideSplit=this.input=new sa({context:this.context}),this._midSideMerge=this.output=new ra({context:this.context}),this.mid=new di(Object.assign(e.mid,{context:this.context})),this.side=new di(Object.assign(e.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),Fe(this,["mid","side"])}static getDefaults(){return Object.assign(ae.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class jc extends ae{constructor(){super(Object.assign(N(jc.getDefaults(),arguments))),this.name="MultibandCompressor";const e=N(jc.getDefaults(),arguments);this._splitter=this.input=new ro({context:this.context,lowFrequency:e.lowFrequency,highFrequency:e.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Ae({context:this.context}),this.low=new di(Object.assign(e.low,{context:this.context})),this.mid=new di(Object.assign(e.mid,{context:this.context})),this.high=new di(Object.assign(e.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),Fe(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(ae.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class Kc extends ae{constructor(){super(N(Kc.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new Ae({context:this.context}),this._internalChannels=[];const e=N(Kc.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new ro({context:this.context,highFrequency:e.highFrequency,lowFrequency:e.lowFrequency}),this._lowGain=new Ae({context:this.context,gain:e.low,units:"decibels"}),this._midGain=new Ae({context:this.context,gain:e.mid,units:"decibels"}),this._highGain=new Ae({context:this.context,gain:e.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),Fe(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(ae.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),ta(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Xc extends ae{constructor(){super(N(Xc.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const e=N(Xc.getDefaults(),arguments,["url","onload"]);this._buffer=new nt(e.url,t=>{this.buffer=t,e.onload()}),this.input=new Ae({context:this.context}),this.output=new Ae({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=e.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(ae.getDefaults(),{normalize:!0,onload:tt})}load(e){return ht(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(e)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(e){e&&this._buffer.set(e),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const t=this._buffer.get();this._convolver.buffer=t||null}get normalize(){return this._convolver.normalize}set normalize(e){this._convolver.normalize=e}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function Et(){return _t().now()}function t1(){return _t().immediate()}const n1=_t().transport;function i1(){return _t().transport}const Ru=_t().destination,s1=_t().destination;function r1(){return _t().destination}const o1=_t().listener;function a1(){return _t().listener}const c1=_t().draw;function l1(){return _t().draw}const h1=_t();function u1(){return nt.loaded()}const d1=nt,f1=yo,p1=Vi,m1=Object.freeze(Object.defineProperty({__proto__:null,AMOscillator:Hr,AMSynth:wu,Abs:Km,Add:Qs,AmplitudeEnvelope:vo,Analyser:so,AudioToGain:dl,AutoFilter:xc,AutoPanner:Sc,AutoWah:bc,BaseContext:yu,BiquadFilter:Xr,BitCrusher:Mc,Buffer:d1,BufferSource:p1,Buffers:f1,Channel:ns,Chebyshev:Tc,Chorus:Ec,Clock:Gs,Compressor:di,Context:mo,Convolver:Xc,CrossFade:Ks,DCMeter:Au,Delay:bn,Destination:Ru,Distortion:Ac,Draw:c1,DuoSynth:Ho,EQ3:Kc,Emitter:po,Envelope:qt,FFT:Vc,FMOscillator:Hs,FMSynth:pc,FatOscillator:Wr,FeedbackCombFilter:$r,FeedbackDelay:Rc,Filter:pn,Follower:no,Freeverb:Dc,Frequency:Ah,FrequencyClass:fn,FrequencyEnvelope:Yr,FrequencyShifter:Ic,Gain:Ae,GainToAudio:Xm,Gate:Hc,GrainPlayer:fc,GreaterThan:zo,GreaterThanZero:pl,IntervalTimeline:Wm,JCReverb:Pc,LFO:on,Limiter:Wc,Listener:o1,Loop:eo,LowpassCombFilter:Qr,Master:s1,MembraneSynth:js,Merge:Gi,MetalSynth:mc,Meter:Bc,MidSideCompressor:qc,MidSideMerge:ra,MidSideSplit:sa,Midi:IA,MidiClass:zr,Mono:Cu,MonoSynth:as,MultibandCompressor:jc,MultibandSplit:ro,Multiply:yt,Negate:Mu,Noise:zi,NoiseSynth:gc,Offline:RA,OfflineContext:go,OmniOscillator:_i,OnePoleFilter:Zr,Oscillator:gt,PWMOscillator:qr,PanVol:qo,Panner:to,Panner3D:Gc,Param:Ge,Part:Ir,Pattern:_c,Phaser:Oc,PingPongDelay:Lc,PitchShift:Nc,Player:qs,Players:dc,PluckSynth:Wo,PolySynth:Oi,Pow:jr,PulseOscillator:Ws,Recorder:No,Reverb:io,Sampler:Jr,Scale:yi,ScaleExp:Go,Sequence:yc,Signal:Ue,Solo:At,Split:_s,StateTimeline:_o,StereoWidener:Fc,Subtract:Js,SyncedSignal:kA,Synth:xn,Ticks:DA,TicksClass:lt,Time:TA,TimeClass:Rn,Timeline:si,ToneAudioBuffer:nt,ToneAudioBuffers:yo,ToneAudioNode:ae,ToneBufferSource:Vi,ToneEvent:Zn,ToneOscillatorNode:Gr,Transport:n1,TransportTime:CA,TransportTimeClass:Lt,Tremolo:kc,Unit:NA,UserMedia:Er,Vibrato:Uc,Volume:gi,WaveShaper:Gn,Waveform:zc,Zero:fl,connect:wn,connectSeries:Dn,connectSignal:ia,context:h1,dbToGain:Ur,debug:uA,defaultArg:Bn,disconnect:Su,ftom:os,gainToDb:na,getContext:_t,getDestination:r1,getDraw:l1,getListener:a1,getTransport:i1,immediate:t1,intervalToFrequencyRatio:Br,isArray:Zt,isBoolean:gu,isDefined:je,isFunction:Om,isNote:Do,isNumber:In,isObject:Ui,isString:zn,isUndef:Sn,loaded:u1,mtof:vu,now:Et,optionsFromArguments:N,setContext:cc,start:Gm,supported:lA,version:Yh},Symbol.toStringTag,{value:"Module"})),Ns=class Ns{constructor(){A(this,"modelInstance");A(this,"_raycasterId");A(this,"_pointerId");A(this,"_bodyName");A(this,"_bodyId");A(this,"_bodyUUID");A(this,"_keyId");A(this,"_keyboardId");A(this,"_selectedKey")}get raycasterId(){return this._raycasterId}set raycasterId(e){this._raycasterId=e}get bodyName(){return this._bodyName}set bodyName(e){this._bodyName=e}get bodyId(){return this._bodyId}set bodyId(e){this._bodyId=e,this.selectedKey}get bodyUUID(){return this._bodyUUID}set bodyUUID(e){this._bodyUUID=e}get keyId(){return this._keyId}set keyId(e){this._keyId=e}get keyboardId(){return this._keyboardId}set keyboardId(e){this._keyboardId=e}get selectedKey(){return this._selectedKey}set selectedKey(e){this._selectedKey=e}static get Instance(){return Ns._instance||(Ns._instance=new Ns),Ns._instance}populateWithDummyDetails(){this._keyId=1001,console.log(this._keyId),this._keyboardId=1001,console.log(this._keyboardId),this._bodyName="ajhInitialSelectedKey",console.log(this._bodyName)}};A(Ns,"_instance",null);let Yc=Ns;const Io=new k;function kn(i,e,t,n,s,r){const a=2*Math.PI*s/4,o=Math.max(r-2*s,0),c=Math.PI/4;Io.copy(e),Io[n]=0,Io.normalize();const l=.5*a/(a+o),h=1-Io.angleTo(i)/c;return Math.sign(Io[t])===1?h*l:o/(a+o)+l+l*(1-h)}class $c extends mi{constructor(e=1,t=1,n=1,s=2,r=.1){if(s=s*2+1,r=Math.min(e/2,t/2,n/2,r),super(1,1,1,s,s,s),s===1)return;const a=this.toNonIndexed();this.index=null,this.attributes.position=a.attributes.position,this.attributes.normal=a.attributes.normal,this.attributes.uv=a.attributes.uv;const o=new k,c=new k,l=new k(e,t,n).divideScalar(2).subScalar(r),h=this.attributes.position.array,u=this.attributes.normal.array,f=this.attributes.uv.array,m=h.length/6,g=new k,_=.5/s;for(let p=0,d=0;p<h.length;p+=3,d+=2)switch(o.fromArray(h,p),c.copy(o),c.x-=Math.sign(c.x)*_,c.y-=Math.sign(c.y)*_,c.z-=Math.sign(c.z)*_,c.normalize(),h[p+0]=l.x*Math.sign(o.x)+c.x*r,h[p+1]=l.y*Math.sign(o.y)+c.y*r,h[p+2]=l.z*Math.sign(o.z)+c.z*r,u[p+0]=c.x,u[p+1]=c.y,u[p+2]=c.z,Math.floor(p/m)){case 0:g.set(1,0,0),f[d+0]=kn(g,c,"z","y",r,n),f[d+1]=1-kn(g,c,"y","z",r,t);break;case 1:g.set(-1,0,0),f[d+0]=1-kn(g,c,"z","y",r,n),f[d+1]=1-kn(g,c,"y","z",r,t);break;case 2:g.set(0,1,0),f[d+0]=1-kn(g,c,"x","z",r,e),f[d+1]=kn(g,c,"z","x",r,n);break;case 3:g.set(0,-1,0),f[d+0]=1-kn(g,c,"x","z",r,e),f[d+1]=1-kn(g,c,"z","x",r,n);break;case 4:g.set(0,0,1),f[d+0]=1-kn(g,c,"x","y",r,e),f[d+1]=1-kn(g,c,"y","x",r,t);break;case 5:g.set(0,0,-1),f[d+0]=kn(g,c,"x","y",r,e),f[d+1]=1-kn(g,c,"y","x",r,t);break}}}class g1{constructor(){A(this,"_avatarGeometry");A(this,"_boxGeometry");A(this,"_sphereGeometry");A(this,"_geometriesArray");A(this,"_torusGeometry");A(this,"_bijaGeometry");A(this,"_cubeGeometry");A(this,"_keyGeometry");A(this,"_roundedCubeGeometry");A(this,"_octalSphereGeometry");A(this,"_smoothSphereGeometry");this._roundedCubeGeometry=new $c(1,1,1,7,.2),this._keyGeometry=new $c(1,1,1,7,.2),this.cubeGeometry=new mi(1,1,1),this._boxGeometry=new mi(1,1,1,5,5,5),this._sphereGeometry=new wr(1),this._octalSphereGeometry=new wr(1,8,8),this._smoothSphereGeometry=new wr(1,32,32),this._avatarGeometry=new Kh(.3,1),this._geometriesArray=new Array,this._bijaGeometry=new wr(.12,32,16)}get cubeGeometry(){return this._cubeGeometry}set cubeGeometry(e){this._cubeGeometry=e}get keyGeometry(){return this._keyGeometry}set keyGeometry(e){this._keyGeometry=e}get roundedCubeGeometry(){return this._roundedCubeGeometry}set roundedCubeGeometry(e){this._roundedCubeGeometry=e}get octalSphereGeometry(){return this._octalSphereGeometry}set octalSphereGeometry(e){this._octalSphereGeometry=e}get smoothSphereGeometry(){return this._smoothSphereGeometry}set smoothSphereGeometry(e){this._smoothSphereGeometry=e}get boxGeometry(){return this._boxGeometry}get sphereGeometry(){return this._sphereGeometry}get torusGeometry(){return this._torusGeometry}get geometriesArray(){return this._geometriesArray}get bijaGeometry(){return this._bijaGeometry}get avatarGeometry(){return this._avatarGeometry}set avatarGeometry(e){this._avatarGeometry=e}set boxGeometry(e){this._boxGeometry=e}set sphereGeometry(e){this._sphereGeometry=e}set torusGeometry(e){this._torusGeometry=e}set geometriesArray(e){this._geometriesArray=e}set bijaGeometry(e){this._bijaGeometry=e}}class _1{constructor(){A(this,"_avatarMaterial",new Fs({flatShading:!0,color:16750592,polygonOffset:!0,polygonOffsetUnits:1,polygonOffsetFactor:1}));A(this,"_glowMaterial");A(this,"_lambertMaterial");A(this,"_lambertParams",new Object);A(this,"_phongMaterial");A(this,"_phongParams",new Object);A(this,"_physicalMaterial");A(this,"_physicalMaterialParams",new Object);A(this,"_toonMaterial");A(this,"_toonMaterialParameters",new Object);A(this,"_backgroundMaterial");A(this,"_enterButtonMaterial");this.lambertParams.color=new xe(16776960),this._lambertMaterial=new NS(this.lambertParams),this._lambertMaterial.needsUpdate=!0,this._phongParams.color=new xe(16776960),this._phongMaterial=new DS(this.phongParams),this._phongMaterial.needsUpdate=!0,this._physicalMaterialParams.color=new xe(16776960),this._physicalMaterial=new IS(this.physicalMaterialParams),this._physicalMaterial.needsUpdate=!0,this._toonMaterialParameters.color=new xe(16776960),this._toonMaterialParameters.side=ci,this._toonMaterial=new PS,this._toonMaterial.needsUpdate=!0;var e=["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),t=["varying vec3 vNormal;","void main() {","float intensity = pow( 0.8 - dot( vNormal, vec3( 0, 0, 1.0 ) ), 12.0 );","gl_FragColor = vec4( 1, 1.0, 1.0, 1.0 ) * intensity;","}"].join(`
`),n=rs.clone({});this.glowMaterial=new rn({uniforms:n,vertexShader:e,fragmentShader:t,side:mn,blending:rh,transparent:!0}),this.enterButtonMaterial=new Fs({color:"#C08715"}),this.backgroundMaterial=new Fs({color:"#5CF61F"})}get avatarMaterial(){return this._avatarMaterial}set avatarMaterial(e){this._avatarMaterial=e}get glowMaterial(){return this._glowMaterial}set glowMaterial(e){this._glowMaterial=e}get backgroundMaterial(){return this._backgroundMaterial}set backgroundMaterial(e){this._backgroundMaterial=e}get enterButtonMaterial(){return this._enterButtonMaterial}set enterButtonMaterial(e){this._enterButtonMaterial=e}get lambertMaterial(){return this._lambertMaterial}get phongMaterial(){return this._phongMaterial}get physicalMaterial(){return this._physicalMaterial}get lambertParams(){return this._lambertParams}get phongParams(){return this._phongParams}get physicalMaterialParams(){return this._physicalMaterialParams}get toonMaterial(){return this._toonMaterial}get toonMaterialParameters(){return this._toonMaterialParameters}set lambertMaterial(e){this._lambertMaterial=e}set phongMaterial(e){this._phongMaterial=e}set physicalMaterial(e){this._physicalMaterial=e}set lambertParams(e){this._lambertParams=e}set phongParams(e){this._phongParams=e}set physicalMaterialParams(e){this._physicalMaterialParams=e}set toonMaterial(e){this._toonMaterial=e}set toonMaterialParameters(e){this._toonMaterialParameters=e}}var Iu={exports:{}},Dr=typeof Reflect=="object"?Reflect:null,zf=Dr&&typeof Dr.apply=="function"?Dr.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)},Ha;Dr&&typeof Dr.ownKeys=="function"?Ha=Dr.ownKeys:Object.getOwnPropertySymbols?Ha=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Ha=function(e){return Object.getOwnPropertyNames(e)};function y1(i){console&&console.warn&&console.warn(i)}var Qm=Number.isNaN||function(e){return e!==e};function at(){at.init.call(this)}Iu.exports=at;Iu.exports.once=b1;at.EventEmitter=at;at.prototype._events=void 0;at.prototype._eventsCount=0;at.prototype._maxListeners=void 0;var Gf=10;function ml(i){if(typeof i!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i)}Object.defineProperty(at,"defaultMaxListeners",{enumerable:!0,get:function(){return Gf},set:function(i){if(typeof i!="number"||i<0||Qm(i))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+i+".");Gf=i}});at.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};at.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||Qm(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function Jm(i){return i._maxListeners===void 0?at.defaultMaxListeners:i._maxListeners}at.prototype.getMaxListeners=function(){return Jm(this)};at.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var s=e==="error",r=this._events;if(r!==void 0)s=s&&r.error===void 0;else if(!s)return!1;if(s){var a;if(t.length>0&&(a=t[0]),a instanceof Error)throw a;var o=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw o.context=a,o}var c=r[e];if(c===void 0)return!1;if(typeof c=="function")zf(c,this,t);else for(var l=c.length,h=sg(c,l),n=0;n<l;++n)zf(h[n],this,t);return!0};function eg(i,e,t,n){var s,r,a;if(ml(t),r=i._events,r===void 0?(r=i._events=Object.create(null),i._eventsCount=0):(r.newListener!==void 0&&(i.emit("newListener",e,t.listener?t.listener:t),r=i._events),a=r[e]),a===void 0)a=r[e]=t,++i._eventsCount;else if(typeof a=="function"?a=r[e]=n?[t,a]:[a,t]:n?a.unshift(t):a.push(t),s=Jm(i),s>0&&a.length>s&&!a.warned){a.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=i,o.type=e,o.count=a.length,y1(o)}return i}at.prototype.addListener=function(e,t){return eg(this,e,t,!1)};at.prototype.on=at.prototype.addListener;at.prototype.prependListener=function(e,t){return eg(this,e,t,!0)};function v1(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function tg(i,e,t){var n={fired:!1,wrapFn:void 0,target:i,type:e,listener:t},s=v1.bind(n);return s.listener=t,n.wrapFn=s,s}at.prototype.once=function(e,t){return ml(t),this.on(e,tg(this,e,t)),this};at.prototype.prependOnceListener=function(e,t){return ml(t),this.prependListener(e,tg(this,e,t)),this};at.prototype.removeListener=function(e,t){var n,s,r,a,o;if(ml(t),s=this._events,s===void 0)return this;if(n=s[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,n.listener||t));else if(typeof n!="function"){for(r=-1,a=n.length-1;a>=0;a--)if(n[a]===t||n[a].listener===t){o=n[a].listener,r=a;break}if(r<0)return this;r===0?n.shift():x1(n,r),n.length===1&&(s[e]=n[0]),s.removeListener!==void 0&&this.emit("removeListener",e,o||t)}return this};at.prototype.off=at.prototype.removeListener;at.prototype.removeAllListeners=function(e){var t,n,s;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var r=Object.keys(n),a;for(s=0;s<r.length;++s)a=r[s],a!=="removeListener"&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this};function ng(i,e,t){var n=i._events;if(n===void 0)return[];var s=n[e];return s===void 0?[]:typeof s=="function"?t?[s.listener||s]:[s]:t?S1(s):sg(s,s.length)}at.prototype.listeners=function(e){return ng(this,e,!0)};at.prototype.rawListeners=function(e){return ng(this,e,!1)};at.listenerCount=function(i,e){return typeof i.listenerCount=="function"?i.listenerCount(e):ig.call(i,e)};at.prototype.listenerCount=ig;function ig(i){var e=this._events;if(e!==void 0){var t=e[i];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}at.prototype.eventNames=function(){return this._eventsCount>0?Ha(this._events):[]};function sg(i,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=i[n];return t}function x1(i,e){for(;e+1<i.length;e++)i[e]=i[e+1];i.pop()}function S1(i){for(var e=new Array(i.length),t=0;t<e.length;++t)e[t]=i[t].listener||i[t];return e}function b1(i,e){return new Promise(function(t,n){function s(a){i.removeListener(e,r),n(a)}function r(){typeof i.removeListener=="function"&&i.removeListener("error",s),t([].slice.call(arguments))}rg(i,e,r,{once:!0}),e!=="error"&&M1(i,s,{once:!0})})}function M1(i,e,t){typeof i.on=="function"&&rg(i,"error",e,t)}function rg(i,e,t,n){if(typeof i.on=="function")n.once?i.once(e,t):i.on(e,t);else if(typeof i.addEventListener=="function")i.addEventListener(e,function s(r){n.once&&i.removeEventListener(e,s),t(r)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof i)}var w1=Iu.exports;class Ph{constructor(){A(this,"_emitter",new w1.EventEmitter)}get emitter(){return this._emitter.getMaxListeners()!=1024&&this._emitter.setMaxListeners(1024),this._emitter}set emitter(e){this._emitter=e}emit(e,...t){this.emitter.emit(e,...t)}on(e,t){this.emitter.on(e,t)}off(e,t){this.emitter.off(e,t)}}function T1(){const i=new Ph;return i.emitter.setMaxListeners(1024),i}function E1(){return new Ph().emitter.setMaxListeners(1024),new Ph}/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.19.2
 * @author George Michael Brower
 * @license MIT
 */class fi{constructor(e,t,n,s,r="div"){this.parent=e,this.object=t,this.property=n,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(r),this.domElement.classList.add("controller"),this.domElement.classList.add(s),this.$name=document.createElement("div"),this.$name.classList.add("name"),fi.nextNameID=fi.nextNameID||0,this.$name.id=`lil-gui-name-${++fi.nextNameID}`,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",a=>a.stopPropagation()),this.domElement.addEventListener("keyup",a=>a.stopPropagation()),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(n)}name(e){return this._name=e,this.$name.textContent=e,this}onChange(e){return this._onChange=e,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(e=!0){return this.disable(!e)}disable(e=!0){return e===this._disabled?this:(this._disabled=e,this.domElement.classList.toggle("disabled",e),this.$disable.toggleAttribute("disabled",e),this)}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(e){const t=this.parent.add(this.object,this.property,e);return t.name(this._name),this.destroy(),t}min(e){return this}max(e){return this}step(e){return this}decimals(e){return this}listen(e=!0){return this._listening=e,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const e=this.save();e!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=e}getValue(){return this.object[this.property]}setValue(e){return this.getValue()!==e&&(this.object[this.property]=e,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(e){return this.setValue(e),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class A1 extends fi{constructor(e,t,n){super(e,t,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function Lh(i){let e,t;return(e=i.match(/(#|0x)?([a-f0-9]{6})/i))?t=e[2]:(e=i.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?t=parseInt(e[1]).toString(16).padStart(2,0)+parseInt(e[2]).toString(16).padStart(2,0)+parseInt(e[3]).toString(16).padStart(2,0):(e=i.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(t=e[1]+e[1]+e[2]+e[2]+e[3]+e[3]),t?"#"+t:!1}const C1={isPrimitive:!0,match:i=>typeof i=="string",fromHexString:Lh,toHexString:Lh},jo={isPrimitive:!0,match:i=>typeof i=="number",fromHexString:i=>parseInt(i.substring(1),16),toHexString:i=>"#"+i.toString(16).padStart(6,0)},R1={isPrimitive:!1,match:i=>Array.isArray(i),fromHexString(i,e,t=1){const n=jo.fromHexString(i);e[0]=(n>>16&255)/255*t,e[1]=(n>>8&255)/255*t,e[2]=(n&255)/255*t},toHexString([i,e,t],n=1){n=255/n;const s=i*n<<16^e*n<<8^t*n<<0;return jo.toHexString(s)}},I1={isPrimitive:!1,match:i=>Object(i)===i,fromHexString(i,e,t=1){const n=jo.fromHexString(i);e.r=(n>>16&255)/255*t,e.g=(n>>8&255)/255*t,e.b=(n&255)/255*t},toHexString({r:i,g:e,b:t},n=1){n=255/n;const s=i*n<<16^e*n<<8^t*n<<0;return jo.toHexString(s)}},D1=[C1,jo,R1,I1];function P1(i){return D1.find(e=>e.match(i))}class L1 extends fi{constructor(e,t,n,s){super(e,t,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=P1(this.initialValue),this._rgbScale=s,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const r=Lh(this.$text.value);r&&this._setValueFromHexString(r)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(e){if(this._format.isPrimitive){const t=this._format.fromHexString(e);this.setValue(t)}else this._format.fromHexString(e,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(e){return this._setValueFromHexString(e),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class th extends fi{constructor(e,t,n){super(e,t,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",s=>{s.preventDefault(),this.getValue().call(this.object),this._callOnChange()}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class N1 extends fi{constructor(e,t,n,s,r,a){super(e,t,n,"number"),this._initInput(),this.min(s),this.max(r);const o=a!==void 0;this.step(o?a:this._getImplicitStep(),o),this.updateDisplay()}decimals(e){return this._decimals=e,this.updateDisplay(),this}min(e){return this._min=e,this._onUpdateMinMax(),this}max(e){return this._max=e,this._onUpdateMinMax(),this}step(e,t=!0){return this._step=e,this._stepExplicit=t,this}updateDisplay(){const e=this.getValue();if(this._hasSlider){let t=(e-this._min)/(this._max-this._min);t=Math.max(0,Math.min(t,1)),this.$fill.style.width=t*100+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?e:e.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=()=>{let x=parseFloat(this.$input.value);isNaN(x)||(this._stepExplicit&&(x=this._snap(x)),this.setValue(this._clamp(x)))},n=x=>{const y=parseFloat(this.$input.value);isNaN(y)||(this._snapClampSetValue(y+x),this.$input.value=this.getValue())},s=x=>{x.key==="Enter"&&this.$input.blur(),x.code==="ArrowUp"&&(x.preventDefault(),n(this._step*this._arrowKeyMultiplier(x))),x.code==="ArrowDown"&&(x.preventDefault(),n(this._step*this._arrowKeyMultiplier(x)*-1))},r=x=>{this._inputFocused&&(x.preventDefault(),n(this._step*this._normalizeMouseWheel(x)))};let a=!1,o,c,l,h,u;const f=5,m=x=>{o=x.clientX,c=l=x.clientY,a=!0,h=this.getValue(),u=0,window.addEventListener("mousemove",g),window.addEventListener("mouseup",_)},g=x=>{if(a){const y=x.clientX-o,S=x.clientY-c;Math.abs(S)>f?(x.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(y)>f&&_()}if(!a){const y=x.clientY-l;u-=y*this._step*this._arrowKeyMultiplier(x),h+u>this._max?u=this._max-h:h+u<this._min&&(u=this._min-h),this._snapClampSetValue(h+u)}l=x.clientY},_=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",g),window.removeEventListener("mouseup",_)},p=()=>{this._inputFocused=!0},d=()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()};this.$input.addEventListener("input",t),this.$input.addEventListener("keydown",s),this.$input.addEventListener("wheel",r,{passive:!1}),this.$input.addEventListener("mousedown",m),this.$input.addEventListener("focus",p),this.$input.addEventListener("blur",d)}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const e=(d,x,y,S,b)=>(d-x)/(y-x)*(b-S)+S,t=d=>{const x=this.$slider.getBoundingClientRect();let y=e(d,x.left,x.right,this._min,this._max);this._snapClampSetValue(y)},n=d=>{this._setDraggingStyle(!0),t(d.clientX),window.addEventListener("mousemove",s),window.addEventListener("mouseup",r)},s=d=>{t(d.clientX)},r=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",s),window.removeEventListener("mouseup",r)};let a=!1,o,c;const l=d=>{d.preventDefault(),this._setDraggingStyle(!0),t(d.touches[0].clientX),a=!1},h=d=>{d.touches.length>1||(this._hasScrollBar?(o=d.touches[0].clientX,c=d.touches[0].clientY,a=!0):l(d),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",f))},u=d=>{if(a){const x=d.touches[0].clientX-o,y=d.touches[0].clientY-c;Math.abs(x)>Math.abs(y)?l(d):(window.removeEventListener("touchmove",u),window.removeEventListener("touchend",f))}else d.preventDefault(),t(d.touches[0].clientX)},f=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",u),window.removeEventListener("touchend",f)},m=this._callOnFinishChange.bind(this),g=400;let _;const p=d=>{if(Math.abs(d.deltaX)<Math.abs(d.deltaY)&&this._hasScrollBar)return;d.preventDefault();const y=this._normalizeMouseWheel(d)*this._step;this._snapClampSetValue(this.getValue()+y),this.$input.value=this.getValue(),clearTimeout(_),_=setTimeout(m,g)};this.$slider.addEventListener("mousedown",n),this.$slider.addEventListener("touchstart",h,{passive:!1}),this.$slider.addEventListener("wheel",p,{passive:!1})}_setDraggingStyle(e,t="horizontal"){this.$slider&&this.$slider.classList.toggle("active",e),document.body.classList.toggle("lil-gui-dragging",e),document.body.classList.toggle(`lil-gui-${t}`,e)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(e){let{deltaX:t,deltaY:n}=e;return Math.floor(e.deltaY)!==e.deltaY&&e.wheelDelta&&(t=0,n=-e.wheelDelta/120,n*=this._stepExplicit?1:10),t+-n}_arrowKeyMultiplier(e){let t=this._stepExplicit?1:10;return e.shiftKey?t*=10:e.altKey&&(t/=10),t}_snap(e){const t=Math.round(e/this._step)*this._step;return parseFloat(t.toPrecision(15))}_clamp(e){return e<this._min&&(e=this._min),e>this._max&&(e=this._max),e}_snapClampSetValue(e){this.setValue(this._clamp(this._snap(e)))}get _hasScrollBar(){const e=this.parent.root.$children;return e.scrollHeight>e.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class O1 extends fi{constructor(e,t,n,s){super(e,t,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(s)}options(e){return this._values=Array.isArray(e)?e:Object.values(e),this._names=Array.isArray(e)?e:Object.keys(e),this.$select.replaceChildren(),this._names.forEach(t=>{const n=document.createElement("option");n.textContent=t,this.$select.appendChild(n)}),this.updateDisplay(),this}updateDisplay(){const e=this.getValue(),t=this._values.indexOf(e);return this.$select.selectedIndex=t,this.$display.textContent=t===-1?e:this._names[t],this}}class F1 extends fi{constructor(e,t,n){super(e,t,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",s=>{s.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}const k1=`.lil-gui {
  font-family: var(--font-family);
  font-size: var(--font-size);
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  text-align: left;
  color: var(--text-color);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  --background-color: #1f1f1f;
  --text-color: #ebebeb;
  --title-background-color: #111111;
  --title-text-color: #ebebeb;
  --widget-color: #424242;
  --hover-color: #4f4f4f;
  --focus-color: #595959;
  --number-color: #2cc9ff;
  --string-color: #a2db3c;
  --font-size: 11px;
  --input-font-size: 11px;
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;
  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;
  --padding: 4px;
  --spacing: 4px;
  --widget-height: 20px;
  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);
  --name-width: 45%;
  --slider-knob-width: 2px;
  --slider-input-width: 27%;
  --color-input-width: 27%;
  --slider-input-min-width: 45px;
  --color-input-min-width: 45px;
  --folder-indent: 7px;
  --widget-padding: 0 0 0 3px;
  --widget-border-radius: 2px;
  --checkbox-size: calc(0.75 * var(--widget-height));
  --scrollbar-width: 5px;
}
.lil-gui, .lil-gui * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.lil-gui.root {
  width: var(--width, 245px);
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}
.lil-gui.root > .title {
  background: var(--title-background-color);
  color: var(--title-text-color);
}
.lil-gui.root > .children {
  overflow-x: hidden;
  overflow-y: auto;
}
.lil-gui.root > .children::-webkit-scrollbar {
  width: var(--scrollbar-width);
  height: var(--scrollbar-width);
  background: var(--background-color);
}
.lil-gui.root > .children::-webkit-scrollbar-thumb {
  border-radius: var(--scrollbar-width);
  background: var(--focus-color);
}
@media (pointer: coarse) {
  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {
    --widget-height: 28px;
    --padding: 6px;
    --spacing: 6px;
    --font-size: 13px;
    --input-font-size: 16px;
    --folder-indent: 10px;
    --scrollbar-width: 7px;
    --slider-input-min-width: 50px;
    --color-input-min-width: 65px;
  }
}
.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {
  --widget-height: 28px;
  --padding: 6px;
  --spacing: 6px;
  --font-size: 13px;
  --input-font-size: 16px;
  --folder-indent: 10px;
  --scrollbar-width: 7px;
  --slider-input-min-width: 50px;
  --color-input-min-width: 65px;
}
.lil-gui.autoPlace {
  max-height: 100%;
  position: fixed;
  top: 0;
  right: 15px;
  z-index: 1001;
}

.lil-gui .controller {
  display: flex;
  align-items: center;
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
}
.lil-gui .controller.disabled {
  opacity: 0.5;
}
.lil-gui .controller.disabled, .lil-gui .controller.disabled * {
  pointer-events: none !important;
}
.lil-gui .controller > .name {
  min-width: var(--name-width);
  flex-shrink: 0;
  white-space: pre;
  padding-right: var(--spacing);
  line-height: var(--widget-height);
}
.lil-gui .controller .widget {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: var(--widget-height);
}
.lil-gui .controller.string input {
  color: var(--string-color);
}
.lil-gui .controller.boolean {
  cursor: pointer;
}
.lil-gui .controller.color .display {
  width: 100%;
  height: var(--widget-height);
  border-radius: var(--widget-border-radius);
  position: relative;
}
@media (hover: hover) {
  .lil-gui .controller.color .display:hover:before {
    content: " ";
    display: block;
    position: absolute;
    border-radius: var(--widget-border-radius);
    border: 1px solid #fff9;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}
.lil-gui .controller.color input[type=color] {
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.lil-gui .controller.color input[type=text] {
  margin-left: var(--spacing);
  font-family: var(--font-family-mono);
  min-width: var(--color-input-min-width);
  width: var(--color-input-width);
  flex-shrink: 0;
}
.lil-gui .controller.option select {
  opacity: 0;
  position: absolute;
  width: 100%;
  max-width: 100%;
}
.lil-gui .controller.option .display {
  position: relative;
  pointer-events: none;
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  line-height: var(--widget-height);
  max-width: 100%;
  overflow: hidden;
  word-break: break-all;
  padding-left: 0.55em;
  padding-right: 1.75em;
  background: var(--widget-color);
}
@media (hover: hover) {
  .lil-gui .controller.option .display.focus {
    background: var(--focus-color);
  }
}
.lil-gui .controller.option .display.active {
  background: var(--focus-color);
}
.lil-gui .controller.option .display:after {
  font-family: "lil-gui";
  content: "↕";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding-right: 0.375em;
}
.lil-gui .controller.option .widget,
.lil-gui .controller.option select {
  cursor: pointer;
}
@media (hover: hover) {
  .lil-gui .controller.option .widget:hover .display {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number input {
  color: var(--number-color);
}
.lil-gui .controller.number.hasSlider input {
  margin-left: var(--spacing);
  width: var(--slider-input-width);
  min-width: var(--slider-input-min-width);
  flex-shrink: 0;
}
.lil-gui .controller.number .slider {
  width: 100%;
  height: var(--widget-height);
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  padding-right: var(--slider-knob-width);
  overflow: hidden;
  cursor: ew-resize;
  touch-action: pan-y;
}
@media (hover: hover) {
  .lil-gui .controller.number .slider:hover {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number .slider.active {
  background: var(--focus-color);
}
.lil-gui .controller.number .slider.active .fill {
  opacity: 0.95;
}
.lil-gui .controller.number .fill {
  height: 100%;
  border-right: var(--slider-knob-width) solid var(--number-color);
  box-sizing: content-box;
}

.lil-gui-dragging .lil-gui {
  --hover-color: var(--widget-color);
}
.lil-gui-dragging * {
  cursor: ew-resize !important;
}

.lil-gui-dragging.lil-gui-vertical * {
  cursor: ns-resize !important;
}

.lil-gui .title {
  height: var(--title-height);
  line-height: calc(var(--title-height) - 4px);
  font-weight: 600;
  padding: 0 var(--padding);
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  outline: none;
  text-decoration-skip: objects;
}
.lil-gui .title:before {
  font-family: "lil-gui";
  content: "▾";
  padding-right: 2px;
  display: inline-block;
}
.lil-gui .title:active {
  background: var(--title-background-color);
  opacity: 0.75;
}
@media (hover: hover) {
  body:not(.lil-gui-dragging) .lil-gui .title:hover {
    background: var(--title-background-color);
    opacity: 0.85;
  }
  .lil-gui .title:focus {
    text-decoration: underline var(--focus-color);
  }
}
.lil-gui.root > .title:focus {
  text-decoration: none !important;
}
.lil-gui.closed > .title:before {
  content: "▸";
}
.lil-gui.closed > .children {
  transform: translateY(-7px);
  opacity: 0;
}
.lil-gui.closed:not(.transition) > .children {
  display: none;
}
.lil-gui.transition > .children {
  transition-duration: 300ms;
  transition-property: height, opacity, transform;
  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);
  overflow: hidden;
  pointer-events: none;
}
.lil-gui .children:empty:before {
  content: "Empty";
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
  display: block;
  height: var(--widget-height);
  font-style: italic;
  line-height: var(--widget-height);
  opacity: 0.5;
}
.lil-gui.root > .children > .lil-gui > .title {
  border: 0 solid var(--widget-color);
  border-width: 1px 0;
  transition: border-color 300ms;
}
.lil-gui.root > .children > .lil-gui.closed > .title {
  border-bottom-color: transparent;
}
.lil-gui + .controller {
  border-top: 1px solid var(--widget-color);
  margin-top: 0;
  padding-top: var(--spacing);
}
.lil-gui .lil-gui .lil-gui > .title {
  border: none;
}
.lil-gui .lil-gui .lil-gui > .children {
  border: none;
  margin-left: var(--folder-indent);
  border-left: 2px solid var(--widget-color);
}
.lil-gui .lil-gui .controller {
  border: none;
}

.lil-gui label, .lil-gui input, .lil-gui button {
  -webkit-tap-highlight-color: transparent;
}
.lil-gui input {
  border: 0;
  outline: none;
  font-family: var(--font-family);
  font-size: var(--input-font-size);
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  background: var(--widget-color);
  color: var(--text-color);
  width: 100%;
}
@media (hover: hover) {
  .lil-gui input:hover {
    background: var(--hover-color);
  }
  .lil-gui input:active {
    background: var(--focus-color);
  }
}
.lil-gui input:disabled {
  opacity: 1;
}
.lil-gui input[type=text],
.lil-gui input[type=number] {
  padding: var(--widget-padding);
  -moz-appearance: textfield;
}
.lil-gui input[type=text]:focus,
.lil-gui input[type=number]:focus {
  background: var(--focus-color);
}
.lil-gui input[type=checkbox] {
  appearance: none;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border-radius: var(--widget-border-radius);
  text-align: center;
  cursor: pointer;
}
.lil-gui input[type=checkbox]:checked:before {
  font-family: "lil-gui";
  content: "✓";
  font-size: var(--checkbox-size);
  line-height: var(--checkbox-size);
}
@media (hover: hover) {
  .lil-gui input[type=checkbox]:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button {
  outline: none;
  cursor: pointer;
  font-family: var(--font-family);
  font-size: var(--font-size);
  color: var(--text-color);
  width: 100%;
  height: var(--widget-height);
  text-transform: none;
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  border: none;
}
@media (hover: hover) {
  .lil-gui button:hover {
    background: var(--hover-color);
  }
  .lil-gui button:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button:active {
  background: var(--focus-color);
}

@font-face {
  font-family: "lil-gui";
  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");
}`;function U1(i){const e=document.createElement("style");e.innerHTML=i;const t=document.querySelector("head link[rel=stylesheet], head style");t?document.head.insertBefore(e,t):document.head.appendChild(e)}let Hf=!1;class Du{constructor({parent:e,autoPlace:t=e===void 0,container:n,width:s,title:r="Controls",closeFolders:a=!1,injectStyles:o=!0,touchStyles:c=!0}={}){if(this.parent=e,this.root=e?e.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",l=>{(l.code==="Enter"||l.code==="Space")&&(l.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),this.parent){this.parent.children.push(this),this.parent.folders.push(this),this.parent.$children.appendChild(this.domElement);return}this.domElement.classList.add("root"),c&&this.domElement.classList.add("allow-touch-styles"),!Hf&&o&&(U1(k1),Hf=!0),n?n.appendChild(this.domElement):t&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),s&&this.domElement.style.setProperty("--width",s+"px"),this._closeFolders=a}add(e,t,n,s,r){if(Object(n)===n)return new O1(this,e,t,n);const a=e[t];switch(typeof a){case"number":return new N1(this,e,t,n,s,r);case"boolean":return new A1(this,e,t);case"string":return new F1(this,e,t);case"function":return new th(this,e,t)}console.error(`gui.add failed
	property:`,t,`
	object:`,e,`
	value:`,a)}addColor(e,t,n=1){return new L1(this,e,t,n)}addFolder(e){const t=new Du({parent:this,title:e});return this.root._closeFolders&&t.close(),t}load(e,t=!0){return e.controllers&&this.controllers.forEach(n=>{n instanceof th||n._name in e.controllers&&n.load(e.controllers[n._name])}),t&&e.folders&&this.folders.forEach(n=>{n._title in e.folders&&n.load(e.folders[n._title])}),this}save(e=!0){const t={controllers:{},folders:{}};return this.controllers.forEach(n=>{if(!(n instanceof th)){if(n._name in t.controllers)throw new Error(`Cannot save GUI with duplicate property "${n._name}"`);t.controllers[n._name]=n.save()}}),e&&this.folders.forEach(n=>{if(n._title in t.folders)throw new Error(`Cannot save GUI with duplicate folder "${n._title}"`);t.folders[n._title]=n.save()}),t}open(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(e){this._closed!==e&&(this._closed=e,this._callOnOpenClose(this))}show(e=!0){return this._hidden=!e,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(e=!0){return this._setClosed(!e),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const t=this.$children.clientHeight;this.$children.style.height=t+"px",this.domElement.classList.add("transition");const n=r=>{r.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const s=e?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!e),requestAnimationFrame(()=>{this.$children.style.height=s+"px"})}),this}title(e){return this._title=e,this.$title.textContent=e,this}reset(e=!0){return(e?this.controllersRecursive():this.controllers).forEach(n=>n.reset()),this}onChange(e){return this._onChange=e,this}_callOnChange(e){this.parent&&this.parent._callOnChange(e),this._onChange!==void 0&&this._onChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onFinishChange(e){return this._onFinishChange=e,this}_callOnFinishChange(e){this.parent&&this.parent._callOnFinishChange(e),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:e.object,property:e.property,value:e.getValue(),controller:e})}onOpenClose(e){return this._onOpenClose=e,this}_callOnOpenClose(e){this.parent&&this.parent._callOnOpenClose(e),this._onOpenClose!==void 0&&this._onOpenClose.call(this,e)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(e=>e.destroy())}controllersRecursive(){let e=Array.from(this.controllers);return this.folders.forEach(t=>{e=e.concat(t.controllersRecursive())}),e}foldersRecursive(){let e=Array.from(this.folders);return this.folders.forEach(t=>{e=e.concat(t.foldersRecursive())}),e}}class B1{constructor(e,t=24){A(this,"seedColours",[new xe(255),new xe(65280),new xe(16711680),new xe(16776960)]);A(this,"_gold",new xe(11184640));A(this,"_mutedColour",new xe(4210752));A(this,"_id");A(this,"_seedColour");A(this,"_light");A(this,"_dark");A(this,"_amountOfColours");A(this,"_lightdarkArray");A(this,"_spectrumArray");A(this,"_spectrumLightArray");A(this,"_spectrumDarkArray");this._id=e,this._amountOfColours=t,this._seedColour=this.seedColours[e],this._lightdarkArray=this.generateLightToDarkArray(t,this.seedColours[e]),this._spectrumArray=this.generateSpectrumArray(t,.2),this._spectrumLightArray=this.generateSpectrumArray(t,.4),this._spectrumDarkArray=this.generateSpectrumArray(t,.04),this._light=this.lightdarkArray[this.lightdarkArray.length-1],this._dark=this.lightdarkArray[0]}get gold(){return this._gold}set gold(e){this._gold=e}get mutedColour(){return this._mutedColour}set mutedColour(e){this._mutedColour=e}get spectrumLightArray(){return this._spectrumLightArray}set spectrumLightArray(e){this._spectrumLightArray=e}get spectrumDarkArray(){return this._spectrumDarkArray}set spectrumDarkArray(e){this._spectrumDarkArray=e}generateColourArray(e,t=!1){let n;return t?n=this.generateLightToDarkArray(e,this._seedColour):n=this.generateSpectrumArray(e),n}generateSpectrumArray(e,t=.5){let n=Math.random()*1,s=[];for(let r=0;r<e;r++){let a=new xe;n=0+r/e*1,a.setHSL(n,1,t),s.push(a)}return s}generateLightToDarkArray(e,t=new xe(65280)){let n=.16,s={h:0,s:0,l:0};t.getHSL(s);let r=[];for(let a=0;a<e;a++){let o=new xe;n=.003+a/e*.9,o.setHSL(s.h,s.s,n),r.push(o)}return r}generateRandomColours(e,t){for(let n=0;n<e;n++){let s=new xe,r=Math.random(),a=Math.random(),o=Math.random();s.setRGB(r,a,o),t.push(s),console.log("---> generatedColour: "+t[n].r)}}get id(){return this._id}get light(){return this._light}get dark(){return this._dark}get amountOfColours(){return this._amountOfColours}get seedColour(){return this._seedColour}get lightdarkArray(){return this._lightdarkArray}get spectrumArray(){return this._spectrumArray}set id(e){this._id=e}set light(e){this._light=e}set dark(e){this._dark=e}set amountOfColours(e){this._amountOfColours=e}set lightdarkArray(e){this._lightdarkArray=e}set seedColour(e){this._seedColour=e}set spectrumArray(e){this._spectrumArray=e}}class V1{constructor(){}}class z1{constructor(){}}class G1{constructor(){}}class H1{constructor(){}}class W1{constructor(){A(this,"_selectedKeys",new Array)}get selectedKeys(){return this._selectedKeys}set selectedKeys(e){this._selectedKeys=e}removeSelectedKeyByRayCasterId(e){for(let t=0;t<this._selectedKeys.length;t++)this._selectedKeys[t].raycasterId==e&&this._selectedKeys.splice(t,1)}checkIfExistsAndUpdateOrCreateNewSelectedKey(e,t,n,s,r,a,o){let c=!1,l;for(let h=0;h<this._selectedKeys.length;h++){const u=this._selectedKeys[h];u.raycasterId==a&&(l=u,c=!0)}if(c)l.bodyId=e,l.bodyName=t,l.bodyUUID=n,l.keyId=s,l.keyboardId=r,l.raycasterId=a,l.selectedKey=o;else{let h=new Yc;h.bodyId=e,h.bodyName=t,h.bodyUUID=n,h.keyId=s,h.keyboardId=r,h.raycasterId=a,h.selectedKey=o,this._selectedKeys.push(h)}}getSelectedKeyByRayCasterId(e){let t=null;for(let n=0;n<this._selectedKeys.length;n++){const s=this._selectedKeys[n];s.raycasterId==e&&(t=s)}return t}getSelectedKeyByBodyUUID(e){let t=null;for(let n=0;n<this._selectedKeys.length;n++){const s=this._selectedKeys[n];s.bodyUUID==e&&(t=s)}return t}}class og{constructor(){A(this,"HorizontalKeys","horizontal");A(this,"VerticalKeys","vertical");A(this,"CirclesOfKeys","circular");A(this,"RandomlyPlacedKeys","random");A(this,"ThreeDimensionalKeys","threedimensionalkeys");A(this,"Voronoi","voronoi");A(this,"EffectsXY","effectsxy")}}class q1{constructor(e){A(this,"modelInstance");A(this,"INTERSECTED");A(this,"_rayCaster",new nl);A(this,"_id");this.id=e,this.modelInstance=Nn.Instance}get rayCaster(){return this._rayCaster}set rayCaster(e){this._rayCaster=e}get id(){return this._id}set id(e){this._id=e}setRaycasterToCamera(){this.rayCaster.setFromCamera(this.modelInstance.raycasterPointers.getRayPointerByID(this.id).rayPointer,this.modelInstance.camera)}findInstrumentKeysFromRaycast(){let e;try{e=this.rayCaster.intersectObjects(this.modelInstance.currentKeyBoard.getKeyBodies(),!1),e.length>0?(this.INTERSECTED!=e[0].object&&(this.INTERSECTED&&console.log("INTERSECTED????"),this.INTERSECTED!=e[0].object,this.INTERSECTED=e[0].object,console.log("RAY IS NOW TOUCHING "+this.INTERSECTED.uuid+" : "+this.modelInstance.currentKeyBoard.getKeyByBodyUUID(this.INTERSECTED.uuid).KeyState.Id),this.modelInstance.selectedKeys.checkIfExistsAndUpdateOrCreateNewSelectedKey(this.INTERSECTED.id,this.INTERSECTED.name,this.INTERSECTED.uuid,this.modelInstance.currentKeyBoard.getKeyByBodyUUID(this.INTERSECTED.uuid).KeyState.Id,this.modelInstance.currentKeyBoard.id,this.id,this.modelInstance.currentKeyBoard.getKeyByBodyUUID(this.INTERSECTED.uuid)),this.modelInstance.musicalKeyEventEmitter.emit("touchedByRay",!0,this.id,this.modelInstance.selectedKeys.getSelectedKeyByRayCasterId(this.id).bodyId,this.modelInstance.selectedKeys.getSelectedKeyByRayCasterId(this.id).bodyUUID),this.modelInstance.infoScreen.setDataFieldText(this.modelInstance.selectedKeys.getSelectedKeyByRayCasterId(this.id).selectedKey.KeyState.Sonics.NoteName),console.log("INTERSECTED"+e.length+" : "+this.INTERSECTED.id)),this.modelInstance.pointLights[0].position.x=e[0].point.x,this.modelInstance.pointLights[0].position.z=-e[0].point.z):(this.INTERSECTED&&(console.log("NOT TOUCHING ANYTHING"),console.log("Not touching last touched"+this.modelInstance.selectedKey.bodyUUID)),this.INTERSECTED=null)}catch(t){console.log(t)}}}class j1{constructor(){A(this,"_rayCasters",new Array)}get rayCasters(){return this._rayCasters}set rayCasters(e){this._rayCasters=e}getRayCasterByID(e){let t=null;for(let n=0;n<this.rayCasters.length;n++){const s=this.rayCasters[n];s.id==e&&(t=s,console.log("found in RayCasters, id: "+s.id))}return t}addRayCaster(e){this.rayCasters.push(new q1(e)),console.log("added 1 item to RayCasters, id: "+e)}removeRayCaster(e){let t=null;for(let n=0;n<this.rayCasters.length;n++)this.rayCasters[n].id==e&&(t=n);t!=null&&(this.rayCasters.splice(t,1),console.log("removed 1 item from RayCasters"))}setAllRaycastersToCamera(){for(let e=0;e<this.rayCasters.length;e++)this.rayCasters[e].setRaycasterToCamera()}}class K1{constructor(e,t,n){A(this,"_rayPointer",new Me);A(this,"_id");this.rayPointer.x=t,this.rayPointer.y=n,this.id=e}get rayPointer(){return this._rayPointer}set rayPointer(e){this._rayPointer=e}get id(){return this._id}set id(e){this._id=e}}class X1{constructor(){A(this,"_raypointers",new Array)}get raypointers(){return this._raypointers}set raypointers(e){this._raypointers=e}getRayPointerByID(e){let t=null;for(let n=0;n<this.raypointers.length;n++){const s=this.raypointers[n];s.id==e&&(t=s)}return t}addRayPointer(e,t,n){this.raypointers.push(new K1(e,t,n)),console.log("added 1 item to raypointers, id: "+e+", pos: "+t+","+n)}removeRayPointer(e){let t=null;for(let n=0;n<this.raypointers.length;n++)this.raypointers[n].id==e&&(t=n);t!=null&&(this.raypointers.splice(t,1),console.log("removed 1 item from raypointers"))}}class Y1{constructor(){A(this,"intervals");A(this,"scale");A(this,"name")}}class ag{constructor(){A(this,"Major");A(this,"MelodicMinor");A(this,"HarmonicicMinor");A(this,"MinorThirdFifthSeventh");A(this,"Chromatic");A(this,"CircleOfFifths");A(this,"MinorPentatonic");A(this,"BlackKeys");A(this,"nMajor","Major");A(this,"nMelodicMinor","MelodicMinor");A(this,"nHarmonicicMinor","HarmonicMinor");A(this,"nMinorThirdFifthSeventh","MinorThirdFifthSeventh");A(this,"nChromatic","Chromatic");A(this,"nCircleOfFifths","CircleOfFifths");A(this,"nMinorPentatonic","MinorPentatonic");A(this,"nBlackKeys","BlackKeys");A(this,"_Chromatic",[0,1,2,3,4,5,6,7,8,9,10,11]);A(this,"_Major",[0,2,4,5,7,9,11]);A(this,"_MelodicMinor",[0,2,3,5,7,8,11]);A(this,"_HarmonicicMinor",[0,2,3,5,7,8,10]);A(this,"_MinorThirdFifthSeventh",[0,3,7,10]);A(this,"_CircleOfFifths",[7]);A(this,"_MinorPentatonic",[0,3,5,7,11]);A(this,"_BlackKeys",[1,3,6,8,10]);A(this,"_noteNamesOneOctave",["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]);this.BlackKeys=this.createScale(this.nBlackKeys,this._BlackKeys),this.Chromatic=this.createScale(this.nChromatic,this._Chromatic),this.CircleOfFifths=this.createScale(this.nCircleOfFifths,this._CircleOfFifths),this.HarmonicicMinor=this.createScale(this.nHarmonicicMinor,this._HarmonicicMinor),this.Major=this.createScale(this.nMajor,this._Major),this.MelodicMinor=this.createScale(this.nMelodicMinor,this._MelodicMinor),this.MinorPentatonic=this.createScale(this.nMinorPentatonic,this._MinorPentatonic),this.MinorThirdFifthSeventh=this.createScale(this.nMinorThirdFifthSeventh,this._MinorThirdFifthSeventh)}createScale(e,t){let n=new Y1;n.name=e;let s=new Array;for(let r=0;r<t.length;r++){const a=t[r];s.push(this._noteNamesOneOctave[a])}return n.scale=s,n.intervals=t,n}getScaleFromName(e){let t=null,n=[this.Major,this.MelodicMinor,this.HarmonicicMinor,this.MinorThirdFifthSeventh,this.Chromatic,this.CircleOfFifths,this.MinorPentatonic,this.BlackKeys];for(let s=0;s<n.length;s++){const r=n[s];r.name==e&&(t=r)}return t}}class $1{constructor(){A(this,"scaleTypes",new ag);A(this,"_noteNamesOneOctave",["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]);A(this,"_noteNamesWithOctaveRegister",["C0","C#0","D0","D#0","E0","F0","F#0","G0","G#0","A0","A#0","B0","C1","C#1","D1","D#1","E1","F1","F#1","G1","G#1","A1","A#1","B1","C2","C#2","D2","D#2","E2","F2","F#2","G2","G#2","A2","A#2","B2","C3","C#3","D3","D#3","E3","F3","F#3","G3","G#3","A3","A#3","B3","C4","C#4","D4","D#4","E4","F4","F#4","G4","G#4","A4","A#4","B4","C5","C#5","D5","D#5","E5","F5","F#5","G5","G#5","A5","A#5","B5","C6","C#6","D6","D#6","E6","F6","F#6","G6","G#6","A6","A#6","B6","C7","C#7","D7","D#7","E7","F7","F#7","G7","G#7","A7","A#7","B7","C8","C#8","D8","D#8","E8","F8","F#8","G8","G#8","A8","A#8","B8","C9","C#9","D9","D#9","E9","F9","F#9","G9","G#9","A9","A#9","B9"]);A(this,"_noteSpeeds",["64n","64n","32t","32n","16t","16n","8t","8n","4t","4n","2t","2n","1t","1n","64t"]);A(this,"pitches",[261.63,277.18,293.66,311.13,329.63,349.23,369.99,392,415.3,440,466.16,493.88,523.25])}get noteNamesOneOctave(){return this._noteNamesOneOctave}set noteNamesOneOctave(e){this._noteNamesOneOctave=e}get noteNamesWithOctaveRegister(){return this._noteNamesWithOctaveRegister}set noteNamesWithOctaveRegister(e){this._noteNamesWithOctaveRegister=e}getNoteNamesForScale(e,t){let n=new Array;for(let s=0;s<e.length;s++){const r=e[s];n.push(this.noteNamesOneOctave[(r+t)%e.length])}return n}}const Kn=class Kn{constructor(){A(this,"showColourMessages",!0);A(this,"showMusicalKeyMessages",!1);A(this,"showKeyBoardMessages",!1);A(this,"showSequenceMessages",!1);A(this,"showAudioMessages",!1);A(this,"useSpectrumColours",!0);A(this,"_Stats");A(this,"_ScalesCreation",new $1);A(this,"_fullScreenObject");A(this,"_currentKeyBoard");A(this,"_keyboardTypes",new og);A(this,"_colourOptions",new V1);A(this,"_scaleOptions",new G1);A(this,"_scaleTypes",new ag);A(this,"_instrumentOptions",new z1);A(this,"_keyInterfaceOptions",new H1);A(this,"_pointerDown",!1);A(this,"_count",0);A(this,"_colours");A(this,"_buffers");A(this,"_toneInstance",m1);A(this,"_selectedKey");A(this,"_selectedKeys",new W1);A(this,"_maxKeysPerKeyBoard",64);A(this,"_instruments");A(this,"_keyBodies");A(this,"_infoScreen");A(this,"_ambientLight");A(this,"_pointLight");A(this,"_cameraOrbitControls");A(this,"_clock");A(this,"_initialscreen");A(this,"_pointerEventsInstance");A(this,"_pointer",new Me);A(this,"_raycasterPointers",new X1);A(this,"_raycasters",new j1);A(this,"_isTouchingSomething",!1);A(this,"_keyboard");A(this,"_loadingManager");A(this,"_dragControls");A(this,"_pointLights",new Array);A(this,"_musicalKeyEventEmitter");A(this,"informationWindow");A(this,"_canvas");A(this,"_noteEventEmitter");A(this,"_ajhMidi");A(this,"_ajhMidiAccess");A(this,"_currentMidiOutId",0);A(this,"_currentMidiInId",0);A(this,"_availableMidiInputs",[]);A(this,"_currentMidiInputChannel",1);A(this,"_availableMidiOutputs",[]);A(this,"_currentMidiOutputChannel",1);A(this,"_audioContext");A(this,"_mouseCoordinates",new Me);A(this,"_gui",new Du);A(this,"_ajhGuiControls");A(this,"_counter");A(this,"_geometries",new g1);A(this,"_materials",new _1);A(this,"_camera");A(this,"_cameraTarget",new k);A(this,"_raycaster");A(this,"_scene");A(this,"_renderer");A(this,"_controls");A(this,"_composer");A(this,"_initPositionArray");A(this,"_notesArray");console.log("MODEL Instantiated"),this._colours=new B1(0,this.ScalesCreation.noteNamesOneOctave.length),this._colours.generateSpectrumArray(this.ScalesCreation.noteNamesOneOctave.length,.3),this.musicalKeyEventEmitter=T1(),this.noteEventEmitter=E1(),this.ajhGuiControls,this.selectedKey=Yc.Instance}get Stats(){return this._Stats}set Stats(e){this._Stats=e}get ScalesCreation(){return this._ScalesCreation}set ScalesCreation(e){this._ScalesCreation=e}get fullScreenObject(){return this._fullScreenObject}set fullScreenObject(e){this._fullScreenObject=e}get currentKeyBoard(){return this._currentKeyBoard}set currentKeyBoard(e){this._currentKeyBoard=e}get keyboardTypes(){return this._keyboardTypes}set keyboardTypes(e){this._keyboardTypes=e}get colourOptions(){return this._colourOptions}set colourOptions(e){this._colourOptions=e}get scaleOptions(){return this._scaleOptions}set scaleOptions(e){this._scaleOptions=e}get scaleTypes(){return this._scaleTypes}set scaleTypes(e){this._scaleTypes=e}get instrumentOptions(){return this._instrumentOptions}set instrumentOptions(e){this._instrumentOptions=e}get keyInterfaceOptions(){return this._keyInterfaceOptions}set keyInterfaceOptions(e){this._keyInterfaceOptions=e}get pointerDown(){return this._pointerDown}set pointerDown(e){this._pointerDown=e}get selectedKeys(){return this._selectedKeys}set selectedKeys(e){this._selectedKeys=e}get instruments(){return this._instruments}set instruments(e){this._instruments=e}get keyBodies(){return this._keyBodies}set keyBodies(e){this._keyBodies=e}get infoScreen(){return this._infoScreen}set infoScreen(e){this._infoScreen=e}toggleOrbitCameraEnabled(e){this.cameraOrbitControls.enablePan=e,this.cameraOrbitControls.enableZoom=e,this.cameraOrbitControls.enableRotate=e,this.cameraOrbitControls.enabled=e}getCameraViewSizeXY(){const t=new Me;return this.camera.getViewSize(this.camera.position.y-.7,t),t}getWorldCoordsFromMouseXY(e){var t=new k,n=new k;t.set(e.x,e.y,1),t.unproject(this.camera),t.sub(this.camera.position).normalize();var s=-this.camera.position.z/t.z;return n.copy(this.camera.position).add(t.multiplyScalar(s)),n}fitCameraToSelection(){let e=1.2;const t=new k,n=new k,s=new ms;s.makeEmpty();for(const h of[this.fullScreenObject.body])s.expandByObject(h);s.getSize(t),s.getCenter(n);const a=Math.max(t.x,t.y,t.z)/(2*Math.atan(Math.PI*this.camera.fov/360)),o=a/this.camera.aspect,c=e*Math.max(a,o),l=this.controls.target.clone().sub(this.camera.position).normalize().multiplyScalar(c);this.controls.target.copy(n),this.camera.near=c/100,this.camera.far=c*100,this.camera.updateProjectionMatrix(),this.camera.position.copy(this.controls.target).sub(l),this.controls.update()}get ambientLight(){return this._ambientLight}set ambientLight(e){this._ambientLight=e}get pointLight(){return this._pointLight}set pointLight(e){this._pointLight=e}get cameraOrbitControls(){return this._cameraOrbitControls}set cameraOrbitControls(e){this._cameraOrbitControls=e}get clock(){return this._clock}set clock(e){this._clock=e}get initialscreen(){return this._initialscreen}set initialscreen(e){this._initialscreen=e}get pointerEventsInstance(){return this._pointerEventsInstance}set pointerEventsInstance(e){this._pointerEventsInstance=e}get pointer(){return this._pointer}set pointer(e){this._pointer=e}get raycasterPointers(){return this._raycasterPointers}set raycasterPointers(e){this._raycasterPointers=e}get raycasters(){return this._raycasters}set raycasters(e){this._raycasters=e}get colours(){return this._colours}get counter(){return this._counter}get geometries(){return this._geometries}get materials(){return this._materials}get ajhGuiControls(){return this._ajhGuiControls}get camera(){return this._camera}get raycaster(){return this._raycaster}get scene(){return this._scene}get renderer(){return this._renderer}get controls(){return this._controls}get composer(){return this._composer}get initPositionArray(){return this._initPositionArray}get notesArray(){return this._notesArray}get buffers(){return this._buffers}get selectedKey(){return this._selectedKey}get musicalKeyEventEmitter(){return this._musicalKeyEventEmitter}get toneInstance(){return this._toneInstance}get maxKeysPerKeyBoard(){return this._maxKeysPerKeyBoard}get cameraTarget(){return this._cameraTarget}get count(){return this._count}set cameraTarget(e){this._cameraTarget=e,this._controls.target=this._cameraTarget}set isTouchingSomething(e){this._isTouchingSomething=e}set colours(e){this._colours=e}set counter(e){this._counter=e}set geometries(e){this._geometries=e}set materials(e){this._materials=e}set ajhGuiControls(e){this._ajhGuiControls=e}get keyboard(){return this._keyboard}set keyboard(e){this._keyboard=e}get loadingManager(){return this._loadingManager}set loadingManager(e){this._loadingManager=e}get dragControls(){return this._dragControls}set dragControls(e){this._dragControls=e}get pointLights(){return this._pointLights}set pointLights(e){this._pointLights=e}set count(e){this._count=e}get isTouchingSomething(){return this._isTouchingSomething}set camera(e){this._camera=e}set raycaster(e){this._raycaster=e}set scene(e){this._scene=e}set renderer(e){this._renderer=e}set controls(e){this._controls=e}set composer(e){this._composer=e}set initPositionArray(e){this._initPositionArray=e}set notesArray(e){this._notesArray=e}set buffers(e){this._buffers=e}set selectedKey(e){this._selectedKey=e,this.musicalKeyEventEmitter.emit("SelectionIdChanged",e)}set musicalKeyEventEmitter(e){this._musicalKeyEventEmitter=e}set maxKeysPerKeyBoard(e){this._maxKeysPerKeyBoard=e}get canvas(){return this._canvas}set canvas(e){this._canvas=e}get noteEventEmitter(){return this._noteEventEmitter}set noteEventEmitter(e){this._noteEventEmitter=e}get ajhMidi(){return this._ajhMidi}set ajhMidi(e){this._ajhMidi=e}get ajhMidiAccess(){return this._ajhMidiAccess}set ajhMidiAccess(e){this._ajhMidiAccess=e}get currentMidiOutId(){return this._currentMidiOutId}set currentMidiOutId(e){this._currentMidiOutId=e}get currentMidiInId(){return this._currentMidiInId}set currentMidiInId(e){this._currentMidiInId=e}get availableMidiInputs(){return this._availableMidiInputs}set availableMidiInputs(e){this._availableMidiInputs=e}get currentMidiInputChannel(){return this._currentMidiInputChannel}set currentMidiInputChannel(e){this._currentMidiInputChannel=e}get availableMidiOutputs(){return this._availableMidiOutputs}set availableMidiOutputs(e){this._availableMidiOutputs=e}get currentMidiOutputChannel(){return this._currentMidiOutputChannel}set currentMidiOutputChannel(e){this._currentMidiOutputChannel=e}get audioContext(){return this._audioContext}set audioContext(e){this._audioContext=e}get mouseCoordinates(){return this._mouseCoordinates}set mouseCoordinates(e){this._mouseCoordinates=e}get gui(){return this._gui}set gui(e){this._gui=e}static get Instance(){return Kn._instance||(Kn._instance=new Kn),Kn._instance}static getInstance(){return Kn._instance||(Kn._instance=new Kn),Kn._instance}};A(Kn,"_instance",null);let Nn=Kn;const Wf={type:"change"},nh={type:"start"},qf={type:"end"},Na=new Vh,jf=new Li,Z1=Math.cos(70*Mp.DEG2RAD);class Q1 extends xs{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new k,this.cursor=new k,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:er.ROTATE,MIDDLE:er.DOLLY,RIGHT:er.PAN},this.touches={ONE:tr.ROTATE,TWO:tr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(P){P.addEventListener("keydown",Ne),this._domElementKeyEvents=P},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Ne),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Wf),n.update(),r=s.NONE},this.update=function(){const P=new k,ie=new Bs().setFromUnitVectors(e.up,new k(0,1,0)),we=ie.clone().invert(),F=new k,de=new Bs,X=new k,ue=2*Math.PI;return function(et=null){const st=n.object.position;P.copy(st).sub(n.target),P.applyQuaternion(ie),o.setFromVector3(P),n.autoRotate&&r===s.NONE&&L(v(et)),n.enableDamping?(o.theta+=c.theta*n.dampingFactor,o.phi+=c.phi*n.dampingFactor):(o.theta+=c.theta,o.phi+=c.phi);let ct=n.minAzimuthAngle,Tt=n.maxAzimuthAngle;isFinite(ct)&&isFinite(Tt)&&(ct<-Math.PI?ct+=ue:ct>Math.PI&&(ct-=ue),Tt<-Math.PI?Tt+=ue:Tt>Math.PI&&(Tt-=ue),ct<=Tt?o.theta=Math.max(ct,Math.min(Tt,o.theta)):o.theta=o.theta>(ct+Tt)/2?Math.max(ct,o.theta):Math.min(Tt,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),n.target.sub(n.cursor),n.target.clampLength(n.minTargetRadius,n.maxTargetRadius),n.target.add(n.cursor);let it=!1;if(n.zoomToCursor&&w||n.object.isOrthographicCamera)o.radius=j(o.radius);else{const mt=o.radius;o.radius=j(o.radius*l),it=mt!=o.radius}if(P.setFromSpherical(o),P.applyQuaternion(we),st.copy(n.target).add(P),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),h.set(0,0,0)),n.zoomToCursor&&w){let mt=null;if(n.object.isPerspectiveCamera){const Jt=P.length();mt=j(Jt*l);const Ms=Jt-mt;n.object.position.addScaledVector(S,Ms),n.object.updateMatrixWorld(),it=!!Ms}else if(n.object.isOrthographicCamera){const Jt=new k(b.x,b.y,0);Jt.unproject(n.object);const Ms=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/l)),n.object.updateProjectionMatrix(),it=Ms!==n.object.zoom;const oa=new k(b.x,b.y,0);oa.unproject(n.object),n.object.position.sub(oa).add(Jt),n.object.updateMatrixWorld(),mt=P.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;mt!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(mt).add(n.object.position):(Na.origin.copy(n.object.position),Na.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Na.direction))<Z1?e.lookAt(n.target):(jf.setFromNormalAndCoplanarPoint(n.object.up,n.target),Na.intersectPlane(jf,n.target))))}else if(n.object.isOrthographicCamera){const mt=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/l)),mt!==n.object.zoom&&(n.object.updateProjectionMatrix(),it=!0)}return l=1,w=!1,it||F.distanceToSquared(n.object.position)>a||8*(1-de.dot(n.object.quaternion))>a||X.distanceToSquared(n.target)>a?(n.dispatchEvent(Wf),F.copy(n.object.position),de.copy(n.object.quaternion),X.copy(n.target),!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ze),n.domElement.removeEventListener("pointerdown",ye),n.domElement.removeEventListener("pointercancel",I),n.domElement.removeEventListener("wheel",te),n.domElement.removeEventListener("pointermove",Be),n.domElement.removeEventListener("pointerup",I),n.domElement.getRootNode().removeEventListener("keydown",re,{capture:!0}),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",Ne),n._domElementKeyEvents=null)};const n=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=s.NONE;const a=1e-6,o=new ff,c=new ff;let l=1;const h=new k,u=new Me,f=new Me,m=new Me,g=new Me,_=new Me,p=new Me,d=new Me,x=new Me,y=new Me,S=new k,b=new Me;let w=!1;const M=[],C={};let O=!1;function v(P){return P!==null?2*Math.PI/60*n.autoRotateSpeed*P:2*Math.PI/60/60*n.autoRotateSpeed}function E(P){const ie=Math.abs(P*.01);return Math.pow(.95,n.zoomSpeed*ie)}function L(P){c.theta-=P}function V(P){c.phi-=P}const D=function(){const P=new k;return function(we,F){P.setFromMatrixColumn(F,0),P.multiplyScalar(-we),h.add(P)}}(),G=function(){const P=new k;return function(we,F){n.screenSpacePanning===!0?P.setFromMatrixColumn(F,1):(P.setFromMatrixColumn(F,0),P.crossVectors(n.object.up,P)),P.multiplyScalar(we),h.add(P)}}(),U=function(){const P=new k;return function(we,F){const de=n.domElement;if(n.object.isPerspectiveCamera){const X=n.object.position;P.copy(X).sub(n.target);let ue=P.length();ue*=Math.tan(n.object.fov/2*Math.PI/180),D(2*we*ue/de.clientHeight,n.object.matrix),G(2*F*ue/de.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(D(we*(n.object.right-n.object.left)/n.object.zoom/de.clientWidth,n.object.matrix),G(F*(n.object.top-n.object.bottom)/n.object.zoom/de.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function W(P){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?l/=P:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function H(P){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?l*=P:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function B(P,ie){if(!n.zoomToCursor)return;w=!0;const we=n.domElement.getBoundingClientRect(),F=P-we.left,de=ie-we.top,X=we.width,ue=we.height;b.x=F/X*2-1,b.y=-(de/ue)*2+1,S.set(b.x,b.y,1).unproject(n.object).sub(n.object.position).normalize()}function j(P){return Math.max(n.minDistance,Math.min(n.maxDistance,P))}function ee(P){u.set(P.clientX,P.clientY)}function ce(P){B(P.clientX,P.clientX),d.set(P.clientX,P.clientY)}function Ce(P){g.set(P.clientX,P.clientY)}function K(P){f.set(P.clientX,P.clientY),m.subVectors(f,u).multiplyScalar(n.rotateSpeed);const ie=n.domElement;L(2*Math.PI*m.x/ie.clientHeight),V(2*Math.PI*m.y/ie.clientHeight),u.copy(f),n.update()}function J(P){x.set(P.clientX,P.clientY),y.subVectors(x,d),y.y>0?W(E(y.y)):y.y<0&&H(E(y.y)),d.copy(x),n.update()}function he(P){_.set(P.clientX,P.clientY),p.subVectors(_,g).multiplyScalar(n.panSpeed),U(p.x,p.y),g.copy(_),n.update()}function Se(P){B(P.clientX,P.clientY),P.deltaY<0?H(E(P.deltaY)):P.deltaY>0&&W(E(P.deltaY)),n.update()}function ne(P){let ie=!1;switch(P.code){case n.keys.UP:P.ctrlKey||P.metaKey||P.shiftKey?V(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(0,n.keyPanSpeed),ie=!0;break;case n.keys.BOTTOM:P.ctrlKey||P.metaKey||P.shiftKey?V(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(0,-n.keyPanSpeed),ie=!0;break;case n.keys.LEFT:P.ctrlKey||P.metaKey||P.shiftKey?L(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(n.keyPanSpeed,0),ie=!0;break;case n.keys.RIGHT:P.ctrlKey||P.metaKey||P.shiftKey?L(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(-n.keyPanSpeed,0),ie=!0;break}ie&&(P.preventDefault(),n.update())}function me(P){if(M.length===1)u.set(P.pageX,P.pageY);else{const ie=Ee(P),we=.5*(P.pageX+ie.x),F=.5*(P.pageY+ie.y);u.set(we,F)}}function Ve(P){if(M.length===1)g.set(P.pageX,P.pageY);else{const ie=Ee(P),we=.5*(P.pageX+ie.x),F=.5*(P.pageY+ie.y);g.set(we,F)}}function Le(P){const ie=Ee(P),we=P.pageX-ie.x,F=P.pageY-ie.y,de=Math.sqrt(we*we+F*F);d.set(0,de)}function z(P){n.enableZoom&&Le(P),n.enablePan&&Ve(P)}function pt(P){n.enableZoom&&Le(P),n.enableRotate&&me(P)}function Pe(P){if(M.length==1)f.set(P.pageX,P.pageY);else{const we=Ee(P),F=.5*(P.pageX+we.x),de=.5*(P.pageY+we.y);f.set(F,de)}m.subVectors(f,u).multiplyScalar(n.rotateSpeed);const ie=n.domElement;L(2*Math.PI*m.x/ie.clientHeight),V(2*Math.PI*m.y/ie.clientHeight),u.copy(f)}function se(P){if(M.length===1)_.set(P.pageX,P.pageY);else{const ie=Ee(P),we=.5*(P.pageX+ie.x),F=.5*(P.pageY+ie.y);_.set(we,F)}p.subVectors(_,g).multiplyScalar(n.panSpeed),U(p.x,p.y),g.copy(_)}function oe(P){const ie=Ee(P),we=P.pageX-ie.x,F=P.pageY-ie.y,de=Math.sqrt(we*we+F*F);x.set(0,de),y.set(0,Math.pow(x.y/d.y,n.zoomSpeed)),W(y.y),d.copy(x);const X=(P.pageX+ie.x)*.5,ue=(P.pageY+ie.y)*.5;B(X,ue)}function De(P){n.enableZoom&&oe(P),n.enablePan&&se(P)}function be(P){n.enableZoom&&oe(P),n.enableRotate&&Pe(P)}function ye(P){n.enabled!==!1&&(M.length===0&&(n.domElement.setPointerCapture(P.pointerId),n.domElement.addEventListener("pointermove",Be),n.domElement.addEventListener("pointerup",I)),!Xe(P)&&(pe(P),P.pointerType==="touch"?fe(P):T(P)))}function Be(P){n.enabled!==!1&&(P.pointerType==="touch"?ge(P):Z(P))}function I(P){switch(xt(P),M.length){case 0:n.domElement.releasePointerCapture(P.pointerId),n.domElement.removeEventListener("pointermove",Be),n.domElement.removeEventListener("pointerup",I),n.dispatchEvent(qf),r=s.NONE;break;case 1:const ie=M[0],we=C[ie];fe({pointerId:ie,pageX:we.x,pageY:we.y});break}}function T(P){let ie;switch(P.button){case 0:ie=n.mouseButtons.LEFT;break;case 1:ie=n.mouseButtons.MIDDLE;break;case 2:ie=n.mouseButtons.RIGHT;break;default:ie=-1}switch(ie){case er.DOLLY:if(n.enableZoom===!1)return;ce(P),r=s.DOLLY;break;case er.ROTATE:if(P.ctrlKey||P.metaKey||P.shiftKey){if(n.enablePan===!1)return;Ce(P),r=s.PAN}else{if(n.enableRotate===!1)return;ee(P),r=s.ROTATE}break;case er.PAN:if(P.ctrlKey||P.metaKey||P.shiftKey){if(n.enableRotate===!1)return;ee(P),r=s.ROTATE}else{if(n.enablePan===!1)return;Ce(P),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(nh)}function Z(P){switch(r){case s.ROTATE:if(n.enableRotate===!1)return;K(P);break;case s.DOLLY:if(n.enableZoom===!1)return;J(P);break;case s.PAN:if(n.enablePan===!1)return;he(P);break}}function te(P){n.enabled===!1||n.enableZoom===!1||r!==s.NONE||(P.preventDefault(),n.dispatchEvent(nh),Se(le(P)),n.dispatchEvent(qf))}function le(P){const ie=P.deltaMode,we={clientX:P.clientX,clientY:P.clientY,deltaY:P.deltaY};switch(ie){case 1:we.deltaY*=16;break;case 2:we.deltaY*=100;break}return P.ctrlKey&&!O&&(we.deltaY*=10),we}function re(P){P.key==="Control"&&(O=!0,n.domElement.getRootNode().addEventListener("keyup",We,{passive:!0,capture:!0}))}function We(P){P.key==="Control"&&(O=!1,n.domElement.getRootNode().removeEventListener("keyup",We,{passive:!0,capture:!0}))}function Ne(P){n.enabled===!1||n.enablePan===!1||ne(P)}function fe(P){switch(Oe(P),M.length){case 1:switch(n.touches.ONE){case tr.ROTATE:if(n.enableRotate===!1)return;me(P),r=s.TOUCH_ROTATE;break;case tr.PAN:if(n.enablePan===!1)return;Ve(P),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(n.touches.TWO){case tr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;z(P),r=s.TOUCH_DOLLY_PAN;break;case tr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;pt(P),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(nh)}function ge(P){switch(Oe(P),r){case s.TOUCH_ROTATE:if(n.enableRotate===!1)return;Pe(P),n.update();break;case s.TOUCH_PAN:if(n.enablePan===!1)return;se(P),n.update();break;case s.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;De(P),n.update();break;case s.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;be(P),n.update();break;default:r=s.NONE}}function ze(P){n.enabled!==!1&&P.preventDefault()}function pe(P){M.push(P.pointerId)}function xt(P){delete C[P.pointerId];for(let ie=0;ie<M.length;ie++)if(M[ie]==P.pointerId){M.splice(ie,1);return}}function Xe(P){for(let ie=0;ie<M.length;ie++)if(M[ie]==P.pointerId)return!0;return!1}function Oe(P){let ie=C[P.pointerId];ie===void 0&&(ie=new Me,C[P.pointerId]=ie),ie.set(P.pageX,P.pageY)}function Ee(P){const ie=P.pointerId===M[0]?M[1]:M[0];return C[ie]}n.domElement.addEventListener("contextmenu",ze),n.domElement.addEventListener("pointerdown",ye),n.domElement.addEventListener("pointercancel",I),n.domElement.addEventListener("wheel",te,{passive:!1}),n.domElement.getRootNode().addEventListener("keydown",re,{passive:!0,capture:!0}),this.update()}}const Wa={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class So{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const J1=new Hh(-1,1,1,-1,0,1);class eC extends ti{constructor(){super(),this.setAttribute("position",new gn([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new gn([0,2,0,0,2,0],2))}}const tC=new eC;class Pu{constructor(e){this._mesh=new un(tC,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,J1)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class nC extends So{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof rn?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=rs.clone(e.uniforms),this.material=new rn({name:e.name!==void 0?e.name:"unspecified",defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Pu(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class Kf extends So{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const s=e.getContext(),r=e.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let a,o;this.inverse?(a=0,o=1):(a=1,o=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),r.buffers.stencil.setFunc(s.ALWAYS,a,4294967295),r.buffers.stencil.setClear(o),r.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(s.EQUAL,1,4294967295),r.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),r.buffers.stencil.setLocked(!0)}}class iC extends So{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class sC{constructor(e,t){if(this.renderer=e,this._pixelRatio=e.getPixelRatio(),t===void 0){const n=e.getSize(new Me);this._width=n.width,this._height=n.height,t=new pi(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ps}),t.texture.name="EffectComposer.rt1"}else this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new nC(Wa),this.copyPass.material.blending=sn,this.clock=new gh}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let s=0,r=this.passes.length;s<r;s++){const a=this.passes[s];if(a.enabled!==!1){if(a.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),a.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),a.needsSwap){if(n){const o=this.renderer.getContext(),c=this.renderer.state.buffers.stencil;c.setFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),c.setFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}Kf!==void 0&&(a instanceof Kf?n=!0:a instanceof iC&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Me);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(n,s),this.renderTarget2.setSize(n,s);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(n,s)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}const rC={name:"OutputShader",uniforms:{tDiffuse:{value:null},toneMappingExposure:{value:1}},vertexShader:`
		precision highp float;

		uniform mat4 modelViewMatrix;
		uniform mat4 projectionMatrix;

		attribute vec3 position;
		attribute vec2 uv;

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`
	
		precision highp float;

		uniform sampler2D tDiffuse;

		#include <tonemapping_pars_fragment>
		#include <colorspace_pars_fragment>

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );

			// tone mapping

			#ifdef LINEAR_TONE_MAPPING

				gl_FragColor.rgb = LinearToneMapping( gl_FragColor.rgb );

			#elif defined( REINHARD_TONE_MAPPING )

				gl_FragColor.rgb = ReinhardToneMapping( gl_FragColor.rgb );

			#elif defined( CINEON_TONE_MAPPING )

				gl_FragColor.rgb = OptimizedCineonToneMapping( gl_FragColor.rgb );

			#elif defined( ACES_FILMIC_TONE_MAPPING )

				gl_FragColor.rgb = ACESFilmicToneMapping( gl_FragColor.rgb );

			#elif defined( AGX_TONE_MAPPING )

				gl_FragColor.rgb = AgXToneMapping( gl_FragColor.rgb );

			#elif defined( NEUTRAL_TONE_MAPPING )

				gl_FragColor.rgb = NeutralToneMapping( gl_FragColor.rgb );

			#endif

			// color space

			#ifdef SRGB_TRANSFER

				gl_FragColor = sRGBTransferOETF( gl_FragColor );

			#endif

		}`};class oC extends So{constructor(){super();const e=rC;this.uniforms=rs.clone(e.uniforms),this.material=new RS({name:e.name,uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),this.fsQuad=new Pu(this.material),this._outputColorSpace=null,this._toneMapping=null}render(e,t,n){this.uniforms.tDiffuse.value=n.texture,this.uniforms.toneMappingExposure.value=e.toneMappingExposure,(this._outputColorSpace!==e.outputColorSpace||this._toneMapping!==e.toneMapping)&&(this._outputColorSpace=e.outputColorSpace,this._toneMapping=e.toneMapping,this.material.defines={},rt.getTransfer(this._outputColorSpace)===ut&&(this.material.defines.SRGB_TRANSFER=""),this._toneMapping===op?this.material.defines.LINEAR_TONE_MAPPING="":this._toneMapping===ap?this.material.defines.REINHARD_TONE_MAPPING="":this._toneMapping===cp?this.material.defines.CINEON_TONE_MAPPING="":this._toneMapping===lp?this.material.defines.ACES_FILMIC_TONE_MAPPING="":this._toneMapping===hp?this.material.defines.AGX_TONE_MAPPING="":this._toneMapping===up&&(this.material.defines.NEUTRAL_TONE_MAPPING=""),this.material.needsUpdate=!0),this.renderToScreen===!0?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class aC extends So{constructor(e,t,n=null,s=null,r=null){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=s,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new xe}render(e,t,n){const s=e.autoClear;e.autoClear=!1;let r,a;this.overrideMaterial!==null&&(a=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(e.getClearColor(this._oldClearColor),e.setClearColor(this.clearColor)),this.clearAlpha!==null&&(r=e.getClearAlpha(),e.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear===!0&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor!==null&&e.setClearColor(this._oldClearColor),this.clearAlpha!==null&&e.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=a),e.autoClear=s}}class cC{constructor(e=Math){this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]],this.p=[];for(let t=0;t<256;t++)this.p[t]=Math.floor(e.random()*256);this.perm=[];for(let t=0;t<512;t++)this.perm[t]=this.p[t&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]}dot(e,t,n){return e[0]*t+e[1]*n}dot3(e,t,n,s){return e[0]*t+e[1]*n+e[2]*s}dot4(e,t,n,s,r){return e[0]*t+e[1]*n+e[2]*s+e[3]*r}noise(e,t){let n,s,r;const a=.5*(Math.sqrt(3)-1),o=(e+t)*a,c=Math.floor(e+o),l=Math.floor(t+o),h=(3-Math.sqrt(3))/6,u=(c+l)*h,f=c-u,m=l-u,g=e-f,_=t-m;let p,d;g>_?(p=1,d=0):(p=0,d=1);const x=g-p+h,y=_-d+h,S=g-1+2*h,b=_-1+2*h,w=c&255,M=l&255,C=this.perm[w+this.perm[M]]%12,O=this.perm[w+p+this.perm[M+d]]%12,v=this.perm[w+1+this.perm[M+1]]%12;let E=.5-g*g-_*_;E<0?n=0:(E*=E,n=E*E*this.dot(this.grad3[C],g,_));let L=.5-x*x-y*y;L<0?s=0:(L*=L,s=L*L*this.dot(this.grad3[O],x,y));let V=.5-S*S-b*b;return V<0?r=0:(V*=V,r=V*V*this.dot(this.grad3[v],S,b)),70*(n+s+r)}noise3d(e,t,n){let s,r,a,o;const l=(e+t+n)*.3333333333333333,h=Math.floor(e+l),u=Math.floor(t+l),f=Math.floor(n+l),m=1/6,g=(h+u+f)*m,_=h-g,p=u-g,d=f-g,x=e-_,y=t-p,S=n-d;let b,w,M,C,O,v;x>=y?y>=S?(b=1,w=0,M=0,C=1,O=1,v=0):x>=S?(b=1,w=0,M=0,C=1,O=0,v=1):(b=0,w=0,M=1,C=1,O=0,v=1):y<S?(b=0,w=0,M=1,C=0,O=1,v=1):x<S?(b=0,w=1,M=0,C=0,O=1,v=1):(b=0,w=1,M=0,C=1,O=1,v=0);const E=x-b+m,L=y-w+m,V=S-M+m,D=x-C+2*m,G=y-O+2*m,U=S-v+2*m,W=x-1+3*m,H=y-1+3*m,B=S-1+3*m,j=h&255,ee=u&255,ce=f&255,Ce=this.perm[j+this.perm[ee+this.perm[ce]]]%12,K=this.perm[j+b+this.perm[ee+w+this.perm[ce+M]]]%12,J=this.perm[j+C+this.perm[ee+O+this.perm[ce+v]]]%12,he=this.perm[j+1+this.perm[ee+1+this.perm[ce+1]]]%12;let Se=.6-x*x-y*y-S*S;Se<0?s=0:(Se*=Se,s=Se*Se*this.dot3(this.grad3[Ce],x,y,S));let ne=.6-E*E-L*L-V*V;ne<0?r=0:(ne*=ne,r=ne*ne*this.dot3(this.grad3[K],E,L,V));let me=.6-D*D-G*G-U*U;me<0?a=0:(me*=me,a=me*me*this.dot3(this.grad3[J],D,G,U));let Ve=.6-W*W-H*H-B*B;return Ve<0?o=0:(Ve*=Ve,o=Ve*Ve*this.dot3(this.grad3[he],W,H,B)),32*(s+r+a+o)}noise4d(e,t,n,s){const r=this.grad4,a=this.simplex,o=this.perm,c=(Math.sqrt(5)-1)/4,l=(5-Math.sqrt(5))/20;let h,u,f,m,g;const _=(e+t+n+s)*c,p=Math.floor(e+_),d=Math.floor(t+_),x=Math.floor(n+_),y=Math.floor(s+_),S=(p+d+x+y)*l,b=p-S,w=d-S,M=x-S,C=y-S,O=e-b,v=t-w,E=n-M,L=s-C,V=O>v?32:0,D=O>E?16:0,G=v>E?8:0,U=O>L?4:0,W=v>L?2:0,H=E>L?1:0,B=V+D+G+U+W+H,j=a[B][0]>=3?1:0,ee=a[B][1]>=3?1:0,ce=a[B][2]>=3?1:0,Ce=a[B][3]>=3?1:0,K=a[B][0]>=2?1:0,J=a[B][1]>=2?1:0,he=a[B][2]>=2?1:0,Se=a[B][3]>=2?1:0,ne=a[B][0]>=1?1:0,me=a[B][1]>=1?1:0,Ve=a[B][2]>=1?1:0,Le=a[B][3]>=1?1:0,z=O-j+l,pt=v-ee+l,Pe=E-ce+l,se=L-Ce+l,oe=O-K+2*l,De=v-J+2*l,be=E-he+2*l,ye=L-Se+2*l,Be=O-ne+3*l,I=v-me+3*l,T=E-Ve+3*l,Z=L-Le+3*l,te=O-1+4*l,le=v-1+4*l,re=E-1+4*l,We=L-1+4*l,Ne=p&255,fe=d&255,ge=x&255,ze=y&255,pe=o[Ne+o[fe+o[ge+o[ze]]]]%32,xt=o[Ne+j+o[fe+ee+o[ge+ce+o[ze+Ce]]]]%32,Xe=o[Ne+K+o[fe+J+o[ge+he+o[ze+Se]]]]%32,Oe=o[Ne+ne+o[fe+me+o[ge+Ve+o[ze+Le]]]]%32,Ee=o[Ne+1+o[fe+1+o[ge+1+o[ze+1]]]]%32;let Re=.6-O*O-v*v-E*E-L*L;Re<0?h=0:(Re*=Re,h=Re*Re*this.dot4(r[pe],O,v,E,L));let P=.6-z*z-pt*pt-Pe*Pe-se*se;P<0?u=0:(P*=P,u=P*P*this.dot4(r[xt],z,pt,Pe,se));let ie=.6-oe*oe-De*De-be*be-ye*ye;ie<0?f=0:(ie*=ie,f=ie*ie*this.dot4(r[Xe],oe,De,be,ye));let we=.6-Be*Be-I*I-T*T-Z*Z;we<0?m=0:(we*=we,m=we*we*this.dot4(r[Oe],Be,I,T,Z));let F=.6-te*te-le*le-re*re-We*We;return F<0?g=0:(F*=F,g=F*F*this.dot4(r[Ee],te,le,re,We)),27*(h+u+f+m+g)}}const Oa={name:"SSAOShader",defines:{PERSPECTIVE_CAMERA:1,KERNEL_SIZE:32},uniforms:{tNormal:{value:null},tDepth:{value:null},tNoise:{value:null},kernel:{value:null},cameraNear:{value:null},cameraFar:{value:null},resolution:{value:new Me},cameraProjectionMatrix:{value:new dt},cameraInverseProjectionMatrix:{value:new dt},kernelRadius:{value:8},minDistance:{value:.005},maxDistance:{value:.05}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`
		uniform highp sampler2D tNormal;
		uniform highp sampler2D tDepth;
		uniform sampler2D tNoise;

		uniform vec3 kernel[ KERNEL_SIZE ];

		uniform vec2 resolution;

		uniform float cameraNear;
		uniform float cameraFar;
		uniform mat4 cameraProjectionMatrix;
		uniform mat4 cameraInverseProjectionMatrix;

		uniform float kernelRadius;
		uniform float minDistance; // avoid artifacts caused by neighbour fragments with minimal depth difference
		uniform float maxDistance; // avoid the influence of fragments which are too far away

		varying vec2 vUv;

		#include <packing>

		float getDepth( const in vec2 screenPosition ) {

			return texture2D( tDepth, screenPosition ).x;

		}

		float getLinearDepth( const in vec2 screenPosition ) {

			#if PERSPECTIVE_CAMERA == 1

				float fragCoordZ = texture2D( tDepth, screenPosition ).x;
				float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );
				return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );

			#else

				return texture2D( tDepth, screenPosition ).x;

			#endif

		}

		float getViewZ( const in float depth ) {

			#if PERSPECTIVE_CAMERA == 1

				return perspectiveDepthToViewZ( depth, cameraNear, cameraFar );

			#else

				return orthographicDepthToViewZ( depth, cameraNear, cameraFar );

			#endif

		}

		vec3 getViewPosition( const in vec2 screenPosition, const in float depth, const in float viewZ ) {

			float clipW = cameraProjectionMatrix[2][3] * viewZ + cameraProjectionMatrix[3][3];

			vec4 clipPosition = vec4( ( vec3( screenPosition, depth ) - 0.5 ) * 2.0, 1.0 );

			clipPosition *= clipW; // unprojection.

			return ( cameraInverseProjectionMatrix * clipPosition ).xyz;

		}

		vec3 getViewNormal( const in vec2 screenPosition ) {

			return unpackRGBToNormal( texture2D( tNormal, screenPosition ).xyz );

		}

		void main() {

			float depth = getDepth( vUv );

			if ( depth == 1.0 ) {

				gl_FragColor = vec4( 1.0 ); // don't influence background
				
			} else {

				float viewZ = getViewZ( depth );

				vec3 viewPosition = getViewPosition( vUv, depth, viewZ );
				vec3 viewNormal = getViewNormal( vUv );

				vec2 noiseScale = vec2( resolution.x / 4.0, resolution.y / 4.0 );
				vec3 random = vec3( texture2D( tNoise, vUv * noiseScale ).r );

				// compute matrix used to reorient a kernel vector

				vec3 tangent = normalize( random - viewNormal * dot( random, viewNormal ) );
				vec3 bitangent = cross( viewNormal, tangent );
				mat3 kernelMatrix = mat3( tangent, bitangent, viewNormal );

				float occlusion = 0.0;

				for ( int i = 0; i < KERNEL_SIZE; i ++ ) {

					vec3 sampleVector = kernelMatrix * kernel[ i ]; // reorient sample vector in view space
					vec3 samplePoint = viewPosition + ( sampleVector * kernelRadius ); // calculate sample point

					vec4 samplePointNDC = cameraProjectionMatrix * vec4( samplePoint, 1.0 ); // project point and calculate NDC
					samplePointNDC /= samplePointNDC.w;

					vec2 samplePointUv = samplePointNDC.xy * 0.5 + 0.5; // compute uv coordinates

					float realDepth = getLinearDepth( samplePointUv ); // get linear depth from depth texture
					float sampleDepth = viewZToOrthographicDepth( samplePoint.z, cameraNear, cameraFar ); // compute linear depth of the sample view Z value
					float delta = sampleDepth - realDepth;

					if ( delta > minDistance && delta < maxDistance ) { // if fragment is before sample point, increase occlusion

						occlusion += 1.0;

					}

				}

				occlusion = clamp( occlusion / float( KERNEL_SIZE ), 0.0, 1.0 );

				gl_FragColor = vec4( vec3( 1.0 - occlusion ), 1.0 );

			}

		}`},Fa={name:"SSAODepthShader",defines:{PERSPECTIVE_CAMERA:1},uniforms:{tDepth:{value:null},cameraNear:{value:null},cameraFar:{value:null}},vertexShader:`varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`uniform sampler2D tDepth;

		uniform float cameraNear;
		uniform float cameraFar;

		varying vec2 vUv;

		#include <packing>

		float getLinearDepth( const in vec2 screenPosition ) {

			#if PERSPECTIVE_CAMERA == 1

				float fragCoordZ = texture2D( tDepth, screenPosition ).x;
				float viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );
				return viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );

			#else

				return texture2D( tDepth, screenPosition ).x;

			#endif

		}

		void main() {

			float depth = getLinearDepth( vUv );
			gl_FragColor = vec4( vec3( 1.0 - depth ), 1.0 );

		}`},ka={name:"SSAOBlurShader",uniforms:{tDiffuse:{value:null},resolution:{value:new Me}},vertexShader:`varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`uniform sampler2D tDiffuse;

		uniform vec2 resolution;

		varying vec2 vUv;

		void main() {

			vec2 texelSize = ( 1.0 / resolution );
			float result = 0.0;

			for ( int i = - 2; i <= 2; i ++ ) {

				for ( int j = - 2; j <= 2; j ++ ) {

					vec2 offset = ( vec2( float( i ), float( j ) ) ) * texelSize;
					result += texture2D( tDiffuse, vUv + offset ).r;

				}

			}

			gl_FragColor = vec4( vec3( result / ( 5.0 * 5.0 ) ), 1.0 );

		}`};class is extends So{constructor(e,t,n,s,r=32){super(),this.width=n!==void 0?n:512,this.height=s!==void 0?s:512,this.clear=!0,this.camera=t,this.scene=e,this.kernelRadius=8,this.kernel=[],this.noiseTexture=null,this.output=0,this.minDistance=.005,this.maxDistance=.1,this._visibilityCache=new Map,this.generateSampleKernel(r),this.generateRandomKernelRotations();const a=new qh;a.format=Us,a.type=hs,this.normalRenderTarget=new pi(this.width,this.height,{minFilter:Nt,magFilter:Nt,type:ps,depthTexture:a}),this.ssaoRenderTarget=new pi(this.width,this.height,{type:ps}),this.blurRenderTarget=this.ssaoRenderTarget.clone(),this.ssaoMaterial=new rn({defines:Object.assign({},Oa.defines),uniforms:rs.clone(Oa.uniforms),vertexShader:Oa.vertexShader,fragmentShader:Oa.fragmentShader,blending:sn}),this.ssaoMaterial.defines.KERNEL_SIZE=r,this.ssaoMaterial.uniforms.tNormal.value=this.normalRenderTarget.texture,this.ssaoMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture,this.ssaoMaterial.uniforms.tNoise.value=this.noiseTexture,this.ssaoMaterial.uniforms.kernel.value=this.kernel,this.ssaoMaterial.uniforms.cameraNear.value=this.camera.near,this.ssaoMaterial.uniforms.cameraFar.value=this.camera.far,this.ssaoMaterial.uniforms.resolution.value.set(this.width,this.height),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.normalMaterial=new LS,this.normalMaterial.blending=sn,this.blurMaterial=new rn({defines:Object.assign({},ka.defines),uniforms:rs.clone(ka.uniforms),vertexShader:ka.vertexShader,fragmentShader:ka.fragmentShader}),this.blurMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.blurMaterial.uniforms.resolution.value.set(this.width,this.height),this.depthRenderMaterial=new rn({defines:Object.assign({},Fa.defines),uniforms:rs.clone(Fa.uniforms),vertexShader:Fa.vertexShader,fragmentShader:Fa.fragmentShader,blending:sn}),this.depthRenderMaterial.uniforms.tDepth.value=this.normalRenderTarget.depthTexture,this.depthRenderMaterial.uniforms.cameraNear.value=this.camera.near,this.depthRenderMaterial.uniforms.cameraFar.value=this.camera.far,this.copyMaterial=new rn({uniforms:rs.clone(Wa.uniforms),vertexShader:Wa.vertexShader,fragmentShader:Wa.fragmentShader,transparent:!0,depthTest:!1,depthWrite:!1,blendSrc:rp,blendDst:oh,blendEquation:Ni,blendSrcAlpha:sp,blendDstAlpha:oh,blendEquationAlpha:Ni}),this.fsQuad=new Pu(null),this.originalClearColor=new xe}dispose(){this.normalRenderTarget.dispose(),this.ssaoRenderTarget.dispose(),this.blurRenderTarget.dispose(),this.normalMaterial.dispose(),this.blurMaterial.dispose(),this.copyMaterial.dispose(),this.depthRenderMaterial.dispose(),this.fsQuad.dispose()}render(e,t,n){switch(e.capabilities.isWebGL2===!1&&(this.noiseTexture.format=gp),this.overrideVisibility(),this.renderOverride(e,this.normalMaterial,this.normalRenderTarget,7829503,1),this.restoreVisibility(),this.ssaoMaterial.uniforms.kernelRadius.value=this.kernelRadius,this.ssaoMaterial.uniforms.minDistance.value=this.minDistance,this.ssaoMaterial.uniforms.maxDistance.value=this.maxDistance,this.renderPass(e,this.ssaoMaterial,this.ssaoRenderTarget),this.renderPass(e,this.blurMaterial,this.blurRenderTarget),this.output){case is.OUTPUT.SSAO:this.copyMaterial.uniforms.tDiffuse.value=this.ssaoRenderTarget.texture,this.copyMaterial.blending=sn,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case is.OUTPUT.Blur:this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=sn,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case is.OUTPUT.Depth:this.renderPass(e,this.depthRenderMaterial,this.renderToScreen?null:t);break;case is.OUTPUT.Normal:this.copyMaterial.uniforms.tDiffuse.value=this.normalRenderTarget.texture,this.copyMaterial.blending=sn,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;case is.OUTPUT.Default:this.copyMaterial.uniforms.tDiffuse.value=n.texture,this.copyMaterial.blending=sn,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t),this.copyMaterial.uniforms.tDiffuse.value=this.blurRenderTarget.texture,this.copyMaterial.blending=ip,this.renderPass(e,this.copyMaterial,this.renderToScreen?null:t);break;default:console.warn("THREE.SSAOPass: Unknown output type.")}}renderPass(e,t,n,s,r){e.getClearColor(this.originalClearColor);const a=e.getClearAlpha(),o=e.autoClear;e.setRenderTarget(n),e.autoClear=!1,s!=null&&(e.setClearColor(s),e.setClearAlpha(r||0),e.clear()),this.fsQuad.material=t,this.fsQuad.render(e),e.autoClear=o,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}renderOverride(e,t,n,s,r){e.getClearColor(this.originalClearColor);const a=e.getClearAlpha(),o=e.autoClear;e.setRenderTarget(n),e.autoClear=!1,s=t.clearColor||s,r=t.clearAlpha||r,s!=null&&(e.setClearColor(s),e.setClearAlpha(r||0),e.clear()),this.scene.overrideMaterial=t,e.render(this.scene,this.camera),this.scene.overrideMaterial=null,e.autoClear=o,e.setClearColor(this.originalClearColor),e.setClearAlpha(a)}setSize(e,t){this.width=e,this.height=t,this.ssaoRenderTarget.setSize(e,t),this.normalRenderTarget.setSize(e,t),this.blurRenderTarget.setSize(e,t),this.ssaoMaterial.uniforms.resolution.value.set(e,t),this.ssaoMaterial.uniforms.cameraProjectionMatrix.value.copy(this.camera.projectionMatrix),this.ssaoMaterial.uniforms.cameraInverseProjectionMatrix.value.copy(this.camera.projectionMatrixInverse),this.blurMaterial.uniforms.resolution.value.set(e,t)}generateSampleKernel(e){const t=this.kernel;for(let n=0;n<e;n++){const s=new k;s.x=Math.random()*2-1,s.y=Math.random()*2-1,s.z=Math.random(),s.normalize();let r=n/e;r=Mp.lerp(.1,1,r*r),s.multiplyScalar(r),t.push(s)}}generateRandomKernelRotations(){const n=new cC,s=4*4,r=new Float32Array(s);for(let a=0;a<s;a++){const o=Math.random()*2-1,c=Math.random()*2-1,l=0;r[a]=n.noise3d(o,c,l)}this.noiseTexture=new CS(r,4,4,_p,li),this.noiseTexture.wrapS=Fo,this.noiseTexture.wrapT=Fo,this.noiseTexture.needsUpdate=!0}overrideVisibility(){const e=this.scene,t=this._visibilityCache;e.traverse(function(n){t.set(n,n.visible),(n.isPoints||n.isLine)&&(n.visible=!1)})}restoreVisibility(){const e=this.scene,t=this._visibilityCache;e.traverse(function(n){const s=t.get(n);n.visible=s}),t.clear()}}is.OUTPUT={Default:0,SSAO:1,Blur:2,Depth:3,Normal:4};function lC(i){document.fullscreenElement?document.exitFullscreen():!document.fullscreenElement&&i.requestFullscreen?i.requestFullscreen():document.webkitFullscreenElement?document.webkitExitFullscreen():!document.webkitFullscreenElement&&i.webkitRequestFullscreen&&i.webkitRequestFullscreen()}var Oo=function(){var i=0,e=document.createElement("div");e.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",e.addEventListener("click",function(h){h.preventDefault(),n(++i%e.children.length)},!1);function t(h){return e.appendChild(h.dom),h}function n(h){for(var u=0;u<e.children.length;u++)e.children[u].style.display=u===h?"block":"none";i=h}var s=(performance||Date).now(),r=s,a=0,o=t(new Oo.Panel("FPS","#0ff","#002")),c=t(new Oo.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=t(new Oo.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:e,addPanel:t,showPanel:n,begin:function(){s=(performance||Date).now()},end:function(){a++;var h=(performance||Date).now();if(c.update(h-s,200),h>=r+1e3&&(o.update(a*1e3/(h-r),100),r=h,a=0,l)){var u=performance.memory;l.update(u.usedJSHeapSize/1048576,u.jsHeapSizeLimit/1048576)}return h},update:function(){s=this.end()},domElement:e,setMode:n}};Oo.Panel=function(i,e,t){var n=1/0,s=0,r=Math.round,a=r(window.devicePixelRatio||1),o=80*a,c=48*a,l=3*a,h=2*a,u=3*a,f=15*a,m=74*a,g=30*a,_=document.createElement("canvas");_.width=o,_.height=c,_.style.cssText="width:80px;height:48px";var p=_.getContext("2d");return p.font="bold "+9*a+"px Helvetica,Arial,sans-serif",p.textBaseline="top",p.fillStyle=t,p.fillRect(0,0,o,c),p.fillStyle=e,p.fillText(i,l,h),p.fillRect(u,f,m,g),p.fillStyle=t,p.globalAlpha=.9,p.fillRect(u,f,m,g),{dom:_,update:function(d,x){n=Math.min(n,d),s=Math.max(s,d),p.fillStyle=t,p.globalAlpha=1,p.fillRect(0,0,o,f),p.fillStyle=e,p.fillText(r(d)+" "+i+" ("+r(n)+"-"+r(s)+")",l,h),p.drawImage(_,u+a,f,m-a,g,u,f,m-a,g),p.fillRect(u+m-a,f,a,g),p.fillStyle=t,p.globalAlpha=.9,p.fillRect(u+m-a,f,a,r((1-d/x)*g))}}};const vr=new Li,Qi=new nl,Ii=new Me,Xf=new k,ih=new Me,Ua=new Me,Ba=new k,sh=new k,Yf=new dt,$f=new k,Zf=new k;class hC extends xs{constructor(e,t,n){super(),n.style.touchAction="none";let s=null,r=null;const a=[];this.mode="translate",this.rotateSpeed=1;const o=this;function c(){n.addEventListener("pointermove",g),n.addEventListener("pointerdown",_),n.addEventListener("pointerup",p),n.addEventListener("pointerleave",p)}function l(){n.removeEventListener("pointermove",g),n.removeEventListener("pointerdown",_),n.removeEventListener("pointerup",p),n.removeEventListener("pointerleave",p),n.style.cursor=""}function h(){l()}function u(){return e}function f(y){e=y}function m(){return Qi}function g(y){if(o.enabled!==!1){if(d(y),Qi.setFromCamera(Ii,t),s)o.mode==="translate"?Qi.ray.intersectPlane(vr,Ba)&&s.position.copy(Ba.sub(Xf).applyMatrix4(Yf)):o.mode==="rotate"&&(ih.subVectors(Ii,Ua).multiplyScalar(o.rotateSpeed),s.rotateOnWorldAxis($f,ih.x),s.rotateOnWorldAxis(Zf.normalize(),-ih.y)),o.dispatchEvent({type:"drag",object:s}),Ua.copy(Ii);else if(y.pointerType==="mouse"||y.pointerType==="pen")if(a.length=0,Qi.setFromCamera(Ii,t),Qi.intersectObjects(e,o.recursive,a),a.length>0){const S=a[0].object;vr.setFromNormalAndCoplanarPoint(t.getWorldDirection(vr.normal),sh.setFromMatrixPosition(S.matrixWorld)),r!==S&&r!==null&&(o.dispatchEvent({type:"hoveroff",object:r}),n.style.cursor="auto",r=null),r!==S&&(o.dispatchEvent({type:"hoveron",object:S}),n.style.cursor="pointer",r=S)}else r!==null&&(o.dispatchEvent({type:"hoveroff",object:r}),n.style.cursor="auto",r=null);Ua.copy(Ii)}}function _(y){o.enabled!==!1&&(d(y),a.length=0,Qi.setFromCamera(Ii,t),Qi.intersectObjects(e,o.recursive,a),a.length>0&&(o.transformGroup===!0?s=x(a[0].object):s=a[0].object,vr.setFromNormalAndCoplanarPoint(t.getWorldDirection(vr.normal),sh.setFromMatrixPosition(s.matrixWorld)),Qi.ray.intersectPlane(vr,Ba)&&(o.mode==="translate"?(Yf.copy(s.parent.matrixWorld).invert(),Xf.copy(Ba).sub(sh.setFromMatrixPosition(s.matrixWorld))):o.mode==="rotate"&&($f.set(0,1,0).applyQuaternion(t.quaternion).normalize(),Zf.set(1,0,0).applyQuaternion(t.quaternion).normalize())),n.style.cursor="move",o.dispatchEvent({type:"dragstart",object:s})),Ua.copy(Ii))}function p(){o.enabled!==!1&&(s&&(o.dispatchEvent({type:"dragend",object:s}),s=null),n.style.cursor=r?"pointer":"auto")}function d(y){const S=n.getBoundingClientRect();Ii.x=(y.clientX-S.left)/S.width*2-1,Ii.y=-(y.clientY-S.top)/S.height*2+1}function x(y,S=null){return y.isGroup&&(S=y),y.parent===null?S:x(y.parent,S)}c(),this.enabled=!0,this.recursive=!0,this.transformGroup=!1,this.activate=c,this.deactivate=l,this.dispose=h,this.getObjects=u,this.getRaycaster=m,this.setObjects=f}}class Qf{constructor(){A(this,"_modelInstance");A(this,"pointerdownHandler");A(this,"pointerupHandler");A(this,"pointermoveHandler");A(this,"pointeroverHandler");A(this,"pointeroutHandler");A(this,"pointerenterHandler");A(this,"pointerleaveHandler");A(this,"pointercancelHandler");A(this,"gotpointercaptureHandler");A(this,"lostpointercaptureHandler");A(this,"handlersArray",new Array);A(this,"_pointerEventsIds",new Array);this.pointerdownHandler=new ri("pointerdown",this.onPointerDownHandler),this.pointerupHandler=new ri("pointerup",this.onPointerUpHandler),this.pointermoveHandler=new ri("pointermove",this.onPointerMoveHandler),this.pointeroverHandler=new ri("pointerover",this.onPointerOverHandler),this.pointeroutHandler=new ri("pointerout",this.onPointerOutHandler),this.pointerenterHandler=new ri("pointerenter",this.onPointerEnterHandler),this.pointerleaveHandler=new ri("pointerleave",this.onPointerLeaveHandler),this.pointercancelHandler=new ri("pointercancel",this.onPointerCancelHandler),this.gotpointercaptureHandler=new ri("gotpointercapture",this.onGotPointerCaptureHandler),this.lostpointercaptureHandler=new ri("lostpointercapture",this.onLostPointerCaptureHandler),this.handlersArray=[this.pointerdownHandler,this.pointerupHandler,this.pointermoveHandler,this.pointeroverHandler,this.pointeroutHandler,this.pointerenterHandler,this.pointerleaveHandler,this.pointercancelHandler,this.gotpointercaptureHandler,this.lostpointercaptureHandler]}onGotPointerCaptureHandler(e){console.log("got pointer capture")}onLostPointerCaptureHandler(e){console.log("lost pointer capture")}onPointerDownHandler(e){this._modelInstance.pointerDown=!0;let t=this._modelInstance.pointerEventsInstance.ajhPointerEventHandlers;if(e.stopPropagation(),t.getPointerEventById(e.pointerId)==null&&t.addPointerEvent(e.pointerId),this._modelInstance.selectedKeys.selectedKeys[e.pointerId]!=null){this._modelInstance.mouseCoordinates.x=e.clientX,this._modelInstance.mouseCoordinates.y=e.clientY;try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerDown",this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyName,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID),console.log("pointerdown  >> id: "+e.pointerId)}catch(n){console.log(n)}}else console.log("MouseClickOutside:: id: "+this._modelInstance.selectedKey.keyId+", name: "+this._modelInstance.selectedKey.bodyName)}onPointerMoveHandler(e){e.stopPropagation(),e.preventDefault();let t=this._modelInstance.pointerEventsInstance.ajhPointerEventHandlers;t.getPointerEventById(e.pointerId)==null&&t.addPointerEvent(e.pointerId);let n=this._modelInstance.raycasterPointers.getRayPointerByID(e.pointerId),s=this._modelInstance.raycasters.getRayCasterByID(e.pointerId);n!=null?(n.rayPointer.x=e.clientX/window.innerWidth*2-1,n.rayPointer.y=e.clientY/window.innerHeight*2-1):this._modelInstance.raycasterPointers.addRayPointer(e.pointerId,e.clientX/window.innerWidth*2-1,e.clientY/window.innerHeight*2-1),s!=null?s.setRaycasterToCamera():this._modelInstance.raycasters.addRayCaster(e.pointerId),this._modelInstance.raycasters.getRayCasterByID(e.pointerId).findInstrumentKeysFromRaycast()}onPointerUpHandler(e){this._modelInstance.pointerDown=!1;let t=this._modelInstance.pointerEventsInstance.ajhPointerEventHandlers;if(e.stopPropagation(),t.getPointerEventById(e.pointerId)==null&&t.addPointerEvent(e.pointerId),this._modelInstance.selectedKeys.selectedKeys[e.pointerId]!=null)try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerUp",e.pointerId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID),console.log("pointerup  >> id: "+e.pointerId)}catch(n){console.log(n)}}onPointerCancelHandler(e){console.log("Pointer cancelled"+e.pointerId);try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerCancel",e.pointerId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID),console.log("pointercancel  >> id: "+e.pointerId)}catch(t){console.log(t)}}onPointerOverHandler(e){console.log("Pointer Over"+e.pointerId);try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerOver",e.pointerId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID,e.pointerId),console.log("pointerout  >> id: "+e.pointerId)}catch(t){console.log(t)}}onPointerOutHandler(e){console.log("Pointer out"+e.pointerId);try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerOut",e.pointerId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID),console.log("pointerout  >> id: "+e.pointerId)}catch(t){console.log(t)}}onPointerEnterHandler(e){console.log("Pointer Enter"+e.pointerId);try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerEnter",e.pointerId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID),console.log("pointerleave  >> id: "+e.pointerId)}catch(t){console.log(t)}}onPointerLeaveHandler(e){this._modelInstance.pointerDown=!1,console.log("Pointer left"+e.pointerId);try{this._modelInstance.musicalKeyEventEmitter.emit("onPointerLeave",e.pointerId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyId,this._modelInstance.selectedKeys.selectedKeys[e.pointerId].bodyUUID),console.log("pointerleave  >> id: "+e.pointerId)}catch(t){console.log(t)}}addPointerEvent(e){this.pointerEventsIds.push(new uC(e))}removePointerEvent(e){let t=null;for(let n=0;n<this.pointerEventsIds.length;n++)this.pointerEventsIds[n].Id==e&&(t=n);t!=null&&this.pointerEventsIds.splice(t,1)}getPointerEventById(e){let t=null;for(let n=0;n<this.pointerEventsIds.length;n++){const s=this.pointerEventsIds[n];s.Id==e&&(t=s)}return t}get pointerEventsIds(){return this._pointerEventsIds}set pointerEventsIds(e){this._pointerEventsIds=e}}class uC{constructor(e){A(this,"Id");this.Id=e}}class ri{constructor(e,t){A(this,"handlerType");A(this,"handlerFunction");this.handlerType=e,this.handlerFunction=t}}class dC{constructor(){A(this,"_ajhPointerEventHandlers",new Qf);A(this,"_modelInstance");this._modelInstance=Nn.Instance,this._ajhPointerEventHandlers=new Qf}addAllListeners(e){for(let t=0;t<this._ajhPointerEventHandlers.handlersArray.length;t++){const n=this._ajhPointerEventHandlers.handlersArray[t];e.addEventListener(n.handlerType,n.handlerFunction.bind(this))}}removeAllListeners(e){for(let t=0;t<this._ajhPointerEventHandlers.handlersArray.length;t++){const n=this._ajhPointerEventHandlers.handlersArray[t];e.removeEventListener(n.handlerType,n.handlerFunction.bind(this))}}get ajhPointerEventHandlers(){return this._ajhPointerEventHandlers}set ajhPointerEventHandlers(e){this._ajhPointerEventHandlers=e}}class cg{constructor(e,t){A(this,"_divisor");A(this,"_modelInstance");A(this,"_screenWidth");A(this,"_screenHeight");A(this,"_body");this._modelInstance=Nn.Instance,this._screenHeight=t,this._screenWidth=e,this.divisor=100,this.createBody()}repaint(e){this._body.material.color=e}remake(){this._body!=null&&(this._body.geometry.dispose(),this._body.material.dispose(),this._modelInstance.renderer.renderLists.dispose());const e=new mi(1,.1,1),t=new mh({color:"#5CF61F",metalness:.5,roughness:.7});this.body=new un(e,t),this.body.castShadow=!0}createBody(){this._body!=null&&(this._body.geometry.dispose(),this._body.material.dispose(),this._modelInstance.renderer.renderLists.dispose());const e=new mi(1,.2,1);new mh({color:"#309608",metalness:.5,roughness:.7}),this.body=new un(e,this.modelInstance.materials.backgroundMaterial),this.body.castShadow=!0,this.body.scale.set(Math.round(this.screenWidth/this.modelInstance.camera.position.y),1,Math.round(this.screenHeight/this.modelInstance.camera.position.y)),this.body.position.y=.4,console.log("FULLSCREENOBJECT CREATED")}dispose(){this._body!=null&&(this._body.geometry.dispose(),this._body.material.dispose(),this._modelInstance.renderer.renderLists.dispose())}resizeToScreenSize(){let e=this.modelInstance.getCameraViewSizeXY();this.body.scale.set(e.x,1,e.y)}get divisor(){return this._divisor}set divisor(e){this._divisor=e}get modelInstance(){return this._modelInstance}set modelInstance(e){this._modelInstance=e}get screenWidth(){return this._screenWidth}set screenWidth(e){this._screenWidth=e}get screenHeight(){return this._screenHeight}set screenHeight(e){this._screenHeight=e}get body(){return this._body}set body(e){this._body=e}}class fC{constructor(){A(this,"_modelInstance");this._modelInstance=Nn.Instance}get modelInstance(){return this._modelInstance}populateGUI(e=!1){let t={volume:.7};this.modelInstance.gui.add(t,"volume").min(0).max(1).step(.01).name("volume").onChange(function(u){console.log("VOLUME:"+u),Ru.volume.value=(1-u)*-36});const n=this.modelInstance.gui.addFolder("sound controls").close();let s={instrument:"PolySynth"};n.add(s,"instrument",["PolySynth","PhatPolySynth","FatOscillator","Triangle","Square"]).onChange((function(u){switch(console.log("The current synth is now a "+u),u){case"FatOscillator":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.fatoscillator;break;case"Square":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.squaresynth;break;case"Triangle":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.trianglesynth;break;case"PhatPolySynth":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.phatpolysynth;break;case"PolySynth":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.polysynth;break}}).bind(this));let r={scale:"chromatic"};n.add(r,"scale",["Chromatic","Major","MelodicMinor","HarmonicMinor","MinorThirdFifthSeventh","MinorPentatonic","BlackKeys","CircleOfFifths"]).name("scale").onChange((function(u){this.modelInstance.currentKeyBoard.createKeys("",this.modelInstance.scaleTypes.getScaleFromName(u))}).bind(this));const a=this.modelInstance.gui.addFolder("change display").close();if(a.add(this._modelInstance,"useSpectrumColours").name("toggle KeyColours").onChange((function(u){this._modelInstance.currentKeyBoard.repaintKeyBodies()}).bind(this)),a.add(this._modelInstance.currentKeyBoard,"numberOfColumns",8,32,1).name("number of keys").onChange((function(u){console.log("setting key columns:"+u.value),this.modelInstance.currentKeyBoard.createKeys("",this.modelInstance.currentKeyBoard.scaleType)}).bind(this)),e){this.modelInstance.gui.addFolder("Controls").add(this.modelInstance.dragControls,"enabled").name("drag controls");const f=this.modelInstance.gui.addFolder("Lights").close();f.add(this.modelInstance.pointLights[0],"visible").name("point light"),f.add(this.modelInstance.ambientLight,"visible").name("ambient light"),this.modelInstance.gui.addFolder("camera").close().add(this.modelInstance.cameraOrbitControls,"enabled").onChange((function(g){this.modelInstance.toggleOrbitCameraEnabled(this.modelInstance.cameraOrbitControls.enabled)}).bind(this))}this.modelInstance.gui.onFinishChange(()=>{const u=this.modelInstance.gui.save();localStorage.setItem("guiState",JSON.stringify(u))});const o=localStorage.getItem("guiState");o&&this.modelInstance.gui.load(JSON.parse(o));const c=()=>{localStorage.removeItem("guiState"),this.modelInstance.gui.reset()};let l=this.modelInstance.gui.addFolder("state"),h={show:!1};l.add(h,"show").name("stats").onChange((function(u){u?document.body.appendChild(this.modelInstance.Stats.dom):document.body.removeChild(this.modelInstance.Stats.dom)}).bind(this)),l.add({resetGui:c},"resetGui").name("reset local storage"),l.close(),this.modelInstance.gui.close()}}function pC(i,e,t=Math.PI*2){const n=e.getElapsedTime()*t;i.rotation.y=n,i.rotation.z=n/1.2}class Ji{constructor(){A(this,"synth");A(this,"name")}}class mC{constructor(){A(this,"plucksynth");A(this,"membranesynth");A(this,"duosynth");A(this,"polysynth");A(this,"phatpolysynth");A(this,"squaresynth");A(this,"trianglesynth");A(this,"fatoscillator");this.plucksynth=this.createPluckSynth(),this.membranesynth=this.createMembraneSynth(),this.duosynth=this.createDuoSynth(),this.polysynth=this.createPolySynth(),this.phatpolysynth=this.createPhatPolySynth(),this.fatoscillator=this.createFatOscillator(),this.trianglesynth=this.createTriangle(),this.squaresynth=this.createSquare()}createPluckSynth(){let e=new Ji;return e.name="PluckSynth",e.synth=new Wo,e}createFatOscillator(){let e=new Ji;return e.name="FatOscillator",e.synth=new Oi(xn,{oscillator:{type:"fatsawtooth",count:3,spread:30},envelope:{attack:.01,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),e.synth.maxPolyphony=64,e}createTriangle(){let e=new Ji;return e.name="Triangle",e.synth=new Oi(xn,{oscillator:{type:"fattriangle",count:5,spread:60},envelope:{attack:.01,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),e.synth.maxPolyphony=64,e}createSquare(){let e=new Ji;return e.name="Square",e.synth=new Oi(xn,{oscillator:{type:"fatsquare",count:8,spread:60},envelope:{attack:.01,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),e.synth.maxPolyphony=64,e}createMembraneSynth(){let e=new Ji;return e.name="MembraneSynth",e.synth=new js,e}createDuoSynth(){let e=new Ji;return e.name="DuoSynth",e.synth=new Ho({vibratoAmount:.5,vibratoRate:5,portamento:.1,harmonicity:1.005,volume:5,voice0:{oscillator:{type:"sawtooth"},filter:{Q:1,type:"lowpass",rolloff:-24},envelope:{attack:.01,decay:.25,sustain:.8,release:1.2},filterEnvelope:{attack:.001,decay:.05,sustain:.3,release:2,baseFrequency:100,octaves:4}},voice1:{oscillator:{type:"sawtooth"},filter:{Q:2,type:"bandpass",rolloff:-12},envelope:{attack:.25,decay:4,sustain:.1,release:.8},filterEnvelope:{attack:.05,decay:.05,sustain:.7,release:2,baseFrequency:5e3,octaves:-1.5}}}),e}createPolySynth(){let e=new Ji;return e.name="PolySynth",e.synth=new Oi(xn,{oscillator:{type:"fatsine",volume:.1,count:1,spread:30},envelope:{attack:.8,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),e}createPhatPolySynth(){let e=new Ji;return e.name="PhatPolySynth",e.synth=new Oi(xn,{oscillator:{type:"fattriangle",count:1,spread:30},envelope:{attack:.2,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),e}}class gC{constructor(){A(this,"_modelInstance",Nn.Instance);A(this,"_currentInstrument");A(this,"_volume");A(this,"synths",new mC);A(this,"_instruments",new Array);A(this,"_ajhReverb");A(this,"_ajhReverb2");A(this,"_lpFilter",new pn({frequency:2e4,type:"lowpass",rolloff:-24}));A(this,"_channel");this.setVolume(.7),this.ajhReverb=new io({decay:1.5,wet:.9,preDelay:.1}),this.ajhReverb2=new io({decay:1.5,wet:.2,preDelay:.1}),this.connectAllInstrumentsToOutput(),this.currentInstrument=this.synths.trianglesynth,this.playAChord(4)}get modelInstance(){return this._modelInstance}set modelInstance(e){this._modelInstance=e}get currentInstrument(){return this._currentInstrument}set currentInstrument(e){this._currentInstrument=e}get volume(){return this._volume}set volume(e){this._volume=e}connectAllInstrumentsToOutput(){this.connectInstrumentToEffectChainAndOutput(this.synths.phatpolysynth.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.polysynth.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.fatoscillator.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.squaresynth.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.trianglesynth.synth)}setVolume(e){Ru.volume.value=(1-e)*-36}connectInstrumentToEffectChainAndOutput(e){e.connect(this._lpFilter).connect(this.ajhReverb).toDestination()}playAChord(e){this.synths.polysynth.synth.triggerAttackRelease(["C"+e.toString(),"G"+e.toString(),"C"+(e+1).toString()],1,Et(),.5)}playHarmonized3rd7th(e){let t=Ah(e).harmonize([0,3,7,9,11,13,19,23]);this.instruments[4][1].triggerAttackRelease([t[0].toFrequency(),t[1].toFrequency(),t[2].toFrequency()],2.5)}stopHarmonized3rd7th(e){let t=Ah(e).harmonize([0,3,7]);this.instruments[1][1].triggerRelease([t[0].toFrequency(),t[1].toFrequency(),t[2].toFrequency()])}playANote(e,t=.7){switch(this.currentInstrument.name){case"Square":this.currentInstrument.synth.triggerAttackRelease(e,.5,Et(),t);break;case"Triangle":this.currentInstrument.synth.triggerAttackRelease(e,.5,Et(),t);break;case"PhatPolySynth":this.currentInstrument.synth.triggerAttackRelease(e,.5,Et(),t);break;case"SquareEightSynth":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"FatOscillator":this.currentInstrument.synth.triggerAttackRelease(e,.5,Et(),t);break;case"MembraneSynth":this.currentInstrument.synth.triggerAttackRelease(e,Et(),.8);break;case"PolySynth":this.currentInstrument.synth.triggerAttackRelease(e,.5,Et(),t);break;case"DuoSynth":this.currentInstrument.synth.triggerAttackRelease(e,.5,Et(),t);break;case"PluckSynth":this.currentInstrument.synth.triggerAttackRelease(e,Et());break}}startToPlayANote(e,t=.7){switch(this.currentInstrument.name){case"PhatPolySynth":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"Square":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"Triangle":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"SquareEightSynth":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"FatOscillator":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"MembraneSynth":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"PolySynth":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"DuoSynth":this.currentInstrument.synth.triggerAttack(e,Et(),t);break;case"PluckedSynth":this.currentInstrument.synth.triggerAttack(e,Et());break}}stopToPlayANote(e){switch(console.log("stopping "+this.currentInstrument.name+" that was playing a "+e),this.currentInstrument.name){case"Triangle":this.currentInstrument.synth.triggerRelease(e);break;case"Square":this.currentInstrument.synth.triggerRelease(e);break;case"PhatPolySynth":this.currentInstrument.synth.triggerRelease(e);break;case"SquareEightSynth":this.currentInstrument.synth.triggerRelease(e);break;case"FatOscillator":this.currentInstrument.synth.triggerRelease(e);break;case"MembraneSynth":this.currentInstrument.synth.triggerRelease(e);break;case"PolySynth":this.currentInstrument.synth.triggerRelease(e);break;case"DuoSynth":this.currentInstrument.synth.triggerRelease(Et());break;case"PluckedSynth":this.currentInstrument.synth.triggerRelease(Et());break}}stopANote(e){this.currentInstrument.synth.triggerRelease(e),this.currentInstrument.synth.triggerRelease()}stopAllNotes(){}get instruments(){return this._instruments}set instruments(e){this._instruments=e}get ajhReverb(){return this._ajhReverb}set ajhReverb(e){this._ajhReverb=e}get ajhReverb2(){return this._ajhReverb2}set ajhReverb2(e){this._ajhReverb2=e}get lpFilter(){return this._lpFilter}set lpFilter(e){this._lpFilter=e}get channel(){return this._channel}set channel(e){this._channel=e}}class _C{constructor(){A(this,"modelInstance",Nn.Instance);A(this,"enterButtonGeometry",this.modelInstance.geometries.roundedCubeGeometry);A(this,"enterButtonMaterial",this.modelInstance.materials.enterButtonMaterial);A(this,"_enterButton");A(this,"_titleField");A(this,"_InformationWindowInstance");A(this,"_fullscreenobject");A(this,"_dataField");A(this,"_messageField");A(this,"_width",200);A(this,"_height",100);A(this,"_body",new $t);A(this,"selectableItems",new Array);A(this,"enterButtonIsTouched",!1);A(this,"_enterButtonClicked",!1);A(this,"pointermovelistener");A(this,"pointerdownlistener");A(this,"pointeruplistener");A(this,"raycaster",new nl);A(this,"pointer",new Me);A(this,"INTERSECTED");this.pointermovelistener=this.onPointerMove.bind(this),this.pointerdownlistener=this.enterButtonOnPointerDownListener.bind(this),this.pointeruplistener=this.enterButtonOnPointerUpListener.bind(this),this.raycaster.layers.set(2),this.modelInstance.infoScreen=this,this.modelInstance.gui.hide(),this.createInformationWindow(),this.updateAllFields(),this.showInformationWindow(),this.createEnterButton(this.body),this.createfullScreenBackground(this.body),this.modelInstance.scene.add(this.body),this.addListeners()}get enterButton(){return this._enterButton}set enterButton(e){this._enterButton=e}get titleField(){return this._titleField}set titleField(e){this._titleField=e}get InformationWindowInstance(){return this._InformationWindowInstance}set InformationWindowInstance(e){this._InformationWindowInstance=e}get fullscreenobject(){return this._fullscreenobject}set fullscreenobject(e){this._fullscreenobject=e}get dataField(){return this._dataField}set dataField(e){this._dataField=e}get messageField(){return this._messageField}set messageField(e){this._messageField=e}get width(){return this._width}set width(e){this._width=e}get height(){return this._height}set height(e){this._height=e}get body(){return this._body}set body(e){this._body=e}get enterButtonClicked(){return this._enterButtonClicked}set enterButtonClicked(e){this._enterButtonClicked=e}beginTheSound(){this.removeListeners(),this.disposeOfEnterButton(),this.modelInstance.pointLights[0].position.y=2.5,this.startAudio()}createfullScreenBackground(e){this.fullscreenobject=new cg(this.modelInstance.canvas.clientWidth/1,this.modelInstance.canvas.clientHeight/1),this.fullscreenobject.body.position.y=4.8,this.fullscreenobject.resizeToScreenSize(),e.add(this.fullscreenobject.body)}createInformationWindow(){document.body.style.margin="0px",document.body.style.boxSizing="border-box",this._InformationWindowInstance=document.createElement("div"),this._InformationWindowInstance.style.userSelect="none",this._InformationWindowInstance.style.padding="0px",this._InformationWindowInstance.style.height="max-content",this._InformationWindowInstance.style.width="max-content",this._titleField=document.createElement("div"),this._titleField.style.userSelect="none",this._titleField.style.height="max-content",this._titleField.style.width="max-content",this._titleField.style.lineHeight="13px",this._InformationWindowInstance.appendChild(this._titleField),this._titleField.style.color="#ff9800",this._titleField.style.padding="0px",this._titleField.style.top="10px",this._messageField=document.createElement("div"),this._messageField.style.userSelect="none",this._messageField.style.height="max-content",this._messageField.style.width="max-content",this._messageField.style.lineHeight="13px",this._InformationWindowInstance.appendChild(this._messageField),this._messageField.style.color="#77D8FF",this._dataField=document.createElement("div"),this._dataField.style.userSelect="none",this._dataField.style.height="max-content",this._dataField.style.width="max-content",this._dataField,this._dataField.style.lineHeight="13px",this._dataField.style.top="5px",this._InformationWindowInstance.appendChild(this._dataField),this._dataField.style.color="#91c91a",this._InformationWindowInstance.style.fontFamily="Consolas",this._InformationWindowInstance.style.fontSize="12px",this._InformationWindowInstance.style.color="#ff9800",this._InformationWindowInstance.style.padding="1.5em",this._InformationWindowInstance.style.maxWidth="250px",this._InformationWindowInstance.style.maxHeight=this._height+"px",this._InformationWindowInstance.style.backgroundColor="rgba( 44, 44, 44, 0.70 )",this._InformationWindowInstance.style.position="absolute",this._InformationWindowInstance.style.opacity="1.0"}setInformationWindowPosition(){this._InformationWindowInstance.style.left="0px",this._InformationWindowInstance.style.top=window.innerHeight-this._height*.75+"px"}showInformationWindow(){console.log("InformationWindow show():"),this.setInformationWindowPosition(),this._InformationWindowInstance.parentNode||document.body.appendChild(this._InformationWindowInstance)}hideInformationWindow(){console.log("InformationWindow hide()"),this._InformationWindowInstance.parentNode&&document.body.removeChild(this._InformationWindowInstance)}updateAllFields(e="THE INSTRUMENT",t="touch the spinning cube to begin",n="doubleclick for fullscreen"){this._titleField.innerText=e,this._messageField.innerText=t,this._dataField.innerText=n}setDataFieldText(e){this._dataField.innerText=e}createEnterButton(e){const t=this.modelInstance.geometries.roundedCubeGeometry,n=this.modelInstance.materials.enterButtonMaterial;this.enterButton=new un(t,n);let s=.5;this.enterButton.scale.set(s,s,s),this.enterButton.position.y=5,e.add(this.enterButton),this.selectableItems.push(this.enterButton)}rotateButton(){pC(this.enterButton,this.modelInstance.clock,Math.PI/3)}addListeners(){this.modelInstance.canvas.addEventListener("pointermove",this.pointermovelistener),this.modelInstance.canvas.addEventListener("pointerdown",this.pointerdownlistener),this.modelInstance.canvas.addEventListener("pointerup",this.pointeruplistener)}removeListeners(){console.log("REMOVE ENTER LISTENERS"),this.modelInstance.canvas.removeEventListener("pointermove",this.pointermovelistener),this.modelInstance.canvas.removeEventListener("pointerdown",this.pointerdownlistener),this.modelInstance.canvas.removeEventListener("pointerup",this.pointeruplistener)}enterButtonOnPointerDownListener(e){console.log("BUTTON OUTSIDECLICKED!!!!"),this.enterButtonIsTouched&&this.beginTheSound()}enterButtonOnPointerUpListener(e){console.log("BUTTON OUTSIDECLICKED!!!!"),console.log("BUTTON UP!!!!"),this.enterButtonIsTouched=!1,this.enterButtonClicked=!0,this._fullscreenobject.body.removeFromParent(),this.enterButton.removeFromParent(),this.beginTheSound()}async startAudio(){await Gm().then(()=>{console.log("starting Tone"),this.modelInstance.instruments=new gC,this.modelInstance.ajhGuiControls=new fC,this.modelInstance.ajhGuiControls.populateGUI(),this.modelInstance.instruments.playAChord(2),this.modelInstance.gui.show()})}onPointerMove(e){this.pointer.x=e.clientX/window.innerWidth*2-1,this.pointer.y=-(e.clientY/window.innerHeight)*2+1,console.log("BUTTON PARENT : "+this.enterButton.parent),this.enterButtonClicked?this.enterButton.layers.disable(1):this.enterButton.parent==null?(this.body.add(this.enterButton),this.enterButton.layers.enable(1)):this.enterButton.layers.enable(1)}disposeOfEnterButton(){this.enterButton.geometry.dispose(),this.enterButton.material.dispose(),this.modelInstance.renderer.renderLists.dispose()}zapBackground(){}raycastingEnterButton(){this.raycaster.setFromCamera(this.pointer,this.modelInstance.camera);let e=this.raycaster.intersectObjects(this.selectableItems,!1);if(this.INTERSECTED==null&&console.log("INTERSECTED????"),e.length>0)if(this.INTERSECTED!=e[0].object){this.INTERSECTED&&console.log("INTERSECTED????"),this.INTERSECTED!=e[0].object,this.INTERSECTED=e[0].object;for(let t=0;t<e.length;t++)this.enterButtonIsTouched=!0,console.log("FOUND BUTTON!!!"),this.enterButtonIsTouched?e[t].object.material.color.set(16711680):e[t].object.material.color.set(255)}else this.INTERSECTED&&console.log("STILL TOUCHING SOMETHING"),this.INTERSECTED=null}}function Nh(i){const e=n=>n.dispose(),t=n=>{n.geometry&&e(n.geometry),n.material&&Jf(n.material,e,e)};if(i instanceof ti||i instanceof Gt)return e(i);if(i instanceof ei)return Jf(i,e,e);t(i),i.traverse&&i.traverse(n=>t(n))}function Jf(i,e,t){const n=s=>{e&&e(s),t&&(Object.values(s).filter(r=>r instanceof Gt).forEach(r=>t(r)),s.uniforms&&Object.values(s.uniforms).filter(({value:r})=>r instanceof Gt).forEach(({value:r})=>t(r)))};Array.isArray(i)?i.forEach(s=>n(s)):n(i)}class yC{constructor(e=new xe(65280),t=new xe(65280),n=new xe(65280),s=new xe(65280)){A(this,"_baseColour");A(this,"_highlightColour");A(this,"_onColour");A(this,"_offColour");A(this,"_playingColour");A(this,"_inactiveColour");A(this,"_mutedColour");A(this,"_seedColours",[new xe(16776960),new xe(16711680),new xe(65280),new xe(255)]);this._baseColour=e,this.createHighLightColourFromBaseColour(),this._onColour=n,this._offColour=s,this._playingColour=this.generateColourFromBaseColour(this._baseColour,.6),this._inactiveColour=new xe(7368816)}createHighLightColourFromBaseColour(){let e=new Object;this._baseColour.getHSL(e),e.l=.55,this.highlightColour=new xe(267386880),this.highlightColour.setHSL(e.h,e.s,e.l)}generateColourFromBaseColour(e,t=.3){let n={h:0,s:0,l:0};e.getHSL(n);let s,r=new xe;return s=.003+t*.9597,r.setHSL(n.h,n.s,s),r}get offColour(){return this._offColour}get onColour(){return this._onColour}get highlightColour(){return this._highlightColour}get baseColour(){return this._baseColour}get playingColour(){return this._playingColour}get seedColours(){return this._seedColours}get inactiveColour(){return this._inactiveColour}get mutedColour(){return this._mutedColour}set mutedColour(e){this._mutedColour=e}set playingColour(e){this._playingColour=e}set offColour(e){this._offColour=e}set onColour(e){this._onColour=e}set baseColour(e){this._baseColour=e,this._highlightColour=this.generateColourFromBaseColour(this._baseColour,.2),this._offColour=this.generateColourFromBaseColour(this._baseColour,.1),this._onColour=this.generateColourFromBaseColour(this._baseColour,.4)}set highlightColour(e){this._highlightColour=e}set inactiveColour(e){this._inactiveColour=e}set seedColours(e){this._seedColours=e}}class vC{constructor(){A(this,"_PositionInKeyboard");A(this,"_Id");A(this,"_KeyboardInstance");A(this,"_Sonics");A(this,"_State");A(this,"_View");this.createAll()}get PositionInKeyboard(){return this._PositionInKeyboard}set PositionInKeyboard(e){this._PositionInKeyboard=e}get Id(){return this._Id}set Id(e){this._Id=e}get KeyboardInstance(){return this._KeyboardInstance}set KeyboardInstance(e){this._KeyboardInstance=e}get Sonics(){return this._Sonics}set Sonics(e){this._Sonics=e}get State(){return this._State}set State(e){this._State=e}get View(){return this._View}set View(e){this._View=e}createView(){this.View=new SC}createState(){this.State=new bC}createSonics(){this.Sonics=new xC}createAll(){this.createView(),this.createState(),this.createSonics()}setAllValueStates(e,t,n,s,r,a,o,c,l,h,u,f,m,g,_,p,d,x,y){let S=!1;try{this.Id=e,this.KeyboardInstance=t,this.PositionInKeyboard=n,this.State.IsRayTouched=s,this.State.IsPointerDown=r,this.State.IsPointerMove=a,this.State.IsPointerOut=o,this.View.ColId=c,this.View.RowId=l,this.View.Colours=h,this.View.Height=u,this.View.Width=f,this.View.Length=m,this.View.Position=g,this.View.ScreenPosition=_,this.Sonics.NoteName=p,this.Sonics.Octave=d,this.Sonics.IsSharpOrFlat=x,this.Sonics.IsPlaying=y,S=!0}catch(b){console.log("ERROR IN CREATING KeyData : "+b)}return S}}class xC{constructor(){A(this,"_IsSharpOrFlat");A(this,"_Octave");A(this,"_Synth");A(this,"_NoteName");A(this,"_IsPlaying")}get IsSharpOrFlat(){return this._IsSharpOrFlat}set IsSharpOrFlat(e){this._IsSharpOrFlat=e}get Octave(){return this._Octave}set Octave(e){this._Octave=e}get Synth(){return this._Synth}set Synth(e){this._Synth=e}get NoteName(){return this._NoteName}set NoteName(e){this._NoteName=e}get IsPlaying(){return this._IsPlaying}set IsPlaying(e){this._IsPlaying=e}setIsSharpOrFlat(e){this.IsSharpOrFlat=e}setAllKeySonicsValues(e,t,n,s,r){this.NoteName=e,this.Octave=t,this.IsSharpOrFlat=n,this.IsPlaying=s}setSynth(e){this.Synth=e}}class SC{constructor(){A(this,"_RowId");A(this,"_ColId");A(this,"_Width");A(this,"_Height");A(this,"_Length");A(this,"_IsSharpOrFlat");A(this,"_Colours");A(this,"_Id");A(this,"_Body");A(this,"_NoteName");A(this,"_Position");A(this,"_ScreenPosition");A(this,"_IsActive");A(this,"_IsRayTouched")}get RowId(){return this._RowId}set RowId(e){this._RowId=e}get ColId(){return this._ColId}set ColId(e){this._ColId=e}get Width(){return this._Width}set Width(e){this._Width=e}get Height(){return this._Height}set Height(e){this._Height=e}get Length(){return this._Length}set Length(e){this._Length=e}get IsSharpOrFlat(){return this._IsSharpOrFlat}set IsSharpOrFlat(e){this._IsSharpOrFlat=e}get Colours(){return this._Colours}set Colours(e){this._Colours=e}get Id(){return this._Id}set Id(e){this._Id=e}get Body(){return this._Body}set Body(e){this._Body=e}get NoteName(){return this._NoteName}set NoteName(e){this._NoteName=e}get Position(){return this._Position}set Position(e){this._Position=e}get ScreenPosition(){return this._ScreenPosition}set ScreenPosition(e){this._ScreenPosition=e}get IsActive(){return this._IsActive}set IsActive(e){this._IsActive=e}get IsRayTouched(){return this._IsRayTouched}set IsRayTouched(e){this._IsRayTouched=e}setIsRayTouched(e){this.IsRayTouched=e}setIsSelected(e){this.IsRayTouched=e}setIsActive(e){this.IsActive=e}setIsSharpOrFlat(e){this.IsSharpOrFlat=e}setAllKeyViewValues(e,t,n,s,r,a,o,c,l,h,u){this.IsActive=e,this.ColId=s,this.Colours=a,this.Height=o,this.IsActive=e,this.IsRayTouched=t,this.IsSharpOrFlat=n,this.Length=l,this.Position=h,this.RowId=r,this.ScreenPosition=u,this.Width=c}}class bC{constructor(){A(this,"_PointerRayIds",new Array);A(this,"_IsPointerDown");A(this,"_IsPointerMove");A(this,"_IsPointerOut");A(this,"_IsPlaying");A(this,"_IsActive");A(this,"_IsRayTouched")}get PointerRayIds(){return this._PointerRayIds}set PointerRayIds(e){this._PointerRayIds=e}get IsPointerDown(){return this._IsPointerDown}set IsPointerDown(e){this._IsPointerDown=e}get IsPointerMove(){return this._IsPointerMove}set IsPointerMove(e){this._IsPointerMove=e}get IsPointerOut(){return this._IsPointerOut}set IsPointerOut(e){this._IsPointerOut=e}get IsPlaying(){return this._IsPlaying}set IsPlaying(e){this._IsPlaying=e}get IsActive(){return this._IsActive}set IsActive(e){this._IsActive=e}get IsRayTouched(){return this._IsRayTouched}set IsRayTouched(e){this._IsRayTouched=e}setIsPlaying(e){this.IsPlaying=e}setIsActive(e){this.IsActive=e}setIsRayTouched(e){this.IsRayTouched=e}setIsPointerDown(e){this.IsPointerDown=e}setIsPointerMove(e){this.IsPointerMove=e}setIsPointerOut(e){this.IsPointerOut=e}setAllKeyStateValues(e,t,n,s,r){this.IsActive=e,this.IsRayTouched=t,this.IsPointerDown=n,this.IsPointerMove=s,this.IsPointerOut=r}addPointerRayIdIfNotExisting(e,t=!1){let n=this.checkIfPointerRayExistsById(e,t);n==null&&this.PointerRayIds.push(e),console.log(" PointerRayChecks : adding if ray is registered :"+n)}getNumberOfPointerRays(){return this.PointerRayIds.length}checkIfPointerRayExistsById(e,t=!1){let n=null;for(let s=0;s<this.PointerRayIds.length;s++)this.PointerRayIds[s]==e&&(n=s);return t&&console.log("PointerRayChecks : checking if ray EXISTING ID: "+n),n}removePointerRayById(e,t=!1){let n,s=!1;t&&console.log("PointerRayChecks : removing ray ATTEMPT : NumberOfRegisteredPointerRays : "+this.PointerRayIds.length+" : "+e);for(let r=0;r<this.PointerRayIds.length;r++)this.PointerRayIds[r]==e&&(n=r);return n!=null&&(this.PointerRayIds.splice(n,1),s=!0,t&&console.log("PointerRayChecks : removing FOUND RAY: "+n+" : "+s)),t&&console.log(" PointerRayChecks : removing ray if ray is registered :"+n+" : "+s),s}}class MC{constructor(e){A(this,"keyInstance");this.keyInstance=e}onPointerDownListener(e,t,n){this.keyInstance.modelInstance.instruments&&this.keyInstance.KeyState.View.Body.uuid==n&&this.keyInstance.KeyState.View.Body.id==t&&(this.keyInstance.modelInstance.pointerDown=!0,this.keyInstance.KeyState.State.setIsPointerDown(!0),this.keyInstance.modelInstance.showMusicalKeyMessages&&console.log("POINTER DOWN: "+this.keyInstance.modelInstance.instruments.currentInstrument.name+" I am  key number "+this.keyInstance.KeyState.Id+", with a pitch of "+this.keyInstance.KeyState.Sonics.NoteName+" and i heard that my identifier: "+this.keyInstance.KeyState.View.Body.uuid+"was compared to:"+n+" and I was FOUND!!.."))}onPointerUpListener(e,t,n){this.keyInstance.modelInstance.instruments&&this.keyInstance.KeyState.View.Body.uuid==n&&(this.keyInstance.KeyState.State.setIsPointerDown(!0),this.keyInstance.highlightKey(!1),this.keyInstance.modelInstance.showMusicalKeyMessages&&console.log("POINTER UP :: I am  key number "+this.keyInstance.KeyState.Id+", with a pitch of "+this.keyInstance.KeyState.Sonics.NoteName+" and i heard that my identifier: "+this.keyInstance.KeyState.View.Body.uuid+"was compared to:"+n+" and i am trigging a NOTE RELEASE"),this.keyInstance.modelInstance.instruments.stopToPlayANote(this.keyInstance.KeyState.Sonics.NoteName+this.keyInstance.KeyState.Sonics.Octave.toString()),this.keyInstance.KeyState.Sonics.IsPlaying=!1,this.keyInstance.KeyState.State.setIsPointerDown(!1))}onPointerLeaveListener(e,t,n){this.keyInstance.modelInstance.instruments&&(this.keyInstance.KeyState.Sonics.IsPlaying&&(this.keyInstance.modelInstance.instruments&&this.keyInstance.modelInstance.instruments.stopToPlayANote(this.keyInstance.KeyState.Sonics.NoteName+this.keyInstance.KeyState.Sonics.Octave.toString()),this.keyInstance.KeyState.Sonics.IsPlaying=!1,this.keyInstance.highlightKey(!1)),this.keyInstance.KeyState.View.Body.uuid==n)}isRayTouchedListener(e,t,n,s){this.keyInstance.KeyState.View.Body.uuid==s&&this.keyInstance.KeyState.View.Body.id==n?(this.keyInstance.KeyState.State.IsRayTouched=!0,this.keyInstance.KeyState.State.addPointerRayIdIfNotExisting(t,!0),this.keyInstance.modelInstance.showMusicalKeyMessages&&console.log(this.keyInstance.KeyState.Sonics.NoteName+this.keyInstance.KeyState.Sonics.Octave+" KEY IS Intersected by ray id : "+t+" added to KEY:PointerRays if not already registered "),console.log(" KEY IS Intersected by ray id :getNumberOfPointerRays: "+this.keyInstance.KeyState.State.getNumberOfPointerRays()),this.keyInstance.KeyState.State.IsPointerDown&&(this.keyInstance.highlightKey(!0),this.keyInstance.KeyState.Sonics.IsPlaying||this.keyInstance.modelInstance.instruments.startToPlayANote(this.keyInstance.KeyState.Sonics.NoteName+this.keyInstance.KeyState.Sonics.Octave.toString()))):(this.keyInstance.KeyState.State.removePointerRayById(t,!0),this.keyInstance.modelInstance.pointerDown&&(this.keyInstance.highlightKey(!1),this.keyInstance.KeyState.State.IsPointerDown=!1,this.keyInstance.KeyState.State.IsPointerDown&&this.keyInstance.KeyState.Sonics.IsPlaying&&(this.keyInstance.modelInstance.instruments&&(this.keyInstance.KeyState.Sonics.IsPlaying=!0,this.keyInstance.modelInstance.instruments.stopToPlayANote(this.keyInstance.KeyState.Sonics.NoteName+this.keyInstance.KeyState.Sonics.Octave.toString())),this.keyInstance.KeyState.State.setIsPointerDown(!1),this.keyInstance.KeyState.Sonics.IsPlaying=!1)))}}class wC{constructor(e,t,n,s,r,a,o,c,l,h,u){A(this,"_State",new vC);A(this,"KeyHandlers");A(this,"_baseColor");A(this,"darkMaterial",new Fs({color:"#263F8F"}));A(this,"lightMaterial",new Fs({color:"#6BE767"}));A(this,"darkOnMaterial",new Fs({color:"#DDA960"}));A(this,"lighOntMaterial",new Fs({color:"#F4DA93"}));A(this,"_isBlackKey",!1);A(this,"_note");A(this,"_id");A(this,"_positionInKeyboardArray");A(this,"_filter");A(this,"_body");A(this,"_frequency");A(this,"_voice");A(this,"_rowId");A(this,"_colId");A(this,"_muted");A(this,"_modelInstance",Nn.Instance);A(this,"_colours");A(this,"_keyWidth");A(this,"_keyHeight");A(this,"_keyLength");this.KeyState.createAll(),this.KeyState.setAllValueStates(e,h,u,!1,!1,!1,!1,n,t,new yC,r,s,a,new k,new Me,c,l,o,!1),this.KeyHandlers=new MC(this),this.createKeyBody(),this.changeKeySizeToFitScreenSize(),this.addListeners()}get KeyState(){return this._State}set KeyState(e){this._State=e}get baseColor(){return this._baseColor}set baseColor(e){this._baseColor=e}createKeyBody(){this.KeyState.Sonics.IsSharpOrFlat?(this.KeyState.View.Body=new un(this.modelInstance.geometries.keyGeometry,this.darkMaterial),this.KeyState.View.Colours.baseColour=this.darkMaterial.color,this.KeyState.View.Colours.createHighLightColourFromBaseColour()):(this.KeyState.View.Body=new un(this.modelInstance.geometries.keyGeometry,this.lightMaterial),this.KeyState.View.Colours.baseColour=this.lightMaterial.color,this.KeyState.View.Colours.createHighLightColourFromBaseColour()),this.KeyState.View.Body.castShadow=!0;let e=this.KeyState.View.Body.material;this.modelInstance.useSpectrumColours&&(e.color=this.modelInstance.colours.spectrumArray[this.KeyState.View.ColId%12],e.needsUpdate=!0,this.KeyState.View.Colours.baseColour=this.modelInstance.colours.spectrumArray[this.KeyState.View.ColId%12],this.KeyState.View.Colours.createHighLightColourFromBaseColour()),e.needsUpdate=!0,this.KeyState.View.Body.position.y=.5}disposeOfKeyBody(){Nh(this.KeyState.View.Body),this._modelInstance.renderer.renderLists.dispose()}changeKeySizeToFitScreenSize(){let e=this.modelInstance.getCameraViewSizeXY();this.changeKeyLengthToFitScreenHeight(e.y),this.changeKeyWidthToFitScreenWidth(e.x)}changeKeyLengthToFitScreenHeight(e){this.KeyState.View.Length=e/this.KeyState.KeyboardInstance.numberOfRows,this.KeyState.View.Body.geometry.dispose(),this.KeyState.View.Body.geometry=new $c(this.KeyState.View.Width,this.KeyState.View.Height,this.KeyState.View.Length,7,.05)}changeKeyWidthToFitScreenWidth(e){this.KeyState.View.Width=e/this.KeyState.KeyboardInstance.numberOfColumns,this.KeyState.View.Body.geometry.dispose(),this.KeyState.View.Body.geometry=new $c(this.KeyState.View.Width,this.KeyState.View.Height,this.KeyState.View.Length,7,.05)}addListeners(){this._modelInstance.musicalKeyEventEmitter.on("touchedByRay",this.KeyHandlers.isRayTouchedListener.bind(this.KeyHandlers)),this._modelInstance.musicalKeyEventEmitter.on("onPointerUp",this.KeyHandlers.onPointerUpListener.bind(this.KeyHandlers)),this._modelInstance.musicalKeyEventEmitter.on("onPointerDown",this.KeyHandlers.onPointerDownListener.bind(this.KeyHandlers)),this._modelInstance.musicalKeyEventEmitter.on("onPointerLeave",this.KeyHandlers.onPointerLeaveListener.bind(this.KeyHandlers))}setKeyInstanceScale(e){}setKeyColour(e){this.KeyState.View.Body.material.color=e}highlightKey(e){const n=this.KeyState.View.Body.material;e==!0?(this.modelInstance.showColourMessages&&console.log("HIGHLIGHT : KEY : "+this.KeyState.Id),n.color=this.KeyState.View.Colours.highlightColour,n.needsUpdate=!0):(n.color=this.KeyState.View.Colours.baseColour,n.needsUpdate=!0)}selectedListener(e,t){this.KeyState.State.IsRayTouched&&console.log("key selected:"+e),this._body.id===t&&(this.modelInstance.showMusicalKeyMessages&&console.log("I am  key number "+this._id+", at position "+this._id+" and i heard that it is "+e+" that i was Selected!"),this.modelInstance.musicalKeyEventEmitter.emit("toggle",this,this._id,0,0,0))}repaintBody(){console.log("REPAINTING MY BODY : "+this.KeyState.Id);let e=this.KeyState.View.Body.material;this.KeyState.Sonics.IsSharpOrFlat?this.modelInstance.useSpectrumColours?(e.color=this.modelInstance.colours.spectrumArray[this.KeyState.View.ColId%12],e.needsUpdate=!0):e.color=new xe("#462C07"):this.modelInstance.useSpectrumColours?(e.color=this.modelInstance.colours.spectrumArray[this.KeyState.View.ColId%12],e.needsUpdate=!0):e.color=new xe("#f69f1f"),this.KeyState.View.Colours.baseColour=e.color,this.KeyState.View.Colours.createHighLightColourFromBaseColour()}get isBlackKey(){return this._isBlackKey}set isBlackKey(e){this._isBlackKey=e}get id(){return this._id}get filter(){return this._filter}get positionInKeyboardArray(){return this._positionInKeyboardArray}get body(){return this._body}get frequency(){return this._frequency}get voice(){return this._voice}get modelInstance(){return this._modelInstance}get colours(){return this.KeyState.View.Colours}get touched(){return this.KeyState.State.IsRayTouched}get note(){return this._note}set note(e){this._note=e}set positionInKeyboardArray(e){this._positionInKeyboardArray=e}set id(e){this._id=e,this.modelInstance.showMusicalKeyMessages&&console.log("I have set my id to: "+this._id)}set filter(e){this._filter=e}set body(e){this._body=e}set frequency(e){this._frequency=e}set voice(e){this._voice=e}set modelInstance(e){this._modelInstance=e}set isOn(e){this.KeyState.State.IsActive=e,this.KeyState.State.IsActive&&(this.modelInstance.showMusicalKeyMessages&&console.log("I am  key number "+this._id+", and it is now "+this.KeyState.State.IsActive+" that I am on,so I switched myself on"),this._muted),this.KeyState.State.IsActive||(this.modelInstance.showMusicalKeyMessages&&console.log("I am  key number "+this._id+" of Euclidean Ring  and it is now "+this.KeyState.State.IsActive+" that I am on,so I switched myself off"),this._muted)}get rowId(){return this._rowId}set rowId(e){this._rowId=e}get colId(){return this._colId}set colId(e){this._colId=e}get muted(){return this._muted}set muted(e){this._muted=e,this.setKeyColour(this.KeyState.View.Colours.inactiveColour)}get keyWidth(){return this._keyWidth}set keyWidth(e){this._keyWidth=e}get keyHeight(){return this._keyHeight}set keyHeight(e){this._keyHeight=e}get keyLength(){return this._keyLength}set keyLength(e){this._keyLength=e}set colours(e){this.KeyState.View.Colours=e}set touched(e){this.KeyState.State.IsRayTouched=e}}class TC{constructor(e=1,t=12,n="pianogrid",s,r=0,a=3){A(this,"_id");A(this,"_scaleType");A(this,"_semitoneOffset");A(this,"_modelInstance");A(this,"_spaceBetweenRows",3);A(this,"_spaceBetweenKeys");A(this,"_keys",new Array);A(this,"_keyRows",new Array);A(this,"_numberOfRows");A(this,"_numberOfColumns");A(this,"_divisor");A(this,"_voice");A(this,"_octaveToStartFrom");A(this,"KeysetTypeDefinitions",new og);A(this,"_KeyBoardNoteNames",new Array);A(this,"_keysetTypeInstance");this._modelInstance=Nn.Instance,this.numberOfRows=e,this.numberOfColumns=t,this.octaveToStartFrom=a,this.semitoneOffset=r,this.spaceBetweenKeys=0,this.spaceBetweenRows=0,this.scaleType=s,this.divisor=100,this.KeyBoardTypeInstance=n,this.routeToCorrectFunctionsForKeySetType()}get id(){return this._id}set id(e){this._id=e}get scaleType(){return this._scaleType}set scaleType(e){this._scaleType=e}get semitoneOffset(){return this._semitoneOffset}set semitoneOffset(e){this._semitoneOffset=e}get modelInstance(){return this._modelInstance}set modelInstance(e){this._modelInstance=e}get spaceBetweenRows(){return this._spaceBetweenRows}set spaceBetweenRows(e){this._spaceBetweenRows=e}get spaceBetweenKeys(){return this._spaceBetweenKeys}set spaceBetweenKeys(e){this._spaceBetweenKeys=e}get keys(){return this._keys}set keys(e){this._keys=e}get keyRows(){return this._keyRows}set keyRows(e){this._keyRows=e}get numberOfRows(){return this._numberOfRows}set numberOfRows(e){this._numberOfRows=e}get numberOfColumns(){return this._numberOfColumns}set numberOfColumns(e){this._numberOfColumns=e}get divisor(){return this._divisor}set divisor(e){this._divisor=e}get voice(){return this._voice}set voice(e){this._voice=e}get octaveToStartFrom(){return this._octaveToStartFrom}set octaveToStartFrom(e){this._octaveToStartFrom=e}get KeyBoardNoteNames(){return this._KeyBoardNoteNames}set KeyBoardNoteNames(e){this._KeyBoardNoteNames=e}get KeyBoardTypeInstance(){return this._keysetTypeInstance}set KeyBoardTypeInstance(e){this._keysetTypeInstance=e}setThisToCurrentKeyboard(){this.modelInstance.currentKeyBoard=this}routeToCorrectFunctionsForKeySetType(){switch(this.KeyBoardTypeInstance){case this.KeysetTypeDefinitions.HorizontalKeys:this.createKeys(this.KeysetTypeDefinitions.HorizontalKeys,this.scaleType);break;case this.KeysetTypeDefinitions.VerticalKeys:this.createKeys(this.KeysetTypeDefinitions.VerticalKeys,this.scaleType);break;case this.KeysetTypeDefinitions.CirclesOfKeys:break;case this.KeysetTypeDefinitions.RandomlyPlacedKeys:break;case this.KeysetTypeDefinitions.Voronoi:break;case this.KeysetTypeDefinitions.EffectsXY:break}}createKeys(e,t){console.log("CREATING KEYS::"+t.name),this._keys&&this.destroyKeys(),this._keys=new Array;for(let n=0;n<this.numberOfRows;n++){this._keyRows[n];for(let s=0;s<this.numberOfColumns;s++){this._keys[s];let r=!1;t.scale[s%t.scale.length].length==2&&(r=!0);let a=this.octaveToStartFrom+n+Math.floor(s/t.scale.length),o=window.innerWidth/this.numberOfColumns-window.innerWidth/this.numberOfColumns/this.numberOfColumns;this._keys.push(new wC(n*this.numberOfColumns+s,n,s,window.innerWidth/this.numberOfColumns/this.modelInstance.camera.position.y,.5,o/this.modelInstance.camera.position.y,r,t.scale[s%t.scale.length],a,this,this.keys.length-1)),console.log("KEY NOTE:: "+this.modelInstance.ScalesCreation.noteNamesOneOctave[s%12]+Math.round(a+s/12).toString())}}this.modelInstance.keyBodies=this.getKeyBodies(),this.positionKeys(),this.addKeysToScene(this.modelInstance.scene)}positionKeys(){let e=this.modelInstance.getCameraViewSizeXY(),t=e.x/2;for(let n=0;n<this.keys.length;n++){const s=this.keys[n];s.KeyState.View.Body.position.x=s.KeyState.View.ColId*(s.KeyState.View.Width+this.spaceBetweenKeys)-t+s.KeyState.View.Width/2;let r=-e.y/this.numberOfRows;s.KeyState.View.Body.position.z=0,-(s.KeyState.View.RowId*(s.KeyState.View.Height*this.numberOfRows))+s.KeyState.View.Height*(this.numberOfRows/2)-r}}addKeysToScene(e){for(let t=0;t<this.getKeyBodies().length;t++){const n=this.getKeyBodies()[t];e.add(n)}}changeKeyWidthsAndLengthsToFitScreenSize(){for(let e=0;e<this.keys.length;e++)this.keys[e].changeKeySizeToFitScreenSize();this.positionKeys()}repaintKeyBodies(){for(let e=0;e<this.keys.length;e++)this.keys[e].repaintBody()}getKeyBodies(){let e=new Array;for(let t=0;t<this.keys.length;t++){const n=this.keys[t].KeyState.View.Body;e.push(n)}return e}getKeyBodyByUUID(e){let t=null;for(let n=0;n<this.keys.length;n++){const s=this.keys[n].KeyState.View.Body;s.uuid==e&&(t=s)}return t}getKeyByBodyUUID(e){let t=null;for(let n=0;n<this.keys.length;n++){const s=this.keys[n];s.KeyState.View.Body.uuid==e&&(t=s)}return t}getKeyBodyByID(e){let t=null;for(let n=0;n<this.keys.length;n++){const s=this.keys[n].KeyState.View.Body;s.id==e&&(t=s)}return t}destroyKeys(){for(let e=0;e<this._keys.length;e++){const t=this._keys[e];t.KeyState.View.Body.removeFromParent(),Nh(t.KeyState.View.Body)}this.keys=new Array}degrees_to_radians(e){return e*(Math.PI/180)}createPositionsOnCircle(e,t,n=new k){n=new k;let s=[],r=360/e;for(var a=0;a<e;a++){let l=new k,h=this.degrees_to_radians(r*a);var o=n.x+t*Math.cos(h),c=n.y+t*Math.sin(h);l.x=o*1,l.y=c*1,l.z=0,s.push(l)}return s}dispose(e){e!=null&&(Nh(e),this._modelInstance.renderer.renderLists.dispose())}}class EC{constructor(){A(this,"clock");A(this,"gu");A(this,"composer");A(this,"INTERSECTED");A(this,"_modelInstance",Nn.Instance);A(this,"width",window.innerWidth);A(this,"height",window.innerHeight);A(this,"enterScreen");A(this,"pointLight");A(this,"ambientLight");A(this,"light");A(this,"directionalLight");A(this,"ajhkeys");A(this,"fullscreenobject");A(this,"cube");A(this,"axesHelper");A(this,"pointLightHelper");A(this,"animation",{enabled:!0,play:!0});A(this,"stats")}get modelInstance(){return this._modelInstance}set modelInstance(e){this._modelInstance=e}init(e){this.addScene(),this.addCamera(),this.addRayCaster(),this.addStatsAndClock(),this.addLoadingManager(),this.addLights(),this.addHelpers(),this.addObjects(),this.addControls(),this._modelInstance.pointerEventsInstance=new dC,this.modelInstance.pointerEventsInstance.addAllListeners(this.modelInstance.canvas),this.addFullScreenAndResizeListeners(),this.animate()}addStatsAndClock(){this.modelInstance.clock=new gh,this.modelInstance.Stats=new Oo,this.modelInstance.Stats.showPanel(0)}addScene(){this.modelInstance=Nn.Instance;let e=this.modelInstance.canvas;this.modelInstance.renderer=new zp({canvas:e,antialias:!0,alpha:!0}),this.modelInstance.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.modelInstance.renderer.shadowMap.enabled=!0,this.modelInstance.renderer.shadowMap.type=np,this.modelInstance.scene=new AS}addCamera(){this.modelInstance.camera=new Cn(50,this.modelInstance.canvas.clientWidth/this.modelInstance.canvas.clientHeight,.1,1e4),this.modelInstance.camera.position.set(0,8,0)}addRayCaster(){this.modelInstance.raycaster=new nl}addLights(){this.light=new BS(16777215,4),this.light.position.set(0,-1,-1),this.modelInstance.scene.add(this.light,new lf(16777215,.5)),this.modelInstance.ambientLight=new lf("white",1.8),this.modelInstance.pointLights[0]=new kS("white",40,100),this.modelInstance.pointLights[0].position.set(-2,6,2),this.modelInstance.pointLights[0].castShadow=!0,this.modelInstance.pointLights[0].shadow.radius=4,this.modelInstance.pointLights[0].shadow.camera.near=.5,this.modelInstance.pointLights[0].shadow.camera.far=4e3,this.modelInstance.pointLights[0].shadow.mapSize.width=2048,this.modelInstance.pointLights[0].shadow.mapSize.height=2048,this.modelInstance.scene.add(this.modelInstance.ambientLight),this.modelInstance.scene.add(this.modelInstance.pointLights[0])}addFullScreenAndResizeListeners(){window.addEventListener("resize",this.onWindowResizeHandler.bind(this)),this.addFullScreenToggleOnDoubleClick()}animate(){requestAnimationFrame(this.animate.bind(this)),this.modelInstance.Stats.update(),this.enterScreen.enterButtonClicked||this.enterScreen.raycastingEnterButton(),this.modelInstance.raycasters.setAllRaycastersToCamera(),this.resizeRendererToDisplaySize(this.modelInstance.renderer)&&(this.modelInstance.camera.aspect=this.modelInstance.canvas.clientWidth/this.modelInstance.canvas.clientHeight,this.modelInstance.camera.updateProjectionMatrix()),this.enterScreen.rotateButton(),this.modelInstance.cameraOrbitControls.update(),this.modelInstance.renderer.render(this.modelInstance.scene,this.modelInstance.camera)}startRenderLoop(){this.modelInstance.renderer.setAnimationLoop(()=>{this.renderLoop()})}renderLoop(){let e=this.clock.getElapsedTime();this.gu.time.value=e,this.modelInstance.cameraOrbitControls.update(),this.modelInstance.raycasters.setAllRaycastersToCamera(),this.modelInstance.Stats.update(),this.animation.enabled&&this.animation.play,this.resizeRendererToDisplaySize(this.modelInstance.renderer)&&(this.modelInstance.camera.aspect=this.modelInstance.canvas.clientWidth/this.modelInstance.canvas.clientHeight,this.modelInstance.camera.updateProjectionMatrix()),this.modelInstance.renderer.render(this.modelInstance.scene,this.modelInstance.camera)}onWindowResizeHandler(e){console.log("WINDOW RESIZE::"+e);const t=window.innerWidth,n=window.innerHeight;this.modelInstance.renderer.setSize(t,n),this.modelInstance.infoScreen.setInformationWindowPosition(),this.modelInstance.infoScreen.fullscreenobject.resizeToScreenSize(),this.modelInstance.fullScreenObject.resizeToScreenSize(),this.modelInstance.currentKeyBoard.changeKeyWidthsAndLengthsToFitScreenSize(),this.modelInstance.camera.aspect=t/n,this.modelInstance.camera.updateProjectionMatrix()}onPointerMove(e){this.modelInstance.mouseCoordinates.x=e.clientX/window.innerWidth*2-1,this.modelInstance.mouseCoordinates.y=-(e.clientY/window.innerHeight)*2+1,this.modelInstance.pointer.x=e.clientX/window.innerWidth*2-1,this.modelInstance.pointer.y=-(e.clientY/window.innerHeight)*2+1}resizeRendererToDisplaySize(e){const t=e.domElement,n=t.clientWidth,s=t.clientHeight,r=t.width!==n||t.height!==s;return r&&e.setSize(n,s,!1),r}renderComposition(){if(this.resizeRendererToDisplaySize(this.modelInstance.renderer)){const e=this.modelInstance.renderer.domElement;this.modelInstance.camera.aspect=e.clientWidth/e.clientHeight,this.modelInstance.camera.updateProjectionMatrix()}performance.now(),this.modelInstance.composer.render()}addLoadingManager(){this.modelInstance.loadingManager=new OS,this.modelInstance.loadingManager.onStart=()=>{console.log("loading started")},this.modelInstance.loadingManager.onProgress=(e,t,n)=>{console.log("loading in progress:"),console.log(`${e} -> ${t} / ${n}`)},this.modelInstance.loadingManager.onLoad=()=>{console.log("loaded!")},this.modelInstance.loadingManager.onError=()=>{console.log("❌ error while loading")}}fitToScreen(e){const t=new ms;t.makeEmpty(),this.modelInstance.camera.fov*Math.PI/180,t.setFromObject(e).max.y}fitCameraToSelection(e,t,n,s=1){const r=new k,a=new k,o=new ms;o.makeEmpty();for(const m of n)o.expandByObject(m);o.getSize(r),o.getCenter(a);const l=Math.max(r.x,r.y,r.z)/(2*Math.atan(Math.PI*e.fov/360)),h=l/e.aspect,u=s*Math.max(l,h),f=t.target.clone().sub(e.position).normalize().multiplyScalar(u);t.target.copy(a),e.near=u/100,e.far=u*100,e.updateProjectionMatrix(),e.position.copy(t.target).sub(f),t.update()}addObjects(){this.ajhkeys=new TC(1,12,this.modelInstance.keyboardTypes.HorizontalKeys,this.modelInstance.scaleTypes.HarmonicicMinor,0,3),this.modelInstance.currentKeyBoard=this.ajhkeys,this.enterScreen=new _C,this.modelInstance.scene.add(this.enterScreen.body),this.ajhkeys.addKeysToScene(this.modelInstance.scene),this.modelInstance.fullScreenObject=new cg(1,1),this.modelInstance.fullScreenObject.resizeToScreenSize(),this.modelInstance.scene.add(this.modelInstance.fullScreenObject.body)}addControls(){this.modelInstance.cameraOrbitControls=new Q1(this.modelInstance.camera,this.modelInstance.canvas),this.modelInstance.cameraOrbitControls.target=new k,this.modelInstance.cameraOrbitControls.enableDamping=!0,this.modelInstance.cameraOrbitControls.autoRotate=!1,this.modelInstance.cameraOrbitControls.update(),this.modelInstance.toggleOrbitCameraEnabled(!1)}addDragControls(e=!0){e&&(this.modelInstance.dragControls=new hC(this.ajhkeys.getKeyBodies(),this.modelInstance.camera,this.modelInstance.renderer.domElement),this.modelInstance.dragControls.addEventListener("hoveron",t=>{console.log("hoveron"),t.object.material.emissive.set("orange")}),this.modelInstance.dragControls.addEventListener("hoveroff",t=>{const n=t.object;n.material.emissive.set("black"),this.modelInstance.pointLight.position.x=n.position.x=this.modelInstance.pointer.x,this.modelInstance.pointLight.position.z=n.position.z=this.modelInstance.pointer.y,console.log("hoveroff")}),this.modelInstance.dragControls.addEventListener("dragstart",t=>{console.log("dragstart");const s=t.object.material;this.modelInstance.cameraOrbitControls.enabled=!1,this.animation.play=!1,s.emissive.set("black"),s.opacity=.8,s.needsUpdate=!0}),this.modelInstance.dragControls.addEventListener("dragend",t=>{console.log("dragend"),this.modelInstance.cameraOrbitControls.enabled=!0,this.animation.play=!0;const s=t.object.material;s.emissive.set("black"),s.opacity=1,s.needsUpdate=!0}),this.modelInstance.dragControls.enabled=!0)}addHelpers(){}addComposerPass(){this.gu={time:{value:0}},this.clock=new gh,this.modelInstance.composer=new sC(this.modelInstance.renderer);const e=new aC(this.modelInstance.scene,this.modelInstance.camera);this.modelInstance.composer.addPass(e);const t=new is(this.modelInstance.scene,this.modelInstance.camera,this.width,this.height);this.modelInstance.composer.addPass(t);const n=new oC;this.modelInstance.composer.addPass(n)}addFullScreenToggleOnDoubleClick(){window.addEventListener("dblclick",e=>{e.target===this.modelInstance.canvas&&lC(this.modelInstance.canvas)})}}let ep=Nn.Instance,AC=new EC;const CC="scene";RC();function RC(){ep.canvas=document.querySelector(`canvas#${CC}`),AC.init(ep.canvas)}
