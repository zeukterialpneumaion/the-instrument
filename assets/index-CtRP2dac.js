var qm=Object.defineProperty;var jm=(i,t,e)=>t in i?qm(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var w=(i,t,e)=>(jm(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))n(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function n(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Eh="162",Ks={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ys={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Xm=0,Eu=1,Km=2,Gf=1,Wf=2,Ai=3,cs=0,un=1,si=2,is=0,Sr=1,$l=2,Au=3,Cu=4,Ym=5,As=100,$m=101,Zm=102,Iu=103,Ru=104,Qm=200,Jm=201,tg=202,eg=203,Zl=204,Ql=205,ng=206,ig=207,sg=208,rg=209,og=210,ag=211,cg=212,lg=213,hg=214,ug=0,dg=1,fg=2,ka=3,pg=4,mg=5,gg=6,_g=7,Gc=0,yg=1,vg=2,ss=0,xg=1,Sg=2,bg=3,Mg=4,wg=5,Tg=6,Eg=7,Hf=300,Er=301,Ar=302,Jl=303,th=304,Wc=306,eh=1e3,Kn=1001,nh=1002,on=1003,Du=1004,yo=1005,pn=1006,ul=1007,Rs=1008,rs=1009,Ag=1010,Cg=1011,Ah=1012,qf=1013,ts=1014,Ri=1015,Do=1016,jf=1017,Xf=1018,Ds=1020,Ig=1021,Yn=1023,Rg=1024,Dg=1025,Ps=1026,Cr=1027,Pg=1028,Kf=1029,Lg=1030,Yf=1031,$f=1033,dl=33776,fl=33777,pl=33778,ml=33779,Pu=35840,Lu=35841,Ou=35842,Nu=35843,Zf=36196,Fu=37492,ku=37496,Uu=37808,Bu=37809,Vu=37810,zu=37811,Gu=37812,Wu=37813,Hu=37814,qu=37815,ju=37816,Xu=37817,Ku=37818,Yu=37819,$u=37820,Zu=37821,gl=36492,Qu=36494,Ju=36495,Og=36283,td=36284,ed=36285,nd=36286,Ng=3200,Fg=3201,eo=0,kg=1,Qi="",ni="srgb",fs="srgb-linear",Ch="display-p3",Hc="display-p3-linear",Ua="linear",fe="srgb",Ba="rec709",Va="p3",$s=7680,id=519,Ug=512,Bg=513,Vg=514,Qf=515,zg=516,Gg=517,Wg=518,Hg=519,sd=35044,rd="300 es",ih=1035,Pi=2e3,za=2001;class ps{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const n=this._listeners;return n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const n=this._listeners[t.type];if(n!==void 0){t.target=this;const s=n.slice(0);for(let r=0,a=s.length;r<a;r++)s[r].call(this,t);t.target=null}}}const Je=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let od=1234567;const Ao=Math.PI/180,Po=180/Math.PI;function no(){const i=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Je[i&255]+Je[i>>8&255]+Je[i>>16&255]+Je[i>>24&255]+"-"+Je[t&255]+Je[t>>8&255]+"-"+Je[t>>16&15|64]+Je[t>>24&255]+"-"+Je[e&63|128]+Je[e>>8&255]+"-"+Je[e>>16&255]+Je[e>>24&255]+Je[n&255]+Je[n>>8&255]+Je[n>>16&255]+Je[n>>24&255]).toLowerCase()}function qe(i,t,e){return Math.max(t,Math.min(e,i))}function Ih(i,t){return(i%t+t)%t}function qg(i,t,e,n,s){return n+(i-t)*(s-n)/(e-t)}function jg(i,t,e){return i!==t?(e-i)/(t-i):0}function Co(i,t,e){return(1-e)*i+e*t}function Xg(i,t,e,n){return Co(i,t,1-Math.exp(-e*n))}function Kg(i,t=1){return t-Math.abs(Ih(i,t*2)-t)}function Yg(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*(3-2*i))}function $g(i,t,e){return i<=t?0:i>=e?1:(i=(i-t)/(e-t),i*i*i*(i*(i*6-15)+10))}function Zg(i,t){return i+Math.floor(Math.random()*(t-i+1))}function Qg(i,t){return i+Math.random()*(t-i)}function Jg(i){return i*(.5-Math.random())}function t_(i){i!==void 0&&(od=i);let t=od+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function e_(i){return i*Ao}function n_(i){return i*Po}function sh(i){return(i&i-1)===0&&i!==0}function i_(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function Ga(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function s_(i,t,e,n,s){const r=Math.cos,a=Math.sin,o=r(e/2),c=a(e/2),l=r((t+n)/2),h=a((t+n)/2),u=r((t-n)/2),f=a((t-n)/2),m=r((n-t)/2),g=a((n-t)/2);switch(s){case"XYX":i.set(o*h,c*u,c*f,o*l);break;case"YZY":i.set(c*f,o*h,c*u,o*l);break;case"ZXZ":i.set(c*u,c*f,o*h,o*l);break;case"XZX":i.set(o*h,c*g,c*m,o*l);break;case"YXY":i.set(c*m,o*h,c*g,o*l);break;case"ZYZ":i.set(c*g,c*m,o*h,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+s)}}function pr(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function sn(i,t){switch(t.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const rh={DEG2RAD:Ao,RAD2DEG:Po,generateUUID:no,clamp:qe,euclideanModulo:Ih,mapLinear:qg,inverseLerp:jg,lerp:Co,damp:Xg,pingpong:Kg,smoothstep:Yg,smootherstep:$g,randInt:Zg,randFloat:Qg,randFloatSpread:Jg,seededRandom:t_,degToRad:e_,radToDeg:n_,isPowerOfTwo:sh,ceilPowerOfTwo:i_,floorPowerOfTwo:Ga,setQuaternionFromProperEuler:s_,normalize:sn,denormalize:pr};class bt{constructor(t=0,e=0){bt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6],this.y=s[1]*e+s[4]*n+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(qe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),s=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*n-a*s+t.x,this.y=r*s+a*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Zt{constructor(t,e,n,s,r,a,o,c,l){Zt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,s,r,a,o,c,l)}set(t,e,n,s,r,a,o,c,l){const h=this.elements;return h[0]=t,h[1]=s,h[2]=o,h[3]=e,h[4]=r,h[5]=c,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,a=n[0],o=n[3],c=n[6],l=n[1],h=n[4],u=n[7],f=n[2],m=n[5],g=n[8],_=s[0],p=s[3],d=s[6],y=s[1],v=s[4],S=s[7],b=s[2],E=s[5],M=s[8];return r[0]=a*_+o*y+c*b,r[3]=a*p+o*v+c*E,r[6]=a*d+o*S+c*M,r[1]=l*_+h*y+u*b,r[4]=l*p+h*v+u*E,r[7]=l*d+h*S+u*M,r[2]=f*_+m*y+g*b,r[5]=f*p+m*v+g*E,r[8]=f*d+m*S+g*M,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],a=t[4],o=t[5],c=t[6],l=t[7],h=t[8];return e*a*h-e*o*l-n*r*h+n*o*c+s*r*l-s*a*c}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],a=t[4],o=t[5],c=t[6],l=t[7],h=t[8],u=h*a-o*l,f=o*c-h*r,m=l*r-a*c,g=e*u+n*f+s*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/g;return t[0]=u*_,t[1]=(s*l-h*n)*_,t[2]=(o*n-s*a)*_,t[3]=f*_,t[4]=(h*e-s*c)*_,t[5]=(s*r-o*e)*_,t[6]=m*_,t[7]=(n*c-l*e)*_,t[8]=(a*e-n*r)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,s,r,a,o){const c=Math.cos(r),l=Math.sin(r);return this.set(n*c,n*l,-n*(c*a+l*o)+a+t,-s*l,s*c,-s*(-l*a+c*o)+o+e,0,0,1),this}scale(t,e){return this.premultiply(_l.makeScale(t,e)),this}rotate(t){return this.premultiply(_l.makeRotation(-t)),this}translate(t,e){return this.premultiply(_l.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<9;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const _l=new Zt;function Jf(i){for(let t=i.length-1;t>=0;--t)if(i[t]>=65535)return!0;return!1}function Lo(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function r_(){const i=Lo("canvas");return i.style.display="block",i}const ad={};function o_(i){i in ad||(ad[i]=!0,console.warn(i))}const cd=new Zt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),ld=new Zt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),ra={[fs]:{transfer:Ua,primaries:Ba,toReference:i=>i,fromReference:i=>i},[ni]:{transfer:fe,primaries:Ba,toReference:i=>i.convertSRGBToLinear(),fromReference:i=>i.convertLinearToSRGB()},[Hc]:{transfer:Ua,primaries:Va,toReference:i=>i.applyMatrix3(ld),fromReference:i=>i.applyMatrix3(cd)},[Ch]:{transfer:fe,primaries:Va,toReference:i=>i.convertSRGBToLinear().applyMatrix3(ld),fromReference:i=>i.applyMatrix3(cd).convertLinearToSRGB()}},a_=new Set([fs,Hc]),re={enabled:!0,_workingColorSpace:fs,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(i){if(!a_.has(i))throw new Error(`Unsupported working color space, "${i}".`);this._workingColorSpace=i},convert:function(i,t,e){if(this.enabled===!1||t===e||!t||!e)return i;const n=ra[t].toReference,s=ra[e].fromReference;return s(n(i))},fromWorkingColorSpace:function(i,t){return this.convert(i,this._workingColorSpace,t)},toWorkingColorSpace:function(i,t){return this.convert(i,t,this._workingColorSpace)},getPrimaries:function(i){return ra[i].primaries},getTransfer:function(i){return i===Qi?Ua:ra[i].transfer}};function br(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function yl(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let Zs;class tp{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Zs===void 0&&(Zs=Lo("canvas")),Zs.width=t.width,Zs.height=t.height;const n=Zs.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Zs}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Lo("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const s=n.getImageData(0,0,t.width,t.height),r=s.data;for(let a=0;a<r.length;a++)r[a]=br(r[a]/255)*255;return n.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(br(e[n]/255)*255):e[n]=br(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let c_=0,ep=class{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:c_++}),this.uuid=no(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?r.push(vl(s[a].image)):r.push(vl(s[a]))}else r=vl(s);n.url=r}return e||(t.images[this.uuid]=n),n}};function vl(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?tp.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let l_=0;class ze extends ps{constructor(t=ze.DEFAULT_IMAGE,e=ze.DEFAULT_MAPPING,n=Kn,s=Kn,r=pn,a=Rs,o=Yn,c=rs,l=ze.DEFAULT_ANISOTROPY,h=Qi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:l_++}),this.uuid=no(),this.name="",this.source=new ep(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=s,this.magFilter=r,this.minFilter=a,this.anisotropy=l,this.format=o,this.internalFormat=null,this.type=c,this.offset=new bt(0,0),this.repeat=new bt(1,1),this.center=new bt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Hf)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case eh:t.x=t.x-Math.floor(t.x);break;case Kn:t.x=t.x<0?0:1;break;case nh:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case eh:t.y=t.y-Math.floor(t.y);break;case Kn:t.y=t.y<0?0:1;break;case nh:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}}ze.DEFAULT_IMAGE=null;ze.DEFAULT_MAPPING=Hf;ze.DEFAULT_ANISOTROPY=1;class xe{constructor(t=0,e=0,n=0,s=1){xe.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,s){return this.x=t,this.y=e,this.z=n,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*n+a[8]*s+a[12]*r,this.y=a[1]*e+a[5]*n+a[9]*s+a[13]*r,this.z=a[2]*e+a[6]*n+a[10]*s+a[14]*r,this.w=a[3]*e+a[7]*n+a[11]*s+a[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,s,r;const c=t.elements,l=c[0],h=c[4],u=c[8],f=c[1],m=c[5],g=c[9],_=c[2],p=c[6],d=c[10];if(Math.abs(h-f)<.01&&Math.abs(u-_)<.01&&Math.abs(g-p)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+_)<.1&&Math.abs(g+p)<.1&&Math.abs(l+m+d-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const v=(l+1)/2,S=(m+1)/2,b=(d+1)/2,E=(h+f)/4,M=(u+_)/4,C=(g+p)/4;return v>S&&v>b?v<.01?(n=0,s=.707106781,r=.707106781):(n=Math.sqrt(v),s=E/n,r=M/n):S>b?S<.01?(n=.707106781,s=0,r=.707106781):(s=Math.sqrt(S),n=E/s,r=C/s):b<.01?(n=.707106781,s=.707106781,r=0):(r=Math.sqrt(b),n=M/r,s=C/r),this.set(n,s,r,e),this}let y=Math.sqrt((p-g)*(p-g)+(u-_)*(u-_)+(f-h)*(f-h));return Math.abs(y)<.001&&(y=1),this.x=(p-g)/y,this.y=(u-_)/y,this.z=(f-h)/y,this.w=Math.acos((l+m+d-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class h_ extends ps{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new xe(0,0,t,e),this.scissorTest=!1,this.viewport=new xe(0,0,t,e);const s={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:pn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},n);const r=new ze(s,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);r.flipY=!1,r.generateMipmaps=n.generateMipmaps,r.internalFormat=n.internalFormat,this.textures=[];const a=n.count;for(let o=0;o<a;o++)this.textures[o]=r.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=t,this.textures[s].image.height=e,this.textures[s].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let n=0,s=t.textures.length;n<s;n++)this.textures[n]=t.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new ep(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ls extends h_{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class np extends ze{constructor(t=null,e=1,n=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=on,this.minFilter=on,this.wrapR=Kn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class u_ extends ze{constructor(t=null,e=1,n=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:s},this.magFilter=on,this.minFilter=on,this.wrapR=Kn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Os{constructor(t=0,e=0,n=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=s}static slerpFlat(t,e,n,s,r,a,o){let c=n[s+0],l=n[s+1],h=n[s+2],u=n[s+3];const f=r[a+0],m=r[a+1],g=r[a+2],_=r[a+3];if(o===0){t[e+0]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u;return}if(o===1){t[e+0]=f,t[e+1]=m,t[e+2]=g,t[e+3]=_;return}if(u!==_||c!==f||l!==m||h!==g){let p=1-o;const d=c*f+l*m+h*g+u*_,y=d>=0?1:-1,v=1-d*d;if(v>Number.EPSILON){const b=Math.sqrt(v),E=Math.atan2(b,d*y);p=Math.sin(p*E)/b,o=Math.sin(o*E)/b}const S=o*y;if(c=c*p+f*S,l=l*p+m*S,h=h*p+g*S,u=u*p+_*S,p===1-o){const b=1/Math.sqrt(c*c+l*l+h*h+u*u);c*=b,l*=b,h*=b,u*=b}}t[e]=c,t[e+1]=l,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,s,r,a){const o=n[s],c=n[s+1],l=n[s+2],h=n[s+3],u=r[a],f=r[a+1],m=r[a+2],g=r[a+3];return t[e]=o*g+h*u+c*m-l*f,t[e+1]=c*g+h*f+l*u-o*m,t[e+2]=l*g+h*m+o*f-c*u,t[e+3]=h*g-o*u-c*f-l*m,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,s){return this._x=t,this._y=e,this._z=n,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,s=t._y,r=t._z,a=t._order,o=Math.cos,c=Math.sin,l=o(n/2),h=o(s/2),u=o(r/2),f=c(n/2),m=c(s/2),g=c(r/2);switch(a){case"XYZ":this._x=f*h*u+l*m*g,this._y=l*m*u-f*h*g,this._z=l*h*g+f*m*u,this._w=l*h*u-f*m*g;break;case"YXZ":this._x=f*h*u+l*m*g,this._y=l*m*u-f*h*g,this._z=l*h*g-f*m*u,this._w=l*h*u+f*m*g;break;case"ZXY":this._x=f*h*u-l*m*g,this._y=l*m*u+f*h*g,this._z=l*h*g+f*m*u,this._w=l*h*u-f*m*g;break;case"ZYX":this._x=f*h*u-l*m*g,this._y=l*m*u+f*h*g,this._z=l*h*g-f*m*u,this._w=l*h*u+f*m*g;break;case"YZX":this._x=f*h*u+l*m*g,this._y=l*m*u+f*h*g,this._z=l*h*g-f*m*u,this._w=l*h*u-f*m*g;break;case"XZY":this._x=f*h*u-l*m*g,this._y=l*m*u-f*h*g,this._z=l*h*g+f*m*u,this._w=l*h*u+f*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,s=Math.sin(n);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],s=e[4],r=e[8],a=e[1],o=e[5],c=e[9],l=e[2],h=e[6],u=e[10],f=n+o+u;if(f>0){const m=.5/Math.sqrt(f+1);this._w=.25/m,this._x=(h-c)*m,this._y=(r-l)*m,this._z=(a-s)*m}else if(n>o&&n>u){const m=2*Math.sqrt(1+n-o-u);this._w=(h-c)/m,this._x=.25*m,this._y=(s+a)/m,this._z=(r+l)/m}else if(o>u){const m=2*Math.sqrt(1+o-n-u);this._w=(r-l)/m,this._x=(s+a)/m,this._y=.25*m,this._z=(c+h)/m}else{const m=2*Math.sqrt(1+u-n-o);this._w=(a-s)/m,this._x=(r+l)/m,this._y=(c+h)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(qe(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const s=Math.min(1,e/n);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,s=t._y,r=t._z,a=t._w,o=e._x,c=e._y,l=e._z,h=e._w;return this._x=n*h+a*o+s*l-r*c,this._y=s*h+a*c+r*o-n*l,this._z=r*h+a*l+n*c-s*o,this._w=a*h-n*o-s*c-r*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,s=this._y,r=this._z,a=this._w;let o=a*t._w+n*t._x+s*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=n,this._y=s,this._z=r,this;const c=1-o*o;if(c<=Number.EPSILON){const m=1-e;return this._w=m*a+e*this._w,this._x=m*n+e*this._x,this._y=m*s+e*this._y,this._z=m*r+e*this._z,this.normalize(),this}const l=Math.sqrt(c),h=Math.atan2(l,o),u=Math.sin((1-e)*h)/l,f=Math.sin(e*h)/l;return this._w=a*u+this._w*f,this._x=n*u+this._x*f,this._y=s*u+this._y*f,this._z=r*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),s=Math.sqrt(1-n),r=Math.sqrt(n);return this.set(s*Math.sin(t),s*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class N{constructor(t=0,e=0,n=0){N.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(hd.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(hd.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6]*s,this.y=r[1]*e+r[4]*n+r[7]*s,this.z=r[2]*e+r[5]*n+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,s=this.z,r=t.elements,a=1/(r[3]*e+r[7]*n+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*n+r[8]*s+r[12])*a,this.y=(r[1]*e+r[5]*n+r[9]*s+r[13])*a,this.z=(r[2]*e+r[6]*n+r[10]*s+r[14])*a,this}applyQuaternion(t){const e=this.x,n=this.y,s=this.z,r=t.x,a=t.y,o=t.z,c=t.w,l=2*(a*s-o*n),h=2*(o*e-r*s),u=2*(r*n-a*e);return this.x=e+c*l+a*u-o*h,this.y=n+c*h+o*l-r*u,this.z=s+c*u+r*h-a*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*n+r[8]*s,this.y=r[1]*e+r[5]*n+r[9]*s,this.z=r[2]*e+r[6]*n+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,s=t.y,r=t.z,a=e.x,o=e.y,c=e.z;return this.x=s*c-r*o,this.y=r*a-n*c,this.z=n*o-s*a,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return xl.copy(this).projectOnVector(t),this.sub(xl)}reflect(t){return this.sub(xl.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(qe(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,s=this.z-t.z;return e*e+n*n+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const s=Math.sin(e)*t;return this.x=s*Math.sin(n),this.y=Math.cos(e)*t,this.z=s*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const xl=new N,hd=new Os;class ls{constructor(t=new N(1/0,1/0,1/0),e=new N(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(Wn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(Wn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Wn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const r=n.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let a=0,o=r.count;a<o;a++)t.isMesh===!0?t.getVertexPosition(a,Wn):Wn.fromBufferAttribute(r,a),Wn.applyMatrix4(t.matrixWorld),this.expandByPoint(Wn);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),oa.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),oa.copy(n.boundingBox)),oa.applyMatrix4(t.matrixWorld),this.union(oa)}const s=t.children;for(let r=0,a=s.length;r<a;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Wn),Wn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(vo),aa.subVectors(this.max,vo),Qs.subVectors(t.a,vo),Js.subVectors(t.b,vo),tr.subVectors(t.c,vo),Gi.subVectors(Js,Qs),Wi.subVectors(tr,Js),xs.subVectors(Qs,tr);let e=[0,-Gi.z,Gi.y,0,-Wi.z,Wi.y,0,-xs.z,xs.y,Gi.z,0,-Gi.x,Wi.z,0,-Wi.x,xs.z,0,-xs.x,-Gi.y,Gi.x,0,-Wi.y,Wi.x,0,-xs.y,xs.x,0];return!Sl(e,Qs,Js,tr,aa)||(e=[1,0,0,0,1,0,0,0,1],!Sl(e,Qs,Js,tr,aa))?!1:(ca.crossVectors(Gi,Wi),e=[ca.x,ca.y,ca.z],Sl(e,Qs,Js,tr,aa))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Wn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Wn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(xi[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),xi[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),xi[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),xi[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),xi[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),xi[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),xi[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),xi[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(xi),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const xi=[new N,new N,new N,new N,new N,new N,new N,new N],Wn=new N,oa=new ls,Qs=new N,Js=new N,tr=new N,Gi=new N,Wi=new N,xs=new N,vo=new N,aa=new N,ca=new N,Ss=new N;function Sl(i,t,e,n,s){for(let r=0,a=i.length-3;r<=a;r+=3){Ss.fromArray(i,r);const o=s.x*Math.abs(Ss.x)+s.y*Math.abs(Ss.y)+s.z*Math.abs(Ss.z),c=t.dot(Ss),l=e.dot(Ss),h=n.dot(Ss);if(Math.max(-Math.max(c,l,h),Math.min(c,l,h))>o)return!1}return!0}const d_=new ls,xo=new N,bl=new N;class Rh{constructor(t=new N,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):d_.setFromPoints(t).getCenter(n);let s=0;for(let r=0,a=t.length;r<a;r++)s=Math.max(s,n.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;xo.subVectors(t,this.center);const e=xo.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),s=(n-this.radius)*.5;this.center.addScaledVector(xo,s/n),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(bl.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(xo.copy(t.center).add(bl)),this.expandByPoint(xo.copy(t.center).sub(bl))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Si=new N,Ml=new N,la=new N,Hi=new N,wl=new N,ha=new N,Tl=new N;class Dh{constructor(t=new N,e=new N(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Si)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Si.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Si.copy(this.origin).addScaledVector(this.direction,e),Si.distanceToSquared(t))}distanceSqToSegment(t,e,n,s){Ml.copy(t).add(e).multiplyScalar(.5),la.copy(e).sub(t).normalize(),Hi.copy(this.origin).sub(Ml);const r=t.distanceTo(e)*.5,a=-this.direction.dot(la),o=Hi.dot(this.direction),c=-Hi.dot(la),l=Hi.lengthSq(),h=Math.abs(1-a*a);let u,f,m,g;if(h>0)if(u=a*c-o,f=a*o-c,g=r*h,u>=0)if(f>=-g)if(f<=g){const _=1/h;u*=_,f*=_,m=u*(u+a*f+2*o)+f*(a*u+f+2*c)+l}else f=r,u=Math.max(0,-(a*f+o)),m=-u*u+f*(f+2*c)+l;else f=-r,u=Math.max(0,-(a*f+o)),m=-u*u+f*(f+2*c)+l;else f<=-g?(u=Math.max(0,-(-a*r+o)),f=u>0?-r:Math.min(Math.max(-r,-c),r),m=-u*u+f*(f+2*c)+l):f<=g?(u=0,f=Math.min(Math.max(-r,-c),r),m=f*(f+2*c)+l):(u=Math.max(0,-(a*r+o)),f=u>0?r:Math.min(Math.max(-r,-c),r),m=-u*u+f*(f+2*c)+l);else f=a>0?-r:r,u=Math.max(0,-(a*f+o)),m=-u*u+f*(f+2*c)+l;return n&&n.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(Ml).addScaledVector(la,f),m}intersectSphere(t,e){Si.subVectors(t.center,this.origin);const n=Si.dot(this.direction),s=Si.dot(Si)-n*n,r=t.radius*t.radius;if(s>r)return null;const a=Math.sqrt(r-s),o=n-a,c=n+a;return c<0?null:o<0?this.at(c,e):this.at(o,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,s,r,a,o,c;const l=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return l>=0?(n=(t.min.x-f.x)*l,s=(t.max.x-f.x)*l):(n=(t.max.x-f.x)*l,s=(t.min.x-f.x)*l),h>=0?(r=(t.min.y-f.y)*h,a=(t.max.y-f.y)*h):(r=(t.max.y-f.y)*h,a=(t.min.y-f.y)*h),n>a||r>s||((r>n||isNaN(n))&&(n=r),(a<s||isNaN(s))&&(s=a),u>=0?(o=(t.min.z-f.z)*u,c=(t.max.z-f.z)*u):(o=(t.max.z-f.z)*u,c=(t.min.z-f.z)*u),n>c||o>s)||((o>n||n!==n)&&(n=o),(c<s||s!==s)&&(s=c),s<0)?null:this.at(n>=0?n:s,e)}intersectsBox(t){return this.intersectBox(t,Si)!==null}intersectTriangle(t,e,n,s,r){wl.subVectors(e,t),ha.subVectors(n,t),Tl.crossVectors(wl,ha);let a=this.direction.dot(Tl),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Hi.subVectors(this.origin,t);const c=o*this.direction.dot(ha.crossVectors(Hi,ha));if(c<0)return null;const l=o*this.direction.dot(wl.cross(Hi));if(l<0||c+l>a)return null;const h=-o*Hi.dot(Tl);return h<0?null:this.at(h/a,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Se{constructor(t,e,n,s,r,a,o,c,l,h,u,f,m,g,_,p){Se.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,s,r,a,o,c,l,h,u,f,m,g,_,p)}set(t,e,n,s,r,a,o,c,l,h,u,f,m,g,_,p){const d=this.elements;return d[0]=t,d[4]=e,d[8]=n,d[12]=s,d[1]=r,d[5]=a,d[9]=o,d[13]=c,d[2]=l,d[6]=h,d[10]=u,d[14]=f,d[3]=m,d[7]=g,d[11]=_,d[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Se().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,s=1/er.setFromMatrixColumn(t,0).length(),r=1/er.setFromMatrixColumn(t,1).length(),a=1/er.setFromMatrixColumn(t,2).length();return e[0]=n[0]*s,e[1]=n[1]*s,e[2]=n[2]*s,e[3]=0,e[4]=n[4]*r,e[5]=n[5]*r,e[6]=n[6]*r,e[7]=0,e[8]=n[8]*a,e[9]=n[9]*a,e[10]=n[10]*a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,s=t.y,r=t.z,a=Math.cos(n),o=Math.sin(n),c=Math.cos(s),l=Math.sin(s),h=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const f=a*h,m=a*u,g=o*h,_=o*u;e[0]=c*h,e[4]=-c*u,e[8]=l,e[1]=m+g*l,e[5]=f-_*l,e[9]=-o*c,e[2]=_-f*l,e[6]=g+m*l,e[10]=a*c}else if(t.order==="YXZ"){const f=c*h,m=c*u,g=l*h,_=l*u;e[0]=f+_*o,e[4]=g*o-m,e[8]=a*l,e[1]=a*u,e[5]=a*h,e[9]=-o,e[2]=m*o-g,e[6]=_+f*o,e[10]=a*c}else if(t.order==="ZXY"){const f=c*h,m=c*u,g=l*h,_=l*u;e[0]=f-_*o,e[4]=-a*u,e[8]=g+m*o,e[1]=m+g*o,e[5]=a*h,e[9]=_-f*o,e[2]=-a*l,e[6]=o,e[10]=a*c}else if(t.order==="ZYX"){const f=a*h,m=a*u,g=o*h,_=o*u;e[0]=c*h,e[4]=g*l-m,e[8]=f*l+_,e[1]=c*u,e[5]=_*l+f,e[9]=m*l-g,e[2]=-l,e[6]=o*c,e[10]=a*c}else if(t.order==="YZX"){const f=a*c,m=a*l,g=o*c,_=o*l;e[0]=c*h,e[4]=_-f*u,e[8]=g*u+m,e[1]=u,e[5]=a*h,e[9]=-o*h,e[2]=-l*h,e[6]=m*u+g,e[10]=f-_*u}else if(t.order==="XZY"){const f=a*c,m=a*l,g=o*c,_=o*l;e[0]=c*h,e[4]=-u,e[8]=l*h,e[1]=f*u+_,e[5]=a*h,e[9]=m*u-g,e[2]=g*u-m,e[6]=o*h,e[10]=_*u+f}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(f_,t,p_)}lookAt(t,e,n){const s=this.elements;return Mn.subVectors(t,e),Mn.lengthSq()===0&&(Mn.z=1),Mn.normalize(),qi.crossVectors(n,Mn),qi.lengthSq()===0&&(Math.abs(n.z)===1?Mn.x+=1e-4:Mn.z+=1e-4,Mn.normalize(),qi.crossVectors(n,Mn)),qi.normalize(),ua.crossVectors(Mn,qi),s[0]=qi.x,s[4]=ua.x,s[8]=Mn.x,s[1]=qi.y,s[5]=ua.y,s[9]=Mn.y,s[2]=qi.z,s[6]=ua.z,s[10]=Mn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,s=e.elements,r=this.elements,a=n[0],o=n[4],c=n[8],l=n[12],h=n[1],u=n[5],f=n[9],m=n[13],g=n[2],_=n[6],p=n[10],d=n[14],y=n[3],v=n[7],S=n[11],b=n[15],E=s[0],M=s[4],C=s[8],k=s[12],x=s[1],A=s[5],F=s[9],G=s[13],D=s[2],V=s[6],U=s[10],H=s[14],W=s[3],q=s[7],Y=s[11],tt=s[15];return r[0]=a*E+o*x+c*D+l*W,r[4]=a*M+o*A+c*V+l*q,r[8]=a*C+o*F+c*U+l*Y,r[12]=a*k+o*G+c*H+l*tt,r[1]=h*E+u*x+f*D+m*W,r[5]=h*M+u*A+f*V+m*q,r[9]=h*C+u*F+f*U+m*Y,r[13]=h*k+u*G+f*H+m*tt,r[2]=g*E+_*x+p*D+d*W,r[6]=g*M+_*A+p*V+d*q,r[10]=g*C+_*F+p*U+d*Y,r[14]=g*k+_*G+p*H+d*tt,r[3]=y*E+v*x+S*D+b*W,r[7]=y*M+v*A+S*V+b*q,r[11]=y*C+v*F+S*U+b*Y,r[15]=y*k+v*G+S*H+b*tt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],s=t[8],r=t[12],a=t[1],o=t[5],c=t[9],l=t[13],h=t[2],u=t[6],f=t[10],m=t[14],g=t[3],_=t[7],p=t[11],d=t[15];return g*(+r*c*u-s*l*u-r*o*f+n*l*f+s*o*m-n*c*m)+_*(+e*c*m-e*l*f+r*a*f-s*a*m+s*l*h-r*c*h)+p*(+e*l*u-e*o*m-r*a*u+n*a*m+r*o*h-n*l*h)+d*(-s*o*h-e*c*u+e*o*f+s*a*u-n*a*f+n*c*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],s=t[2],r=t[3],a=t[4],o=t[5],c=t[6],l=t[7],h=t[8],u=t[9],f=t[10],m=t[11],g=t[12],_=t[13],p=t[14],d=t[15],y=u*p*l-_*f*l+_*c*m-o*p*m-u*c*d+o*f*d,v=g*f*l-h*p*l-g*c*m+a*p*m+h*c*d-a*f*d,S=h*_*l-g*u*l+g*o*m-a*_*m-h*o*d+a*u*d,b=g*u*c-h*_*c-g*o*f+a*_*f+h*o*p-a*u*p,E=e*y+n*v+s*S+r*b;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/E;return t[0]=y*M,t[1]=(_*f*r-u*p*r-_*s*m+n*p*m+u*s*d-n*f*d)*M,t[2]=(o*p*r-_*c*r+_*s*l-n*p*l-o*s*d+n*c*d)*M,t[3]=(u*c*r-o*f*r-u*s*l+n*f*l+o*s*m-n*c*m)*M,t[4]=v*M,t[5]=(h*p*r-g*f*r+g*s*m-e*p*m-h*s*d+e*f*d)*M,t[6]=(g*c*r-a*p*r-g*s*l+e*p*l+a*s*d-e*c*d)*M,t[7]=(a*f*r-h*c*r+h*s*l-e*f*l-a*s*m+e*c*m)*M,t[8]=S*M,t[9]=(g*u*r-h*_*r-g*n*m+e*_*m+h*n*d-e*u*d)*M,t[10]=(a*_*r-g*o*r+g*n*l-e*_*l-a*n*d+e*o*d)*M,t[11]=(h*o*r-a*u*r-h*n*l+e*u*l+a*n*m-e*o*m)*M,t[12]=b*M,t[13]=(h*_*s-g*u*s+g*n*f-e*_*f-h*n*p+e*u*p)*M,t[14]=(g*o*s-a*_*s-g*n*c+e*_*c+a*n*p-e*o*p)*M,t[15]=(a*u*s-h*o*s+h*n*c-e*u*c-a*n*f+e*o*f)*M,this}scale(t){const e=this.elements,n=t.x,s=t.y,r=t.z;return e[0]*=n,e[4]*=s,e[8]*=r,e[1]*=n,e[5]*=s,e[9]*=r,e[2]*=n,e[6]*=s,e[10]*=r,e[3]*=n,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,s))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),s=Math.sin(e),r=1-n,a=t.x,o=t.y,c=t.z,l=r*a,h=r*o;return this.set(l*a+n,l*o-s*c,l*c+s*o,0,l*o+s*c,h*o+n,h*c-s*a,0,l*c-s*o,h*c+s*a,r*c*c+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,s,r,a){return this.set(1,n,r,0,t,1,a,0,e,s,1,0,0,0,0,1),this}compose(t,e,n){const s=this.elements,r=e._x,a=e._y,o=e._z,c=e._w,l=r+r,h=a+a,u=o+o,f=r*l,m=r*h,g=r*u,_=a*h,p=a*u,d=o*u,y=c*l,v=c*h,S=c*u,b=n.x,E=n.y,M=n.z;return s[0]=(1-(_+d))*b,s[1]=(m+S)*b,s[2]=(g-v)*b,s[3]=0,s[4]=(m-S)*E,s[5]=(1-(f+d))*E,s[6]=(p+y)*E,s[7]=0,s[8]=(g+v)*M,s[9]=(p-y)*M,s[10]=(1-(f+_))*M,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,n){const s=this.elements;let r=er.set(s[0],s[1],s[2]).length();const a=er.set(s[4],s[5],s[6]).length(),o=er.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],Hn.copy(this);const l=1/r,h=1/a,u=1/o;return Hn.elements[0]*=l,Hn.elements[1]*=l,Hn.elements[2]*=l,Hn.elements[4]*=h,Hn.elements[5]*=h,Hn.elements[6]*=h,Hn.elements[8]*=u,Hn.elements[9]*=u,Hn.elements[10]*=u,e.setFromRotationMatrix(Hn),n.x=r,n.y=a,n.z=o,this}makePerspective(t,e,n,s,r,a,o=Pi){const c=this.elements,l=2*r/(e-t),h=2*r/(n-s),u=(e+t)/(e-t),f=(n+s)/(n-s);let m,g;if(o===Pi)m=-(a+r)/(a-r),g=-2*a*r/(a-r);else if(o===za)m=-a/(a-r),g=-a*r/(a-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return c[0]=l,c[4]=0,c[8]=u,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=m,c[14]=g,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,s,r,a,o=Pi){const c=this.elements,l=1/(e-t),h=1/(n-s),u=1/(a-r),f=(e+t)*l,m=(n+s)*h;let g,_;if(o===Pi)g=(a+r)*u,_=-2*u;else if(o===za)g=r*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return c[0]=2*l,c[4]=0,c[8]=0,c[12]=-f,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=_,c[14]=-g,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let s=0;s<16;s++)if(e[s]!==n[s])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const er=new N,Hn=new Se,f_=new N(0,0,0),p_=new N(1,1,1),qi=new N,ua=new N,Mn=new N,ud=new Se,dd=new Os;class Bn{constructor(t=0,e=0,n=0,s=Bn.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,s=this._order){return this._x=t,this._y=e,this._z=n,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const s=t.elements,r=s[0],a=s[4],o=s[8],c=s[1],l=s[5],h=s[9],u=s[2],f=s[6],m=s[10];switch(e){case"XYZ":this._y=Math.asin(qe(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,m),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(f,l),this._z=0);break;case"YXZ":this._x=Math.asin(-qe(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(c,l)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(qe(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,m),this._z=Math.atan2(-a,l)):(this._y=0,this._z=Math.atan2(c,r));break;case"ZYX":this._y=Math.asin(-qe(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,m),this._z=Math.atan2(c,r)):(this._x=0,this._z=Math.atan2(-a,l));break;case"YZX":this._z=Math.asin(qe(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,l),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-qe(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,l),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return ud.makeRotationFromQuaternion(t),this.setFromRotationMatrix(ud,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return dd.setFromEuler(this),this.setFromQuaternion(dd,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Bn.DEFAULT_ORDER="XYZ";class Ph{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let m_=0;const fd=new N,nr=new Os,bi=new Se,da=new N,So=new N,g_=new N,__=new Os,pd=new N(1,0,0),md=new N(0,1,0),gd=new N(0,0,1),y_={type:"added"},v_={type:"removed"},El={type:"childadded",child:null},Al={type:"childremoved",child:null};class dn extends ps{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:m_++}),this.uuid=no(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=dn.DEFAULT_UP.clone();const t=new N,e=new Bn,n=new Os,s=new N(1,1,1);function r(){n.setFromEuler(e,!1)}function a(){e.setFromQuaternion(n,void 0,!1)}e._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Se},normalMatrix:{value:new Zt}}),this.matrix=new Se,this.matrixWorld=new Se,this.matrixAutoUpdate=dn.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=dn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ph,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return nr.setFromAxisAngle(t,e),this.quaternion.multiply(nr),this}rotateOnWorldAxis(t,e){return nr.setFromAxisAngle(t,e),this.quaternion.premultiply(nr),this}rotateX(t){return this.rotateOnAxis(pd,t)}rotateY(t){return this.rotateOnAxis(md,t)}rotateZ(t){return this.rotateOnAxis(gd,t)}translateOnAxis(t,e){return fd.copy(t).applyQuaternion(this.quaternion),this.position.add(fd.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(pd,t)}translateY(t){return this.translateOnAxis(md,t)}translateZ(t){return this.translateOnAxis(gd,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(bi.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?da.copy(t):da.set(t,e,n);const s=this.parent;this.updateWorldMatrix(!0,!1),So.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?bi.lookAt(So,da,this.up):bi.lookAt(da,So,this.up),this.quaternion.setFromRotationMatrix(bi),s&&(bi.extractRotation(s.matrixWorld),nr.setFromRotationMatrix(bi),this.quaternion.premultiply(nr.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(y_),El.child=t,this.dispatchEvent(El),El.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(v_),Al.child=t,this.dispatchEvent(Al),Al.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),bi.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),bi.multiply(t.parent.matrixWorld)),t.applyMatrix4(bi),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,s=this.children.length;n<s;n++){const a=this.children[n].getObjectByProperty(t,e);if(a!==void 0)return a}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const s=this.children;for(let r=0,a=s.length;r<a;r++)s[r].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(So,t,g_),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(So,__,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,s=e.length;n<s;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,s=e.length;n<s;n++){const r=e[n];(r.matrixWorldAutoUpdate===!0||t===!0)&&r.updateMatrixWorld(t)}}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){const s=this.children;for(let r=0,a=s.length;r<a;r++){const o=s[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),s.maxGeometryCount=this._maxGeometryCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function r(o,c){return o[c.uuid]===void 0&&(o[c.uuid]=c.toJSON(t)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const c=o.shapes;if(Array.isArray(c))for(let l=0,h=c.length;l<h;l++){const u=c[l];r(t.shapes,u)}else r(t.shapes,c)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let c=0,l=this.material.length;c<l;c++)o.push(r(t.materials,this.material[c]));s.material=o}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const c=this.animations[o];s.animations.push(r(t.animations,c))}}if(e){const o=a(t.geometries),c=a(t.materials),l=a(t.textures),h=a(t.images),u=a(t.shapes),f=a(t.skeletons),m=a(t.animations),g=a(t.nodes);o.length>0&&(n.geometries=o),c.length>0&&(n.materials=c),l.length>0&&(n.textures=l),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),f.length>0&&(n.skeletons=f),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=s,n;function a(o){const c=[];for(const l in o){const h=o[l];delete h.metadata,c.push(h)}return c}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const s=t.children[n];this.add(s.clone())}return this}}dn.DEFAULT_UP=new N(0,1,0);dn.DEFAULT_MATRIX_AUTO_UPDATE=!0;dn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const qn=new N,Mi=new N,Cl=new N,wi=new N,ir=new N,sr=new N,_d=new N,Il=new N,Rl=new N,Dl=new N;class ri{constructor(t=new N,e=new N,n=new N){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,s){s.subVectors(n,e),qn.subVectors(t,e),s.cross(qn);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,n,s,r){qn.subVectors(s,e),Mi.subVectors(n,e),Cl.subVectors(t,e);const a=qn.dot(qn),o=qn.dot(Mi),c=qn.dot(Cl),l=Mi.dot(Mi),h=Mi.dot(Cl),u=a*l-o*o;if(u===0)return r.set(0,0,0),null;const f=1/u,m=(l*c-o*h)*f,g=(a*h-o*c)*f;return r.set(1-m-g,g,m)}static containsPoint(t,e,n,s){return this.getBarycoord(t,e,n,s,wi)===null?!1:wi.x>=0&&wi.y>=0&&wi.x+wi.y<=1}static getInterpolation(t,e,n,s,r,a,o,c){return this.getBarycoord(t,e,n,s,wi)===null?(c.x=0,c.y=0,"z"in c&&(c.z=0),"w"in c&&(c.w=0),null):(c.setScalar(0),c.addScaledVector(r,wi.x),c.addScaledVector(a,wi.y),c.addScaledVector(o,wi.z),c)}static isFrontFacing(t,e,n,s){return qn.subVectors(n,e),Mi.subVectors(t,e),qn.cross(Mi).dot(s)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,s){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,n,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return qn.subVectors(this.c,this.b),Mi.subVectors(this.a,this.b),qn.cross(Mi).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ri.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ri.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,s,r){return ri.getInterpolation(t,this.a,this.b,this.c,e,n,s,r)}containsPoint(t){return ri.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ri.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,s=this.b,r=this.c;let a,o;ir.subVectors(s,n),sr.subVectors(r,n),Il.subVectors(t,n);const c=ir.dot(Il),l=sr.dot(Il);if(c<=0&&l<=0)return e.copy(n);Rl.subVectors(t,s);const h=ir.dot(Rl),u=sr.dot(Rl);if(h>=0&&u<=h)return e.copy(s);const f=c*u-h*l;if(f<=0&&c>=0&&h<=0)return a=c/(c-h),e.copy(n).addScaledVector(ir,a);Dl.subVectors(t,r);const m=ir.dot(Dl),g=sr.dot(Dl);if(g>=0&&m<=g)return e.copy(r);const _=m*l-c*g;if(_<=0&&l>=0&&g<=0)return o=l/(l-g),e.copy(n).addScaledVector(sr,o);const p=h*g-m*u;if(p<=0&&u-h>=0&&m-g>=0)return _d.subVectors(r,s),o=(u-h)/(u-h+(m-g)),e.copy(s).addScaledVector(_d,o);const d=1/(p+_+f);return a=_*d,o=f*d,e.copy(n).addScaledVector(ir,a).addScaledVector(sr,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ip={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ji={h:0,s:0,l:0},fa={h:0,s:0,l:0};function Pl(i,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?i+(t-i)*6*e:e<1/2?t:e<2/3?i+(t-i)*6*(2/3-e):i}class xt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ni){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,re.toWorkingColorSpace(this,e),this}setRGB(t,e,n,s=re.workingColorSpace){return this.r=t,this.g=e,this.b=n,re.toWorkingColorSpace(this,s),this}setHSL(t,e,n,s=re.workingColorSpace){if(t=Ih(t,1),e=qe(e,0,1),n=qe(n,0,1),e===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,a=2*n-r;this.r=Pl(a,r,t+1/3),this.g=Pl(a,r,t),this.b=Pl(a,r,t-1/3)}return re.toWorkingColorSpace(this,s),this}setStyle(t,e=ni){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],a=r.length;if(a===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(a===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ni){const n=ip[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=br(t.r),this.g=br(t.g),this.b=br(t.b),this}copyLinearToSRGB(t){return this.r=yl(t.r),this.g=yl(t.g),this.b=yl(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ni){return re.fromWorkingColorSpace(tn.copy(this),t),Math.round(qe(tn.r*255,0,255))*65536+Math.round(qe(tn.g*255,0,255))*256+Math.round(qe(tn.b*255,0,255))}getHexString(t=ni){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=re.workingColorSpace){re.fromWorkingColorSpace(tn.copy(this),e);const n=tn.r,s=tn.g,r=tn.b,a=Math.max(n,s,r),o=Math.min(n,s,r);let c,l;const h=(o+a)/2;if(o===a)c=0,l=0;else{const u=a-o;switch(l=h<=.5?u/(a+o):u/(2-a-o),a){case n:c=(s-r)/u+(s<r?6:0);break;case s:c=(r-n)/u+2;break;case r:c=(n-s)/u+4;break}c/=6}return t.h=c,t.s=l,t.l=h,t}getRGB(t,e=re.workingColorSpace){return re.fromWorkingColorSpace(tn.copy(this),e),t.r=tn.r,t.g=tn.g,t.b=tn.b,t}getStyle(t=ni){re.fromWorkingColorSpace(tn.copy(this),t);const e=tn.r,n=tn.g,s=tn.b;return t!==ni?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(s*255)})`}offsetHSL(t,e,n){return this.getHSL(ji),this.setHSL(ji.h+t,ji.s+e,ji.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(ji),t.getHSL(fa);const n=Co(ji.h,fa.h,e),s=Co(ji.s,fa.s,e),r=Co(ji.l,fa.l,e);return this.setHSL(n,s,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,s=this.b,r=t.elements;return this.r=r[0]*e+r[3]*n+r[6]*s,this.g=r[1]*e+r[4]*n+r[7]*s,this.b=r[2]*e+r[5]*n+r[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const tn=new xt;xt.NAMES=ip;let x_=0;class pi extends ps{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:x_++}),this.uuid=no(),this.name="",this.type="Material",this.blending=Sr,this.side=cs,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Zl,this.blendDst=Ql,this.blendEquation=As,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new xt(0,0,0),this.blendAlpha=0,this.depthFunc=ka,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=id,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=$s,this.stencilZFail=$s,this.stencilZPass=$s,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(n):s&&s.isVector3&&n&&n.isVector3?s.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Sr&&(n.blending=this.blending),this.side!==cs&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Zl&&(n.blendSrc=this.blendSrc),this.blendDst!==Ql&&(n.blendDst=this.blendDst),this.blendEquation!==As&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ka&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==id&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==$s&&(n.stencilFail=this.stencilFail),this.stencilZFail!==$s&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==$s&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function s(r){const a=[];for(const o in r){const c=r[o];delete c.metadata,a.push(c)}return a}if(e){const r=s(t.textures),a=s(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const s=e.length;n=new Array(s);for(let r=0;r!==s;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class sp extends pi{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new xt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Bn,this.combine=Gc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Pe=new N,pa=new bt;class oi{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=sd,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Ri,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return o_("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[n+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)pa.fromBufferAttribute(this,e),pa.applyMatrix3(t),this.setXY(e,pa.x,pa.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Pe.fromBufferAttribute(this,e),Pe.applyMatrix3(t),this.setXYZ(e,Pe.x,Pe.y,Pe.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Pe.fromBufferAttribute(this,e),Pe.applyMatrix4(t),this.setXYZ(e,Pe.x,Pe.y,Pe.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Pe.fromBufferAttribute(this,e),Pe.applyNormalMatrix(t),this.setXYZ(e,Pe.x,Pe.y,Pe.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Pe.fromBufferAttribute(this,e),Pe.transformDirection(t),this.setXYZ(e,Pe.x,Pe.y,Pe.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=pr(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=sn(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=pr(e,this.array)),e}setX(t,e){return this.normalized&&(e=sn(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=pr(e,this.array)),e}setY(t,e){return this.normalized&&(e=sn(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=pr(e,this.array)),e}setZ(t,e){return this.normalized&&(e=sn(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=pr(e,this.array)),e}setW(t,e){return this.normalized&&(e=sn(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=sn(e,this.array),n=sn(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,s){return t*=this.itemSize,this.normalized&&(e=sn(e,this.array),n=sn(n,this.array),s=sn(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this}setXYZW(t,e,n,s,r){return t*=this.itemSize,this.normalized&&(e=sn(e,this.array),n=sn(n,this.array),s=sn(s,this.array),r=sn(r,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==sd&&(t.usage=this.usage),t}}class rp extends oi{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class op extends oi{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class Cn extends oi{constructor(t,e,n){super(new Float32Array(t),e,n)}}let S_=0;const On=new Se,Ll=new dn,rr=new N,wn=new ls,bo=new ls,Be=new N;class mi extends ps{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:S_++}),this.uuid=no(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Jf(t)?op:rp)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Zt().getNormalMatrix(t);n.applyNormalMatrix(r),n.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return On.makeRotationFromQuaternion(t),this.applyMatrix4(On),this}rotateX(t){return On.makeRotationX(t),this.applyMatrix4(On),this}rotateY(t){return On.makeRotationY(t),this.applyMatrix4(On),this}rotateZ(t){return On.makeRotationZ(t),this.applyMatrix4(On),this}translate(t,e,n){return On.makeTranslation(t,e,n),this.applyMatrix4(On),this}scale(t,e,n){return On.makeScale(t,e,n),this.applyMatrix4(On),this}lookAt(t){return Ll.lookAt(t),Ll.updateMatrix(),this.applyMatrix4(Ll.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(rr).negate(),this.translate(rr.x,rr.y,rr.z),this}setFromPoints(t){const e=[];for(let n=0,s=t.length;n<s;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Cn(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ls);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new N(-1/0,-1/0,-1/0),new N(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,s=e.length;n<s;n++){const r=e[n];wn.setFromBufferAttribute(r),this.morphTargetsRelative?(Be.addVectors(this.boundingBox.min,wn.min),this.boundingBox.expandByPoint(Be),Be.addVectors(this.boundingBox.max,wn.max),this.boundingBox.expandByPoint(Be)):(this.boundingBox.expandByPoint(wn.min),this.boundingBox.expandByPoint(wn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Rh);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new N,1/0);return}if(t){const n=this.boundingSphere.center;if(wn.setFromBufferAttribute(t),e)for(let r=0,a=e.length;r<a;r++){const o=e[r];bo.setFromBufferAttribute(o),this.morphTargetsRelative?(Be.addVectors(wn.min,bo.min),wn.expandByPoint(Be),Be.addVectors(wn.max,bo.max),wn.expandByPoint(Be)):(wn.expandByPoint(bo.min),wn.expandByPoint(bo.max))}wn.getCenter(n);let s=0;for(let r=0,a=t.count;r<a;r++)Be.fromBufferAttribute(t,r),s=Math.max(s,n.distanceToSquared(Be));if(e)for(let r=0,a=e.length;r<a;r++){const o=e[r],c=this.morphTargetsRelative;for(let l=0,h=o.count;l<h;l++)Be.fromBufferAttribute(o,l),c&&(rr.fromBufferAttribute(t,l),Be.add(rr)),s=Math.max(s,n.distanceToSquared(Be))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,s=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new oi(new Float32Array(4*n.count),4));const a=this.getAttribute("tangent"),o=[],c=[];for(let C=0;C<n.count;C++)o[C]=new N,c[C]=new N;const l=new N,h=new N,u=new N,f=new bt,m=new bt,g=new bt,_=new N,p=new N;function d(C,k,x){l.fromBufferAttribute(n,C),h.fromBufferAttribute(n,k),u.fromBufferAttribute(n,x),f.fromBufferAttribute(r,C),m.fromBufferAttribute(r,k),g.fromBufferAttribute(r,x),h.sub(l),u.sub(l),m.sub(f),g.sub(f);const A=1/(m.x*g.y-g.x*m.y);isFinite(A)&&(_.copy(h).multiplyScalar(g.y).addScaledVector(u,-m.y).multiplyScalar(A),p.copy(u).multiplyScalar(m.x).addScaledVector(h,-g.x).multiplyScalar(A),o[C].add(_),o[k].add(_),o[x].add(_),c[C].add(p),c[k].add(p),c[x].add(p))}let y=this.groups;y.length===0&&(y=[{start:0,count:t.count}]);for(let C=0,k=y.length;C<k;++C){const x=y[C],A=x.start,F=x.count;for(let G=A,D=A+F;G<D;G+=3)d(t.getX(G+0),t.getX(G+1),t.getX(G+2))}const v=new N,S=new N,b=new N,E=new N;function M(C){b.fromBufferAttribute(s,C),E.copy(b);const k=o[C];v.copy(k),v.sub(b.multiplyScalar(b.dot(k))).normalize(),S.crossVectors(E,k);const A=S.dot(c[C])<0?-1:1;a.setXYZW(C,v.x,v.y,v.z,A)}for(let C=0,k=y.length;C<k;++C){const x=y[C],A=x.start,F=x.count;for(let G=A,D=A+F;G<D;G+=3)M(t.getX(G+0)),M(t.getX(G+1)),M(t.getX(G+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new oi(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let f=0,m=n.count;f<m;f++)n.setXYZ(f,0,0,0);const s=new N,r=new N,a=new N,o=new N,c=new N,l=new N,h=new N,u=new N;if(t)for(let f=0,m=t.count;f<m;f+=3){const g=t.getX(f+0),_=t.getX(f+1),p=t.getX(f+2);s.fromBufferAttribute(e,g),r.fromBufferAttribute(e,_),a.fromBufferAttribute(e,p),h.subVectors(a,r),u.subVectors(s,r),h.cross(u),o.fromBufferAttribute(n,g),c.fromBufferAttribute(n,_),l.fromBufferAttribute(n,p),o.add(h),c.add(h),l.add(h),n.setXYZ(g,o.x,o.y,o.z),n.setXYZ(_,c.x,c.y,c.z),n.setXYZ(p,l.x,l.y,l.z)}else for(let f=0,m=e.count;f<m;f+=3)s.fromBufferAttribute(e,f+0),r.fromBufferAttribute(e,f+1),a.fromBufferAttribute(e,f+2),h.subVectors(a,r),u.subVectors(s,r),h.cross(u),n.setXYZ(f+0,h.x,h.y,h.z),n.setXYZ(f+1,h.x,h.y,h.z),n.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Be.fromBufferAttribute(t,e),Be.normalize(),t.setXYZ(e,Be.x,Be.y,Be.z)}toNonIndexed(){function t(o,c){const l=o.array,h=o.itemSize,u=o.normalized,f=new l.constructor(c.length*h);let m=0,g=0;for(let _=0,p=c.length;_<p;_++){o.isInterleavedBufferAttribute?m=c[_]*o.data.stride+o.offset:m=c[_]*h;for(let d=0;d<h;d++)f[g++]=l[m++]}return new oi(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new mi,n=this.index.array,s=this.attributes;for(const o in s){const c=s[o],l=t(c,n);e.setAttribute(o,l)}const r=this.morphAttributes;for(const o in r){const c=[],l=r[o];for(let h=0,u=l.length;h<u;h++){const f=l[h],m=t(f,n);c.push(m)}e.morphAttributes[o]=c}e.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,c=a.length;o<c;o++){const l=a[o];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const l in c)c[l]!==void 0&&(t[l]=c[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const c in n){const l=n[c];t.data.attributes[c]=l.toJSON(t.data)}const s={};let r=!1;for(const c in this.morphAttributes){const l=this.morphAttributes[c],h=[];for(let u=0,f=l.length;u<f;u++){const m=l[u];h.push(m.toJSON(t.data))}h.length>0&&(s[c]=h,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(t.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const s=t.attributes;for(const l in s){const h=s[l];this.setAttribute(l,h.clone(e))}const r=t.morphAttributes;for(const l in r){const h=[],u=r[l];for(let f=0,m=u.length;f<m;f++)h.push(u[f].clone(e));this.morphAttributes[l]=h}this.morphTargetsRelative=t.morphTargetsRelative;const a=t.groups;for(let l=0,h=a.length;l<h;l++){const u=a[l];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const c=t.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const yd=new Se,bs=new Dh,ma=new Rh,vd=new N,or=new N,ar=new N,cr=new N,Ol=new N,ga=new N,_a=new bt,ya=new bt,va=new bt,xd=new N,Sd=new N,bd=new N,xa=new N,Sa=new N;class En extends dn{constructor(t=new mi,e=new sp){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const s=e[n[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=s.length;r<a;r++){const o=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}getVertexPosition(t,e){const n=this.geometry,s=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;e.fromBufferAttribute(s,t);const o=this.morphTargetInfluences;if(r&&o){ga.set(0,0,0);for(let c=0,l=r.length;c<l;c++){const h=o[c],u=r[c];h!==0&&(Ol.fromBufferAttribute(u,t),a?ga.addScaledVector(Ol,h):ga.addScaledVector(Ol.sub(e),h))}e.add(ga)}return e}raycast(t,e){const n=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ma.copy(n.boundingSphere),ma.applyMatrix4(r),bs.copy(t.ray).recast(t.near),!(ma.containsPoint(bs.origin)===!1&&(bs.intersectSphere(ma,vd)===null||bs.origin.distanceToSquared(vd)>(t.far-t.near)**2))&&(yd.copy(r).invert(),bs.copy(t.ray).applyMatrix4(yd),!(n.boundingBox!==null&&bs.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,bs)))}_computeIntersections(t,e,n){let s;const r=this.geometry,a=this.material,o=r.index,c=r.attributes.position,l=r.attributes.uv,h=r.attributes.uv1,u=r.attributes.normal,f=r.groups,m=r.drawRange;if(o!==null)if(Array.isArray(a))for(let g=0,_=f.length;g<_;g++){const p=f[g],d=a[p.materialIndex],y=Math.max(p.start,m.start),v=Math.min(o.count,Math.min(p.start+p.count,m.start+m.count));for(let S=y,b=v;S<b;S+=3){const E=o.getX(S),M=o.getX(S+1),C=o.getX(S+2);s=ba(this,d,t,n,l,h,u,E,M,C),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const g=Math.max(0,m.start),_=Math.min(o.count,m.start+m.count);for(let p=g,d=_;p<d;p+=3){const y=o.getX(p),v=o.getX(p+1),S=o.getX(p+2);s=ba(this,a,t,n,l,h,u,y,v,S),s&&(s.faceIndex=Math.floor(p/3),e.push(s))}}else if(c!==void 0)if(Array.isArray(a))for(let g=0,_=f.length;g<_;g++){const p=f[g],d=a[p.materialIndex],y=Math.max(p.start,m.start),v=Math.min(c.count,Math.min(p.start+p.count,m.start+m.count));for(let S=y,b=v;S<b;S+=3){const E=S,M=S+1,C=S+2;s=ba(this,d,t,n,l,h,u,E,M,C),s&&(s.faceIndex=Math.floor(S/3),s.face.materialIndex=p.materialIndex,e.push(s))}}else{const g=Math.max(0,m.start),_=Math.min(c.count,m.start+m.count);for(let p=g,d=_;p<d;p+=3){const y=p,v=p+1,S=p+2;s=ba(this,a,t,n,l,h,u,y,v,S),s&&(s.faceIndex=Math.floor(p/3),e.push(s))}}}}function b_(i,t,e,n,s,r,a,o){let c;if(t.side===un?c=n.intersectTriangle(a,r,s,!0,o):c=n.intersectTriangle(s,r,a,t.side===cs,o),c===null)return null;Sa.copy(o),Sa.applyMatrix4(i.matrixWorld);const l=e.ray.origin.distanceTo(Sa);return l<e.near||l>e.far?null:{distance:l,point:Sa.clone(),object:i}}function ba(i,t,e,n,s,r,a,o,c,l){i.getVertexPosition(o,or),i.getVertexPosition(c,ar),i.getVertexPosition(l,cr);const h=b_(i,t,e,n,or,ar,cr,xa);if(h){s&&(_a.fromBufferAttribute(s,o),ya.fromBufferAttribute(s,c),va.fromBufferAttribute(s,l),h.uv=ri.getInterpolation(xa,or,ar,cr,_a,ya,va,new bt)),r&&(_a.fromBufferAttribute(r,o),ya.fromBufferAttribute(r,c),va.fromBufferAttribute(r,l),h.uv1=ri.getInterpolation(xa,or,ar,cr,_a,ya,va,new bt)),a&&(xd.fromBufferAttribute(a,o),Sd.fromBufferAttribute(a,c),bd.fromBufferAttribute(a,l),h.normal=ri.getInterpolation(xa,or,ar,cr,xd,Sd,bd,new N),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const u={a:o,b:c,c:l,normal:new N,materialIndex:0};ri.getNormal(or,ar,cr,u.normal),h.face=u}return h}class li extends mi{constructor(t=1,e=1,n=1,s=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:s,heightSegments:r,depthSegments:a};const o=this;s=Math.floor(s),r=Math.floor(r),a=Math.floor(a);const c=[],l=[],h=[],u=[];let f=0,m=0;g("z","y","x",-1,-1,n,e,t,a,r,0),g("z","y","x",1,-1,n,e,-t,a,r,1),g("x","z","y",1,1,t,n,e,s,a,2),g("x","z","y",1,-1,t,n,-e,s,a,3),g("x","y","z",1,-1,t,e,n,s,r,4),g("x","y","z",-1,-1,t,e,-n,s,r,5),this.setIndex(c),this.setAttribute("position",new Cn(l,3)),this.setAttribute("normal",new Cn(h,3)),this.setAttribute("uv",new Cn(u,2));function g(_,p,d,y,v,S,b,E,M,C,k){const x=S/M,A=b/C,F=S/2,G=b/2,D=E/2,V=M+1,U=C+1;let H=0,W=0;const q=new N;for(let Y=0;Y<U;Y++){const tt=Y*A-G;for(let ht=0;ht<V;ht++){const It=ht*x-F;q[_]=It*y,q[p]=tt*v,q[d]=D,l.push(q.x,q.y,q.z),q[_]=0,q[p]=0,q[d]=E>0?1:-1,h.push(q.x,q.y,q.z),u.push(ht/M),u.push(1-Y/C),H+=1}}for(let Y=0;Y<C;Y++)for(let tt=0;tt<M;tt++){const ht=f+tt+V*Y,It=f+tt+V*(Y+1),X=f+(tt+1)+V*(Y+1),J=f+(tt+1)+V*Y;c.push(ht,It,J),c.push(It,X,J),W+=6}o.addGroup(m,W,k),m+=W,f+=H}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new li(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Ir(i){const t={};for(const e in i){t[e]={};for(const n in i[e]){const s=i[e][n];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=s.clone():Array.isArray(s)?t[e][n]=s.slice():t[e][n]=s}}return t}function rn(i){const t={};for(let e=0;e<i.length;e++){const n=Ir(i[e]);for(const s in n)t[s]=n[s]}return t}function M_(i){const t=[];for(let e=0;e<i.length;e++)t.push(i[e].clone());return t}function ap(i){return i.getRenderTarget()===null?i.outputColorSpace:re.workingColorSpace}const cp={clone:Ir,merge:rn};var w_=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,T_=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Fi extends pi{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=w_,this.fragmentShader=T_,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1,clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ir(t.uniforms),this.uniformsGroups=M_(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?e.uniforms[s]={type:"t",value:a.toJSON(t).uuid}:a&&a.isColor?e.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?e.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?e.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?e.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?e.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?e.uniforms[s]={type:"m4",value:a.toArray()}:e.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const s in this.extensions)this.extensions[s]===!0&&(n[s]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class lp extends dn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Se,this.projectionMatrix=new Se,this.projectionMatrixInverse=new Se,this.coordinateSystem=Pi}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Xi=new N,Md=new bt,wd=new bt;class Tn extends lp{constructor(t=50,e=1,n=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=s,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Po*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Ao*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Po*2*Math.atan(Math.tan(Ao*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){Xi.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Xi.x,Xi.y).multiplyScalar(-t/Xi.z),Xi.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Xi.x,Xi.y).multiplyScalar(-t/Xi.z)}getViewSize(t,e){return this.getViewBounds(t,Md,wd),e.subVectors(wd,Md)}setViewOffset(t,e,n,s,r,a){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Ao*.5*this.fov)/this.zoom,n=2*e,s=this.aspect*n,r=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const c=a.fullWidth,l=a.fullHeight;r+=a.offsetX*s/c,e-=a.offsetY*n/l,s*=a.width/c,n*=a.height/l}const o=this.filmOffset;o!==0&&(r+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+s,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const lr=-90,hr=1;class E_ extends dn{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const s=new Tn(lr,hr,t,e);s.layers=this.layers,this.add(s);const r=new Tn(lr,hr,t,e);r.layers=this.layers,this.add(r);const a=new Tn(lr,hr,t,e);a.layers=this.layers,this.add(a);const o=new Tn(lr,hr,t,e);o.layers=this.layers,this.add(o);const c=new Tn(lr,hr,t,e);c.layers=this.layers,this.add(c);const l=new Tn(lr,hr,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,s,r,a,o,c]=e;for(const l of e)this.remove(l);if(t===Pi)n.up.set(0,1,0),n.lookAt(1,0,0),s.up.set(0,1,0),s.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),a.up.set(0,0,1),a.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),c.up.set(0,1,0),c.lookAt(0,0,-1);else if(t===za)n.up.set(0,-1,0),n.lookAt(-1,0,0),s.up.set(0,-1,0),s.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),a.up.set(0,0,-1),a.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),c.up.set(0,-1,0),c.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:s}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,c,l,h]=this.children,u=t.getRenderTarget(),f=t.getActiveCubeFace(),m=t.getActiveMipmapLevel(),g=t.xr.enabled;t.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,s),t.render(e,r),t.setRenderTarget(n,1,s),t.render(e,a),t.setRenderTarget(n,2,s),t.render(e,o),t.setRenderTarget(n,3,s),t.render(e,c),t.setRenderTarget(n,4,s),t.render(e,l),n.texture.generateMipmaps=_,t.setRenderTarget(n,5,s),t.render(e,h),t.setRenderTarget(u,f,m),t.xr.enabled=g,n.texture.needsPMREMUpdate=!0}}class hp extends ze{constructor(t,e,n,s,r,a,o,c,l,h){t=t!==void 0?t:[],e=e!==void 0?e:Er,super(t,e,n,s,r,a,o,c,l,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class A_ extends Ls{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},s=[n,n,n,n,n,n];this.texture=new hp(s,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:pn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new li(5,5,5),r=new Fi({name:"CubemapFromEquirect",uniforms:Ir(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:un,blending:is});r.uniforms.tEquirect.value=e;const a=new En(s,r),o=e.minFilter;return e.minFilter===Rs&&(e.minFilter=pn),new E_(1,10,this).update(t,a),e.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(t,e,n,s){const r=t.getRenderTarget();for(let a=0;a<6;a++)t.setRenderTarget(this,a),t.clear(e,n,s);t.setRenderTarget(r)}}const Nl=new N,C_=new N,I_=new Zt;class Ii{constructor(t=new N(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,s){return this.normal.set(t,e,n),this.constant=s,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const s=Nl.subVectors(n,e).cross(C_.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(s,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(Nl),s=this.normal.dot(n);if(s===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/s;return r<0||r>1?null:e.copy(t.start).addScaledVector(n,r)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||I_.getNormalMatrix(t),s=this.coplanarPoint(Nl).applyMatrix4(t),r=this.normal.applyMatrix3(n).normalize();return this.constant=-s.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ms=new Rh,Ma=new N;class Lh{constructor(t=new Ii,e=new Ii,n=new Ii,s=new Ii,r=new Ii,a=new Ii){this.planes=[t,e,n,s,r,a]}set(t,e,n,s,r,a){const o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(n),o[3].copy(s),o[4].copy(r),o[5].copy(a),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=Pi){const n=this.planes,s=t.elements,r=s[0],a=s[1],o=s[2],c=s[3],l=s[4],h=s[5],u=s[6],f=s[7],m=s[8],g=s[9],_=s[10],p=s[11],d=s[12],y=s[13],v=s[14],S=s[15];if(n[0].setComponents(c-r,f-l,p-m,S-d).normalize(),n[1].setComponents(c+r,f+l,p+m,S+d).normalize(),n[2].setComponents(c+a,f+h,p+g,S+y).normalize(),n[3].setComponents(c-a,f-h,p-g,S-y).normalize(),n[4].setComponents(c-o,f-u,p-_,S-v).normalize(),e===Pi)n[5].setComponents(c+o,f+u,p+_,S+v).normalize();else if(e===za)n[5].setComponents(o,u,_,v).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Ms.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Ms.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Ms)}intersectsSprite(t){return Ms.center.set(0,0,0),Ms.radius=.7071067811865476,Ms.applyMatrix4(t.matrixWorld),this.intersectsSphere(Ms)}intersectsSphere(t){const e=this.planes,n=t.center,s=-t.radius;for(let r=0;r<6;r++)if(e[r].distanceToPoint(n)<s)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const s=e[n];if(Ma.x=s.normal.x>0?t.max.x:t.min.x,Ma.y=s.normal.y>0?t.max.y:t.min.y,Ma.z=s.normal.z>0?t.max.z:t.min.z,s.distanceToPoint(Ma)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function up(){let i=null,t=!1,e=null,n=null;function s(r,a){e(r,a),n=i.requestAnimationFrame(s)}return{start:function(){t!==!0&&e!==null&&(n=i.requestAnimationFrame(s),t=!0)},stop:function(){i.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(r){e=r},setContext:function(r){i=r}}}function R_(i,t){const e=t.isWebGL2,n=new WeakMap;function s(l,h){const u=l.array,f=l.usage,m=u.byteLength,g=i.createBuffer();i.bindBuffer(h,g),i.bufferData(h,u,f),l.onUploadCallback();let _;if(u instanceof Float32Array)_=i.FLOAT;else if(u instanceof Uint16Array)if(l.isFloat16BufferAttribute)if(e)_=i.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else _=i.UNSIGNED_SHORT;else if(u instanceof Int16Array)_=i.SHORT;else if(u instanceof Uint32Array)_=i.UNSIGNED_INT;else if(u instanceof Int32Array)_=i.INT;else if(u instanceof Int8Array)_=i.BYTE;else if(u instanceof Uint8Array)_=i.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)_=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:g,type:_,bytesPerElement:u.BYTES_PER_ELEMENT,version:l.version,size:m}}function r(l,h,u){const f=h.array,m=h._updateRange,g=h.updateRanges;if(i.bindBuffer(u,l),m.count===-1&&g.length===0&&i.bufferSubData(u,0,f),g.length!==0){for(let _=0,p=g.length;_<p;_++){const d=g[_];e?i.bufferSubData(u,d.start*f.BYTES_PER_ELEMENT,f,d.start,d.count):i.bufferSubData(u,d.start*f.BYTES_PER_ELEMENT,f.subarray(d.start,d.start+d.count))}h.clearUpdateRanges()}m.count!==-1&&(e?i.bufferSubData(u,m.offset*f.BYTES_PER_ELEMENT,f,m.offset,m.count):i.bufferSubData(u,m.offset*f.BYTES_PER_ELEMENT,f.subarray(m.offset,m.offset+m.count)),m.count=-1),h.onUploadCallback()}function a(l){return l.isInterleavedBufferAttribute&&(l=l.data),n.get(l)}function o(l){l.isInterleavedBufferAttribute&&(l=l.data);const h=n.get(l);h&&(i.deleteBuffer(h.buffer),n.delete(l))}function c(l,h){if(l.isGLBufferAttribute){const f=n.get(l);(!f||f.version<l.version)&&n.set(l,{buffer:l.buffer,type:l.type,bytesPerElement:l.elementSize,version:l.version});return}l.isInterleavedBufferAttribute&&(l=l.data);const u=n.get(l);if(u===void 0)n.set(l,s(l,h));else if(u.version<l.version){if(u.size!==l.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");r(u.buffer,l,h),u.version=l.version}}return{get:a,remove:o,update:c}}class qc extends mi{constructor(t=1,e=1,n=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:s};const r=t/2,a=e/2,o=Math.floor(n),c=Math.floor(s),l=o+1,h=c+1,u=t/o,f=e/c,m=[],g=[],_=[],p=[];for(let d=0;d<h;d++){const y=d*f-a;for(let v=0;v<l;v++){const S=v*u-r;g.push(S,-y,0),_.push(0,0,1),p.push(v/o),p.push(1-d/c)}}for(let d=0;d<c;d++)for(let y=0;y<o;y++){const v=y+l*d,S=y+l*(d+1),b=y+1+l*(d+1),E=y+1+l*d;m.push(v,S,E),m.push(S,b,E)}this.setIndex(m),this.setAttribute("position",new Cn(g,3)),this.setAttribute("normal",new Cn(_,3)),this.setAttribute("uv",new Cn(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new qc(t.width,t.height,t.widthSegments,t.heightSegments)}}var D_=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,P_=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,L_=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,O_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,N_=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,F_=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,k_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,U_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,B_=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,V_=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,z_=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,G_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,W_=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,H_=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,q_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,j_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,X_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,K_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Y_=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,$_=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Z_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Q_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,J_=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,ty=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,ey=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ny=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,iy=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,sy=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,ry=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,oy=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,ay="gl_FragColor = linearToOutputTexel( gl_FragColor );",cy=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,ly=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,hy=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,uy=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,dy=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,fy=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,py=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,my=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,gy=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,_y=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,yy=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,vy=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,xy=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Sy=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,by=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,My=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,wy=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,Ty=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Ey=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Ay=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Cy=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Iy=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Ry=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Dy=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Py=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Ly=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Oy=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Ny=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Fy=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,ky=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Uy=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,By=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Vy=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,zy=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Gy=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Wy=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Hy=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,qy=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,jy=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Xy=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Ky=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Yy=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,$y=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Zy=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Qy=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Jy=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,tv=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,ev=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,nv=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,iv=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,sv=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,rv=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,ov=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,av=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,cv=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,lv=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,hv=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,uv=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,dv=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,fv=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,pv=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,mv=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,gv=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,_v=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,yv=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,vv=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,xv=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Sv=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,bv=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Mv=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,wv=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Tv=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,Ev=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,Av=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Cv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,Iv=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,Rv=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Dv=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Pv=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Lv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Ov=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Nv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Fv=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kv=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Uv=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Bv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Vv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,zv=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Gv=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,Wv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Hv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,qv=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,jv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xv=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Kv=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yv=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,$v=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Qv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Jv=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,t0=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,e0=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,n0=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,i0=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,s0=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,r0=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,o0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,a0=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,c0=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,l0=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,h0=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,$t={alphahash_fragment:D_,alphahash_pars_fragment:P_,alphamap_fragment:L_,alphamap_pars_fragment:O_,alphatest_fragment:N_,alphatest_pars_fragment:F_,aomap_fragment:k_,aomap_pars_fragment:U_,batching_pars_vertex:B_,batching_vertex:V_,begin_vertex:z_,beginnormal_vertex:G_,bsdfs:W_,iridescence_fragment:H_,bumpmap_pars_fragment:q_,clipping_planes_fragment:j_,clipping_planes_pars_fragment:X_,clipping_planes_pars_vertex:K_,clipping_planes_vertex:Y_,color_fragment:$_,color_pars_fragment:Z_,color_pars_vertex:Q_,color_vertex:J_,common:ty,cube_uv_reflection_fragment:ey,defaultnormal_vertex:ny,displacementmap_pars_vertex:iy,displacementmap_vertex:sy,emissivemap_fragment:ry,emissivemap_pars_fragment:oy,colorspace_fragment:ay,colorspace_pars_fragment:cy,envmap_fragment:ly,envmap_common_pars_fragment:hy,envmap_pars_fragment:uy,envmap_pars_vertex:dy,envmap_physical_pars_fragment:wy,envmap_vertex:fy,fog_vertex:py,fog_pars_vertex:my,fog_fragment:gy,fog_pars_fragment:_y,gradientmap_pars_fragment:yy,lightmap_fragment:vy,lightmap_pars_fragment:xy,lights_lambert_fragment:Sy,lights_lambert_pars_fragment:by,lights_pars_begin:My,lights_toon_fragment:Ty,lights_toon_pars_fragment:Ey,lights_phong_fragment:Ay,lights_phong_pars_fragment:Cy,lights_physical_fragment:Iy,lights_physical_pars_fragment:Ry,lights_fragment_begin:Dy,lights_fragment_maps:Py,lights_fragment_end:Ly,logdepthbuf_fragment:Oy,logdepthbuf_pars_fragment:Ny,logdepthbuf_pars_vertex:Fy,logdepthbuf_vertex:ky,map_fragment:Uy,map_pars_fragment:By,map_particle_fragment:Vy,map_particle_pars_fragment:zy,metalnessmap_fragment:Gy,metalnessmap_pars_fragment:Wy,morphinstance_vertex:Hy,morphcolor_vertex:qy,morphnormal_vertex:jy,morphtarget_pars_vertex:Xy,morphtarget_vertex:Ky,normal_fragment_begin:Yy,normal_fragment_maps:$y,normal_pars_fragment:Zy,normal_pars_vertex:Qy,normal_vertex:Jy,normalmap_pars_fragment:tv,clearcoat_normal_fragment_begin:ev,clearcoat_normal_fragment_maps:nv,clearcoat_pars_fragment:iv,iridescence_pars_fragment:sv,opaque_fragment:rv,packing:ov,premultiplied_alpha_fragment:av,project_vertex:cv,dithering_fragment:lv,dithering_pars_fragment:hv,roughnessmap_fragment:uv,roughnessmap_pars_fragment:dv,shadowmap_pars_fragment:fv,shadowmap_pars_vertex:pv,shadowmap_vertex:mv,shadowmask_pars_fragment:gv,skinbase_vertex:_v,skinning_pars_vertex:yv,skinning_vertex:vv,skinnormal_vertex:xv,specularmap_fragment:Sv,specularmap_pars_fragment:bv,tonemapping_fragment:Mv,tonemapping_pars_fragment:wv,transmission_fragment:Tv,transmission_pars_fragment:Ev,uv_pars_fragment:Av,uv_pars_vertex:Cv,uv_vertex:Iv,worldpos_vertex:Rv,background_vert:Dv,background_frag:Pv,backgroundCube_vert:Lv,backgroundCube_frag:Ov,cube_vert:Nv,cube_frag:Fv,depth_vert:kv,depth_frag:Uv,distanceRGBA_vert:Bv,distanceRGBA_frag:Vv,equirect_vert:zv,equirect_frag:Gv,linedashed_vert:Wv,linedashed_frag:Hv,meshbasic_vert:qv,meshbasic_frag:jv,meshlambert_vert:Xv,meshlambert_frag:Kv,meshmatcap_vert:Yv,meshmatcap_frag:$v,meshnormal_vert:Zv,meshnormal_frag:Qv,meshphong_vert:Jv,meshphong_frag:t0,meshphysical_vert:e0,meshphysical_frag:n0,meshtoon_vert:i0,meshtoon_frag:s0,points_vert:r0,points_frag:o0,shadow_vert:a0,shadow_frag:c0,sprite_vert:l0,sprite_frag:h0},mt={common:{diffuse:{value:new xt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Zt},alphaMap:{value:null},alphaMapTransform:{value:new Zt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Zt}},envmap:{envMap:{value:null},envMapRotation:{value:new Zt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Zt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Zt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Zt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Zt},normalScale:{value:new bt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Zt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Zt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Zt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Zt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new xt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new xt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Zt},alphaTest:{value:0},uvTransform:{value:new Zt}},sprite:{diffuse:{value:new xt(16777215)},opacity:{value:1},center:{value:new bt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Zt},alphaMap:{value:null},alphaMapTransform:{value:new Zt},alphaTest:{value:0}}},ii={basic:{uniforms:rn([mt.common,mt.specularmap,mt.envmap,mt.aomap,mt.lightmap,mt.fog]),vertexShader:$t.meshbasic_vert,fragmentShader:$t.meshbasic_frag},lambert:{uniforms:rn([mt.common,mt.specularmap,mt.envmap,mt.aomap,mt.lightmap,mt.emissivemap,mt.bumpmap,mt.normalmap,mt.displacementmap,mt.fog,mt.lights,{emissive:{value:new xt(0)}}]),vertexShader:$t.meshlambert_vert,fragmentShader:$t.meshlambert_frag},phong:{uniforms:rn([mt.common,mt.specularmap,mt.envmap,mt.aomap,mt.lightmap,mt.emissivemap,mt.bumpmap,mt.normalmap,mt.displacementmap,mt.fog,mt.lights,{emissive:{value:new xt(0)},specular:{value:new xt(1118481)},shininess:{value:30}}]),vertexShader:$t.meshphong_vert,fragmentShader:$t.meshphong_frag},standard:{uniforms:rn([mt.common,mt.envmap,mt.aomap,mt.lightmap,mt.emissivemap,mt.bumpmap,mt.normalmap,mt.displacementmap,mt.roughnessmap,mt.metalnessmap,mt.fog,mt.lights,{emissive:{value:new xt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:$t.meshphysical_vert,fragmentShader:$t.meshphysical_frag},toon:{uniforms:rn([mt.common,mt.aomap,mt.lightmap,mt.emissivemap,mt.bumpmap,mt.normalmap,mt.displacementmap,mt.gradientmap,mt.fog,mt.lights,{emissive:{value:new xt(0)}}]),vertexShader:$t.meshtoon_vert,fragmentShader:$t.meshtoon_frag},matcap:{uniforms:rn([mt.common,mt.bumpmap,mt.normalmap,mt.displacementmap,mt.fog,{matcap:{value:null}}]),vertexShader:$t.meshmatcap_vert,fragmentShader:$t.meshmatcap_frag},points:{uniforms:rn([mt.points,mt.fog]),vertexShader:$t.points_vert,fragmentShader:$t.points_frag},dashed:{uniforms:rn([mt.common,mt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:$t.linedashed_vert,fragmentShader:$t.linedashed_frag},depth:{uniforms:rn([mt.common,mt.displacementmap]),vertexShader:$t.depth_vert,fragmentShader:$t.depth_frag},normal:{uniforms:rn([mt.common,mt.bumpmap,mt.normalmap,mt.displacementmap,{opacity:{value:1}}]),vertexShader:$t.meshnormal_vert,fragmentShader:$t.meshnormal_frag},sprite:{uniforms:rn([mt.sprite,mt.fog]),vertexShader:$t.sprite_vert,fragmentShader:$t.sprite_frag},background:{uniforms:{uvTransform:{value:new Zt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:$t.background_vert,fragmentShader:$t.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Zt}},vertexShader:$t.backgroundCube_vert,fragmentShader:$t.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:$t.cube_vert,fragmentShader:$t.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:$t.equirect_vert,fragmentShader:$t.equirect_frag},distanceRGBA:{uniforms:rn([mt.common,mt.displacementmap,{referencePosition:{value:new N},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:$t.distanceRGBA_vert,fragmentShader:$t.distanceRGBA_frag},shadow:{uniforms:rn([mt.lights,mt.fog,{color:{value:new xt(0)},opacity:{value:1}}]),vertexShader:$t.shadow_vert,fragmentShader:$t.shadow_frag}};ii.physical={uniforms:rn([ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Zt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Zt},clearcoatNormalScale:{value:new bt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Zt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Zt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Zt},sheen:{value:0},sheenColor:{value:new xt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Zt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Zt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Zt},transmissionSamplerSize:{value:new bt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Zt},attenuationDistance:{value:0},attenuationColor:{value:new xt(0)},specularColor:{value:new xt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Zt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Zt},anisotropyVector:{value:new bt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Zt}}]),vertexShader:$t.meshphysical_vert,fragmentShader:$t.meshphysical_frag};const wa={r:0,b:0,g:0},ws=new Bn,u0=new Se;function d0(i,t,e,n,s,r,a){const o=new xt(0);let c=r===!0?0:1,l,h,u=null,f=0,m=null;function g(p,d){let y=!1,v=d.isScene===!0?d.background:null;v&&v.isTexture&&(v=(d.backgroundBlurriness>0?e:t).get(v)),v===null?_(o,c):v&&v.isColor&&(_(v,1),y=!0);const S=i.xr.getEnvironmentBlendMode();S==="additive"?n.buffers.color.setClear(0,0,0,1,a):S==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,a),(i.autoClear||y)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),v&&(v.isCubeTexture||v.mapping===Wc)?(h===void 0&&(h=new En(new li(1,1,1),new Fi({name:"BackgroundCubeMaterial",uniforms:Ir(ii.backgroundCube.uniforms),vertexShader:ii.backgroundCube.vertexShader,fragmentShader:ii.backgroundCube.fragmentShader,side:un,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(b,E,M){this.matrixWorld.copyPosition(M.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(h)),ws.copy(d.backgroundRotation),ws.x*=-1,ws.y*=-1,ws.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(ws.y*=-1,ws.z*=-1),h.material.uniforms.envMap.value=v,h.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=d.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(u0.makeRotationFromEuler(ws)),h.material.toneMapped=re.getTransfer(v.colorSpace)!==fe,(u!==v||f!==v.version||m!==i.toneMapping)&&(h.material.needsUpdate=!0,u=v,f=v.version,m=i.toneMapping),h.layers.enableAll(),p.unshift(h,h.geometry,h.material,0,0,null)):v&&v.isTexture&&(l===void 0&&(l=new En(new qc(2,2),new Fi({name:"BackgroundMaterial",uniforms:Ir(ii.background.uniforms),vertexShader:ii.background.vertexShader,fragmentShader:ii.background.fragmentShader,side:cs,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(l)),l.material.uniforms.t2D.value=v,l.material.uniforms.backgroundIntensity.value=d.backgroundIntensity,l.material.toneMapped=re.getTransfer(v.colorSpace)!==fe,v.matrixAutoUpdate===!0&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),(u!==v||f!==v.version||m!==i.toneMapping)&&(l.material.needsUpdate=!0,u=v,f=v.version,m=i.toneMapping),l.layers.enableAll(),p.unshift(l,l.geometry,l.material,0,0,null))}function _(p,d){p.getRGB(wa,ap(i)),n.buffers.color.setClear(wa.r,wa.g,wa.b,d,a)}return{getClearColor:function(){return o},setClearColor:function(p,d=1){o.set(p),c=d,_(o,c)},getClearAlpha:function(){return c},setClearAlpha:function(p){c=p,_(o,c)},render:g}}function f0(i,t,e,n){const s=i.getParameter(i.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:t.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},c=p(null);let l=c,h=!1;function u(D,V,U,H,W){let q=!1;if(a){const Y=_(H,U,V);l!==Y&&(l=Y,m(l.object)),q=d(D,H,U,W),q&&y(D,H,U,W)}else{const Y=V.wireframe===!0;(l.geometry!==H.id||l.program!==U.id||l.wireframe!==Y)&&(l.geometry=H.id,l.program=U.id,l.wireframe=Y,q=!0)}W!==null&&e.update(W,i.ELEMENT_ARRAY_BUFFER),(q||h)&&(h=!1,C(D,V,U,H),W!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(W).buffer))}function f(){return n.isWebGL2?i.createVertexArray():r.createVertexArrayOES()}function m(D){return n.isWebGL2?i.bindVertexArray(D):r.bindVertexArrayOES(D)}function g(D){return n.isWebGL2?i.deleteVertexArray(D):r.deleteVertexArrayOES(D)}function _(D,V,U){const H=U.wireframe===!0;let W=o[D.id];W===void 0&&(W={},o[D.id]=W);let q=W[V.id];q===void 0&&(q={},W[V.id]=q);let Y=q[H];return Y===void 0&&(Y=p(f()),q[H]=Y),Y}function p(D){const V=[],U=[],H=[];for(let W=0;W<s;W++)V[W]=0,U[W]=0,H[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:V,enabledAttributes:U,attributeDivisors:H,object:D,attributes:{},index:null}}function d(D,V,U,H){const W=l.attributes,q=V.attributes;let Y=0;const tt=U.getAttributes();for(const ht in tt)if(tt[ht].location>=0){const X=W[ht];let J=q[ht];if(J===void 0&&(ht==="instanceMatrix"&&D.instanceMatrix&&(J=D.instanceMatrix),ht==="instanceColor"&&D.instanceColor&&(J=D.instanceColor)),X===void 0||X.attribute!==J||J&&X.data!==J.data)return!0;Y++}return l.attributesNum!==Y||l.index!==H}function y(D,V,U,H){const W={},q=V.attributes;let Y=0;const tt=U.getAttributes();for(const ht in tt)if(tt[ht].location>=0){let X=q[ht];X===void 0&&(ht==="instanceMatrix"&&D.instanceMatrix&&(X=D.instanceMatrix),ht==="instanceColor"&&D.instanceColor&&(X=D.instanceColor));const J={};J.attribute=X,X&&X.data&&(J.data=X.data),W[ht]=J,Y++}l.attributes=W,l.attributesNum=Y,l.index=H}function v(){const D=l.newAttributes;for(let V=0,U=D.length;V<U;V++)D[V]=0}function S(D){b(D,0)}function b(D,V){const U=l.newAttributes,H=l.enabledAttributes,W=l.attributeDivisors;U[D]=1,H[D]===0&&(i.enableVertexAttribArray(D),H[D]=1),W[D]!==V&&((n.isWebGL2?i:t.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,V),W[D]=V)}function E(){const D=l.newAttributes,V=l.enabledAttributes;for(let U=0,H=V.length;U<H;U++)V[U]!==D[U]&&(i.disableVertexAttribArray(U),V[U]=0)}function M(D,V,U,H,W,q,Y){Y===!0?i.vertexAttribIPointer(D,V,U,W,q):i.vertexAttribPointer(D,V,U,H,W,q)}function C(D,V,U,H){if(n.isWebGL2===!1&&(D.isInstancedMesh||H.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;v();const W=H.attributes,q=U.getAttributes(),Y=V.defaultAttributeValues;for(const tt in q){const ht=q[tt];if(ht.location>=0){let It=W[tt];if(It===void 0&&(tt==="instanceMatrix"&&D.instanceMatrix&&(It=D.instanceMatrix),tt==="instanceColor"&&D.instanceColor&&(It=D.instanceColor)),It!==void 0){const X=It.normalized,J=It.itemSize,ut=e.get(It);if(ut===void 0)continue;const Et=ut.buffer,st=ut.type,vt=ut.bytesPerElement,Kt=n.isWebGL2===!0&&(st===i.INT||st===i.UNSIGNED_INT||It.gpuType===qf);if(It.isInterleavedBufferAttribute){const kt=It.data,B=kt.stride,Ie=It.offset;if(kt.isInstancedInterleavedBuffer){for(let Lt=0;Lt<ht.locationSize;Lt++)b(ht.location+Lt,kt.meshPerAttribute);D.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=kt.meshPerAttribute*kt.count)}else for(let Lt=0;Lt<ht.locationSize;Lt++)S(ht.location+Lt);i.bindBuffer(i.ARRAY_BUFFER,Et);for(let Lt=0;Lt<ht.locationSize;Lt++)M(ht.location+Lt,J/ht.locationSize,st,X,B*vt,(Ie+J/ht.locationSize*Lt)*vt,Kt)}else{if(It.isInstancedBufferAttribute){for(let kt=0;kt<ht.locationSize;kt++)b(ht.location+kt,It.meshPerAttribute);D.isInstancedMesh!==!0&&H._maxInstanceCount===void 0&&(H._maxInstanceCount=It.meshPerAttribute*It.count)}else for(let kt=0;kt<ht.locationSize;kt++)S(ht.location+kt);i.bindBuffer(i.ARRAY_BUFFER,Et);for(let kt=0;kt<ht.locationSize;kt++)M(ht.location+kt,J/ht.locationSize,st,X,J*vt,J/ht.locationSize*kt*vt,Kt)}}else if(Y!==void 0){const X=Y[tt];if(X!==void 0)switch(X.length){case 2:i.vertexAttrib2fv(ht.location,X);break;case 3:i.vertexAttrib3fv(ht.location,X);break;case 4:i.vertexAttrib4fv(ht.location,X);break;default:i.vertexAttrib1fv(ht.location,X)}}}}E()}function k(){F();for(const D in o){const V=o[D];for(const U in V){const H=V[U];for(const W in H)g(H[W].object),delete H[W];delete V[U]}delete o[D]}}function x(D){if(o[D.id]===void 0)return;const V=o[D.id];for(const U in V){const H=V[U];for(const W in H)g(H[W].object),delete H[W];delete V[U]}delete o[D.id]}function A(D){for(const V in o){const U=o[V];if(U[D.id]===void 0)continue;const H=U[D.id];for(const W in H)g(H[W].object),delete H[W];delete U[D.id]}}function F(){G(),h=!0,l!==c&&(l=c,m(l.object))}function G(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:u,reset:F,resetDefaultState:G,dispose:k,releaseStatesOfGeometry:x,releaseStatesOfProgram:A,initAttributes:v,enableAttribute:S,disableUnusedAttributes:E}}function p0(i,t,e,n){const s=n.isWebGL2;let r;function a(h){r=h}function o(h,u){i.drawArrays(r,h,u),e.update(u,r,1)}function c(h,u,f){if(f===0)return;let m,g;if(s)m=i,g="drawArraysInstanced";else if(m=t.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](r,h,u,f),e.update(u,r,f)}function l(h,u,f){if(f===0)return;const m=t.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<f;g++)this.render(h[g],u[g]);else{m.multiDrawArraysWEBGL(r,h,0,u,0,f);let g=0;for(let _=0;_<f;_++)g+=u[_];e.update(g,r,1)}}this.setMode=a,this.render=o,this.renderInstances=c,this.renderMultiDraw=l}function m0(i,t,e){let n;function s(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const M=t.get("EXT_texture_filter_anisotropic");n=i.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(M){if(M==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&i.constructor.name==="WebGL2RenderingContext";let o=e.precision!==void 0?e.precision:"highp";const c=r(o);c!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",c,"instead."),o=c);const l=a||t.has("WEBGL_draw_buffers"),h=e.logarithmicDepthBuffer===!0,u=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),f=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),m=i.getParameter(i.MAX_TEXTURE_SIZE),g=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),_=i.getParameter(i.MAX_VERTEX_ATTRIBS),p=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),d=i.getParameter(i.MAX_VARYING_VECTORS),y=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),v=f>0,S=a||t.has("OES_texture_float"),b=v&&S,E=a?i.getParameter(i.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:l,getMaxAnisotropy:s,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:m,maxCubemapSize:g,maxAttributes:_,maxVertexUniforms:p,maxVaryings:d,maxFragmentUniforms:y,vertexTextures:v,floatFragmentTextures:S,floatVertexTextures:b,maxSamples:E}}function g0(i){const t=this;let e=null,n=0,s=!1,r=!1;const a=new Ii,o=new Zt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const m=u.length!==0||f||n!==0||s;return s=f,n=u.length,m},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(u,f){e=h(u,f,0)},this.setState=function(u,f,m){const g=u.clippingPlanes,_=u.clipIntersection,p=u.clipShadows,d=i.get(u);if(!s||g===null||g.length===0||r&&!p)r?h(null):l();else{const y=r?0:n,v=y*4;let S=d.clippingState||null;c.value=S,S=h(g,f,v,m);for(let b=0;b!==v;++b)S[b]=e[b];d.clippingState=S,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=y}};function l(){c.value!==e&&(c.value=e,c.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,f,m,g){const _=u!==null?u.length:0;let p=null;if(_!==0){if(p=c.value,g!==!0||p===null){const d=m+_*4,y=f.matrixWorldInverse;o.getNormalMatrix(y),(p===null||p.length<d)&&(p=new Float32Array(d));for(let v=0,S=m;v!==_;++v,S+=4)a.copy(u[v]).applyMatrix4(y,o),a.normal.toArray(p,S),p[S+3]=a.constant}c.value=p,c.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,p}}function _0(i){let t=new WeakMap;function e(a,o){return o===Jl?a.mapping=Er:o===th&&(a.mapping=Ar),a}function n(a){if(a&&a.isTexture){const o=a.mapping;if(o===Jl||o===th)if(t.has(a)){const c=t.get(a).texture;return e(c,a.mapping)}else{const c=a.image;if(c&&c.height>0){const l=new A_(c.height);return l.fromEquirectangularTexture(i,a),t.set(a,l),a.addEventListener("dispose",s),e(l.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const c=t.get(o);c!==void 0&&(t.delete(o),c.dispose())}function r(){t=new WeakMap}return{get:n,dispose:r}}class y0 extends lp{constructor(t=-1,e=1,n=1,s=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=s,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,s,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=s,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=n-t,a=n+t,o=s+e,c=s-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=l*this.view.offsetX,a=r+l*this.view.width,o-=h*this.view.offsetY,c=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,c,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const gr=4,Td=[.125,.215,.35,.446,.526,.582],Cs=20,Fl=new y0,Ed=new xt;let kl=null,Ul=0,Bl=0;const Es=(1+Math.sqrt(5))/2,ur=1/Es,Ad=[new N(1,1,1),new N(-1,1,1),new N(1,1,-1),new N(-1,1,-1),new N(0,Es,ur),new N(0,Es,-ur),new N(ur,0,Es),new N(-ur,0,Es),new N(Es,ur,0),new N(-Es,ur,0)];class Cd{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,s=100){kl=this._renderer.getRenderTarget(),Ul=this._renderer.getActiveCubeFace(),Bl=this._renderer.getActiveMipmapLevel(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(t,n,s,r),e>0&&this._blur(r,0,0,e),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Dd(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Rd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(kl,Ul,Bl),t.scissorTest=!1,Ta(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===Er||t.mapping===Ar?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),kl=this._renderer.getRenderTarget(),Ul=this._renderer.getActiveCubeFace(),Bl=this._renderer.getActiveMipmapLevel();const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:pn,minFilter:pn,generateMipmaps:!1,type:Do,format:Yn,colorSpace:fs,depthBuffer:!1},s=Id(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Id(t,e,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=v0(r)),this._blurMaterial=x0(r,t,e)}return s}_compileMaterial(t){const e=new En(this._lodPlanes[0],t);this._renderer.compile(e,Fl)}_sceneToCubeUV(t,e,n,s){const o=new Tn(90,1,e,n),c=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(Ed),h.toneMapping=ss,h.autoClear=!1;const m=new sp({name:"PMREM.Background",side:un,depthWrite:!1,depthTest:!1}),g=new En(new li,m);let _=!1;const p=t.background;p?p.isColor&&(m.color.copy(p),t.background=null,_=!0):(m.color.copy(Ed),_=!0);for(let d=0;d<6;d++){const y=d%3;y===0?(o.up.set(0,c[d],0),o.lookAt(l[d],0,0)):y===1?(o.up.set(0,0,c[d]),o.lookAt(0,l[d],0)):(o.up.set(0,c[d],0),o.lookAt(0,0,l[d]));const v=this._cubeSize;Ta(s,y*v,d>2?v:0,v,v),h.setRenderTarget(s),_&&h.render(g,o),h.render(t,o)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=f,h.autoClear=u,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,s=t.mapping===Er||t.mapping===Ar;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=Dd()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Rd());const r=s?this._cubemapMaterial:this._equirectMaterial,a=new En(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=t;const c=this._cubeSize;Ta(e,0,0,3*c,2*c),n.setRenderTarget(e),n.render(a,Fl)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const r=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=Ad[(s-1)%Ad.length];this._blur(t,s-1,s,r,a)}e.autoClear=n}_blur(t,e,n,s,r){const a=this._pingPongRenderTarget;this._halfBlur(t,a,e,n,s,"latitudinal",r),this._halfBlur(a,t,n,n,s,"longitudinal",r)}_halfBlur(t,e,n,s,r,a,o){const c=this._renderer,l=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new En(this._lodPlanes[s],l),f=l.uniforms,m=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*m):2*Math.PI/(2*Cs-1),_=r/g,p=isFinite(r)?1+Math.floor(h*_):Cs;p>Cs&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Cs}`);const d=[];let y=0;for(let M=0;M<Cs;++M){const C=M/_,k=Math.exp(-C*C/2);d.push(k),M===0?y+=k:M<p&&(y+=2*k)}for(let M=0;M<d.length;M++)d[M]=d[M]/y;f.envMap.value=t.texture,f.samples.value=p,f.weights.value=d,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:v}=this;f.dTheta.value=g,f.mipInt.value=v-n;const S=this._sizeLods[s],b=3*S*(s>v-gr?s-v+gr:0),E=4*(this._cubeSize-S);Ta(e,b,E,3*S,2*S),c.setRenderTarget(e),c.render(u,Fl)}}function v0(i){const t=[],e=[],n=[];let s=i;const r=i-gr+1+Td.length;for(let a=0;a<r;a++){const o=Math.pow(2,s);e.push(o);let c=1/o;a>i-gr?c=Td[a-i+gr-1]:a===0&&(c=0),n.push(c);const l=1/(o-2),h=-l,u=1+l,f=[h,h,u,h,u,u,h,h,u,u,h,u],m=6,g=6,_=3,p=2,d=1,y=new Float32Array(_*g*m),v=new Float32Array(p*g*m),S=new Float32Array(d*g*m);for(let E=0;E<m;E++){const M=E%3*2/3-1,C=E>2?0:-1,k=[M,C,0,M+2/3,C,0,M+2/3,C+1,0,M,C,0,M+2/3,C+1,0,M,C+1,0];y.set(k,_*g*E),v.set(f,p*g*E);const x=[E,E,E,E,E,E];S.set(x,d*g*E)}const b=new mi;b.setAttribute("position",new oi(y,_)),b.setAttribute("uv",new oi(v,p)),b.setAttribute("faceIndex",new oi(S,d)),t.push(b),s>gr&&s--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function Id(i,t,e){const n=new Ls(i,t,e);return n.texture.mapping=Wc,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ta(i,t,e,n,s){i.viewport.set(t,e,n,s),i.scissor.set(t,e,n,s)}function x0(i,t,e){const n=new Float32Array(Cs),s=new N(0,1,0);return new Fi({name:"SphericalGaussianBlur",defines:{n:Cs,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:Oh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:is,depthTest:!1,depthWrite:!1})}function Rd(){return new Fi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Oh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:is,depthTest:!1,depthWrite:!1})}function Dd(){return new Fi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Oh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:is,depthTest:!1,depthWrite:!1})}function Oh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function S0(i){let t=new WeakMap,e=null;function n(o){if(o&&o.isTexture){const c=o.mapping,l=c===Jl||c===th,h=c===Er||c===Ar;if(l||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=t.get(o);return e===null&&(e=new Cd(i)),u=l?e.fromEquirectangular(o,u):e.fromCubemap(o,u),t.set(o,u),u.texture}else{if(t.has(o))return t.get(o).texture;{const u=o.image;if(l&&u&&u.height>0||h&&u&&s(u)){e===null&&(e=new Cd(i));const f=l?e.fromEquirectangular(o):e.fromCubemap(o);return t.set(o,f),o.addEventListener("dispose",r),f.texture}else return null}}}return o}function s(o){let c=0;const l=6;for(let h=0;h<l;h++)o[h]!==void 0&&c++;return c===l}function r(o){const c=o.target;c.removeEventListener("dispose",r);const l=t.get(c);l!==void 0&&(t.delete(c),l.dispose())}function a(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:a}}function b0(i){const t={};function e(n){if(t[n]!==void 0)return t[n];let s;switch(n){case"WEBGL_depth_texture":s=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=i.getExtension(n)}return t[n]=s,s}return{has:function(n){return e(n)!==null},init:function(n){n.isWebGL2?(e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance")):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(n){const s=e(n);return s===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),s}}}function M0(i,t,e,n){const s={},r=new WeakMap;function a(u){const f=u.target;f.index!==null&&t.remove(f.index);for(const g in f.attributes)t.remove(f.attributes[g]);for(const g in f.morphAttributes){const _=f.morphAttributes[g];for(let p=0,d=_.length;p<d;p++)t.remove(_[p])}f.removeEventListener("dispose",a),delete s[f.id];const m=r.get(f);m&&(t.remove(m),r.delete(f)),n.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,e.memory.geometries--}function o(u,f){return s[f.id]===!0||(f.addEventListener("dispose",a),s[f.id]=!0,e.memory.geometries++),f}function c(u){const f=u.attributes;for(const g in f)t.update(f[g],i.ARRAY_BUFFER);const m=u.morphAttributes;for(const g in m){const _=m[g];for(let p=0,d=_.length;p<d;p++)t.update(_[p],i.ARRAY_BUFFER)}}function l(u){const f=[],m=u.index,g=u.attributes.position;let _=0;if(m!==null){const y=m.array;_=m.version;for(let v=0,S=y.length;v<S;v+=3){const b=y[v+0],E=y[v+1],M=y[v+2];f.push(b,E,E,M,M,b)}}else if(g!==void 0){const y=g.array;_=g.version;for(let v=0,S=y.length/3-1;v<S;v+=3){const b=v+0,E=v+1,M=v+2;f.push(b,E,E,M,M,b)}}else return;const p=new(Jf(f)?op:rp)(f,1);p.version=_;const d=r.get(u);d&&t.remove(d),r.set(u,p)}function h(u){const f=r.get(u);if(f){const m=u.index;m!==null&&f.version<m.version&&l(u)}else l(u);return r.get(u)}return{get:o,update:c,getWireframeAttribute:h}}function w0(i,t,e,n){const s=n.isWebGL2;let r;function a(m){r=m}let o,c;function l(m){o=m.type,c=m.bytesPerElement}function h(m,g){i.drawElements(r,g,o,m*c),e.update(g,r,1)}function u(m,g,_){if(_===0)return;let p,d;if(s)p=i,d="drawElementsInstanced";else if(p=t.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[d](r,g,o,m*c,_),e.update(g,r,_)}function f(m,g,_){if(_===0)return;const p=t.get("WEBGL_multi_draw");if(p===null)for(let d=0;d<_;d++)this.render(m[d]/c,g[d]);else{p.multiDrawElementsWEBGL(r,g,0,o,m,0,_);let d=0;for(let y=0;y<_;y++)d+=g[y];e.update(d,r,1)}}this.setMode=a,this.setIndex=l,this.render=h,this.renderInstances=u,this.renderMultiDraw=f}function T0(i){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(e.calls++,a){case i.TRIANGLES:e.triangles+=o*(r/3);break;case i.LINES:e.lines+=o*(r/2);break;case i.LINE_STRIP:e.lines+=o*(r-1);break;case i.LINE_LOOP:e.lines+=o*r;break;case i.POINTS:e.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:s,update:n}}function E0(i,t){return i[0]-t[0]}function A0(i,t){return Math.abs(t[1])-Math.abs(i[1])}function C0(i,t,e){const n={},s=new Float32Array(8),r=new WeakMap,a=new xe,o=[];for(let l=0;l<8;l++)o[l]=[l,0];function c(l,h,u){const f=l.morphTargetInfluences;if(t.isWebGL2===!0){const g=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,_=g!==void 0?g.length:0;let p=r.get(h);if(p===void 0||p.count!==_){let G=function(){A.dispose(),r.delete(h),h.removeEventListener("dispose",G)};var m=G;p!==void 0&&p.texture.dispose();const d=h.morphAttributes.position!==void 0,y=h.morphAttributes.normal!==void 0,v=h.morphAttributes.color!==void 0,S=h.morphAttributes.position||[],b=h.morphAttributes.normal||[],E=h.morphAttributes.color||[];let M=0;d===!0&&(M=1),y===!0&&(M=2),v===!0&&(M=3);let C=h.attributes.position.count*M,k=1;C>t.maxTextureSize&&(k=Math.ceil(C/t.maxTextureSize),C=t.maxTextureSize);const x=new Float32Array(C*k*4*_),A=new np(x,C,k,_);A.type=Ri,A.needsUpdate=!0;const F=M*4;for(let D=0;D<_;D++){const V=S[D],U=b[D],H=E[D],W=C*k*4*D;for(let q=0;q<V.count;q++){const Y=q*F;d===!0&&(a.fromBufferAttribute(V,q),x[W+Y+0]=a.x,x[W+Y+1]=a.y,x[W+Y+2]=a.z,x[W+Y+3]=0),y===!0&&(a.fromBufferAttribute(U,q),x[W+Y+4]=a.x,x[W+Y+5]=a.y,x[W+Y+6]=a.z,x[W+Y+7]=0),v===!0&&(a.fromBufferAttribute(H,q),x[W+Y+8]=a.x,x[W+Y+9]=a.y,x[W+Y+10]=a.z,x[W+Y+11]=H.itemSize===4?a.w:1)}}p={count:_,texture:A,size:new bt(C,k)},r.set(h,p),h.addEventListener("dispose",G)}if(l.isInstancedMesh===!0&&l.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",l.morphTexture,e);else{let d=0;for(let v=0;v<f.length;v++)d+=f[v];const y=h.morphTargetsRelative?1:1-d;u.getUniforms().setValue(i,"morphTargetBaseInfluence",y),u.getUniforms().setValue(i,"morphTargetInfluences",f)}u.getUniforms().setValue(i,"morphTargetsTexture",p.texture,e),u.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}else{const g=f===void 0?0:f.length;let _=n[h.id];if(_===void 0||_.length!==g){_=[];for(let S=0;S<g;S++)_[S]=[S,0];n[h.id]=_}for(let S=0;S<g;S++){const b=_[S];b[0]=S,b[1]=f[S]}_.sort(A0);for(let S=0;S<8;S++)S<g&&_[S][1]?(o[S][0]=_[S][0],o[S][1]=_[S][1]):(o[S][0]=Number.MAX_SAFE_INTEGER,o[S][1]=0);o.sort(E0);const p=h.morphAttributes.position,d=h.morphAttributes.normal;let y=0;for(let S=0;S<8;S++){const b=o[S],E=b[0],M=b[1];E!==Number.MAX_SAFE_INTEGER&&M?(p&&h.getAttribute("morphTarget"+S)!==p[E]&&h.setAttribute("morphTarget"+S,p[E]),d&&h.getAttribute("morphNormal"+S)!==d[E]&&h.setAttribute("morphNormal"+S,d[E]),s[S]=M,y+=M):(p&&h.hasAttribute("morphTarget"+S)===!0&&h.deleteAttribute("morphTarget"+S),d&&h.hasAttribute("morphNormal"+S)===!0&&h.deleteAttribute("morphNormal"+S),s[S]=0)}const v=h.morphTargetsRelative?1:1-y;u.getUniforms().setValue(i,"morphTargetBaseInfluence",v),u.getUniforms().setValue(i,"morphTargetInfluences",s)}}return{update:c}}function I0(i,t,e,n){let s=new WeakMap;function r(c){const l=n.render.frame,h=c.geometry,u=t.get(c,h);if(s.get(u)!==l&&(t.update(u),s.set(u,l)),c.isInstancedMesh&&(c.hasEventListener("dispose",o)===!1&&c.addEventListener("dispose",o),s.get(c)!==l&&(e.update(c.instanceMatrix,i.ARRAY_BUFFER),c.instanceColor!==null&&e.update(c.instanceColor,i.ARRAY_BUFFER),s.set(c,l))),c.isSkinnedMesh){const f=c.skeleton;s.get(f)!==l&&(f.update(),s.set(f,l))}return u}function a(){s=new WeakMap}function o(c){const l=c.target;l.removeEventListener("dispose",o),e.remove(l.instanceMatrix),l.instanceColor!==null&&e.remove(l.instanceColor)}return{update:r,dispose:a}}class dp extends ze{constructor(t,e,n,s,r,a,o,c,l,h){if(h=h!==void 0?h:Ps,h!==Ps&&h!==Cr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===Ps&&(n=ts),n===void 0&&h===Cr&&(n=Ds),super(null,s,r,a,o,c,h,n,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=o!==void 0?o:on,this.minFilter=c!==void 0?c:on,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const fp=new ze,pp=new dp(1,1);pp.compareFunction=Qf;const mp=new np,gp=new u_,_p=new hp,Pd=[],Ld=[],Od=new Float32Array(16),Nd=new Float32Array(9),Fd=new Float32Array(4);function io(i,t,e){const n=i[0];if(n<=0||n>0)return i;const s=t*e;let r=Pd[s];if(r===void 0&&(r=new Float32Array(s),Pd[s]=r),t!==0){n.toArray(r,0);for(let a=1,o=0;a!==t;++a)o+=e,i[a].toArray(r,o)}return r}function Oe(i,t){if(i.length!==t.length)return!1;for(let e=0,n=i.length;e<n;e++)if(i[e]!==t[e])return!1;return!0}function Ne(i,t){for(let e=0,n=t.length;e<n;e++)i[e]=t[e]}function jc(i,t){let e=Ld[t];e===void 0&&(e=new Int32Array(t),Ld[t]=e);for(let n=0;n!==t;++n)e[n]=i.allocateTextureUnit();return e}function R0(i,t){const e=this.cache;e[0]!==t&&(i.uniform1f(this.addr,t),e[0]=t)}function D0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Oe(e,t))return;i.uniform2fv(this.addr,t),Ne(e,t)}}function P0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(i.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Oe(e,t))return;i.uniform3fv(this.addr,t),Ne(e,t)}}function L0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Oe(e,t))return;i.uniform4fv(this.addr,t),Ne(e,t)}}function O0(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(Oe(e,t))return;i.uniformMatrix2fv(this.addr,!1,t),Ne(e,t)}else{if(Oe(e,n))return;Fd.set(n),i.uniformMatrix2fv(this.addr,!1,Fd),Ne(e,n)}}function N0(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(Oe(e,t))return;i.uniformMatrix3fv(this.addr,!1,t),Ne(e,t)}else{if(Oe(e,n))return;Nd.set(n),i.uniformMatrix3fv(this.addr,!1,Nd),Ne(e,n)}}function F0(i,t){const e=this.cache,n=t.elements;if(n===void 0){if(Oe(e,t))return;i.uniformMatrix4fv(this.addr,!1,t),Ne(e,t)}else{if(Oe(e,n))return;Od.set(n),i.uniformMatrix4fv(this.addr,!1,Od),Ne(e,n)}}function k0(i,t){const e=this.cache;e[0]!==t&&(i.uniform1i(this.addr,t),e[0]=t)}function U0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Oe(e,t))return;i.uniform2iv(this.addr,t),Ne(e,t)}}function B0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Oe(e,t))return;i.uniform3iv(this.addr,t),Ne(e,t)}}function V0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Oe(e,t))return;i.uniform4iv(this.addr,t),Ne(e,t)}}function z0(i,t){const e=this.cache;e[0]!==t&&(i.uniform1ui(this.addr,t),e[0]=t)}function G0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(i.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Oe(e,t))return;i.uniform2uiv(this.addr,t),Ne(e,t)}}function W0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(i.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Oe(e,t))return;i.uniform3uiv(this.addr,t),Ne(e,t)}}function H0(i,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(i.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Oe(e,t))return;i.uniform4uiv(this.addr,t),Ne(e,t)}}function q0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s);const r=this.type===i.SAMPLER_2D_SHADOW?pp:fp;e.setTexture2D(t||r,s)}function j0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture3D(t||gp,s)}function X0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTextureCube(t||_p,s)}function K0(i,t,e){const n=this.cache,s=e.allocateTextureUnit();n[0]!==s&&(i.uniform1i(this.addr,s),n[0]=s),e.setTexture2DArray(t||mp,s)}function Y0(i){switch(i){case 5126:return R0;case 35664:return D0;case 35665:return P0;case 35666:return L0;case 35674:return O0;case 35675:return N0;case 35676:return F0;case 5124:case 35670:return k0;case 35667:case 35671:return U0;case 35668:case 35672:return B0;case 35669:case 35673:return V0;case 5125:return z0;case 36294:return G0;case 36295:return W0;case 36296:return H0;case 35678:case 36198:case 36298:case 36306:case 35682:return q0;case 35679:case 36299:case 36307:return j0;case 35680:case 36300:case 36308:case 36293:return X0;case 36289:case 36303:case 36311:case 36292:return K0}}function $0(i,t){i.uniform1fv(this.addr,t)}function Z0(i,t){const e=io(t,this.size,2);i.uniform2fv(this.addr,e)}function Q0(i,t){const e=io(t,this.size,3);i.uniform3fv(this.addr,e)}function J0(i,t){const e=io(t,this.size,4);i.uniform4fv(this.addr,e)}function tx(i,t){const e=io(t,this.size,4);i.uniformMatrix2fv(this.addr,!1,e)}function ex(i,t){const e=io(t,this.size,9);i.uniformMatrix3fv(this.addr,!1,e)}function nx(i,t){const e=io(t,this.size,16);i.uniformMatrix4fv(this.addr,!1,e)}function ix(i,t){i.uniform1iv(this.addr,t)}function sx(i,t){i.uniform2iv(this.addr,t)}function rx(i,t){i.uniform3iv(this.addr,t)}function ox(i,t){i.uniform4iv(this.addr,t)}function ax(i,t){i.uniform1uiv(this.addr,t)}function cx(i,t){i.uniform2uiv(this.addr,t)}function lx(i,t){i.uniform3uiv(this.addr,t)}function hx(i,t){i.uniform4uiv(this.addr,t)}function ux(i,t,e){const n=this.cache,s=t.length,r=jc(e,s);Oe(n,r)||(i.uniform1iv(this.addr,r),Ne(n,r));for(let a=0;a!==s;++a)e.setTexture2D(t[a]||fp,r[a])}function dx(i,t,e){const n=this.cache,s=t.length,r=jc(e,s);Oe(n,r)||(i.uniform1iv(this.addr,r),Ne(n,r));for(let a=0;a!==s;++a)e.setTexture3D(t[a]||gp,r[a])}function fx(i,t,e){const n=this.cache,s=t.length,r=jc(e,s);Oe(n,r)||(i.uniform1iv(this.addr,r),Ne(n,r));for(let a=0;a!==s;++a)e.setTextureCube(t[a]||_p,r[a])}function px(i,t,e){const n=this.cache,s=t.length,r=jc(e,s);Oe(n,r)||(i.uniform1iv(this.addr,r),Ne(n,r));for(let a=0;a!==s;++a)e.setTexture2DArray(t[a]||mp,r[a])}function mx(i){switch(i){case 5126:return $0;case 35664:return Z0;case 35665:return Q0;case 35666:return J0;case 35674:return tx;case 35675:return ex;case 35676:return nx;case 5124:case 35670:return ix;case 35667:case 35671:return sx;case 35668:case 35672:return rx;case 35669:case 35673:return ox;case 5125:return ax;case 36294:return cx;case 36295:return lx;case 36296:return hx;case 35678:case 36198:case 36298:case 36306:case 35682:return ux;case 35679:case 36299:case 36307:return dx;case 35680:case 36300:case 36308:case 36293:return fx;case 36289:case 36303:case 36311:case 36292:return px}}class gx{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=Y0(e.type)}}class _x{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=mx(e.type)}}class yx{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const s=this.seq;for(let r=0,a=s.length;r!==a;++r){const o=s[r];o.setValue(t,e[o.id],n)}}}const Vl=/(\w+)(\])?(\[|\.)?/g;function kd(i,t){i.seq.push(t),i.map[t.id]=t}function vx(i,t,e){const n=i.name,s=n.length;for(Vl.lastIndex=0;;){const r=Vl.exec(n),a=Vl.lastIndex;let o=r[1];const c=r[2]==="]",l=r[3];if(c&&(o=o|0),l===void 0||l==="["&&a+2===s){kd(e,l===void 0?new gx(o,i,t):new _x(o,i,t));break}else{let u=e.map[o];u===void 0&&(u=new yx(o),kd(e,u)),e=u}}}class La{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let s=0;s<n;++s){const r=t.getActiveUniform(e,s),a=t.getUniformLocation(e,r.name);vx(r,a,this)}}setValue(t,e,n,s){const r=this.map[e];r!==void 0&&r.setValue(t,n,s)}setOptional(t,e,n){const s=e[n];s!==void 0&&this.setValue(t,n,s)}static upload(t,e,n,s){for(let r=0,a=e.length;r!==a;++r){const o=e[r],c=n[o.id];c.needsUpdate!==!1&&o.setValue(t,c.value,s)}}static seqWithValue(t,e){const n=[];for(let s=0,r=t.length;s!==r;++s){const a=t[s];a.id in e&&n.push(a)}return n}}function Ud(i,t,e){const n=i.createShader(t);return i.shaderSource(n,e),i.compileShader(n),n}const xx=37297;let Sx=0;function bx(i,t){const e=i.split(`
`),n=[],s=Math.max(t-6,0),r=Math.min(t+6,e.length);for(let a=s;a<r;a++){const o=a+1;n.push(`${o===t?">":" "} ${o}: ${e[a]}`)}return n.join(`
`)}function Mx(i){const t=re.getPrimaries(re.workingColorSpace),e=re.getPrimaries(i);let n;switch(t===e?n="":t===Va&&e===Ba?n="LinearDisplayP3ToLinearSRGB":t===Ba&&e===Va&&(n="LinearSRGBToLinearDisplayP3"),i){case fs:case Hc:return[n,"LinearTransferOETF"];case ni:case Ch:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),[n,"LinearTransferOETF"]}}function Bd(i,t,e){const n=i.getShaderParameter(t,i.COMPILE_STATUS),s=i.getShaderInfoLog(t).trim();if(n&&s==="")return"";const r=/ERROR: 0:(\d+)/.exec(s);if(r){const a=parseInt(r[1]);return e.toUpperCase()+`

`+s+`

`+bx(i.getShaderSource(t),a)}else return s}function wx(i,t){const e=Mx(t);return`vec4 ${i}( vec4 value ) { return ${e[0]}( ${e[1]}( value ) ); }`}function Tx(i,t){let e;switch(t){case xg:e="Linear";break;case Sg:e="Reinhard";break;case bg:e="OptimizedCineon";break;case Mg:e="ACESFilmic";break;case Tg:e="AgX";break;case Eg:e="Neutral";break;case wg:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+i+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function Ex(i){return[i.extensionDerivatives||i.envMapCubeUVHeight||i.bumpMap||i.normalMapTangentSpace||i.clearcoatNormalMap||i.flatShading||i.alphaToCoverage||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(_r).join(`
`)}function Ax(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(_r).join(`
`)}function Cx(i){const t=[];for(const e in i){const n=i[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function Ix(i,t){const e={},n=i.getProgramParameter(t,i.ACTIVE_ATTRIBUTES);for(let s=0;s<n;s++){const r=i.getActiveAttrib(t,s),a=r.name;let o=1;r.type===i.FLOAT_MAT2&&(o=2),r.type===i.FLOAT_MAT3&&(o=3),r.type===i.FLOAT_MAT4&&(o=4),e[a]={type:r.type,location:i.getAttribLocation(t,a),locationSize:o}}return e}function _r(i){return i!==""}function Vd(i,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function zd(i,t){return i.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const Rx=/^[ \t]*#include +<([\w\d./]+)>/gm;function oh(i){return i.replace(Rx,Px)}const Dx=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function Px(i,t){let e=$t[t];if(e===void 0){const n=Dx.get(t);if(n!==void 0)e=$t[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return oh(e)}const Lx=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Gd(i){return i.replace(Lx,Ox)}function Ox(i,t,e,n){let s="";for(let r=parseInt(t);r<parseInt(e);r++)s+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return s}function Wd(i){let t=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	`;return i.isWebGL2&&(t+=`precision ${i.precision} sampler3D;
		precision ${i.precision} sampler2DArray;
		precision ${i.precision} sampler2DShadow;
		precision ${i.precision} samplerCubeShadow;
		precision ${i.precision} sampler2DArrayShadow;
		precision ${i.precision} isampler2D;
		precision ${i.precision} isampler3D;
		precision ${i.precision} isamplerCube;
		precision ${i.precision} isampler2DArray;
		precision ${i.precision} usampler2D;
		precision ${i.precision} usampler3D;
		precision ${i.precision} usamplerCube;
		precision ${i.precision} usampler2DArray;
		`),i.precision==="highp"?t+=`
#define HIGH_PRECISION`:i.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function Nx(i){let t="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Gf?t="SHADOWMAP_TYPE_PCF":i.shadowMapType===Wf?t="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Ai&&(t="SHADOWMAP_TYPE_VSM"),t}function Fx(i){let t="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Er:case Ar:t="ENVMAP_TYPE_CUBE";break;case Wc:t="ENVMAP_TYPE_CUBE_UV";break}return t}function kx(i){let t="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Ar:t="ENVMAP_MODE_REFRACTION";break}return t}function Ux(i){let t="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Gc:t="ENVMAP_BLENDING_MULTIPLY";break;case yg:t="ENVMAP_BLENDING_MIX";break;case vg:t="ENVMAP_BLENDING_ADD";break}return t}function Bx(i){const t=i.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function Vx(i,t,e,n){const s=i.getContext(),r=e.defines;let a=e.vertexShader,o=e.fragmentShader;const c=Nx(e),l=Fx(e),h=kx(e),u=Ux(e),f=Bx(e),m=e.isWebGL2?"":Ex(e),g=Ax(e),_=Cx(r),p=s.createProgram();let d,y,v=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(d=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_].filter(_r).join(`
`),d.length>0&&(d+=`
`),y=[m,"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_].filter(_r).join(`
`),y.length>0&&(y+=`
`)):(d=[Wd(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(_r).join(`
`),y=[m,Wd(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,_,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+c:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.useLegacyLights?"#define LEGACY_LIGHTS":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==ss?"#define TONE_MAPPING":"",e.toneMapping!==ss?$t.tonemapping_pars_fragment:"",e.toneMapping!==ss?Tx("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",$t.colorspace_pars_fragment,wx("linearToOutputTexel",e.outputColorSpace),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(_r).join(`
`)),a=oh(a),a=Vd(a,e),a=zd(a,e),o=oh(o),o=Vd(o,e),o=zd(o,e),a=Gd(a),o=Gd(o),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,d=[g,"precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+d,y=["precision mediump sampler2DArray;","#define varying in",e.glslVersion===rd?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===rd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const S=v+d+a,b=v+y+o,E=Ud(s,s.VERTEX_SHADER,S),M=Ud(s,s.FRAGMENT_SHADER,b);s.attachShader(p,E),s.attachShader(p,M),e.index0AttributeName!==void 0?s.bindAttribLocation(p,0,e.index0AttributeName):e.morphTargets===!0&&s.bindAttribLocation(p,0,"position"),s.linkProgram(p);function C(F){if(i.debug.checkShaderErrors){const G=s.getProgramInfoLog(p).trim(),D=s.getShaderInfoLog(E).trim(),V=s.getShaderInfoLog(M).trim();let U=!0,H=!0;if(s.getProgramParameter(p,s.LINK_STATUS)===!1)if(U=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(s,p,E,M);else{const W=Bd(s,E,"vertex"),q=Bd(s,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(p,s.VALIDATE_STATUS)+`

Material Name: `+F.name+`
Material Type: `+F.type+`

Program Info Log: `+G+`
`+W+`
`+q)}else G!==""?console.warn("THREE.WebGLProgram: Program Info Log:",G):(D===""||V==="")&&(H=!1);H&&(F.diagnostics={runnable:U,programLog:G,vertexShader:{log:D,prefix:d},fragmentShader:{log:V,prefix:y}})}s.deleteShader(E),s.deleteShader(M),k=new La(s,p),x=Ix(s,p)}let k;this.getUniforms=function(){return k===void 0&&C(this),k};let x;this.getAttributes=function(){return x===void 0&&C(this),x};let A=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return A===!1&&(A=s.getProgramParameter(p,xx)),A},this.destroy=function(){n.releaseStatesOfProgram(this),s.deleteProgram(p),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=Sx++,this.cacheKey=t,this.usedTimes=1,this.program=p,this.vertexShader=E,this.fragmentShader=M,this}let zx=0;class Gx{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,s=this._getShaderStage(e),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(t);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new Wx(t),e.set(t,n)),n}}class Wx{constructor(t){this.id=zx++,this.code=t,this.usedTimes=0}}function Hx(i,t,e,n,s,r,a){const o=new Ph,c=new Gx,l=new Set,h=[],u=s.isWebGL2,f=s.logarithmicDepthBuffer,m=s.vertexTextures;let g=s.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(x){return l.add(x),x===0?"uv":`uv${x}`}function d(x,A,F,G,D){const V=G.fog,U=D.geometry,H=x.isMeshStandardMaterial?G.environment:null,W=(x.isMeshStandardMaterial?e:t).get(x.envMap||H),q=W&&W.mapping===Wc?W.image.height:null,Y=_[x.type];x.precision!==null&&(g=s.getMaxPrecision(x.precision),g!==x.precision&&console.warn("THREE.WebGLProgram.getParameters:",x.precision,"not supported, using",g,"instead."));const tt=U.morphAttributes.position||U.morphAttributes.normal||U.morphAttributes.color,ht=tt!==void 0?tt.length:0;let It=0;U.morphAttributes.position!==void 0&&(It=1),U.morphAttributes.normal!==void 0&&(It=2),U.morphAttributes.color!==void 0&&(It=3);let X,J,ut,Et;if(Y){const se=ii[Y];X=se.vertexShader,J=se.fragmentShader}else X=x.vertexShader,J=x.fragmentShader,c.update(x),ut=c.getVertexShaderID(x),Et=c.getFragmentShaderID(x);const st=i.getRenderTarget(),vt=D.isInstancedMesh===!0,Kt=D.isBatchedMesh===!0,kt=!!x.map,B=!!x.matcap,Ie=!!W,Lt=!!x.aoMap,nt=!!x.lightMap,at=!!x.bumpMap,Rt=!!x.normalMap,Mt=!!x.displacementMap,_t=!!x.emissiveMap,Vt=!!x.metalnessMap,R=!!x.roughnessMap,T=x.anisotropy>0,Q=x.clearcoat>0,et=x.iridescence>0,lt=x.sheen>0,ot=x.transmission>0,Wt=T&&!!x.anisotropyMap,Ut=Q&&!!x.clearcoatMap,pt=Q&&!!x.clearcoatNormalMap,gt=Q&&!!x.clearcoatRoughnessMap,Ht=et&&!!x.iridescenceMap,ft=et&&!!x.iridescenceThicknessMap,Me=lt&&!!x.sheenColorMap,Qt=lt&&!!x.sheenRoughnessMap,Ft=!!x.specularMap,wt=!!x.specularColorMap,Dt=!!x.specularIntensityMap,P=ot&&!!x.transmissionMap,it=ot&&!!x.thicknessMap,At=!!x.gradientMap,O=!!x.alphaMap,dt=x.alphaTest>0,j=!!x.alphaHash,ct=!!x.extensions;let yt=ss;x.toneMapped&&(st===null||st.isXRRenderTarget===!0)&&(yt=i.toneMapping);const te={isWebGL2:u,shaderID:Y,shaderType:x.type,shaderName:x.name,vertexShader:X,fragmentShader:J,defines:x.defines,customVertexShaderID:ut,customFragmentShaderID:Et,isRawShaderMaterial:x.isRawShaderMaterial===!0,glslVersion:x.glslVersion,precision:g,batching:Kt,instancing:vt,instancingColor:vt&&D.instanceColor!==null,instancingMorph:vt&&D.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:st===null?i.outputColorSpace:st.isXRRenderTarget===!0?st.texture.colorSpace:fs,alphaToCoverage:!!x.alphaToCoverage,map:kt,matcap:B,envMap:Ie,envMapMode:Ie&&W.mapping,envMapCubeUVHeight:q,aoMap:Lt,lightMap:nt,bumpMap:at,normalMap:Rt,displacementMap:m&&Mt,emissiveMap:_t,normalMapObjectSpace:Rt&&x.normalMapType===kg,normalMapTangentSpace:Rt&&x.normalMapType===eo,metalnessMap:Vt,roughnessMap:R,anisotropy:T,anisotropyMap:Wt,clearcoat:Q,clearcoatMap:Ut,clearcoatNormalMap:pt,clearcoatRoughnessMap:gt,iridescence:et,iridescenceMap:Ht,iridescenceThicknessMap:ft,sheen:lt,sheenColorMap:Me,sheenRoughnessMap:Qt,specularMap:Ft,specularColorMap:wt,specularIntensityMap:Dt,transmission:ot,transmissionMap:P,thicknessMap:it,gradientMap:At,opaque:x.transparent===!1&&x.blending===Sr&&x.alphaToCoverage===!1,alphaMap:O,alphaTest:dt,alphaHash:j,combine:x.combine,mapUv:kt&&p(x.map.channel),aoMapUv:Lt&&p(x.aoMap.channel),lightMapUv:nt&&p(x.lightMap.channel),bumpMapUv:at&&p(x.bumpMap.channel),normalMapUv:Rt&&p(x.normalMap.channel),displacementMapUv:Mt&&p(x.displacementMap.channel),emissiveMapUv:_t&&p(x.emissiveMap.channel),metalnessMapUv:Vt&&p(x.metalnessMap.channel),roughnessMapUv:R&&p(x.roughnessMap.channel),anisotropyMapUv:Wt&&p(x.anisotropyMap.channel),clearcoatMapUv:Ut&&p(x.clearcoatMap.channel),clearcoatNormalMapUv:pt&&p(x.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:gt&&p(x.clearcoatRoughnessMap.channel),iridescenceMapUv:Ht&&p(x.iridescenceMap.channel),iridescenceThicknessMapUv:ft&&p(x.iridescenceThicknessMap.channel),sheenColorMapUv:Me&&p(x.sheenColorMap.channel),sheenRoughnessMapUv:Qt&&p(x.sheenRoughnessMap.channel),specularMapUv:Ft&&p(x.specularMap.channel),specularColorMapUv:wt&&p(x.specularColorMap.channel),specularIntensityMapUv:Dt&&p(x.specularIntensityMap.channel),transmissionMapUv:P&&p(x.transmissionMap.channel),thicknessMapUv:it&&p(x.thicknessMap.channel),alphaMapUv:O&&p(x.alphaMap.channel),vertexTangents:!!U.attributes.tangent&&(Rt||T),vertexColors:x.vertexColors,vertexAlphas:x.vertexColors===!0&&!!U.attributes.color&&U.attributes.color.itemSize===4,pointsUvs:D.isPoints===!0&&!!U.attributes.uv&&(kt||O),fog:!!V,useFog:x.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:x.flatShading===!0,sizeAttenuation:x.sizeAttenuation===!0,logarithmicDepthBuffer:f,skinning:D.isSkinnedMesh===!0,morphTargets:U.morphAttributes.position!==void 0,morphNormals:U.morphAttributes.normal!==void 0,morphColors:U.morphAttributes.color!==void 0,morphTargetsCount:ht,morphTextureStride:It,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numLightProbes:A.numLightProbes,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:x.dithering,shadowMapEnabled:i.shadowMap.enabled&&F.length>0,shadowMapType:i.shadowMap.type,toneMapping:yt,useLegacyLights:i._useLegacyLights,decodeVideoTexture:kt&&x.map.isVideoTexture===!0&&re.getTransfer(x.map.colorSpace)===fe,premultipliedAlpha:x.premultipliedAlpha,doubleSided:x.side===si,flipSided:x.side===un,useDepthPacking:x.depthPacking>=0,depthPacking:x.depthPacking||0,index0AttributeName:x.index0AttributeName,extensionDerivatives:ct&&x.extensions.derivatives===!0,extensionFragDepth:ct&&x.extensions.fragDepth===!0,extensionDrawBuffers:ct&&x.extensions.drawBuffers===!0,extensionShaderTextureLOD:ct&&x.extensions.shaderTextureLOD===!0,extensionClipCullDistance:ct&&x.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:ct&&x.extensions.multiDraw===!0&&n.has("WEBGL_multi_draw"),rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:x.customProgramCacheKey()};return te.vertexUv1s=l.has(1),te.vertexUv2s=l.has(2),te.vertexUv3s=l.has(3),l.clear(),te}function y(x){const A=[];if(x.shaderID?A.push(x.shaderID):(A.push(x.customVertexShaderID),A.push(x.customFragmentShaderID)),x.defines!==void 0)for(const F in x.defines)A.push(F),A.push(x.defines[F]);return x.isRawShaderMaterial===!1&&(v(A,x),S(A,x),A.push(i.outputColorSpace)),A.push(x.customProgramCacheKey),A.join()}function v(x,A){x.push(A.precision),x.push(A.outputColorSpace),x.push(A.envMapMode),x.push(A.envMapCubeUVHeight),x.push(A.mapUv),x.push(A.alphaMapUv),x.push(A.lightMapUv),x.push(A.aoMapUv),x.push(A.bumpMapUv),x.push(A.normalMapUv),x.push(A.displacementMapUv),x.push(A.emissiveMapUv),x.push(A.metalnessMapUv),x.push(A.roughnessMapUv),x.push(A.anisotropyMapUv),x.push(A.clearcoatMapUv),x.push(A.clearcoatNormalMapUv),x.push(A.clearcoatRoughnessMapUv),x.push(A.iridescenceMapUv),x.push(A.iridescenceThicknessMapUv),x.push(A.sheenColorMapUv),x.push(A.sheenRoughnessMapUv),x.push(A.specularMapUv),x.push(A.specularColorMapUv),x.push(A.specularIntensityMapUv),x.push(A.transmissionMapUv),x.push(A.thicknessMapUv),x.push(A.combine),x.push(A.fogExp2),x.push(A.sizeAttenuation),x.push(A.morphTargetsCount),x.push(A.morphAttributeCount),x.push(A.numDirLights),x.push(A.numPointLights),x.push(A.numSpotLights),x.push(A.numSpotLightMaps),x.push(A.numHemiLights),x.push(A.numRectAreaLights),x.push(A.numDirLightShadows),x.push(A.numPointLightShadows),x.push(A.numSpotLightShadows),x.push(A.numSpotLightShadowsWithMaps),x.push(A.numLightProbes),x.push(A.shadowMapType),x.push(A.toneMapping),x.push(A.numClippingPlanes),x.push(A.numClipIntersection),x.push(A.depthPacking)}function S(x,A){o.disableAll(),A.isWebGL2&&o.enable(0),A.supportsVertexTextures&&o.enable(1),A.instancing&&o.enable(2),A.instancingColor&&o.enable(3),A.instancingMorph&&o.enable(4),A.matcap&&o.enable(5),A.envMap&&o.enable(6),A.normalMapObjectSpace&&o.enable(7),A.normalMapTangentSpace&&o.enable(8),A.clearcoat&&o.enable(9),A.iridescence&&o.enable(10),A.alphaTest&&o.enable(11),A.vertexColors&&o.enable(12),A.vertexAlphas&&o.enable(13),A.vertexUv1s&&o.enable(14),A.vertexUv2s&&o.enable(15),A.vertexUv3s&&o.enable(16),A.vertexTangents&&o.enable(17),A.anisotropy&&o.enable(18),A.alphaHash&&o.enable(19),A.batching&&o.enable(20),x.push(o.mask),o.disableAll(),A.fog&&o.enable(0),A.useFog&&o.enable(1),A.flatShading&&o.enable(2),A.logarithmicDepthBuffer&&o.enable(3),A.skinning&&o.enable(4),A.morphTargets&&o.enable(5),A.morphNormals&&o.enable(6),A.morphColors&&o.enable(7),A.premultipliedAlpha&&o.enable(8),A.shadowMapEnabled&&o.enable(9),A.useLegacyLights&&o.enable(10),A.doubleSided&&o.enable(11),A.flipSided&&o.enable(12),A.useDepthPacking&&o.enable(13),A.dithering&&o.enable(14),A.transmission&&o.enable(15),A.sheen&&o.enable(16),A.opaque&&o.enable(17),A.pointsUvs&&o.enable(18),A.decodeVideoTexture&&o.enable(19),A.alphaToCoverage&&o.enable(20),x.push(o.mask)}function b(x){const A=_[x.type];let F;if(A){const G=ii[A];F=cp.clone(G.uniforms)}else F=x.uniforms;return F}function E(x,A){let F;for(let G=0,D=h.length;G<D;G++){const V=h[G];if(V.cacheKey===A){F=V,++F.usedTimes;break}}return F===void 0&&(F=new Vx(i,A,x,r),h.push(F)),F}function M(x){if(--x.usedTimes===0){const A=h.indexOf(x);h[A]=h[h.length-1],h.pop(),x.destroy()}}function C(x){c.remove(x)}function k(){c.dispose()}return{getParameters:d,getProgramCacheKey:y,getUniforms:b,acquireProgram:E,releaseProgram:M,releaseShaderCache:C,programs:h,dispose:k}}function qx(){let i=new WeakMap;function t(r){let a=i.get(r);return a===void 0&&(a={},i.set(r,a)),a}function e(r){i.delete(r)}function n(r,a,o){i.get(r)[a]=o}function s(){i=new WeakMap}return{get:t,remove:e,update:n,dispose:s}}function jx(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.material.id!==t.material.id?i.material.id-t.material.id:i.z!==t.z?i.z-t.z:i.id-t.id}function Hd(i,t){return i.groupOrder!==t.groupOrder?i.groupOrder-t.groupOrder:i.renderOrder!==t.renderOrder?i.renderOrder-t.renderOrder:i.z!==t.z?t.z-i.z:i.id-t.id}function qd(){const i=[];let t=0;const e=[],n=[],s=[];function r(){t=0,e.length=0,n.length=0,s.length=0}function a(u,f,m,g,_,p){let d=i[t];return d===void 0?(d={id:u.id,object:u,geometry:f,material:m,groupOrder:g,renderOrder:u.renderOrder,z:_,group:p},i[t]=d):(d.id=u.id,d.object=u,d.geometry=f,d.material=m,d.groupOrder=g,d.renderOrder=u.renderOrder,d.z=_,d.group=p),t++,d}function o(u,f,m,g,_,p){const d=a(u,f,m,g,_,p);m.transmission>0?n.push(d):m.transparent===!0?s.push(d):e.push(d)}function c(u,f,m,g,_,p){const d=a(u,f,m,g,_,p);m.transmission>0?n.unshift(d):m.transparent===!0?s.unshift(d):e.unshift(d)}function l(u,f){e.length>1&&e.sort(u||jx),n.length>1&&n.sort(f||Hd),s.length>1&&s.sort(f||Hd)}function h(){for(let u=t,f=i.length;u<f;u++){const m=i[u];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:e,transmissive:n,transparent:s,init:r,push:o,unshift:c,finish:h,sort:l}}function Xx(){let i=new WeakMap;function t(n,s){const r=i.get(n);let a;return r===void 0?(a=new qd,i.set(n,[a])):s>=r.length?(a=new qd,r.push(a)):a=r[s],a}function e(){i=new WeakMap}return{get:t,dispose:e}}function Kx(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new N,color:new xt};break;case"SpotLight":e={position:new N,direction:new N,color:new xt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new N,color:new xt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new N,skyColor:new xt,groundColor:new xt};break;case"RectAreaLight":e={color:new xt,position:new N,halfWidth:new N,halfHeight:new N};break}return i[t.id]=e,e}}}function Yx(){const i={};return{get:function(t){if(i[t.id]!==void 0)return i[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new bt};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new bt};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new bt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[t.id]=e,e}}}let $x=0;function Zx(i,t){return(t.castShadow?2:0)-(i.castShadow?2:0)+(t.map?1:0)-(i.map?1:0)}function Qx(i,t){const e=new Kx,n=Yx(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let h=0;h<9;h++)s.probe.push(new N);const r=new N,a=new Se,o=new Se;function c(h,u){let f=0,m=0,g=0;for(let F=0;F<9;F++)s.probe[F].set(0,0,0);let _=0,p=0,d=0,y=0,v=0,S=0,b=0,E=0,M=0,C=0,k=0;h.sort(Zx);const x=u===!0?Math.PI:1;for(let F=0,G=h.length;F<G;F++){const D=h[F],V=D.color,U=D.intensity,H=D.distance,W=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)f+=V.r*U*x,m+=V.g*U*x,g+=V.b*U*x;else if(D.isLightProbe){for(let q=0;q<9;q++)s.probe[q].addScaledVector(D.sh.coefficients[q],U);k++}else if(D.isDirectionalLight){const q=e.get(D);if(q.color.copy(D.color).multiplyScalar(D.intensity*x),D.castShadow){const Y=D.shadow,tt=n.get(D);tt.shadowBias=Y.bias,tt.shadowNormalBias=Y.normalBias,tt.shadowRadius=Y.radius,tt.shadowMapSize=Y.mapSize,s.directionalShadow[_]=tt,s.directionalShadowMap[_]=W,s.directionalShadowMatrix[_]=D.shadow.matrix,S++}s.directional[_]=q,_++}else if(D.isSpotLight){const q=e.get(D);q.position.setFromMatrixPosition(D.matrixWorld),q.color.copy(V).multiplyScalar(U*x),q.distance=H,q.coneCos=Math.cos(D.angle),q.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),q.decay=D.decay,s.spot[d]=q;const Y=D.shadow;if(D.map&&(s.spotLightMap[M]=D.map,M++,Y.updateMatrices(D),D.castShadow&&C++),s.spotLightMatrix[d]=Y.matrix,D.castShadow){const tt=n.get(D);tt.shadowBias=Y.bias,tt.shadowNormalBias=Y.normalBias,tt.shadowRadius=Y.radius,tt.shadowMapSize=Y.mapSize,s.spotShadow[d]=tt,s.spotShadowMap[d]=W,E++}d++}else if(D.isRectAreaLight){const q=e.get(D);q.color.copy(V).multiplyScalar(U),q.halfWidth.set(D.width*.5,0,0),q.halfHeight.set(0,D.height*.5,0),s.rectArea[y]=q,y++}else if(D.isPointLight){const q=e.get(D);if(q.color.copy(D.color).multiplyScalar(D.intensity*x),q.distance=D.distance,q.decay=D.decay,D.castShadow){const Y=D.shadow,tt=n.get(D);tt.shadowBias=Y.bias,tt.shadowNormalBias=Y.normalBias,tt.shadowRadius=Y.radius,tt.shadowMapSize=Y.mapSize,tt.shadowCameraNear=Y.camera.near,tt.shadowCameraFar=Y.camera.far,s.pointShadow[p]=tt,s.pointShadowMap[p]=W,s.pointShadowMatrix[p]=D.shadow.matrix,b++}s.point[p]=q,p++}else if(D.isHemisphereLight){const q=e.get(D);q.skyColor.copy(D.color).multiplyScalar(U*x),q.groundColor.copy(D.groundColor).multiplyScalar(U*x),s.hemi[v]=q,v++}}y>0&&(t.isWebGL2?i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=mt.LTC_FLOAT_1,s.rectAreaLTC2=mt.LTC_FLOAT_2):(s.rectAreaLTC1=mt.LTC_HALF_1,s.rectAreaLTC2=mt.LTC_HALF_2):i.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=mt.LTC_FLOAT_1,s.rectAreaLTC2=mt.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=mt.LTC_HALF_1,s.rectAreaLTC2=mt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=m,s.ambient[2]=g;const A=s.hash;(A.directionalLength!==_||A.pointLength!==p||A.spotLength!==d||A.rectAreaLength!==y||A.hemiLength!==v||A.numDirectionalShadows!==S||A.numPointShadows!==b||A.numSpotShadows!==E||A.numSpotMaps!==M||A.numLightProbes!==k)&&(s.directional.length=_,s.spot.length=d,s.rectArea.length=y,s.point.length=p,s.hemi.length=v,s.directionalShadow.length=S,s.directionalShadowMap.length=S,s.pointShadow.length=b,s.pointShadowMap.length=b,s.spotShadow.length=E,s.spotShadowMap.length=E,s.directionalShadowMatrix.length=S,s.pointShadowMatrix.length=b,s.spotLightMatrix.length=E+M-C,s.spotLightMap.length=M,s.numSpotLightShadowsWithMaps=C,s.numLightProbes=k,A.directionalLength=_,A.pointLength=p,A.spotLength=d,A.rectAreaLength=y,A.hemiLength=v,A.numDirectionalShadows=S,A.numPointShadows=b,A.numSpotShadows=E,A.numSpotMaps=M,A.numLightProbes=k,s.version=$x++)}function l(h,u){let f=0,m=0,g=0,_=0,p=0;const d=u.matrixWorldInverse;for(let y=0,v=h.length;y<v;y++){const S=h[y];if(S.isDirectionalLight){const b=s.directional[f];b.direction.setFromMatrixPosition(S.matrixWorld),r.setFromMatrixPosition(S.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(d),f++}else if(S.isSpotLight){const b=s.spot[g];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(d),b.direction.setFromMatrixPosition(S.matrixWorld),r.setFromMatrixPosition(S.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(d),g++}else if(S.isRectAreaLight){const b=s.rectArea[_];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(d),o.identity(),a.copy(S.matrixWorld),a.premultiply(d),o.extractRotation(a),b.halfWidth.set(S.width*.5,0,0),b.halfHeight.set(0,S.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),_++}else if(S.isPointLight){const b=s.point[m];b.position.setFromMatrixPosition(S.matrixWorld),b.position.applyMatrix4(d),m++}else if(S.isHemisphereLight){const b=s.hemi[p];b.direction.setFromMatrixPosition(S.matrixWorld),b.direction.transformDirection(d),p++}}}return{setup:c,setupView:l,state:s}}function jd(i,t){const e=new Qx(i,t),n=[],s=[];function r(){n.length=0,s.length=0}function a(u){n.push(u)}function o(u){s.push(u)}function c(u){e.setup(n,u)}function l(u){e.setupView(n,u)}return{init:r,state:{lightsArray:n,shadowsArray:s,lights:e},setupLights:c,setupLightsView:l,pushLight:a,pushShadow:o}}function Jx(i,t){let e=new WeakMap;function n(r,a=0){const o=e.get(r);let c;return o===void 0?(c=new jd(i,t),e.set(r,[c])):a>=o.length?(c=new jd(i,t),o.push(c)):c=o[a],c}function s(){e=new WeakMap}return{get:n,dispose:s}}class tS extends pi{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Ng,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class eS extends pi{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const nS=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,iS=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function sS(i,t,e){let n=new Lh;const s=new bt,r=new bt,a=new xe,o=new tS({depthPacking:Fg}),c=new eS,l={},h=e.maxTextureSize,u={[cs]:un,[un]:cs,[si]:si},f=new Fi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new bt},radius:{value:4}},vertexShader:nS,fragmentShader:iS}),m=f.clone();m.defines.HORIZONTAL_PASS=1;const g=new mi;g.setAttribute("position",new oi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new En(g,f),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Gf;let d=this.type;this.render=function(E,M,C){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||E.length===0)return;const k=i.getRenderTarget(),x=i.getActiveCubeFace(),A=i.getActiveMipmapLevel(),F=i.state;F.setBlending(is),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);const G=d!==Ai&&this.type===Ai,D=d===Ai&&this.type!==Ai;for(let V=0,U=E.length;V<U;V++){const H=E[V],W=H.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",H,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;s.copy(W.mapSize);const q=W.getFrameExtents();if(s.multiply(q),r.copy(W.mapSize),(s.x>h||s.y>h)&&(s.x>h&&(r.x=Math.floor(h/q.x),s.x=r.x*q.x,W.mapSize.x=r.x),s.y>h&&(r.y=Math.floor(h/q.y),s.y=r.y*q.y,W.mapSize.y=r.y)),W.map===null||G===!0||D===!0){const tt=this.type!==Ai?{minFilter:on,magFilter:on}:{};W.map!==null&&W.map.dispose(),W.map=new Ls(s.x,s.y,tt),W.map.texture.name=H.name+".shadowMap",W.camera.updateProjectionMatrix()}i.setRenderTarget(W.map),i.clear();const Y=W.getViewportCount();for(let tt=0;tt<Y;tt++){const ht=W.getViewport(tt);a.set(r.x*ht.x,r.y*ht.y,r.x*ht.z,r.y*ht.w),F.viewport(a),W.updateMatrices(H,tt),n=W.getFrustum(),S(M,C,W.camera,H,this.type)}W.isPointLightShadow!==!0&&this.type===Ai&&y(W,C),W.needsUpdate=!1}d=this.type,p.needsUpdate=!1,i.setRenderTarget(k,x,A)};function y(E,M){const C=t.update(_);f.defines.VSM_SAMPLES!==E.blurSamples&&(f.defines.VSM_SAMPLES=E.blurSamples,m.defines.VSM_SAMPLES=E.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new Ls(s.x,s.y)),f.uniforms.shadow_pass.value=E.map.texture,f.uniforms.resolution.value=E.mapSize,f.uniforms.radius.value=E.radius,i.setRenderTarget(E.mapPass),i.clear(),i.renderBufferDirect(M,null,C,f,_,null),m.uniforms.shadow_pass.value=E.mapPass.texture,m.uniforms.resolution.value=E.mapSize,m.uniforms.radius.value=E.radius,i.setRenderTarget(E.map),i.clear(),i.renderBufferDirect(M,null,C,m,_,null)}function v(E,M,C,k){let x=null;const A=C.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(A!==void 0)x=A;else if(x=C.isPointLight===!0?c:o,i.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0){const F=x.uuid,G=M.uuid;let D=l[F];D===void 0&&(D={},l[F]=D);let V=D[G];V===void 0&&(V=x.clone(),D[G]=V,M.addEventListener("dispose",b)),x=V}if(x.visible=M.visible,x.wireframe=M.wireframe,k===Ai?x.side=M.shadowSide!==null?M.shadowSide:M.side:x.side=M.shadowSide!==null?M.shadowSide:u[M.side],x.alphaMap=M.alphaMap,x.alphaTest=M.alphaTest,x.map=M.map,x.clipShadows=M.clipShadows,x.clippingPlanes=M.clippingPlanes,x.clipIntersection=M.clipIntersection,x.displacementMap=M.displacementMap,x.displacementScale=M.displacementScale,x.displacementBias=M.displacementBias,x.wireframeLinewidth=M.wireframeLinewidth,x.linewidth=M.linewidth,C.isPointLight===!0&&x.isMeshDistanceMaterial===!0){const F=i.properties.get(x);F.light=C}return x}function S(E,M,C,k,x){if(E.visible===!1)return;if(E.layers.test(M.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&x===Ai)&&(!E.frustumCulled||n.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(C.matrixWorldInverse,E.matrixWorld);const G=t.update(E),D=E.material;if(Array.isArray(D)){const V=G.groups;for(let U=0,H=V.length;U<H;U++){const W=V[U],q=D[W.materialIndex];if(q&&q.visible){const Y=v(E,q,k,x);E.onBeforeShadow(i,E,M,C,G,Y,W),i.renderBufferDirect(C,null,G,Y,E,W),E.onAfterShadow(i,E,M,C,G,Y,W)}}}else if(D.visible){const V=v(E,D,k,x);E.onBeforeShadow(i,E,M,C,G,V,null),i.renderBufferDirect(C,null,G,V,E,null),E.onAfterShadow(i,E,M,C,G,V,null)}}const F=E.children;for(let G=0,D=F.length;G<D;G++)S(F[G],M,C,k,x)}function b(E){E.target.removeEventListener("dispose",b);for(const C in l){const k=l[C],x=E.target.uuid;x in k&&(k[x].dispose(),delete k[x])}}}function rS(i,t,e){const n=e.isWebGL2;function s(){let O=!1;const dt=new xe;let j=null;const ct=new xe(0,0,0,0);return{setMask:function(yt){j!==yt&&!O&&(i.colorMask(yt,yt,yt,yt),j=yt)},setLocked:function(yt){O=yt},setClear:function(yt,te,se,ce,we){we===!0&&(yt*=ce,te*=ce,se*=ce),dt.set(yt,te,se,ce),ct.equals(dt)===!1&&(i.clearColor(yt,te,se,ce),ct.copy(dt))},reset:function(){O=!1,j=null,ct.set(-1,0,0,0)}}}function r(){let O=!1,dt=null,j=null,ct=null;return{setTest:function(yt){yt?vt(i.DEPTH_TEST):Kt(i.DEPTH_TEST)},setMask:function(yt){dt!==yt&&!O&&(i.depthMask(yt),dt=yt)},setFunc:function(yt){if(j!==yt){switch(yt){case ug:i.depthFunc(i.NEVER);break;case dg:i.depthFunc(i.ALWAYS);break;case fg:i.depthFunc(i.LESS);break;case ka:i.depthFunc(i.LEQUAL);break;case pg:i.depthFunc(i.EQUAL);break;case mg:i.depthFunc(i.GEQUAL);break;case gg:i.depthFunc(i.GREATER);break;case _g:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}j=yt}},setLocked:function(yt){O=yt},setClear:function(yt){ct!==yt&&(i.clearDepth(yt),ct=yt)},reset:function(){O=!1,dt=null,j=null,ct=null}}}function a(){let O=!1,dt=null,j=null,ct=null,yt=null,te=null,se=null,ce=null,we=null;return{setTest:function(ie){O||(ie?vt(i.STENCIL_TEST):Kt(i.STENCIL_TEST))},setMask:function(ie){dt!==ie&&!O&&(i.stencilMask(ie),dt=ie)},setFunc:function(ie,de,Ze){(j!==ie||ct!==de||yt!==Ze)&&(i.stencilFunc(ie,de,Ze),j=ie,ct=de,yt=Ze)},setOp:function(ie,de,Ze){(te!==ie||se!==de||ce!==Ze)&&(i.stencilOp(ie,de,Ze),te=ie,se=de,ce=Ze)},setLocked:function(ie){O=ie},setClear:function(ie){we!==ie&&(i.clearStencil(ie),we=ie)},reset:function(){O=!1,dt=null,j=null,ct=null,yt=null,te=null,se=null,ce=null,we=null}}}const o=new s,c=new r,l=new a,h=new WeakMap,u=new WeakMap;let f={},m={},g=new WeakMap,_=[],p=null,d=!1,y=null,v=null,S=null,b=null,E=null,M=null,C=null,k=new xt(0,0,0),x=0,A=!1,F=null,G=null,D=null,V=null,U=null;const H=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let W=!1,q=0;const Y=i.getParameter(i.VERSION);Y.indexOf("WebGL")!==-1?(q=parseFloat(/^WebGL (\d)/.exec(Y)[1]),W=q>=1):Y.indexOf("OpenGL ES")!==-1&&(q=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),W=q>=2);let tt=null,ht={};const It=i.getParameter(i.SCISSOR_BOX),X=i.getParameter(i.VIEWPORT),J=new xe().fromArray(It),ut=new xe().fromArray(X);function Et(O,dt,j,ct){const yt=new Uint8Array(4),te=i.createTexture();i.bindTexture(O,te),i.texParameteri(O,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(O,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let se=0;se<j;se++)n&&(O===i.TEXTURE_3D||O===i.TEXTURE_2D_ARRAY)?i.texImage3D(dt,0,i.RGBA,1,1,ct,0,i.RGBA,i.UNSIGNED_BYTE,yt):i.texImage2D(dt+se,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,yt);return te}const st={};st[i.TEXTURE_2D]=Et(i.TEXTURE_2D,i.TEXTURE_2D,1),st[i.TEXTURE_CUBE_MAP]=Et(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(st[i.TEXTURE_2D_ARRAY]=Et(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),st[i.TEXTURE_3D]=Et(i.TEXTURE_3D,i.TEXTURE_3D,1,1)),o.setClear(0,0,0,1),c.setClear(1),l.setClear(0),vt(i.DEPTH_TEST),c.setFunc(ka),Mt(!1),_t(Eu),vt(i.CULL_FACE),at(is);function vt(O){f[O]!==!0&&(i.enable(O),f[O]=!0)}function Kt(O){f[O]!==!1&&(i.disable(O),f[O]=!1)}function kt(O,dt){return m[O]!==dt?(i.bindFramebuffer(O,dt),m[O]=dt,n&&(O===i.DRAW_FRAMEBUFFER&&(m[i.FRAMEBUFFER]=dt),O===i.FRAMEBUFFER&&(m[i.DRAW_FRAMEBUFFER]=dt)),!0):!1}function B(O,dt){let j=_,ct=!1;if(O){j=g.get(dt),j===void 0&&(j=[],g.set(dt,j));const yt=O.textures;if(j.length!==yt.length||j[0]!==i.COLOR_ATTACHMENT0){for(let te=0,se=yt.length;te<se;te++)j[te]=i.COLOR_ATTACHMENT0+te;j.length=yt.length,ct=!0}}else j[0]!==i.BACK&&(j[0]=i.BACK,ct=!0);if(ct)if(e.isWebGL2)i.drawBuffers(j);else if(t.has("WEBGL_draw_buffers")===!0)t.get("WEBGL_draw_buffers").drawBuffersWEBGL(j);else throw new Error("THREE.WebGLState: Usage of gl.drawBuffers() require WebGL2 or WEBGL_draw_buffers extension")}function Ie(O){return p!==O?(i.useProgram(O),p=O,!0):!1}const Lt={[As]:i.FUNC_ADD,[$m]:i.FUNC_SUBTRACT,[Zm]:i.FUNC_REVERSE_SUBTRACT};if(n)Lt[Iu]=i.MIN,Lt[Ru]=i.MAX;else{const O=t.get("EXT_blend_minmax");O!==null&&(Lt[Iu]=O.MIN_EXT,Lt[Ru]=O.MAX_EXT)}const nt={[Qm]:i.ZERO,[Jm]:i.ONE,[tg]:i.SRC_COLOR,[Zl]:i.SRC_ALPHA,[og]:i.SRC_ALPHA_SATURATE,[sg]:i.DST_COLOR,[ng]:i.DST_ALPHA,[eg]:i.ONE_MINUS_SRC_COLOR,[Ql]:i.ONE_MINUS_SRC_ALPHA,[rg]:i.ONE_MINUS_DST_COLOR,[ig]:i.ONE_MINUS_DST_ALPHA,[ag]:i.CONSTANT_COLOR,[cg]:i.ONE_MINUS_CONSTANT_COLOR,[lg]:i.CONSTANT_ALPHA,[hg]:i.ONE_MINUS_CONSTANT_ALPHA};function at(O,dt,j,ct,yt,te,se,ce,we,ie){if(O===is){d===!0&&(Kt(i.BLEND),d=!1);return}if(d===!1&&(vt(i.BLEND),d=!0),O!==Ym){if(O!==y||ie!==A){if((v!==As||E!==As)&&(i.blendEquation(i.FUNC_ADD),v=As,E=As),ie)switch(O){case Sr:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case $l:i.blendFunc(i.ONE,i.ONE);break;case Au:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Cu:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}else switch(O){case Sr:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case $l:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case Au:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case Cu:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",O);break}S=null,b=null,M=null,C=null,k.set(0,0,0),x=0,y=O,A=ie}return}yt=yt||dt,te=te||j,se=se||ct,(dt!==v||yt!==E)&&(i.blendEquationSeparate(Lt[dt],Lt[yt]),v=dt,E=yt),(j!==S||ct!==b||te!==M||se!==C)&&(i.blendFuncSeparate(nt[j],nt[ct],nt[te],nt[se]),S=j,b=ct,M=te,C=se),(ce.equals(k)===!1||we!==x)&&(i.blendColor(ce.r,ce.g,ce.b,we),k.copy(ce),x=we),y=O,A=!1}function Rt(O,dt){O.side===si?Kt(i.CULL_FACE):vt(i.CULL_FACE);let j=O.side===un;dt&&(j=!j),Mt(j),O.blending===Sr&&O.transparent===!1?at(is):at(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.blendColor,O.blendAlpha,O.premultipliedAlpha),c.setFunc(O.depthFunc),c.setTest(O.depthTest),c.setMask(O.depthWrite),o.setMask(O.colorWrite);const ct=O.stencilWrite;l.setTest(ct),ct&&(l.setMask(O.stencilWriteMask),l.setFunc(O.stencilFunc,O.stencilRef,O.stencilFuncMask),l.setOp(O.stencilFail,O.stencilZFail,O.stencilZPass)),R(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits),O.alphaToCoverage===!0?vt(i.SAMPLE_ALPHA_TO_COVERAGE):Kt(i.SAMPLE_ALPHA_TO_COVERAGE)}function Mt(O){F!==O&&(O?i.frontFace(i.CW):i.frontFace(i.CCW),F=O)}function _t(O){O!==Xm?(vt(i.CULL_FACE),O!==G&&(O===Eu?i.cullFace(i.BACK):O===Km?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):Kt(i.CULL_FACE),G=O}function Vt(O){O!==D&&(W&&i.lineWidth(O),D=O)}function R(O,dt,j){O?(vt(i.POLYGON_OFFSET_FILL),(V!==dt||U!==j)&&(i.polygonOffset(dt,j),V=dt,U=j)):Kt(i.POLYGON_OFFSET_FILL)}function T(O){O?vt(i.SCISSOR_TEST):Kt(i.SCISSOR_TEST)}function Q(O){O===void 0&&(O=i.TEXTURE0+H-1),tt!==O&&(i.activeTexture(O),tt=O)}function et(O,dt,j){j===void 0&&(tt===null?j=i.TEXTURE0+H-1:j=tt);let ct=ht[j];ct===void 0&&(ct={type:void 0,texture:void 0},ht[j]=ct),(ct.type!==O||ct.texture!==dt)&&(tt!==j&&(i.activeTexture(j),tt=j),i.bindTexture(O,dt||st[O]),ct.type=O,ct.texture=dt)}function lt(){const O=ht[tt];O!==void 0&&O.type!==void 0&&(i.bindTexture(O.type,null),O.type=void 0,O.texture=void 0)}function ot(){try{i.compressedTexImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Wt(){try{i.compressedTexImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ut(){try{i.texSubImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function pt(){try{i.texSubImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function gt(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ht(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function ft(){try{i.texStorage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Me(){try{i.texStorage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Qt(){try{i.texImage2D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function Ft(){try{i.texImage3D.apply(i,arguments)}catch(O){console.error("THREE.WebGLState:",O)}}function wt(O){J.equals(O)===!1&&(i.scissor(O.x,O.y,O.z,O.w),J.copy(O))}function Dt(O){ut.equals(O)===!1&&(i.viewport(O.x,O.y,O.z,O.w),ut.copy(O))}function P(O,dt){let j=u.get(dt);j===void 0&&(j=new WeakMap,u.set(dt,j));let ct=j.get(O);ct===void 0&&(ct=i.getUniformBlockIndex(dt,O.name),j.set(O,ct))}function it(O,dt){const ct=u.get(dt).get(O);h.get(dt)!==ct&&(i.uniformBlockBinding(dt,ct,O.__bindingPointIndex),h.set(dt,ct))}function At(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),n===!0&&(i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),f={},tt=null,ht={},m={},g=new WeakMap,_=[],p=null,d=!1,y=null,v=null,S=null,b=null,E=null,M=null,C=null,k=new xt(0,0,0),x=0,A=!1,F=null,G=null,D=null,V=null,U=null,J.set(0,0,i.canvas.width,i.canvas.height),ut.set(0,0,i.canvas.width,i.canvas.height),o.reset(),c.reset(),l.reset()}return{buffers:{color:o,depth:c,stencil:l},enable:vt,disable:Kt,bindFramebuffer:kt,drawBuffers:B,useProgram:Ie,setBlending:at,setMaterial:Rt,setFlipSided:Mt,setCullFace:_t,setLineWidth:Vt,setPolygonOffset:R,setScissorTest:T,activeTexture:Q,bindTexture:et,unbindTexture:lt,compressedTexImage2D:ot,compressedTexImage3D:Wt,texImage2D:Qt,texImage3D:Ft,updateUBOMapping:P,uniformBlockBinding:it,texStorage2D:ft,texStorage3D:Me,texSubImage2D:Ut,texSubImage3D:pt,compressedTexSubImage2D:gt,compressedTexSubImage3D:Ht,scissor:wt,viewport:Dt,reset:At}}function oS(i,t,e,n,s,r,a){const o=s.isWebGL2,c=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),h=new bt,u=new WeakMap;let f;const m=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(R,T){return g?new OffscreenCanvas(R,T):Lo("canvas")}function p(R,T,Q,et){let lt=1;const ot=Vt(R);if((ot.width>et||ot.height>et)&&(lt=et/Math.max(ot.width,ot.height)),lt<1||T===!0)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap||typeof VideoFrame<"u"&&R instanceof VideoFrame){const Wt=T?Ga:Math.floor,Ut=Wt(lt*ot.width),pt=Wt(lt*ot.height);f===void 0&&(f=_(Ut,pt));const gt=Q?_(Ut,pt):f;return gt.width=Ut,gt.height=pt,gt.getContext("2d").drawImage(R,0,0,Ut,pt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ot.width+"x"+ot.height+") to ("+Ut+"x"+pt+")."),gt}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ot.width+"x"+ot.height+")."),R;return R}function d(R){const T=Vt(R);return sh(T.width)&&sh(T.height)}function y(R){return o?!1:R.wrapS!==Kn||R.wrapT!==Kn||R.minFilter!==on&&R.minFilter!==pn}function v(R,T){return R.generateMipmaps&&T&&R.minFilter!==on&&R.minFilter!==pn}function S(R){i.generateMipmap(R)}function b(R,T,Q,et,lt=!1){if(o===!1)return T;if(R!==null){if(i[R]!==void 0)return i[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let ot=T;if(T===i.RED&&(Q===i.FLOAT&&(ot=i.R32F),Q===i.HALF_FLOAT&&(ot=i.R16F),Q===i.UNSIGNED_BYTE&&(ot=i.R8)),T===i.RED_INTEGER&&(Q===i.UNSIGNED_BYTE&&(ot=i.R8UI),Q===i.UNSIGNED_SHORT&&(ot=i.R16UI),Q===i.UNSIGNED_INT&&(ot=i.R32UI),Q===i.BYTE&&(ot=i.R8I),Q===i.SHORT&&(ot=i.R16I),Q===i.INT&&(ot=i.R32I)),T===i.RG&&(Q===i.FLOAT&&(ot=i.RG32F),Q===i.HALF_FLOAT&&(ot=i.RG16F),Q===i.UNSIGNED_BYTE&&(ot=i.RG8)),T===i.RG_INTEGER&&(Q===i.UNSIGNED_BYTE&&(ot=i.RG8UI),Q===i.UNSIGNED_SHORT&&(ot=i.RG16UI),Q===i.UNSIGNED_INT&&(ot=i.RG32UI),Q===i.BYTE&&(ot=i.RG8I),Q===i.SHORT&&(ot=i.RG16I),Q===i.INT&&(ot=i.RG32I)),T===i.RGBA){const Wt=lt?Ua:re.getTransfer(et);Q===i.FLOAT&&(ot=i.RGBA32F),Q===i.HALF_FLOAT&&(ot=i.RGBA16F),Q===i.UNSIGNED_BYTE&&(ot=Wt===fe?i.SRGB8_ALPHA8:i.RGBA8),Q===i.UNSIGNED_SHORT_4_4_4_4&&(ot=i.RGBA4),Q===i.UNSIGNED_SHORT_5_5_5_1&&(ot=i.RGB5_A1)}return(ot===i.R16F||ot===i.R32F||ot===i.RG16F||ot===i.RG32F||ot===i.RGBA16F||ot===i.RGBA32F)&&t.get("EXT_color_buffer_float"),ot}function E(R,T,Q){return v(R,Q)===!0||R.isFramebufferTexture&&R.minFilter!==on&&R.minFilter!==pn?Math.log2(Math.max(T.width,T.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?T.mipmaps.length:1}function M(R){return R===on||R===Du||R===yo?i.NEAREST:i.LINEAR}function C(R){const T=R.target;T.removeEventListener("dispose",C),x(T),T.isVideoTexture&&u.delete(T)}function k(R){const T=R.target;T.removeEventListener("dispose",k),F(T)}function x(R){const T=n.get(R);if(T.__webglInit===void 0)return;const Q=R.source,et=m.get(Q);if(et){const lt=et[T.__cacheKey];lt.usedTimes--,lt.usedTimes===0&&A(R),Object.keys(et).length===0&&m.delete(Q)}n.remove(R)}function A(R){const T=n.get(R);i.deleteTexture(T.__webglTexture);const Q=R.source,et=m.get(Q);delete et[T.__cacheKey],a.memory.textures--}function F(R){const T=n.get(R);if(R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let et=0;et<6;et++){if(Array.isArray(T.__webglFramebuffer[et]))for(let lt=0;lt<T.__webglFramebuffer[et].length;lt++)i.deleteFramebuffer(T.__webglFramebuffer[et][lt]);else i.deleteFramebuffer(T.__webglFramebuffer[et]);T.__webglDepthbuffer&&i.deleteRenderbuffer(T.__webglDepthbuffer[et])}else{if(Array.isArray(T.__webglFramebuffer))for(let et=0;et<T.__webglFramebuffer.length;et++)i.deleteFramebuffer(T.__webglFramebuffer[et]);else i.deleteFramebuffer(T.__webglFramebuffer);if(T.__webglDepthbuffer&&i.deleteRenderbuffer(T.__webglDepthbuffer),T.__webglMultisampledFramebuffer&&i.deleteFramebuffer(T.__webglMultisampledFramebuffer),T.__webglColorRenderbuffer)for(let et=0;et<T.__webglColorRenderbuffer.length;et++)T.__webglColorRenderbuffer[et]&&i.deleteRenderbuffer(T.__webglColorRenderbuffer[et]);T.__webglDepthRenderbuffer&&i.deleteRenderbuffer(T.__webglDepthRenderbuffer)}const Q=R.textures;for(let et=0,lt=Q.length;et<lt;et++){const ot=n.get(Q[et]);ot.__webglTexture&&(i.deleteTexture(ot.__webglTexture),a.memory.textures--),n.remove(Q[et])}n.remove(R)}let G=0;function D(){G=0}function V(){const R=G;return R>=s.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+s.maxTextures),G+=1,R}function U(R){const T=[];return T.push(R.wrapS),T.push(R.wrapT),T.push(R.wrapR||0),T.push(R.magFilter),T.push(R.minFilter),T.push(R.anisotropy),T.push(R.internalFormat),T.push(R.format),T.push(R.type),T.push(R.generateMipmaps),T.push(R.premultiplyAlpha),T.push(R.flipY),T.push(R.unpackAlignment),T.push(R.colorSpace),T.join()}function H(R,T){const Q=n.get(R);if(R.isVideoTexture&&Mt(R),R.isRenderTargetTexture===!1&&R.version>0&&Q.__version!==R.version){const et=R.image;if(et===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(et.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ut(Q,R,T);return}}e.bindTexture(i.TEXTURE_2D,Q.__webglTexture,i.TEXTURE0+T)}function W(R,T){const Q=n.get(R);if(R.version>0&&Q.__version!==R.version){ut(Q,R,T);return}e.bindTexture(i.TEXTURE_2D_ARRAY,Q.__webglTexture,i.TEXTURE0+T)}function q(R,T){const Q=n.get(R);if(R.version>0&&Q.__version!==R.version){ut(Q,R,T);return}e.bindTexture(i.TEXTURE_3D,Q.__webglTexture,i.TEXTURE0+T)}function Y(R,T){const Q=n.get(R);if(R.version>0&&Q.__version!==R.version){Et(Q,R,T);return}e.bindTexture(i.TEXTURE_CUBE_MAP,Q.__webglTexture,i.TEXTURE0+T)}const tt={[eh]:i.REPEAT,[Kn]:i.CLAMP_TO_EDGE,[nh]:i.MIRRORED_REPEAT},ht={[on]:i.NEAREST,[Du]:i.NEAREST_MIPMAP_NEAREST,[yo]:i.NEAREST_MIPMAP_LINEAR,[pn]:i.LINEAR,[ul]:i.LINEAR_MIPMAP_NEAREST,[Rs]:i.LINEAR_MIPMAP_LINEAR},It={[Ug]:i.NEVER,[Hg]:i.ALWAYS,[Bg]:i.LESS,[Qf]:i.LEQUAL,[Vg]:i.EQUAL,[Wg]:i.GEQUAL,[zg]:i.GREATER,[Gg]:i.NOTEQUAL};function X(R,T,Q){if(T.type===Ri&&t.has("OES_texture_float_linear")===!1&&(T.magFilter===pn||T.magFilter===ul||T.magFilter===yo||T.magFilter===Rs||T.minFilter===pn||T.minFilter===ul||T.minFilter===yo||T.minFilter===Rs)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),Q?(i.texParameteri(R,i.TEXTURE_WRAP_S,tt[T.wrapS]),i.texParameteri(R,i.TEXTURE_WRAP_T,tt[T.wrapT]),(R===i.TEXTURE_3D||R===i.TEXTURE_2D_ARRAY)&&i.texParameteri(R,i.TEXTURE_WRAP_R,tt[T.wrapR]),i.texParameteri(R,i.TEXTURE_MAG_FILTER,ht[T.magFilter]),i.texParameteri(R,i.TEXTURE_MIN_FILTER,ht[T.minFilter])):(i.texParameteri(R,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(R,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),(R===i.TEXTURE_3D||R===i.TEXTURE_2D_ARRAY)&&i.texParameteri(R,i.TEXTURE_WRAP_R,i.CLAMP_TO_EDGE),(T.wrapS!==Kn||T.wrapT!==Kn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(R,i.TEXTURE_MAG_FILTER,M(T.magFilter)),i.texParameteri(R,i.TEXTURE_MIN_FILTER,M(T.minFilter)),T.minFilter!==on&&T.minFilter!==pn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),T.compareFunction&&(i.texParameteri(R,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(R,i.TEXTURE_COMPARE_FUNC,It[T.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(T.magFilter===on||T.minFilter!==yo&&T.minFilter!==Rs||T.type===Ri&&t.has("OES_texture_float_linear")===!1||o===!1&&T.type===Do&&t.has("OES_texture_half_float_linear")===!1)return;if(T.anisotropy>1||n.get(T).__currentAnisotropy){const et=t.get("EXT_texture_filter_anisotropic");i.texParameterf(R,et.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(T.anisotropy,s.getMaxAnisotropy())),n.get(T).__currentAnisotropy=T.anisotropy}}}function J(R,T){let Q=!1;R.__webglInit===void 0&&(R.__webglInit=!0,T.addEventListener("dispose",C));const et=T.source;let lt=m.get(et);lt===void 0&&(lt={},m.set(et,lt));const ot=U(T);if(ot!==R.__cacheKey){lt[ot]===void 0&&(lt[ot]={texture:i.createTexture(),usedTimes:0},a.memory.textures++,Q=!0),lt[ot].usedTimes++;const Wt=lt[R.__cacheKey];Wt!==void 0&&(lt[R.__cacheKey].usedTimes--,Wt.usedTimes===0&&A(T)),R.__cacheKey=ot,R.__webglTexture=lt[ot].texture}return Q}function ut(R,T,Q){let et=i.TEXTURE_2D;(T.isDataArrayTexture||T.isCompressedArrayTexture)&&(et=i.TEXTURE_2D_ARRAY),T.isData3DTexture&&(et=i.TEXTURE_3D);const lt=J(R,T),ot=T.source;e.bindTexture(et,R.__webglTexture,i.TEXTURE0+Q);const Wt=n.get(ot);if(ot.version!==Wt.__version||lt===!0){e.activeTexture(i.TEXTURE0+Q);const Ut=re.getPrimaries(re.workingColorSpace),pt=T.colorSpace===Qi?null:re.getPrimaries(T.colorSpace),gt=T.colorSpace===Qi||Ut===pt?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,T.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,T.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,gt);const Ht=y(T)&&d(T.image)===!1;let ft=p(T.image,Ht,!1,s.maxTextureSize);ft=_t(T,ft);const Me=d(ft)||o,Qt=r.convert(T.format,T.colorSpace);let Ft=r.convert(T.type),wt=b(T.internalFormat,Qt,Ft,T.colorSpace,T.isVideoTexture);X(et,T,Me);let Dt;const P=T.mipmaps,it=o&&T.isVideoTexture!==!0&&wt!==Zf,At=Wt.__version===void 0||lt===!0,O=ot.dataReady,dt=E(T,ft,Me);if(T.isDepthTexture)wt=i.DEPTH_COMPONENT,o?T.type===Ri?wt=i.DEPTH_COMPONENT32F:T.type===ts?wt=i.DEPTH_COMPONENT24:T.type===Ds?wt=i.DEPTH24_STENCIL8:wt=i.DEPTH_COMPONENT16:T.type===Ri&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),T.format===Ps&&wt===i.DEPTH_COMPONENT&&T.type!==Ah&&T.type!==ts&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),T.type=ts,Ft=r.convert(T.type)),T.format===Cr&&wt===i.DEPTH_COMPONENT&&(wt=i.DEPTH_STENCIL,T.type!==Ds&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),T.type=Ds,Ft=r.convert(T.type))),At&&(it?e.texStorage2D(i.TEXTURE_2D,1,wt,ft.width,ft.height):e.texImage2D(i.TEXTURE_2D,0,wt,ft.width,ft.height,0,Qt,Ft,null));else if(T.isDataTexture)if(P.length>0&&Me){it&&At&&e.texStorage2D(i.TEXTURE_2D,dt,wt,P[0].width,P[0].height);for(let j=0,ct=P.length;j<ct;j++)Dt=P[j],it?O&&e.texSubImage2D(i.TEXTURE_2D,j,0,0,Dt.width,Dt.height,Qt,Ft,Dt.data):e.texImage2D(i.TEXTURE_2D,j,wt,Dt.width,Dt.height,0,Qt,Ft,Dt.data);T.generateMipmaps=!1}else it?(At&&e.texStorage2D(i.TEXTURE_2D,dt,wt,ft.width,ft.height),O&&e.texSubImage2D(i.TEXTURE_2D,0,0,0,ft.width,ft.height,Qt,Ft,ft.data)):e.texImage2D(i.TEXTURE_2D,0,wt,ft.width,ft.height,0,Qt,Ft,ft.data);else if(T.isCompressedTexture)if(T.isCompressedArrayTexture){it&&At&&e.texStorage3D(i.TEXTURE_2D_ARRAY,dt,wt,P[0].width,P[0].height,ft.depth);for(let j=0,ct=P.length;j<ct;j++)Dt=P[j],T.format!==Yn?Qt!==null?it?O&&e.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,j,0,0,0,Dt.width,Dt.height,ft.depth,Qt,Dt.data,0,0):e.compressedTexImage3D(i.TEXTURE_2D_ARRAY,j,wt,Dt.width,Dt.height,ft.depth,0,Dt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):it?O&&e.texSubImage3D(i.TEXTURE_2D_ARRAY,j,0,0,0,Dt.width,Dt.height,ft.depth,Qt,Ft,Dt.data):e.texImage3D(i.TEXTURE_2D_ARRAY,j,wt,Dt.width,Dt.height,ft.depth,0,Qt,Ft,Dt.data)}else{it&&At&&e.texStorage2D(i.TEXTURE_2D,dt,wt,P[0].width,P[0].height);for(let j=0,ct=P.length;j<ct;j++)Dt=P[j],T.format!==Yn?Qt!==null?it?O&&e.compressedTexSubImage2D(i.TEXTURE_2D,j,0,0,Dt.width,Dt.height,Qt,Dt.data):e.compressedTexImage2D(i.TEXTURE_2D,j,wt,Dt.width,Dt.height,0,Dt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):it?O&&e.texSubImage2D(i.TEXTURE_2D,j,0,0,Dt.width,Dt.height,Qt,Ft,Dt.data):e.texImage2D(i.TEXTURE_2D,j,wt,Dt.width,Dt.height,0,Qt,Ft,Dt.data)}else if(T.isDataArrayTexture)it?(At&&e.texStorage3D(i.TEXTURE_2D_ARRAY,dt,wt,ft.width,ft.height,ft.depth),O&&e.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,ft.width,ft.height,ft.depth,Qt,Ft,ft.data)):e.texImage3D(i.TEXTURE_2D_ARRAY,0,wt,ft.width,ft.height,ft.depth,0,Qt,Ft,ft.data);else if(T.isData3DTexture)it?(At&&e.texStorage3D(i.TEXTURE_3D,dt,wt,ft.width,ft.height,ft.depth),O&&e.texSubImage3D(i.TEXTURE_3D,0,0,0,0,ft.width,ft.height,ft.depth,Qt,Ft,ft.data)):e.texImage3D(i.TEXTURE_3D,0,wt,ft.width,ft.height,ft.depth,0,Qt,Ft,ft.data);else if(T.isFramebufferTexture){if(At)if(it)e.texStorage2D(i.TEXTURE_2D,dt,wt,ft.width,ft.height);else{let j=ft.width,ct=ft.height;for(let yt=0;yt<dt;yt++)e.texImage2D(i.TEXTURE_2D,yt,wt,j,ct,0,Qt,Ft,null),j>>=1,ct>>=1}}else if(P.length>0&&Me){if(it&&At){const j=Vt(P[0]);e.texStorage2D(i.TEXTURE_2D,dt,wt,j.width,j.height)}for(let j=0,ct=P.length;j<ct;j++)Dt=P[j],it?O&&e.texSubImage2D(i.TEXTURE_2D,j,0,0,Qt,Ft,Dt):e.texImage2D(i.TEXTURE_2D,j,wt,Qt,Ft,Dt);T.generateMipmaps=!1}else if(it){if(At){const j=Vt(ft);e.texStorage2D(i.TEXTURE_2D,dt,wt,j.width,j.height)}O&&e.texSubImage2D(i.TEXTURE_2D,0,0,0,Qt,Ft,ft)}else e.texImage2D(i.TEXTURE_2D,0,wt,Qt,Ft,ft);v(T,Me)&&S(et),Wt.__version=ot.version,T.onUpdate&&T.onUpdate(T)}R.__version=T.version}function Et(R,T,Q){if(T.image.length!==6)return;const et=J(R,T),lt=T.source;e.bindTexture(i.TEXTURE_CUBE_MAP,R.__webglTexture,i.TEXTURE0+Q);const ot=n.get(lt);if(lt.version!==ot.__version||et===!0){e.activeTexture(i.TEXTURE0+Q);const Wt=re.getPrimaries(re.workingColorSpace),Ut=T.colorSpace===Qi?null:re.getPrimaries(T.colorSpace),pt=T.colorSpace===Qi||Wt===Ut?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,T.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,T.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,T.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,pt);const gt=T.isCompressedTexture||T.image[0].isCompressedTexture,Ht=T.image[0]&&T.image[0].isDataTexture,ft=[];for(let j=0;j<6;j++)!gt&&!Ht?ft[j]=p(T.image[j],!1,!0,s.maxCubemapSize):ft[j]=Ht?T.image[j].image:T.image[j],ft[j]=_t(T,ft[j]);const Me=ft[0],Qt=d(Me)||o,Ft=r.convert(T.format,T.colorSpace),wt=r.convert(T.type),Dt=b(T.internalFormat,Ft,wt,T.colorSpace),P=o&&T.isVideoTexture!==!0,it=ot.__version===void 0||et===!0,At=lt.dataReady;let O=E(T,Me,Qt);X(i.TEXTURE_CUBE_MAP,T,Qt);let dt;if(gt){P&&it&&e.texStorage2D(i.TEXTURE_CUBE_MAP,O,Dt,Me.width,Me.height);for(let j=0;j<6;j++){dt=ft[j].mipmaps;for(let ct=0;ct<dt.length;ct++){const yt=dt[ct];T.format!==Yn?Ft!==null?P?At&&e.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct,0,0,yt.width,yt.height,Ft,yt.data):e.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct,Dt,yt.width,yt.height,0,yt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):P?At&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct,0,0,yt.width,yt.height,Ft,wt,yt.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct,Dt,yt.width,yt.height,0,Ft,wt,yt.data)}}}else{if(dt=T.mipmaps,P&&it){dt.length>0&&O++;const j=Vt(ft[0]);e.texStorage2D(i.TEXTURE_CUBE_MAP,O,Dt,j.width,j.height)}for(let j=0;j<6;j++)if(Ht){P?At&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,ft[j].width,ft[j].height,Ft,wt,ft[j].data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,Dt,ft[j].width,ft[j].height,0,Ft,wt,ft[j].data);for(let ct=0;ct<dt.length;ct++){const te=dt[ct].image[j].image;P?At&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct+1,0,0,te.width,te.height,Ft,wt,te.data):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct+1,Dt,te.width,te.height,0,Ft,wt,te.data)}}else{P?At&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,0,0,Ft,wt,ft[j]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,0,Dt,Ft,wt,ft[j]);for(let ct=0;ct<dt.length;ct++){const yt=dt[ct];P?At&&e.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct+1,0,0,Ft,wt,yt.image[j]):e.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+j,ct+1,Dt,Ft,wt,yt.image[j])}}}v(T,Qt)&&S(i.TEXTURE_CUBE_MAP),ot.__version=lt.version,T.onUpdate&&T.onUpdate(T)}R.__version=T.version}function st(R,T,Q,et,lt,ot){const Wt=r.convert(Q.format,Q.colorSpace),Ut=r.convert(Q.type),pt=b(Q.internalFormat,Wt,Ut,Q.colorSpace);if(!n.get(T).__hasExternalTextures){const Ht=Math.max(1,T.width>>ot),ft=Math.max(1,T.height>>ot);lt===i.TEXTURE_3D||lt===i.TEXTURE_2D_ARRAY?e.texImage3D(lt,ot,pt,Ht,ft,T.depth,0,Wt,Ut,null):e.texImage2D(lt,ot,pt,Ht,ft,0,Wt,Ut,null)}e.bindFramebuffer(i.FRAMEBUFFER,R),Rt(T)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,et,lt,n.get(Q).__webglTexture,0,at(T)):(lt===i.TEXTURE_2D||lt>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&lt<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,et,lt,n.get(Q).__webglTexture,ot),e.bindFramebuffer(i.FRAMEBUFFER,null)}function vt(R,T,Q){if(i.bindRenderbuffer(i.RENDERBUFFER,R),T.depthBuffer&&!T.stencilBuffer){let et=o===!0?i.DEPTH_COMPONENT24:i.DEPTH_COMPONENT16;if(Q||Rt(T)){const lt=T.depthTexture;lt&&lt.isDepthTexture&&(lt.type===Ri?et=i.DEPTH_COMPONENT32F:lt.type===ts&&(et=i.DEPTH_COMPONENT24));const ot=at(T);Rt(T)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,ot,et,T.width,T.height):i.renderbufferStorageMultisample(i.RENDERBUFFER,ot,et,T.width,T.height)}else i.renderbufferStorage(i.RENDERBUFFER,et,T.width,T.height);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.RENDERBUFFER,R)}else if(T.depthBuffer&&T.stencilBuffer){const et=at(T);Q&&Rt(T)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,et,i.DEPTH24_STENCIL8,T.width,T.height):Rt(T)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,et,i.DEPTH24_STENCIL8,T.width,T.height):i.renderbufferStorage(i.RENDERBUFFER,i.DEPTH_STENCIL,T.width,T.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.RENDERBUFFER,R)}else{const et=T.textures;for(let lt=0;lt<et.length;lt++){const ot=et[lt],Wt=r.convert(ot.format,ot.colorSpace),Ut=r.convert(ot.type),pt=b(ot.internalFormat,Wt,Ut,ot.colorSpace),gt=at(T);Q&&Rt(T)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,gt,pt,T.width,T.height):Rt(T)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,gt,pt,T.width,T.height):i.renderbufferStorage(i.RENDERBUFFER,pt,T.width,T.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Kt(R,T){if(T&&T.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(i.FRAMEBUFFER,R),!(T.depthTexture&&T.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(T.depthTexture).__webglTexture||T.depthTexture.image.width!==T.width||T.depthTexture.image.height!==T.height)&&(T.depthTexture.image.width=T.width,T.depthTexture.image.height=T.height,T.depthTexture.needsUpdate=!0),H(T.depthTexture,0);const et=n.get(T.depthTexture).__webglTexture,lt=at(T);if(T.depthTexture.format===Ps)Rt(T)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,et,0,lt):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,et,0);else if(T.depthTexture.format===Cr)Rt(T)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,et,0,lt):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,et,0);else throw new Error("Unknown depthTexture format")}function kt(R){const T=n.get(R),Q=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!T.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");Kt(T.__webglFramebuffer,R)}else if(Q){T.__webglDepthbuffer=[];for(let et=0;et<6;et++)e.bindFramebuffer(i.FRAMEBUFFER,T.__webglFramebuffer[et]),T.__webglDepthbuffer[et]=i.createRenderbuffer(),vt(T.__webglDepthbuffer[et],R,!1)}else e.bindFramebuffer(i.FRAMEBUFFER,T.__webglFramebuffer),T.__webglDepthbuffer=i.createRenderbuffer(),vt(T.__webglDepthbuffer,R,!1);e.bindFramebuffer(i.FRAMEBUFFER,null)}function B(R,T,Q){const et=n.get(R);T!==void 0&&st(et.__webglFramebuffer,R,R.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),Q!==void 0&&kt(R)}function Ie(R){const T=R.texture,Q=n.get(R),et=n.get(T);R.addEventListener("dispose",k);const lt=R.textures,ot=R.isWebGLCubeRenderTarget===!0,Wt=lt.length>1,Ut=d(R)||o;if(Wt||(et.__webglTexture===void 0&&(et.__webglTexture=i.createTexture()),et.__version=T.version,a.memory.textures++),ot){Q.__webglFramebuffer=[];for(let pt=0;pt<6;pt++)if(o&&T.mipmaps&&T.mipmaps.length>0){Q.__webglFramebuffer[pt]=[];for(let gt=0;gt<T.mipmaps.length;gt++)Q.__webglFramebuffer[pt][gt]=i.createFramebuffer()}else Q.__webglFramebuffer[pt]=i.createFramebuffer()}else{if(o&&T.mipmaps&&T.mipmaps.length>0){Q.__webglFramebuffer=[];for(let pt=0;pt<T.mipmaps.length;pt++)Q.__webglFramebuffer[pt]=i.createFramebuffer()}else Q.__webglFramebuffer=i.createFramebuffer();if(Wt)if(s.drawBuffers)for(let pt=0,gt=lt.length;pt<gt;pt++){const Ht=n.get(lt[pt]);Ht.__webglTexture===void 0&&(Ht.__webglTexture=i.createTexture(),a.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&R.samples>0&&Rt(R)===!1){Q.__webglMultisampledFramebuffer=i.createFramebuffer(),Q.__webglColorRenderbuffer=[],e.bindFramebuffer(i.FRAMEBUFFER,Q.__webglMultisampledFramebuffer);for(let pt=0;pt<lt.length;pt++){const gt=lt[pt];Q.__webglColorRenderbuffer[pt]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,Q.__webglColorRenderbuffer[pt]);const Ht=r.convert(gt.format,gt.colorSpace),ft=r.convert(gt.type),Me=b(gt.internalFormat,Ht,ft,gt.colorSpace,R.isXRRenderTarget===!0),Qt=at(R);i.renderbufferStorageMultisample(i.RENDERBUFFER,Qt,Me,R.width,R.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+pt,i.RENDERBUFFER,Q.__webglColorRenderbuffer[pt])}i.bindRenderbuffer(i.RENDERBUFFER,null),R.depthBuffer&&(Q.__webglDepthRenderbuffer=i.createRenderbuffer(),vt(Q.__webglDepthRenderbuffer,R,!0)),e.bindFramebuffer(i.FRAMEBUFFER,null)}}if(ot){e.bindTexture(i.TEXTURE_CUBE_MAP,et.__webglTexture),X(i.TEXTURE_CUBE_MAP,T,Ut);for(let pt=0;pt<6;pt++)if(o&&T.mipmaps&&T.mipmaps.length>0)for(let gt=0;gt<T.mipmaps.length;gt++)st(Q.__webglFramebuffer[pt][gt],R,T,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+pt,gt);else st(Q.__webglFramebuffer[pt],R,T,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+pt,0);v(T,Ut)&&S(i.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Wt){for(let pt=0,gt=lt.length;pt<gt;pt++){const Ht=lt[pt],ft=n.get(Ht);e.bindTexture(i.TEXTURE_2D,ft.__webglTexture),X(i.TEXTURE_2D,Ht,Ut),st(Q.__webglFramebuffer,R,Ht,i.COLOR_ATTACHMENT0+pt,i.TEXTURE_2D,0),v(Ht,Ut)&&S(i.TEXTURE_2D)}e.unbindTexture()}else{let pt=i.TEXTURE_2D;if((R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(o?pt=R.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(pt,et.__webglTexture),X(pt,T,Ut),o&&T.mipmaps&&T.mipmaps.length>0)for(let gt=0;gt<T.mipmaps.length;gt++)st(Q.__webglFramebuffer[gt],R,T,i.COLOR_ATTACHMENT0,pt,gt);else st(Q.__webglFramebuffer,R,T,i.COLOR_ATTACHMENT0,pt,0);v(T,Ut)&&S(pt),e.unbindTexture()}R.depthBuffer&&kt(R)}function Lt(R){const T=d(R)||o,Q=R.textures;for(let et=0,lt=Q.length;et<lt;et++){const ot=Q[et];if(v(ot,T)){const Wt=R.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:i.TEXTURE_2D,Ut=n.get(ot).__webglTexture;e.bindTexture(Wt,Ut),S(Wt),e.unbindTexture()}}}function nt(R){if(o&&R.samples>0&&Rt(R)===!1){const T=R.textures,Q=R.width,et=R.height;let lt=i.COLOR_BUFFER_BIT;const ot=[],Wt=R.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Ut=n.get(R),pt=T.length>1;if(pt)for(let gt=0;gt<T.length;gt++)e.bindFramebuffer(i.FRAMEBUFFER,Ut.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+gt,i.RENDERBUFFER,null),e.bindFramebuffer(i.FRAMEBUFFER,Ut.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+gt,i.TEXTURE_2D,null,0);e.bindFramebuffer(i.READ_FRAMEBUFFER,Ut.__webglMultisampledFramebuffer),e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ut.__webglFramebuffer);for(let gt=0;gt<T.length;gt++){ot.push(i.COLOR_ATTACHMENT0+gt),R.depthBuffer&&ot.push(Wt);const Ht=Ut.__ignoreDepthValues!==void 0?Ut.__ignoreDepthValues:!1;if(Ht===!1&&(R.depthBuffer&&(lt|=i.DEPTH_BUFFER_BIT),R.stencilBuffer&&(lt|=i.STENCIL_BUFFER_BIT)),pt&&i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Ut.__webglColorRenderbuffer[gt]),Ht===!0&&(i.invalidateFramebuffer(i.READ_FRAMEBUFFER,[Wt]),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[Wt])),pt){const ft=n.get(T[gt]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,ft,0)}i.blitFramebuffer(0,0,Q,et,0,0,Q,et,lt,i.NEAREST),l&&i.invalidateFramebuffer(i.READ_FRAMEBUFFER,ot)}if(e.bindFramebuffer(i.READ_FRAMEBUFFER,null),e.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),pt)for(let gt=0;gt<T.length;gt++){e.bindFramebuffer(i.FRAMEBUFFER,Ut.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+gt,i.RENDERBUFFER,Ut.__webglColorRenderbuffer[gt]);const Ht=n.get(T[gt]).__webglTexture;e.bindFramebuffer(i.FRAMEBUFFER,Ut.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+gt,i.TEXTURE_2D,Ht,0)}e.bindFramebuffer(i.DRAW_FRAMEBUFFER,Ut.__webglMultisampledFramebuffer)}}function at(R){return Math.min(s.maxSamples,R.samples)}function Rt(R){const T=n.get(R);return o&&R.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&T.__useRenderToTexture!==!1}function Mt(R){const T=a.render.frame;u.get(R)!==T&&(u.set(R,T),R.update())}function _t(R,T){const Q=R.colorSpace,et=R.format,lt=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===ih||Q!==fs&&Q!==Qi&&(re.getTransfer(Q)===fe?o===!1?t.has("EXT_sRGB")===!0&&et===Yn?(R.format=ih,R.minFilter=pn,R.generateMipmaps=!1):T=tp.sRGBToLinear(T):(et!==Yn||lt!==rs)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Q)),T}function Vt(R){return typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement?(h.width=R.naturalWidth||R.width,h.height=R.naturalHeight||R.height):typeof VideoFrame<"u"&&R instanceof VideoFrame?(h.width=R.displayWidth,h.height=R.displayHeight):(h.width=R.width,h.height=R.height),h}this.allocateTextureUnit=V,this.resetTextureUnits=D,this.setTexture2D=H,this.setTexture2DArray=W,this.setTexture3D=q,this.setTextureCube=Y,this.rebindTextures=B,this.setupRenderTarget=Ie,this.updateRenderTargetMipmap=Lt,this.updateMultisampleRenderTarget=nt,this.setupDepthRenderbuffer=kt,this.setupFrameBufferTexture=st,this.useMultisampledRTT=Rt}function aS(i,t,e){const n=e.isWebGL2;function s(r,a=Qi){let o;const c=re.getTransfer(a);if(r===rs)return i.UNSIGNED_BYTE;if(r===jf)return i.UNSIGNED_SHORT_4_4_4_4;if(r===Xf)return i.UNSIGNED_SHORT_5_5_5_1;if(r===Ag)return i.BYTE;if(r===Cg)return i.SHORT;if(r===Ah)return i.UNSIGNED_SHORT;if(r===qf)return i.INT;if(r===ts)return i.UNSIGNED_INT;if(r===Ri)return i.FLOAT;if(r===Do)return n?i.HALF_FLOAT:(o=t.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===Ig)return i.ALPHA;if(r===Yn)return i.RGBA;if(r===Rg)return i.LUMINANCE;if(r===Dg)return i.LUMINANCE_ALPHA;if(r===Ps)return i.DEPTH_COMPONENT;if(r===Cr)return i.DEPTH_STENCIL;if(r===ih)return o=t.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===Pg)return i.RED;if(r===Kf)return i.RED_INTEGER;if(r===Lg)return i.RG;if(r===Yf)return i.RG_INTEGER;if(r===$f)return i.RGBA_INTEGER;if(r===dl||r===fl||r===pl||r===ml)if(c===fe)if(o=t.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===dl)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===fl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===pl)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===ml)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=t.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===dl)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===fl)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===pl)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===ml)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Pu||r===Lu||r===Ou||r===Nu)if(o=t.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===Pu)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Lu)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Ou)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Nu)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Zf)return o=t.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===Fu||r===ku)if(o=t.get("WEBGL_compressed_texture_etc"),o!==null){if(r===Fu)return c===fe?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===ku)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Uu||r===Bu||r===Vu||r===zu||r===Gu||r===Wu||r===Hu||r===qu||r===ju||r===Xu||r===Ku||r===Yu||r===$u||r===Zu)if(o=t.get("WEBGL_compressed_texture_astc"),o!==null){if(r===Uu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Bu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Vu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===zu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Gu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Wu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Hu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===qu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===ju)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Xu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Ku)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Yu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===$u)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Zu)return c===fe?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===gl||r===Qu||r===Ju)if(o=t.get("EXT_texture_compression_bptc"),o!==null){if(r===gl)return c===fe?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(r===Qu)return o.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(r===Ju)return o.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(r===Og||r===td||r===ed||r===nd)if(o=t.get("EXT_texture_compression_rgtc"),o!==null){if(r===gl)return o.COMPRESSED_RED_RGTC1_EXT;if(r===td)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===ed)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===nd)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Ds?n?i.UNSIGNED_INT_24_8:(o=t.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):i[r]!==void 0?i[r]:null}return{convert:s}}class cS extends Tn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Ea extends dn{constructor(){super(),this.isGroup=!0,this.type="Group"}}const lS={type:"move"};class zl{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ea,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ea,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new N,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new N),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ea,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new N,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new N),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let s=null,r=null,a=null;const o=this._targetRay,c=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(l&&t.hand){a=!0;for(const _ of t.hand.values()){const p=e.getJointPose(_,n),d=this._getHandJoint(l,_);p!==null&&(d.matrix.fromArray(p.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),d.matrixWorldNeedsUpdate=!0,d.jointRadius=p.radius),d.visible=p!==null}const h=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],f=h.position.distanceTo(u.position),m=.02,g=.005;l.inputState.pinching&&f>m+g?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&f<=m-g&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else c!==null&&t.gripSpace&&(r=e.getPose(t.gripSpace,n),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1));o!==null&&(s=e.getPose(t.targetRaySpace,n),s===null&&r!==null&&(s=r),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(lS)))}return o!==null&&(o.visible=s!==null),c!==null&&(c.visible=r!==null),l!==null&&(l.visible=a!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new Ea;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}const hS=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,uS=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepthEXT = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class dS{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const s=new ze,r=t.properties.get(s);r.__webglTexture=e.texture,(e.depthNear!=n.depthNear||e.depthFar!=n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=s}}render(t,e){if(this.texture!==null){if(this.mesh===null){const n=e.cameras[0].viewport,s=new Fi({extensions:{fragDepth:!0},vertexShader:hS,fragmentShader:uS,uniforms:{depthColor:{value:this.texture},depthWidth:{value:n.z},depthHeight:{value:n.w}}});this.mesh=new En(new qc(20,20),s)}t.render(this.mesh,e)}}reset(){this.texture=null,this.mesh=null}}class fS extends ps{constructor(t,e){super();const n=this;let s=null,r=1,a=null,o="local-floor",c=1,l=null,h=null,u=null,f=null,m=null,g=null;const _=new dS,p=e.getContextAttributes();let d=null,y=null;const v=[],S=[],b=new bt;let E=null;const M=new Tn;M.layers.enable(1),M.viewport=new xe;const C=new Tn;C.layers.enable(2),C.viewport=new xe;const k=[M,C],x=new cS;x.layers.enable(1),x.layers.enable(2);let A=null,F=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(X){let J=v[X];return J===void 0&&(J=new zl,v[X]=J),J.getTargetRaySpace()},this.getControllerGrip=function(X){let J=v[X];return J===void 0&&(J=new zl,v[X]=J),J.getGripSpace()},this.getHand=function(X){let J=v[X];return J===void 0&&(J=new zl,v[X]=J),J.getHandSpace()};function G(X){const J=S.indexOf(X.inputSource);if(J===-1)return;const ut=v[J];ut!==void 0&&(ut.update(X.inputSource,X.frame,l||a),ut.dispatchEvent({type:X.type,data:X.inputSource}))}function D(){s.removeEventListener("select",G),s.removeEventListener("selectstart",G),s.removeEventListener("selectend",G),s.removeEventListener("squeeze",G),s.removeEventListener("squeezestart",G),s.removeEventListener("squeezeend",G),s.removeEventListener("end",D),s.removeEventListener("inputsourceschange",V);for(let X=0;X<v.length;X++){const J=S[X];J!==null&&(S[X]=null,v[X].disconnect(J))}A=null,F=null,_.reset(),t.setRenderTarget(d),m=null,f=null,u=null,s=null,y=null,It.stop(),n.isPresenting=!1,t.setPixelRatio(E),t.setSize(b.width,b.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(X){r=X,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(X){o=X,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(X){l=X},this.getBaseLayer=function(){return f!==null?f:m},this.getBinding=function(){return u},this.getFrame=function(){return g},this.getSession=function(){return s},this.setSession=async function(X){if(s=X,s!==null){if(d=t.getRenderTarget(),s.addEventListener("select",G),s.addEventListener("selectstart",G),s.addEventListener("selectend",G),s.addEventListener("squeeze",G),s.addEventListener("squeezestart",G),s.addEventListener("squeezeend",G),s.addEventListener("end",D),s.addEventListener("inputsourceschange",V),p.xrCompatible!==!0&&await e.makeXRCompatible(),E=t.getPixelRatio(),t.getSize(b),s.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const J={antialias:s.renderState.layers===void 0?p.antialias:!0,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};m=new XRWebGLLayer(s,e,J),s.updateRenderState({baseLayer:m}),t.setPixelRatio(1),t.setSize(m.framebufferWidth,m.framebufferHeight,!1),y=new Ls(m.framebufferWidth,m.framebufferHeight,{format:Yn,type:rs,colorSpace:t.outputColorSpace,stencilBuffer:p.stencil})}else{let J=null,ut=null,Et=null;p.depth&&(Et=p.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,J=p.stencil?Cr:Ps,ut=p.stencil?Ds:ts);const st={colorFormat:e.RGBA8,depthFormat:Et,scaleFactor:r};u=new XRWebGLBinding(s,e),f=u.createProjectionLayer(st),s.updateRenderState({layers:[f]}),t.setPixelRatio(1),t.setSize(f.textureWidth,f.textureHeight,!1),y=new Ls(f.textureWidth,f.textureHeight,{format:Yn,type:rs,depthTexture:new dp(f.textureWidth,f.textureHeight,ut,void 0,void 0,void 0,void 0,void 0,void 0,J),stencilBuffer:p.stencil,colorSpace:t.outputColorSpace,samples:p.antialias?4:0});const vt=t.properties.get(y);vt.__ignoreDepthValues=f.ignoreDepthValues}y.isXRRenderTarget=!0,this.setFoveation(c),l=null,a=await s.requestReferenceSpace(o),It.setContext(s),It.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(s!==null)return s.environmentBlendMode};function V(X){for(let J=0;J<X.removed.length;J++){const ut=X.removed[J],Et=S.indexOf(ut);Et>=0&&(S[Et]=null,v[Et].disconnect(ut))}for(let J=0;J<X.added.length;J++){const ut=X.added[J];let Et=S.indexOf(ut);if(Et===-1){for(let vt=0;vt<v.length;vt++)if(vt>=S.length){S.push(ut),Et=vt;break}else if(S[vt]===null){S[vt]=ut,Et=vt;break}if(Et===-1)break}const st=v[Et];st&&st.connect(ut)}}const U=new N,H=new N;function W(X,J,ut){U.setFromMatrixPosition(J.matrixWorld),H.setFromMatrixPosition(ut.matrixWorld);const Et=U.distanceTo(H),st=J.projectionMatrix.elements,vt=ut.projectionMatrix.elements,Kt=st[14]/(st[10]-1),kt=st[14]/(st[10]+1),B=(st[9]+1)/st[5],Ie=(st[9]-1)/st[5],Lt=(st[8]-1)/st[0],nt=(vt[8]+1)/vt[0],at=Kt*Lt,Rt=Kt*nt,Mt=Et/(-Lt+nt),_t=Mt*-Lt;J.matrixWorld.decompose(X.position,X.quaternion,X.scale),X.translateX(_t),X.translateZ(Mt),X.matrixWorld.compose(X.position,X.quaternion,X.scale),X.matrixWorldInverse.copy(X.matrixWorld).invert();const Vt=Kt+Mt,R=kt+Mt,T=at-_t,Q=Rt+(Et-_t),et=B*kt/R*Vt,lt=Ie*kt/R*Vt;X.projectionMatrix.makePerspective(T,Q,et,lt,Vt,R),X.projectionMatrixInverse.copy(X.projectionMatrix).invert()}function q(X,J){J===null?X.matrixWorld.copy(X.matrix):X.matrixWorld.multiplyMatrices(J.matrixWorld,X.matrix),X.matrixWorldInverse.copy(X.matrixWorld).invert()}this.updateCamera=function(X){if(s===null)return;_.texture!==null&&(X.near=_.depthNear,X.far=_.depthFar),x.near=C.near=M.near=X.near,x.far=C.far=M.far=X.far,(A!==x.near||F!==x.far)&&(s.updateRenderState({depthNear:x.near,depthFar:x.far}),A=x.near,F=x.far,M.near=A,M.far=F,C.near=A,C.far=F,M.updateProjectionMatrix(),C.updateProjectionMatrix(),X.updateProjectionMatrix());const J=X.parent,ut=x.cameras;q(x,J);for(let Et=0;Et<ut.length;Et++)q(ut[Et],J);ut.length===2?W(x,M,C):x.projectionMatrix.copy(M.projectionMatrix),Y(X,x,J)};function Y(X,J,ut){ut===null?X.matrix.copy(J.matrixWorld):(X.matrix.copy(ut.matrixWorld),X.matrix.invert(),X.matrix.multiply(J.matrixWorld)),X.matrix.decompose(X.position,X.quaternion,X.scale),X.updateMatrixWorld(!0),X.projectionMatrix.copy(J.projectionMatrix),X.projectionMatrixInverse.copy(J.projectionMatrixInverse),X.isPerspectiveCamera&&(X.fov=Po*2*Math.atan(1/X.projectionMatrix.elements[5]),X.zoom=1)}this.getCamera=function(){return x},this.getFoveation=function(){if(!(f===null&&m===null))return c},this.setFoveation=function(X){c=X,f!==null&&(f.fixedFoveation=X),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=X)},this.hasDepthSensing=function(){return _.texture!==null};let tt=null;function ht(X,J){if(h=J.getViewerPose(l||a),g=J,h!==null){const ut=h.views;m!==null&&(t.setRenderTargetFramebuffer(y,m.framebuffer),t.setRenderTarget(y));let Et=!1;ut.length!==x.cameras.length&&(x.cameras.length=0,Et=!0);for(let vt=0;vt<ut.length;vt++){const Kt=ut[vt];let kt=null;if(m!==null)kt=m.getViewport(Kt);else{const Ie=u.getViewSubImage(f,Kt);kt=Ie.viewport,vt===0&&(t.setRenderTargetTextures(y,Ie.colorTexture,f.ignoreDepthValues?void 0:Ie.depthStencilTexture),t.setRenderTarget(y))}let B=k[vt];B===void 0&&(B=new Tn,B.layers.enable(vt),B.viewport=new xe,k[vt]=B),B.matrix.fromArray(Kt.transform.matrix),B.matrix.decompose(B.position,B.quaternion,B.scale),B.projectionMatrix.fromArray(Kt.projectionMatrix),B.projectionMatrixInverse.copy(B.projectionMatrix).invert(),B.viewport.set(kt.x,kt.y,kt.width,kt.height),vt===0&&(x.matrix.copy(B.matrix),x.matrix.decompose(x.position,x.quaternion,x.scale)),Et===!0&&x.cameras.push(B)}const st=s.enabledFeatures;if(st&&st.includes("depth-sensing")){const vt=u.getDepthInformation(ut[0]);vt&&vt.isValid&&vt.texture&&_.init(t,vt,s.renderState)}}for(let ut=0;ut<v.length;ut++){const Et=S[ut],st=v[ut];Et!==null&&st!==void 0&&st.update(Et,J,l||a)}_.render(t,x),tt&&tt(X,J),J.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:J}),g=null}const It=new up;It.setAnimationLoop(ht),this.setAnimationLoop=function(X){tt=X},this.dispose=function(){}}}const Ts=new Bn,pS=new Se;function mS(i,t){function e(p,d){p.matrixAutoUpdate===!0&&p.updateMatrix(),d.value.copy(p.matrix)}function n(p,d){d.color.getRGB(p.fogColor.value,ap(i)),d.isFog?(p.fogNear.value=d.near,p.fogFar.value=d.far):d.isFogExp2&&(p.fogDensity.value=d.density)}function s(p,d,y,v,S){d.isMeshBasicMaterial||d.isMeshLambertMaterial?r(p,d):d.isMeshToonMaterial?(r(p,d),u(p,d)):d.isMeshPhongMaterial?(r(p,d),h(p,d)):d.isMeshStandardMaterial?(r(p,d),f(p,d),d.isMeshPhysicalMaterial&&m(p,d,S)):d.isMeshMatcapMaterial?(r(p,d),g(p,d)):d.isMeshDepthMaterial?r(p,d):d.isMeshDistanceMaterial?(r(p,d),_(p,d)):d.isMeshNormalMaterial?r(p,d):d.isLineBasicMaterial?(a(p,d),d.isLineDashedMaterial&&o(p,d)):d.isPointsMaterial?c(p,d,y,v):d.isSpriteMaterial?l(p,d):d.isShadowMaterial?(p.color.value.copy(d.color),p.opacity.value=d.opacity):d.isShaderMaterial&&(d.uniformsNeedUpdate=!1)}function r(p,d){p.opacity.value=d.opacity,d.color&&p.diffuse.value.copy(d.color),d.emissive&&p.emissive.value.copy(d.emissive).multiplyScalar(d.emissiveIntensity),d.map&&(p.map.value=d.map,e(d.map,p.mapTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,e(d.alphaMap,p.alphaMapTransform)),d.bumpMap&&(p.bumpMap.value=d.bumpMap,e(d.bumpMap,p.bumpMapTransform),p.bumpScale.value=d.bumpScale,d.side===un&&(p.bumpScale.value*=-1)),d.normalMap&&(p.normalMap.value=d.normalMap,e(d.normalMap,p.normalMapTransform),p.normalScale.value.copy(d.normalScale),d.side===un&&p.normalScale.value.negate()),d.displacementMap&&(p.displacementMap.value=d.displacementMap,e(d.displacementMap,p.displacementMapTransform),p.displacementScale.value=d.displacementScale,p.displacementBias.value=d.displacementBias),d.emissiveMap&&(p.emissiveMap.value=d.emissiveMap,e(d.emissiveMap,p.emissiveMapTransform)),d.specularMap&&(p.specularMap.value=d.specularMap,e(d.specularMap,p.specularMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest);const y=t.get(d),v=y.envMap,S=y.envMapRotation;if(v&&(p.envMap.value=v,Ts.copy(S),Ts.x*=-1,Ts.y*=-1,Ts.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(Ts.y*=-1,Ts.z*=-1),p.envMapRotation.value.setFromMatrix4(pS.makeRotationFromEuler(Ts)),p.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=d.reflectivity,p.ior.value=d.ior,p.refractionRatio.value=d.refractionRatio),d.lightMap){p.lightMap.value=d.lightMap;const b=i._useLegacyLights===!0?Math.PI:1;p.lightMapIntensity.value=d.lightMapIntensity*b,e(d.lightMap,p.lightMapTransform)}d.aoMap&&(p.aoMap.value=d.aoMap,p.aoMapIntensity.value=d.aoMapIntensity,e(d.aoMap,p.aoMapTransform))}function a(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,d.map&&(p.map.value=d.map,e(d.map,p.mapTransform))}function o(p,d){p.dashSize.value=d.dashSize,p.totalSize.value=d.dashSize+d.gapSize,p.scale.value=d.scale}function c(p,d,y,v){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.size.value=d.size*y,p.scale.value=v*.5,d.map&&(p.map.value=d.map,e(d.map,p.uvTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,e(d.alphaMap,p.alphaMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest)}function l(p,d){p.diffuse.value.copy(d.color),p.opacity.value=d.opacity,p.rotation.value=d.rotation,d.map&&(p.map.value=d.map,e(d.map,p.mapTransform)),d.alphaMap&&(p.alphaMap.value=d.alphaMap,e(d.alphaMap,p.alphaMapTransform)),d.alphaTest>0&&(p.alphaTest.value=d.alphaTest)}function h(p,d){p.specular.value.copy(d.specular),p.shininess.value=Math.max(d.shininess,1e-4)}function u(p,d){d.gradientMap&&(p.gradientMap.value=d.gradientMap)}function f(p,d){p.metalness.value=d.metalness,d.metalnessMap&&(p.metalnessMap.value=d.metalnessMap,e(d.metalnessMap,p.metalnessMapTransform)),p.roughness.value=d.roughness,d.roughnessMap&&(p.roughnessMap.value=d.roughnessMap,e(d.roughnessMap,p.roughnessMapTransform)),t.get(d).envMap&&(p.envMapIntensity.value=d.envMapIntensity)}function m(p,d,y){p.ior.value=d.ior,d.sheen>0&&(p.sheenColor.value.copy(d.sheenColor).multiplyScalar(d.sheen),p.sheenRoughness.value=d.sheenRoughness,d.sheenColorMap&&(p.sheenColorMap.value=d.sheenColorMap,e(d.sheenColorMap,p.sheenColorMapTransform)),d.sheenRoughnessMap&&(p.sheenRoughnessMap.value=d.sheenRoughnessMap,e(d.sheenRoughnessMap,p.sheenRoughnessMapTransform))),d.clearcoat>0&&(p.clearcoat.value=d.clearcoat,p.clearcoatRoughness.value=d.clearcoatRoughness,d.clearcoatMap&&(p.clearcoatMap.value=d.clearcoatMap,e(d.clearcoatMap,p.clearcoatMapTransform)),d.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=d.clearcoatRoughnessMap,e(d.clearcoatRoughnessMap,p.clearcoatRoughnessMapTransform)),d.clearcoatNormalMap&&(p.clearcoatNormalMap.value=d.clearcoatNormalMap,e(d.clearcoatNormalMap,p.clearcoatNormalMapTransform),p.clearcoatNormalScale.value.copy(d.clearcoatNormalScale),d.side===un&&p.clearcoatNormalScale.value.negate())),d.iridescence>0&&(p.iridescence.value=d.iridescence,p.iridescenceIOR.value=d.iridescenceIOR,p.iridescenceThicknessMinimum.value=d.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=d.iridescenceThicknessRange[1],d.iridescenceMap&&(p.iridescenceMap.value=d.iridescenceMap,e(d.iridescenceMap,p.iridescenceMapTransform)),d.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=d.iridescenceThicknessMap,e(d.iridescenceThicknessMap,p.iridescenceThicknessMapTransform))),d.transmission>0&&(p.transmission.value=d.transmission,p.transmissionSamplerMap.value=y.texture,p.transmissionSamplerSize.value.set(y.width,y.height),d.transmissionMap&&(p.transmissionMap.value=d.transmissionMap,e(d.transmissionMap,p.transmissionMapTransform)),p.thickness.value=d.thickness,d.thicknessMap&&(p.thicknessMap.value=d.thicknessMap,e(d.thicknessMap,p.thicknessMapTransform)),p.attenuationDistance.value=d.attenuationDistance,p.attenuationColor.value.copy(d.attenuationColor)),d.anisotropy>0&&(p.anisotropyVector.value.set(d.anisotropy*Math.cos(d.anisotropyRotation),d.anisotropy*Math.sin(d.anisotropyRotation)),d.anisotropyMap&&(p.anisotropyMap.value=d.anisotropyMap,e(d.anisotropyMap,p.anisotropyMapTransform))),p.specularIntensity.value=d.specularIntensity,p.specularColor.value.copy(d.specularColor),d.specularColorMap&&(p.specularColorMap.value=d.specularColorMap,e(d.specularColorMap,p.specularColorMapTransform)),d.specularIntensityMap&&(p.specularIntensityMap.value=d.specularIntensityMap,e(d.specularIntensityMap,p.specularIntensityMapTransform))}function g(p,d){d.matcap&&(p.matcap.value=d.matcap)}function _(p,d){const y=t.get(d).light;p.referencePosition.value.setFromMatrixPosition(y.matrixWorld),p.nearDistance.value=y.shadow.camera.near,p.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:s}}function gS(i,t,e,n){let s={},r={},a=[];const o=e.isWebGL2?i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS):0;function c(y,v){const S=v.program;n.uniformBlockBinding(y,S)}function l(y,v){let S=s[y.id];S===void 0&&(g(y),S=h(y),s[y.id]=S,y.addEventListener("dispose",p));const b=v.program;n.updateUBOMapping(y,b);const E=t.render.frame;r[y.id]!==E&&(f(y),r[y.id]=E)}function h(y){const v=u();y.__bindingPointIndex=v;const S=i.createBuffer(),b=y.__size,E=y.usage;return i.bindBuffer(i.UNIFORM_BUFFER,S),i.bufferData(i.UNIFORM_BUFFER,b,E),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,v,S),S}function u(){for(let y=0;y<o;y++)if(a.indexOf(y)===-1)return a.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(y){const v=s[y.id],S=y.uniforms,b=y.__cache;i.bindBuffer(i.UNIFORM_BUFFER,v);for(let E=0,M=S.length;E<M;E++){const C=Array.isArray(S[E])?S[E]:[S[E]];for(let k=0,x=C.length;k<x;k++){const A=C[k];if(m(A,E,k,b)===!0){const F=A.__offset,G=Array.isArray(A.value)?A.value:[A.value];let D=0;for(let V=0;V<G.length;V++){const U=G[V],H=_(U);typeof U=="number"||typeof U=="boolean"?(A.__data[0]=U,i.bufferSubData(i.UNIFORM_BUFFER,F+D,A.__data)):U.isMatrix3?(A.__data[0]=U.elements[0],A.__data[1]=U.elements[1],A.__data[2]=U.elements[2],A.__data[3]=0,A.__data[4]=U.elements[3],A.__data[5]=U.elements[4],A.__data[6]=U.elements[5],A.__data[7]=0,A.__data[8]=U.elements[6],A.__data[9]=U.elements[7],A.__data[10]=U.elements[8],A.__data[11]=0):(U.toArray(A.__data,D),D+=H.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,F,A.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function m(y,v,S,b){const E=y.value,M=v+"_"+S;if(b[M]===void 0)return typeof E=="number"||typeof E=="boolean"?b[M]=E:b[M]=E.clone(),!0;{const C=b[M];if(typeof E=="number"||typeof E=="boolean"){if(C!==E)return b[M]=E,!0}else if(C.equals(E)===!1)return C.copy(E),!0}return!1}function g(y){const v=y.uniforms;let S=0;const b=16;for(let M=0,C=v.length;M<C;M++){const k=Array.isArray(v[M])?v[M]:[v[M]];for(let x=0,A=k.length;x<A;x++){const F=k[x],G=Array.isArray(F.value)?F.value:[F.value];for(let D=0,V=G.length;D<V;D++){const U=G[D],H=_(U),W=S%b;W!==0&&b-W<H.boundary&&(S+=b-W),F.__data=new Float32Array(H.storage/Float32Array.BYTES_PER_ELEMENT),F.__offset=S,S+=H.storage}}}const E=S%b;return E>0&&(S+=b-E),y.__size=S,y.__cache={},this}function _(y){const v={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(v.boundary=4,v.storage=4):y.isVector2?(v.boundary=8,v.storage=8):y.isVector3||y.isColor?(v.boundary=16,v.storage=12):y.isVector4?(v.boundary=16,v.storage=16):y.isMatrix3?(v.boundary=48,v.storage=48):y.isMatrix4?(v.boundary=64,v.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),v}function p(y){const v=y.target;v.removeEventListener("dispose",p);const S=a.indexOf(v.__bindingPointIndex);a.splice(S,1),i.deleteBuffer(s[v.id]),delete s[v.id],delete r[v.id]}function d(){for(const y in s)i.deleteBuffer(s[y]);a=[],s={},r={}}return{bind:c,update:l,dispose:d}}class yp{constructor(t={}){const{canvas:e=r_(),context:n=null,depth:s=!0,stencil:r=!0,alpha:a=!1,antialias:o=!1,premultipliedAlpha:c=!0,preserveDrawingBuffer:l=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=t;this.isWebGLRenderer=!0;let f;n!==null?f=n.getContextAttributes().alpha:f=a;const m=new Uint32Array(4),g=new Int32Array(4);let _=null,p=null;const d=[],y=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ni,this._useLegacyLights=!1,this.toneMapping=ss,this.toneMappingExposure=1;const v=this;let S=!1,b=0,E=0,M=null,C=-1,k=null;const x=new xe,A=new xe;let F=null;const G=new xt(0);let D=0,V=e.width,U=e.height,H=1,W=null,q=null;const Y=new xe(0,0,V,U),tt=new xe(0,0,V,U);let ht=!1;const It=new Lh;let X=!1,J=!1,ut=null;const Et=new Se,st=new bt,vt=new N,Kt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function kt(){return M===null?H:1}let B=n;function Ie(I,z){for(let $=0;$<I.length;$++){const Z=I[$],K=e.getContext(Z,z);if(K!==null)return K}return null}try{const I={alpha:!0,depth:s,stencil:r,antialias:o,premultipliedAlpha:c,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Eh}`),e.addEventListener("webglcontextlost",At,!1),e.addEventListener("webglcontextrestored",O,!1),e.addEventListener("webglcontextcreationerror",dt,!1),B===null){const z=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&z.shift(),B=Ie(z,I),B===null)throw Ie(z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&B instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),B.getShaderPrecisionFormat===void 0&&(B.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(I){throw console.error("THREE.WebGLRenderer: "+I.message),I}let Lt,nt,at,Rt,Mt,_t,Vt,R,T,Q,et,lt,ot,Wt,Ut,pt,gt,Ht,ft,Me,Qt,Ft,wt,Dt;function P(){Lt=new b0(B),nt=new m0(B,Lt,t),Lt.init(nt),Ft=new aS(B,Lt,nt),at=new rS(B,Lt,nt),Rt=new T0(B),Mt=new qx,_t=new oS(B,Lt,at,Mt,nt,Ft,Rt),Vt=new _0(v),R=new S0(v),T=new R_(B,nt),wt=new f0(B,Lt,T,nt),Q=new M0(B,T,Rt,wt),et=new I0(B,Q,T,Rt),ft=new C0(B,nt,_t),pt=new g0(Mt),lt=new Hx(v,Vt,R,Lt,nt,wt,pt),ot=new mS(v,Mt),Wt=new Xx,Ut=new Jx(Lt,nt),Ht=new d0(v,Vt,R,at,et,f,c),gt=new sS(v,et,nt),Dt=new gS(B,Rt,nt,at),Me=new p0(B,Lt,Rt,nt),Qt=new w0(B,Lt,Rt,nt),Rt.programs=lt.programs,v.capabilities=nt,v.extensions=Lt,v.properties=Mt,v.renderLists=Wt,v.shadowMap=gt,v.state=at,v.info=Rt}P();const it=new fS(v,B);this.xr=it,this.getContext=function(){return B},this.getContextAttributes=function(){return B.getContextAttributes()},this.forceContextLoss=function(){const I=Lt.get("WEBGL_lose_context");I&&I.loseContext()},this.forceContextRestore=function(){const I=Lt.get("WEBGL_lose_context");I&&I.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(I){I!==void 0&&(H=I,this.setSize(V,U,!1))},this.getSize=function(I){return I.set(V,U)},this.setSize=function(I,z,$=!0){if(it.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}V=I,U=z,e.width=Math.floor(I*H),e.height=Math.floor(z*H),$===!0&&(e.style.width=I+"px",e.style.height=z+"px"),this.setViewport(0,0,I,z)},this.getDrawingBufferSize=function(I){return I.set(V*H,U*H).floor()},this.setDrawingBufferSize=function(I,z,$){V=I,U=z,H=$,e.width=Math.floor(I*$),e.height=Math.floor(z*$),this.setViewport(0,0,I,z)},this.getCurrentViewport=function(I){return I.copy(x)},this.getViewport=function(I){return I.copy(Y)},this.setViewport=function(I,z,$,Z){I.isVector4?Y.set(I.x,I.y,I.z,I.w):Y.set(I,z,$,Z),at.viewport(x.copy(Y).multiplyScalar(H).round())},this.getScissor=function(I){return I.copy(tt)},this.setScissor=function(I,z,$,Z){I.isVector4?tt.set(I.x,I.y,I.z,I.w):tt.set(I,z,$,Z),at.scissor(A.copy(tt).multiplyScalar(H).round())},this.getScissorTest=function(){return ht},this.setScissorTest=function(I){at.setScissorTest(ht=I)},this.setOpaqueSort=function(I){W=I},this.setTransparentSort=function(I){q=I},this.getClearColor=function(I){return I.copy(Ht.getClearColor())},this.setClearColor=function(){Ht.setClearColor.apply(Ht,arguments)},this.getClearAlpha=function(){return Ht.getClearAlpha()},this.setClearAlpha=function(){Ht.setClearAlpha.apply(Ht,arguments)},this.clear=function(I=!0,z=!0,$=!0){let Z=0;if(I){let K=!1;if(M!==null){const St=M.texture.format;K=St===$f||St===Yf||St===Kf}if(K){const St=M.texture.type,Ot=St===rs||St===ts||St===Ah||St===Ds||St===jf||St===Xf,zt=Ht.getClearColor(),Gt=Ht.getClearAlpha(),Jt=zt.r,jt=zt.g,Xt=zt.b;Ot?(m[0]=Jt,m[1]=jt,m[2]=Xt,m[3]=Gt,B.clearBufferuiv(B.COLOR,0,m)):(g[0]=Jt,g[1]=jt,g[2]=Xt,g[3]=Gt,B.clearBufferiv(B.COLOR,0,g))}else Z|=B.COLOR_BUFFER_BIT}z&&(Z|=B.DEPTH_BUFFER_BIT),$&&(Z|=B.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),B.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",At,!1),e.removeEventListener("webglcontextrestored",O,!1),e.removeEventListener("webglcontextcreationerror",dt,!1),Wt.dispose(),Ut.dispose(),Mt.dispose(),Vt.dispose(),R.dispose(),et.dispose(),wt.dispose(),Dt.dispose(),lt.dispose(),it.dispose(),it.removeEventListener("sessionstart",we),it.removeEventListener("sessionend",ie),ut&&(ut.dispose(),ut=null),de.stop()};function At(I){I.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function O(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const I=Rt.autoReset,z=gt.enabled,$=gt.autoUpdate,Z=gt.needsUpdate,K=gt.type;P(),Rt.autoReset=I,gt.enabled=z,gt.autoUpdate=$,gt.needsUpdate=Z,gt.type=K}function dt(I){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",I.statusMessage)}function j(I){const z=I.target;z.removeEventListener("dispose",j),ct(z)}function ct(I){yt(I),Mt.remove(I)}function yt(I){const z=Mt.get(I).programs;z!==void 0&&(z.forEach(function($){lt.releaseProgram($)}),I.isShaderMaterial&&lt.releaseShaderCache(I))}this.renderBufferDirect=function(I,z,$,Z,K,St){z===null&&(z=Kt);const Ot=K.isMesh&&K.matrixWorld.determinant()<0,zt=zm(I,z,$,Z,K);at.setMaterial(Z,Ot);let Gt=$.index,Jt=1;if(Z.wireframe===!0){if(Gt=Q.getWireframeAttribute($),Gt===void 0)return;Jt=2}const jt=$.drawRange,Xt=$.attributes.position;let Re=jt.start*Jt,bn=(jt.start+jt.count)*Jt;St!==null&&(Re=Math.max(Re,St.start*Jt),bn=Math.min(bn,(St.start+St.count)*Jt)),Gt!==null?(Re=Math.max(Re,0),bn=Math.min(bn,Gt.count)):Xt!=null&&(Re=Math.max(Re,0),bn=Math.min(bn,Xt.count));const Ue=bn-Re;if(Ue<0||Ue===1/0)return;wt.setup(K,Z,zt,$,Gt);let vi,be=Me;if(Gt!==null&&(vi=T.get(Gt),be=Qt,be.setIndex(vi)),K.isMesh)Z.wireframe===!0?(at.setLineWidth(Z.wireframeLinewidth*kt()),be.setMode(B.LINES)):be.setMode(B.TRIANGLES);else if(K.isLine){let Yt=Z.linewidth;Yt===void 0&&(Yt=1),at.setLineWidth(Yt*kt()),K.isLineSegments?be.setMode(B.LINES):K.isLineLoop?be.setMode(B.LINE_LOOP):be.setMode(B.LINE_STRIP)}else K.isPoints?be.setMode(B.POINTS):K.isSprite&&be.setMode(B.TRIANGLES);if(K.isBatchedMesh)be.renderMultiDraw(K._multiDrawStarts,K._multiDrawCounts,K._multiDrawCount);else if(K.isInstancedMesh)be.renderInstances(Re,Ue,K.count);else if($.isInstancedBufferGeometry){const Yt=$._maxInstanceCount!==void 0?$._maxInstanceCount:1/0,al=Math.min($.instanceCount,Yt);be.renderInstances(Re,Ue,al)}else be.render(Re,Ue)};function te(I,z,$){I.transparent===!0&&I.side===si&&I.forceSinglePass===!1?(I.side=un,I.needsUpdate=!0,sa(I,z,$),I.side=cs,I.needsUpdate=!0,sa(I,z,$),I.side=si):sa(I,z,$)}this.compile=function(I,z,$=null){$===null&&($=I),p=Ut.get($),p.init(),y.push(p),$.traverseVisible(function(K){K.isLight&&K.layers.test(z.layers)&&(p.pushLight(K),K.castShadow&&p.pushShadow(K))}),I!==$&&I.traverseVisible(function(K){K.isLight&&K.layers.test(z.layers)&&(p.pushLight(K),K.castShadow&&p.pushShadow(K))}),p.setupLights(v._useLegacyLights);const Z=new Set;return I.traverse(function(K){const St=K.material;if(St)if(Array.isArray(St))for(let Ot=0;Ot<St.length;Ot++){const zt=St[Ot];te(zt,$,K),Z.add(zt)}else te(St,$,K),Z.add(St)}),y.pop(),p=null,Z},this.compileAsync=function(I,z,$=null){const Z=this.compile(I,z,$);return new Promise(K=>{function St(){if(Z.forEach(function(Ot){Mt.get(Ot).currentProgram.isReady()&&Z.delete(Ot)}),Z.size===0){K(I);return}setTimeout(St,10)}Lt.get("KHR_parallel_shader_compile")!==null?St():setTimeout(St,10)})};let se=null;function ce(I){se&&se(I)}function we(){de.stop()}function ie(){de.start()}const de=new up;de.setAnimationLoop(ce),typeof self<"u"&&de.setContext(self),this.setAnimationLoop=function(I){se=I,it.setAnimationLoop(I),I===null?de.stop():de.start()},it.addEventListener("sessionstart",we),it.addEventListener("sessionend",ie),this.render=function(I,z){if(z!==void 0&&z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;I.matrixWorldAutoUpdate===!0&&I.updateMatrixWorld(),z.parent===null&&z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),it.enabled===!0&&it.isPresenting===!0&&(it.cameraAutoUpdate===!0&&it.updateCamera(z),z=it.getCamera()),I.isScene===!0&&I.onBeforeRender(v,I,z,M),p=Ut.get(I,y.length),p.init(),y.push(p),Et.multiplyMatrices(z.projectionMatrix,z.matrixWorldInverse),It.setFromProjectionMatrix(Et),J=this.localClippingEnabled,X=pt.init(this.clippingPlanes,J),_=Wt.get(I,d.length),_.init(),d.push(_),Ze(I,z,0,v.sortObjects),_.finish(),v.sortObjects===!0&&_.sort(W,q),this.info.render.frame++,X===!0&&pt.beginShadows();const $=p.state.shadowsArray;if(gt.render($,I,z),X===!0&&pt.endShadows(),this.info.autoReset===!0&&this.info.reset(),(it.enabled===!1||it.isPresenting===!1||it.hasDepthSensing()===!1)&&Ht.render(_,I),p.setupLights(v._useLegacyLights),z.isArrayCamera){const Z=z.cameras;for(let K=0,St=Z.length;K<St;K++){const Ot=Z[K];_s(_,I,Ot,Ot.viewport)}}else _s(_,I,z);M!==null&&(_t.updateMultisampleRenderTarget(M),_t.updateRenderTargetMipmap(M)),I.isScene===!0&&I.onAfterRender(v,I,z),wt.resetDefaultState(),C=-1,k=null,y.pop(),y.length>0?p=y[y.length-1]:p=null,d.pop(),d.length>0?_=d[d.length-1]:_=null};function Ze(I,z,$,Z){if(I.visible===!1)return;if(I.layers.test(z.layers)){if(I.isGroup)$=I.renderOrder;else if(I.isLOD)I.autoUpdate===!0&&I.update(z);else if(I.isLight)p.pushLight(I),I.castShadow&&p.pushShadow(I);else if(I.isSprite){if(!I.frustumCulled||It.intersectsSprite(I)){Z&&vt.setFromMatrixPosition(I.matrixWorld).applyMatrix4(Et);const Ot=et.update(I),zt=I.material;zt.visible&&_.push(I,Ot,zt,$,vt.z,null)}}else if((I.isMesh||I.isLine||I.isPoints)&&(!I.frustumCulled||It.intersectsObject(I))){const Ot=et.update(I),zt=I.material;if(Z&&(I.boundingSphere!==void 0?(I.boundingSphere===null&&I.computeBoundingSphere(),vt.copy(I.boundingSphere.center)):(Ot.boundingSphere===null&&Ot.computeBoundingSphere(),vt.copy(Ot.boundingSphere.center)),vt.applyMatrix4(I.matrixWorld).applyMatrix4(Et)),Array.isArray(zt)){const Gt=Ot.groups;for(let Jt=0,jt=Gt.length;Jt<jt;Jt++){const Xt=Gt[Jt],Re=zt[Xt.materialIndex];Re&&Re.visible&&_.push(I,Ot,Re,$,vt.z,Xt)}}else zt.visible&&_.push(I,Ot,zt,$,vt.z,null)}}const St=I.children;for(let Ot=0,zt=St.length;Ot<zt;Ot++)Ze(St[Ot],z,$,Z)}function _s(I,z,$,Z){const K=I.opaque,St=I.transmissive,Ot=I.transparent;p.setupLightsView($),X===!0&&pt.setGlobalState(v.clippingPlanes,$),St.length>0&&na(K,St,z,$),Z&&at.viewport(x.copy(Z)),K.length>0&&ia(K,z,$),St.length>0&&ia(St,z,$),Ot.length>0&&ia(Ot,z,$),at.buffers.depth.setTest(!0),at.buffers.depth.setMask(!0),at.buffers.color.setMask(!0),at.setPolygonOffset(!1)}function na(I,z,$,Z){if(($.isScene===!0?$.overrideMaterial:null)!==null)return;const St=nt.isWebGL2;ut===null&&(ut=new Ls(1,1,{generateMipmaps:!0,type:Lt.has("EXT_color_buffer_half_float")?Do:rs,minFilter:Rs,samples:St?4:0})),v.getDrawingBufferSize(st),St?ut.setSize(st.x,st.y):ut.setSize(Ga(st.x),Ga(st.y));const Ot=v.getRenderTarget();v.setRenderTarget(ut),v.getClearColor(G),D=v.getClearAlpha(),D<1&&v.setClearColor(16777215,.5),v.clear();const zt=v.toneMapping;v.toneMapping=ss,ia(I,$,Z),_t.updateMultisampleRenderTarget(ut),_t.updateRenderTargetMipmap(ut);let Gt=!1;for(let Jt=0,jt=z.length;Jt<jt;Jt++){const Xt=z[Jt],Re=Xt.object,bn=Xt.geometry,Ue=Xt.material,vi=Xt.group;if(Ue.side===si&&Re.layers.test(Z.layers)){const be=Ue.side;Ue.side=un,Ue.needsUpdate=!0,Su(Re,$,Z,bn,Ue,vi),Ue.side=be,Ue.needsUpdate=!0,Gt=!0}}Gt===!0&&(_t.updateMultisampleRenderTarget(ut),_t.updateRenderTargetMipmap(ut)),v.setRenderTarget(Ot),v.setClearColor(G,D),v.toneMapping=zt}function ia(I,z,$){const Z=z.isScene===!0?z.overrideMaterial:null;for(let K=0,St=I.length;K<St;K++){const Ot=I[K],zt=Ot.object,Gt=Ot.geometry,Jt=Z===null?Ot.material:Z,jt=Ot.group;zt.layers.test($.layers)&&Su(zt,z,$,Gt,Jt,jt)}}function Su(I,z,$,Z,K,St){I.onBeforeRender(v,z,$,Z,K,St),I.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,I.matrixWorld),I.normalMatrix.getNormalMatrix(I.modelViewMatrix),K.onBeforeRender(v,z,$,Z,I,St),K.transparent===!0&&K.side===si&&K.forceSinglePass===!1?(K.side=un,K.needsUpdate=!0,v.renderBufferDirect($,z,Z,K,I,St),K.side=cs,K.needsUpdate=!0,v.renderBufferDirect($,z,Z,K,I,St),K.side=si):v.renderBufferDirect($,z,Z,K,I,St),I.onAfterRender(v,z,$,Z,K,St)}function sa(I,z,$){z.isScene!==!0&&(z=Kt);const Z=Mt.get(I),K=p.state.lights,St=p.state.shadowsArray,Ot=K.state.version,zt=lt.getParameters(I,K.state,St,z,$),Gt=lt.getProgramCacheKey(zt);let Jt=Z.programs;Z.environment=I.isMeshStandardMaterial?z.environment:null,Z.fog=z.fog,Z.envMap=(I.isMeshStandardMaterial?R:Vt).get(I.envMap||Z.environment),Z.envMapRotation=Z.environment!==null&&I.envMap===null?z.environmentRotation:I.envMapRotation,Jt===void 0&&(I.addEventListener("dispose",j),Jt=new Map,Z.programs=Jt);let jt=Jt.get(Gt);if(jt!==void 0){if(Z.currentProgram===jt&&Z.lightsStateVersion===Ot)return Mu(I,zt),jt}else zt.uniforms=lt.getUniforms(I),I.onBuild($,zt,v),I.onBeforeCompile(zt,v),jt=lt.acquireProgram(zt,Gt),Jt.set(Gt,jt),Z.uniforms=zt.uniforms;const Xt=Z.uniforms;return(!I.isShaderMaterial&&!I.isRawShaderMaterial||I.clipping===!0)&&(Xt.clippingPlanes=pt.uniform),Mu(I,zt),Z.needsLights=Wm(I),Z.lightsStateVersion=Ot,Z.needsLights&&(Xt.ambientLightColor.value=K.state.ambient,Xt.lightProbe.value=K.state.probe,Xt.directionalLights.value=K.state.directional,Xt.directionalLightShadows.value=K.state.directionalShadow,Xt.spotLights.value=K.state.spot,Xt.spotLightShadows.value=K.state.spotShadow,Xt.rectAreaLights.value=K.state.rectArea,Xt.ltc_1.value=K.state.rectAreaLTC1,Xt.ltc_2.value=K.state.rectAreaLTC2,Xt.pointLights.value=K.state.point,Xt.pointLightShadows.value=K.state.pointShadow,Xt.hemisphereLights.value=K.state.hemi,Xt.directionalShadowMap.value=K.state.directionalShadowMap,Xt.directionalShadowMatrix.value=K.state.directionalShadowMatrix,Xt.spotShadowMap.value=K.state.spotShadowMap,Xt.spotLightMatrix.value=K.state.spotLightMatrix,Xt.spotLightMap.value=K.state.spotLightMap,Xt.pointShadowMap.value=K.state.pointShadowMap,Xt.pointShadowMatrix.value=K.state.pointShadowMatrix),Z.currentProgram=jt,Z.uniformsList=null,jt}function bu(I){if(I.uniformsList===null){const z=I.currentProgram.getUniforms();I.uniformsList=La.seqWithValue(z.seq,I.uniforms)}return I.uniformsList}function Mu(I,z){const $=Mt.get(I);$.outputColorSpace=z.outputColorSpace,$.batching=z.batching,$.instancing=z.instancing,$.instancingColor=z.instancingColor,$.instancingMorph=z.instancingMorph,$.skinning=z.skinning,$.morphTargets=z.morphTargets,$.morphNormals=z.morphNormals,$.morphColors=z.morphColors,$.morphTargetsCount=z.morphTargetsCount,$.numClippingPlanes=z.numClippingPlanes,$.numIntersection=z.numClipIntersection,$.vertexAlphas=z.vertexAlphas,$.vertexTangents=z.vertexTangents,$.toneMapping=z.toneMapping}function zm(I,z,$,Z,K){z.isScene!==!0&&(z=Kt),_t.resetTextureUnits();const St=z.fog,Ot=Z.isMeshStandardMaterial?z.environment:null,zt=M===null?v.outputColorSpace:M.isXRRenderTarget===!0?M.texture.colorSpace:fs,Gt=(Z.isMeshStandardMaterial?R:Vt).get(Z.envMap||Ot),Jt=Z.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,jt=!!$.attributes.tangent&&(!!Z.normalMap||Z.anisotropy>0),Xt=!!$.morphAttributes.position,Re=!!$.morphAttributes.normal,bn=!!$.morphAttributes.color;let Ue=ss;Z.toneMapped&&(M===null||M.isXRRenderTarget===!0)&&(Ue=v.toneMapping);const vi=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,be=vi!==void 0?vi.length:0,Yt=Mt.get(Z),al=p.state.lights;if(X===!0&&(J===!0||I!==k)){const Ln=I===k&&Z.id===C;pt.setState(Z,I,Ln)}let ye=!1;Z.version===Yt.__version?(Yt.needsLights&&Yt.lightsStateVersion!==al.state.version||Yt.outputColorSpace!==zt||K.isBatchedMesh&&Yt.batching===!1||!K.isBatchedMesh&&Yt.batching===!0||K.isInstancedMesh&&Yt.instancing===!1||!K.isInstancedMesh&&Yt.instancing===!0||K.isSkinnedMesh&&Yt.skinning===!1||!K.isSkinnedMesh&&Yt.skinning===!0||K.isInstancedMesh&&Yt.instancingColor===!0&&K.instanceColor===null||K.isInstancedMesh&&Yt.instancingColor===!1&&K.instanceColor!==null||K.isInstancedMesh&&Yt.instancingMorph===!0&&K.morphTexture===null||K.isInstancedMesh&&Yt.instancingMorph===!1&&K.morphTexture!==null||Yt.envMap!==Gt||Z.fog===!0&&Yt.fog!==St||Yt.numClippingPlanes!==void 0&&(Yt.numClippingPlanes!==pt.numPlanes||Yt.numIntersection!==pt.numIntersection)||Yt.vertexAlphas!==Jt||Yt.vertexTangents!==jt||Yt.morphTargets!==Xt||Yt.morphNormals!==Re||Yt.morphColors!==bn||Yt.toneMapping!==Ue||nt.isWebGL2===!0&&Yt.morphTargetsCount!==be)&&(ye=!0):(ye=!0,Yt.__version=Z.version);let ys=Yt.currentProgram;ye===!0&&(ys=sa(Z,z,K));let wu=!1,_o=!1,cl=!1;const Qe=ys.getUniforms(),vs=Yt.uniforms;if(at.useProgram(ys.program)&&(wu=!0,_o=!0,cl=!0),Z.id!==C&&(C=Z.id,_o=!0),wu||k!==I){Qe.setValue(B,"projectionMatrix",I.projectionMatrix),Qe.setValue(B,"viewMatrix",I.matrixWorldInverse);const Ln=Qe.map.cameraPosition;Ln!==void 0&&Ln.setValue(B,vt.setFromMatrixPosition(I.matrixWorld)),nt.logarithmicDepthBuffer&&Qe.setValue(B,"logDepthBufFC",2/(Math.log(I.far+1)/Math.LN2)),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&Qe.setValue(B,"isOrthographic",I.isOrthographicCamera===!0),k!==I&&(k=I,_o=!0,cl=!0)}if(K.isSkinnedMesh){Qe.setOptional(B,K,"bindMatrix"),Qe.setOptional(B,K,"bindMatrixInverse");const Ln=K.skeleton;Ln&&(nt.floatVertexTextures?(Ln.boneTexture===null&&Ln.computeBoneTexture(),Qe.setValue(B,"boneTexture",Ln.boneTexture,_t)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}K.isBatchedMesh&&(Qe.setOptional(B,K,"batchingTexture"),Qe.setValue(B,"batchingTexture",K._matricesTexture,_t));const ll=$.morphAttributes;if((ll.position!==void 0||ll.normal!==void 0||ll.color!==void 0&&nt.isWebGL2===!0)&&ft.update(K,$,ys),(_o||Yt.receiveShadow!==K.receiveShadow)&&(Yt.receiveShadow=K.receiveShadow,Qe.setValue(B,"receiveShadow",K.receiveShadow)),Z.isMeshGouraudMaterial&&Z.envMap!==null&&(vs.envMap.value=Gt,vs.flipEnvMap.value=Gt.isCubeTexture&&Gt.isRenderTargetTexture===!1?-1:1),_o&&(Qe.setValue(B,"toneMappingExposure",v.toneMappingExposure),Yt.needsLights&&Gm(vs,cl),St&&Z.fog===!0&&ot.refreshFogUniforms(vs,St),ot.refreshMaterialUniforms(vs,Z,H,U,ut),La.upload(B,bu(Yt),vs,_t)),Z.isShaderMaterial&&Z.uniformsNeedUpdate===!0&&(La.upload(B,bu(Yt),vs,_t),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&Qe.setValue(B,"center",K.center),Qe.setValue(B,"modelViewMatrix",K.modelViewMatrix),Qe.setValue(B,"normalMatrix",K.normalMatrix),Qe.setValue(B,"modelMatrix",K.matrixWorld),Z.isShaderMaterial||Z.isRawShaderMaterial){const Ln=Z.uniformsGroups;for(let hl=0,Hm=Ln.length;hl<Hm;hl++)if(nt.isWebGL2){const Tu=Ln[hl];Dt.update(Tu,ys),Dt.bind(Tu,ys)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ys}function Gm(I,z){I.ambientLightColor.needsUpdate=z,I.lightProbe.needsUpdate=z,I.directionalLights.needsUpdate=z,I.directionalLightShadows.needsUpdate=z,I.pointLights.needsUpdate=z,I.pointLightShadows.needsUpdate=z,I.spotLights.needsUpdate=z,I.spotLightShadows.needsUpdate=z,I.rectAreaLights.needsUpdate=z,I.hemisphereLights.needsUpdate=z}function Wm(I){return I.isMeshLambertMaterial||I.isMeshToonMaterial||I.isMeshPhongMaterial||I.isMeshStandardMaterial||I.isShadowMaterial||I.isShaderMaterial&&I.lights===!0}this.getActiveCubeFace=function(){return b},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(I,z,$){Mt.get(I.texture).__webglTexture=z,Mt.get(I.depthTexture).__webglTexture=$;const Z=Mt.get(I);Z.__hasExternalTextures=!0,Z.__autoAllocateDepthBuffer=$===void 0,Z.__autoAllocateDepthBuffer||Lt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(I,z){const $=Mt.get(I);$.__webglFramebuffer=z,$.__useDefaultFramebuffer=z===void 0},this.setRenderTarget=function(I,z=0,$=0){M=I,b=z,E=$;let Z=!0,K=null,St=!1,Ot=!1;if(I){const Gt=Mt.get(I);Gt.__useDefaultFramebuffer!==void 0?(at.bindFramebuffer(B.FRAMEBUFFER,null),Z=!1):Gt.__webglFramebuffer===void 0?_t.setupRenderTarget(I):Gt.__hasExternalTextures&&_t.rebindTextures(I,Mt.get(I.texture).__webglTexture,Mt.get(I.depthTexture).__webglTexture);const Jt=I.texture;(Jt.isData3DTexture||Jt.isDataArrayTexture||Jt.isCompressedArrayTexture)&&(Ot=!0);const jt=Mt.get(I).__webglFramebuffer;I.isWebGLCubeRenderTarget?(Array.isArray(jt[z])?K=jt[z][$]:K=jt[z],St=!0):nt.isWebGL2&&I.samples>0&&_t.useMultisampledRTT(I)===!1?K=Mt.get(I).__webglMultisampledFramebuffer:Array.isArray(jt)?K=jt[$]:K=jt,x.copy(I.viewport),A.copy(I.scissor),F=I.scissorTest}else x.copy(Y).multiplyScalar(H).floor(),A.copy(tt).multiplyScalar(H).floor(),F=ht;if(at.bindFramebuffer(B.FRAMEBUFFER,K)&&nt.drawBuffers&&Z&&at.drawBuffers(I,K),at.viewport(x),at.scissor(A),at.setScissorTest(F),St){const Gt=Mt.get(I.texture);B.framebufferTexture2D(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,B.TEXTURE_CUBE_MAP_POSITIVE_X+z,Gt.__webglTexture,$)}else if(Ot){const Gt=Mt.get(I.texture),Jt=z||0;B.framebufferTextureLayer(B.FRAMEBUFFER,B.COLOR_ATTACHMENT0,Gt.__webglTexture,$||0,Jt)}C=-1},this.readRenderTargetPixels=function(I,z,$,Z,K,St,Ot){if(!(I&&I.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let zt=Mt.get(I).__webglFramebuffer;if(I.isWebGLCubeRenderTarget&&Ot!==void 0&&(zt=zt[Ot]),zt){at.bindFramebuffer(B.FRAMEBUFFER,zt);try{const Gt=I.texture,Jt=Gt.format,jt=Gt.type;if(Jt!==Yn&&Ft.convert(Jt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Xt=jt===Do&&(Lt.has("EXT_color_buffer_half_float")||nt.isWebGL2&&Lt.has("EXT_color_buffer_float"));if(jt!==rs&&Ft.convert(jt)!==B.getParameter(B.IMPLEMENTATION_COLOR_READ_TYPE)&&!(jt===Ri&&(nt.isWebGL2||Lt.has("OES_texture_float")||Lt.has("WEBGL_color_buffer_float")))&&!Xt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}z>=0&&z<=I.width-Z&&$>=0&&$<=I.height-K&&B.readPixels(z,$,Z,K,Ft.convert(Jt),Ft.convert(jt),St)}finally{const Gt=M!==null?Mt.get(M).__webglFramebuffer:null;at.bindFramebuffer(B.FRAMEBUFFER,Gt)}}},this.copyFramebufferToTexture=function(I,z,$=0){const Z=Math.pow(2,-$),K=Math.floor(z.image.width*Z),St=Math.floor(z.image.height*Z);_t.setTexture2D(z,0),B.copyTexSubImage2D(B.TEXTURE_2D,$,0,0,I.x,I.y,K,St),at.unbindTexture()},this.copyTextureToTexture=function(I,z,$,Z=0){const K=z.image.width,St=z.image.height,Ot=Ft.convert($.format),zt=Ft.convert($.type);_t.setTexture2D($,0),B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,$.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,$.unpackAlignment),z.isDataTexture?B.texSubImage2D(B.TEXTURE_2D,Z,I.x,I.y,K,St,Ot,zt,z.image.data):z.isCompressedTexture?B.compressedTexSubImage2D(B.TEXTURE_2D,Z,I.x,I.y,z.mipmaps[0].width,z.mipmaps[0].height,Ot,z.mipmaps[0].data):B.texSubImage2D(B.TEXTURE_2D,Z,I.x,I.y,Ot,zt,z.image),Z===0&&$.generateMipmaps&&B.generateMipmap(B.TEXTURE_2D),at.unbindTexture()},this.copyTextureToTexture3D=function(I,z,$,Z,K=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const St=Math.round(I.max.x-I.min.x),Ot=Math.round(I.max.y-I.min.y),zt=I.max.z-I.min.z+1,Gt=Ft.convert(Z.format),Jt=Ft.convert(Z.type);let jt;if(Z.isData3DTexture)_t.setTexture3D(Z,0),jt=B.TEXTURE_3D;else if(Z.isDataArrayTexture||Z.isCompressedArrayTexture)_t.setTexture2DArray(Z,0),jt=B.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}B.pixelStorei(B.UNPACK_FLIP_Y_WEBGL,Z.flipY),B.pixelStorei(B.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),B.pixelStorei(B.UNPACK_ALIGNMENT,Z.unpackAlignment);const Xt=B.getParameter(B.UNPACK_ROW_LENGTH),Re=B.getParameter(B.UNPACK_IMAGE_HEIGHT),bn=B.getParameter(B.UNPACK_SKIP_PIXELS),Ue=B.getParameter(B.UNPACK_SKIP_ROWS),vi=B.getParameter(B.UNPACK_SKIP_IMAGES),be=$.isCompressedTexture?$.mipmaps[K]:$.image;B.pixelStorei(B.UNPACK_ROW_LENGTH,be.width),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,be.height),B.pixelStorei(B.UNPACK_SKIP_PIXELS,I.min.x),B.pixelStorei(B.UNPACK_SKIP_ROWS,I.min.y),B.pixelStorei(B.UNPACK_SKIP_IMAGES,I.min.z),$.isDataTexture||$.isData3DTexture?B.texSubImage3D(jt,K,z.x,z.y,z.z,St,Ot,zt,Gt,Jt,be.data):Z.isCompressedArrayTexture?B.compressedTexSubImage3D(jt,K,z.x,z.y,z.z,St,Ot,zt,Gt,be.data):B.texSubImage3D(jt,K,z.x,z.y,z.z,St,Ot,zt,Gt,Jt,be),B.pixelStorei(B.UNPACK_ROW_LENGTH,Xt),B.pixelStorei(B.UNPACK_IMAGE_HEIGHT,Re),B.pixelStorei(B.UNPACK_SKIP_PIXELS,bn),B.pixelStorei(B.UNPACK_SKIP_ROWS,Ue),B.pixelStorei(B.UNPACK_SKIP_IMAGES,vi),K===0&&Z.generateMipmaps&&B.generateMipmap(jt),at.unbindTexture()},this.initTexture=function(I){I.isCubeTexture?_t.setTextureCube(I,0):I.isData3DTexture?_t.setTexture3D(I,0):I.isDataArrayTexture||I.isCompressedArrayTexture?_t.setTexture2DArray(I,0):_t.setTexture2D(I,0),at.unbindTexture()},this.resetState=function(){b=0,E=0,M=null,at.reset(),wt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Pi}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===Ch?"display-p3":"srgb",e.unpackColorSpace=re.workingColorSpace===Hc?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(t){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=t}}class _S extends yp{}_S.prototype.isWebGL1Renderer=!0;class yS extends dn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Bn,this.environmentRotation=new Bn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Nh extends mi{constructor(t=[],e=[],n=1,s=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:s};const r=[],a=[];o(s),l(n),h(),this.setAttribute("position",new Cn(r,3)),this.setAttribute("normal",new Cn(r.slice(),3)),this.setAttribute("uv",new Cn(a,2)),s===0?this.computeVertexNormals():this.normalizeNormals();function o(y){const v=new N,S=new N,b=new N;for(let E=0;E<e.length;E+=3)m(e[E+0],v),m(e[E+1],S),m(e[E+2],b),c(v,S,b,y)}function c(y,v,S,b){const E=b+1,M=[];for(let C=0;C<=E;C++){M[C]=[];const k=y.clone().lerp(S,C/E),x=v.clone().lerp(S,C/E),A=E-C;for(let F=0;F<=A;F++)F===0&&C===E?M[C][F]=k:M[C][F]=k.clone().lerp(x,F/A)}for(let C=0;C<E;C++)for(let k=0;k<2*(E-C)-1;k++){const x=Math.floor(k/2);k%2===0?(f(M[C][x+1]),f(M[C+1][x]),f(M[C][x])):(f(M[C][x+1]),f(M[C+1][x+1]),f(M[C+1][x]))}}function l(y){const v=new N;for(let S=0;S<r.length;S+=3)v.x=r[S+0],v.y=r[S+1],v.z=r[S+2],v.normalize().multiplyScalar(y),r[S+0]=v.x,r[S+1]=v.y,r[S+2]=v.z}function h(){const y=new N;for(let v=0;v<r.length;v+=3){y.x=r[v+0],y.y=r[v+1],y.z=r[v+2];const S=p(y)/2/Math.PI+.5,b=d(y)/Math.PI+.5;a.push(S,1-b)}g(),u()}function u(){for(let y=0;y<a.length;y+=6){const v=a[y+0],S=a[y+2],b=a[y+4],E=Math.max(v,S,b),M=Math.min(v,S,b);E>.9&&M<.1&&(v<.2&&(a[y+0]+=1),S<.2&&(a[y+2]+=1),b<.2&&(a[y+4]+=1))}}function f(y){r.push(y.x,y.y,y.z)}function m(y,v){const S=y*3;v.x=t[S+0],v.y=t[S+1],v.z=t[S+2]}function g(){const y=new N,v=new N,S=new N,b=new N,E=new bt,M=new bt,C=new bt;for(let k=0,x=0;k<r.length;k+=9,x+=6){y.set(r[k+0],r[k+1],r[k+2]),v.set(r[k+3],r[k+4],r[k+5]),S.set(r[k+6],r[k+7],r[k+8]),E.set(a[x+0],a[x+1]),M.set(a[x+2],a[x+3]),C.set(a[x+4],a[x+5]),b.copy(y).add(v).add(S).divideScalar(3);const A=p(b);_(E,x+0,y,A),_(M,x+2,v,A),_(C,x+4,S,A)}}function _(y,v,S,b){b<0&&y.x===1&&(a[v]=y.x-1),S.x===0&&S.z===0&&(a[v]=b/2/Math.PI+.5)}function p(y){return Math.atan2(y.z,-y.x)}function d(y){return Math.atan2(-y.y,Math.sqrt(y.x*y.x+y.z*y.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Nh(t.vertices,t.indices,t.radius,t.details)}}class Fh extends Nh{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],s=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,s,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Fh(t.radius,t.detail)}}class yr extends mi{constructor(t=1,e=32,n=16,s=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:s,phiLength:r,thetaStart:a,thetaLength:o},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const c=Math.min(a+o,Math.PI);let l=0;const h=[],u=new N,f=new N,m=[],g=[],_=[],p=[];for(let d=0;d<=n;d++){const y=[],v=d/n;let S=0;d===0&&a===0?S=.5/e:d===n&&c===Math.PI&&(S=-.5/e);for(let b=0;b<=e;b++){const E=b/e;u.x=-t*Math.cos(s+E*r)*Math.sin(a+v*o),u.y=t*Math.cos(a+v*o),u.z=t*Math.sin(s+E*r)*Math.sin(a+v*o),g.push(u.x,u.y,u.z),f.copy(u).normalize(),_.push(f.x,f.y,f.z),p.push(E+S,1-v),y.push(l++)}h.push(y)}for(let d=0;d<n;d++)for(let y=0;y<e;y++){const v=h[d][y+1],S=h[d][y],b=h[d+1][y],E=h[d+1][y+1];(d!==0||a>0)&&m.push(v,S,E),(d!==n-1||c<Math.PI)&&m.push(S,b,E)}this.setIndex(m),this.setAttribute("position",new Cn(g,3)),this.setAttribute("normal",new Cn(_,3)),this.setAttribute("uv",new Cn(p,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yr(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class ah extends pi{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new xt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=eo,this.normalScale=new bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Bn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class vS extends ah{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new bt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return qe(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new xt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new xt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new xt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class xS extends pi{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new xt(16777215),this.specular=new xt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=eo,this.normalScale=new bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Bn,this.combine=Gc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class SS extends pi{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new xt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=eo,this.normalScale=new bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class bS extends pi{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new xt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new xt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=eo,this.normalScale=new bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Bn,this.combine=Gc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Fn extends pi{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new xt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=eo,this.normalScale=new bt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}const Xd={enabled:!1,files:{},add:function(i,t){this.enabled!==!1&&(this.files[i]=t)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class vp{constructor(t,e,n){const s=this;let r=!1,a=0,o=0,c;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(h){o++,r===!1&&s.onStart!==void 0&&s.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,s.onProgress!==void 0&&s.onProgress(h,a,o),a===o&&(r=!1,s.onLoad!==void 0&&s.onLoad())},this.itemError=function(h){s.onError!==void 0&&s.onError(h)},this.resolveURL=function(h){return c?c(h):h},this.setURLModifier=function(h){return c=h,this},this.addHandler=function(h,u){return l.push(h,u),this},this.removeHandler=function(h){const u=l.indexOf(h);return u!==-1&&l.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=l.length;u<f;u+=2){const m=l[u],g=l[u+1];if(m.global&&(m.lastIndex=0),m.test(h))return g}return null}}}const MS=new vp;class kh{constructor(t){this.manager=t!==void 0?t:MS,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(s,r){n.load(t,s,e,r)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}kh.DEFAULT_MATERIAL_NAME="__DEFAULT";class wS extends kh{constructor(t){super(t)}load(t,e,n,s){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const r=this,a=Xd.get(t);if(a!==void 0)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;const o=Lo("img");function c(){h(),Xd.add(t,this),e&&e(this),r.manager.itemEnd(t)}function l(u){h(),s&&s(u),r.manager.itemError(t),r.manager.itemEnd(t)}function h(){o.removeEventListener("load",c,!1),o.removeEventListener("error",l,!1)}return o.addEventListener("load",c,!1),o.addEventListener("error",l,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o}}class TS extends kh{constructor(t){super(t)}load(t,e,n,s){const r=new ze,a=new wS(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(o){r.image=o,r.needsUpdate=!0,e!==void 0&&e(r)},n,s),r}}class xp extends dn{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new xt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),e}}const Gl=new Se,Kd=new N,Yd=new N;class ES{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new bt(512,512),this.map=null,this.mapPass=null,this.matrix=new Se,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Lh,this._frameExtents=new bt(1,1),this._viewportCount=1,this._viewports=[new xe(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Kd.setFromMatrixPosition(t.matrixWorld),e.position.copy(Kd),Yd.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Yd),e.updateMatrixWorld(),Gl.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Gl),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Gl)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}const $d=new Se,Mo=new N,Wl=new N;class AS extends ES{constructor(){super(new Tn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new bt(4,2),this._viewportCount=6,this._viewports=[new xe(2,1,1,1),new xe(0,1,1,1),new xe(3,1,1,1),new xe(1,1,1,1),new xe(3,0,1,1),new xe(1,0,1,1)],this._cubeDirections=[new N(1,0,0),new N(-1,0,0),new N(0,0,1),new N(0,0,-1),new N(0,1,0),new N(0,-1,0)],this._cubeUps=[new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,1,0),new N(0,0,1),new N(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,s=this.matrix,r=t.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Mo.setFromMatrixPosition(t.matrixWorld),n.position.copy(Mo),Wl.copy(n.position),Wl.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Wl),n.updateMatrixWorld(),s.makeTranslation(-Mo.x,-Mo.y,-Mo.z),$d.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix($d)}}class CS extends xp{constructor(t,e,n=0,s=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=s,this.shadow=new AS}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class IS extends xp{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}let RS=class{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Zd(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Zd();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}};function Zd(){return(typeof performance>"u"?Date:performance).now()}const Qd=new Se;class Xc{constructor(t,e,n=0,s=1/0){this.ray=new Dh(t,e),this.near=n,this.far=s,this.camera=null,this.layers=new Ph,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Qd.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Qd),this}intersectObject(t,e=!0,n=[]){return ch(t,this,n,e),n.sort(Jd),n}intersectObjects(t,e=!0,n=[]){for(let s=0,r=t.length;s<r;s++)ch(t[s],this,n,e);return n.sort(Jd),n}}function Jd(i,t){return i.distance-t.distance}function ch(i,t,e,n){if(i.layers.test(t.layers)&&i.raycast(t,e),n===!0){const s=i.children;for(let r=0,a=s.length;r<a;r++)ch(s[r],t,e,!0)}}class tf{constructor(t=1,e=0,n=0){return this.radius=t,this.phi=e,this.theta=n,this}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(qe(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Eh}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Eh);const Uh="14.7.77",ef=(i,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:i}),nf=(i,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:i}),lh=(i,t)=>({startTime:t,type:"setValue",value:i}),Sp=(i,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:i}),bp=(i,t,{startTime:e,target:n,timeConstant:s})=>n+(t-n)*Math.exp((e-i)/s),vr=i=>i.type==="exponentialRampToValue",Wa=i=>i.type==="linearRampToValue",Zi=i=>vr(i)||Wa(i),Bh=i=>i.type==="setValue",Ci=i=>i.type==="setValueCurve",Ha=(i,t,e,n)=>{const s=i[t];return s===void 0?n:Zi(s)||Bh(s)?s.value:Ci(s)?s.values[s.values.length-1]:bp(e,Ha(i,t-1,s.startTime,n),s)},sf=(i,t,e,n,s)=>e===void 0?[n.insertTime,s]:Zi(e)?[e.endTime,e.value]:Bh(e)?[e.startTime,e.value]:Ci(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,Ha(i,t-1,e.startTime,s)],hh=i=>i.type==="cancelAndHold",uh=i=>i.type==="cancelScheduledValues",Ki=i=>hh(i)||uh(i)?i.cancelTime:vr(i)||Wa(i)?i.endTime:i.startTime,rf=(i,t,e,{endTime:n,value:s})=>e===s?s:0<e&&0<s||e<0&&s<0?e*(s/e)**((i-t)/(n-t)):0,of=(i,t,e,{endTime:n,value:s})=>e+(i-t)/(n-t)*(s-e),DS=(i,t)=>{const e=Math.floor(t),n=Math.ceil(t);return e===n?i[e]:(1-(t-e))*i[e]+(1-(n-t))*i[n]},PS=(i,{duration:t,startTime:e,values:n})=>{const s=(i-e)/t*(n.length-1);return DS(n,s)},Aa=i=>i.type==="setTarget";class LS{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=Ki(t);if(hh(t)||uh(t)){const n=this._automationEvents.findIndex(r=>uh(t)&&Ci(r)?r.startTime+r.duration>=e:Ki(r)>=e),s=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),hh(t)){const r=this._automationEvents[this._automationEvents.length-1];if(s!==void 0&&Zi(s)){if(r!==void 0&&Aa(r))throw new Error("The internal list is malformed.");const a=r===void 0?s.insertTime:Ci(r)?r.startTime+r.duration:Ki(r),o=r===void 0?this._defaultValue:Ci(r)?r.values[r.values.length-1]:r.value,c=vr(s)?rf(e,a,o,s):of(e,a,o,s),l=vr(s)?ef(c,e,this._currenTime):nf(c,e,this._currenTime);this._automationEvents.push(l)}if(r!==void 0&&Aa(r)&&this._automationEvents.push(lh(this.getValue(e),e)),r!==void 0&&Ci(r)&&r.startTime+r.duration>e){const a=e-r.startTime,o=(r.values.length-1)/r.duration,c=Math.max(2,1+Math.ceil(a*o)),l=a/(c-1)*o,h=r.values.slice(0,c);if(l<1)for(let u=1;u<c;u+=1){const f=l*u%1;h[u]=r.values[u-1]*(1-f)+r.values[u]*f}this._automationEvents[this._automationEvents.length-1]=Sp(h,r.startTime,a)}}}else{const n=this._automationEvents.findIndex(a=>Ki(a)>e),s=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(s!==void 0&&Ci(s)&&Ki(s)+s.duration>e)return!1;const r=vr(t)?ef(t.value,t.endTime,this._currenTime):Wa(t)?nf(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(r);else{if(Ci(t)&&e+t.duration>Ki(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>Ki(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),s=n[0];Aa(s)&&n.unshift(lh(Ha(this._automationEvents,e-2,s.startTime,this._defaultValue),s.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(a=>Ki(a)>t),n=this._automationEvents[e],s=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[s];if(r!==void 0&&Aa(r)&&(n===void 0||!Zi(n)||n.insertTime>t))return bp(t,Ha(this._automationEvents,s-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Bh(r)&&(n===void 0||!Zi(n)))return r.value;if(r!==void 0&&Ci(r)&&(n===void 0||!Zi(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?PS(t,r):r.values[r.values.length-1];if(r!==void 0&&Zi(r)&&(n===void 0||!Zi(n)))return r.value;if(n!==void 0&&vr(n)){const[a,o]=sf(this._automationEvents,s,r,n,this._defaultValue);return rf(t,a,o,n)}if(n!==void 0&&Wa(n)){const[a,o]=sf(this._automationEvents,s,r,n,this._defaultValue);return of(t,a,o,n)}return this._defaultValue}}const OS=i=>({cancelTime:i,type:"cancelAndHold"}),NS=i=>({cancelTime:i,type:"cancelScheduledValues"}),FS=(i,t)=>({endTime:t,type:"exponentialRampToValue",value:i}),kS=(i,t)=>({endTime:t,type:"linearRampToValue",value:i}),US=(i,t,e)=>({startTime:t,target:i,timeConstant:e,type:"setTarget"}),BS=()=>new DOMException("","AbortError"),VS=i=>(t,e,[n,s,r],a)=>{i(t[s],[e,n,r],o=>o[0]===e&&o[1]===n,a)},zS=i=>(t,e,n)=>{const s=[];for(let r=0;r<n.numberOfInputs;r+=1)s.push(new Set);i.set(t,{activeInputs:s,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},GS=i=>(t,e)=>{i.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},Rr=new WeakSet,Mp=new WeakMap,Vh=new WeakMap,wp=new WeakMap,zh=new WeakMap,Kc=new WeakMap,Tp=new WeakMap,dh=new WeakMap,fh=new WeakMap,ph=new WeakMap,Ep={construct(){return Ep}},WS=i=>{try{const t=new Proxy(i,Ep);new t}catch{return!1}return!0},af=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,cf=(i,t)=>{const e=[];let n=i.replace(/^[\s]+/,""),s=n.match(af);for(;s!==null;){const r=s[1].slice(1,-1),a=s[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(a),n=n.slice(s[0].length).replace(/^[\s]+/,""),s=n.match(af)}return[e.join(";"),n]},lf=i=>{if(i!==void 0&&!Array.isArray(i))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},hf=i=>{if(!WS(i))throw new TypeError("The given value for processorCtor should be a constructor.");if(i.prototype===null||typeof i.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},HS=(i,t,e,n,s,r,a,o,c,l,h,u,f)=>{let m=0;return(g,_,p={credentials:"omit"})=>{const d=h.get(g);if(d!==void 0&&d.has(_))return Promise.resolve();const y=l.get(g);if(y!==void 0){const b=y.get(_);if(b!==void 0)return b}const v=r(g),S=v.audioWorklet===void 0?s(_).then(([b,E])=>{const[M,C]=cf(b,E),k=`${M};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${C}
})})(window,'_AWGS')`;return e(k)}).then(()=>{const b=f._AWGS.pop();if(b===void 0)throw new SyntaxError;n(v.currentTime,v.sampleRate,()=>b(class{},void 0,(E,M)=>{if(E.trim()==="")throw t();const C=fh.get(v);if(C!==void 0){if(C.has(E))throw t();hf(M),lf(M.parameterDescriptors),C.set(E,M)}else hf(M),lf(M.parameterDescriptors),fh.set(v,new Map([[E,M]]))},v.sampleRate,void 0,void 0))}):Promise.all([s(_),Promise.resolve(i(u,u))]).then(([[b,E],M])=>{const C=m+1;m=C;const[k,x]=cf(b,E),D=`${k};((AudioWorkletProcessor,registerProcessor)=>{${x}
})(${M?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${M?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${M?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${C}',class extends AudioWorkletProcessor{process(){return !1}})`,V=new Blob([D],{type:"application/javascript; charset=utf-8"}),U=URL.createObjectURL(V);return v.audioWorklet.addModule(U,p).then(()=>{if(o(v))return v;const H=a(v);return H.audioWorklet.addModule(U,p).then(()=>H)}).then(H=>{if(c===null)throw new SyntaxError;try{new c(H,`__sac${C}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(U))});return y===void 0?l.set(g,new Map([[_,S]])):y.set(_,S),S.then(()=>{const b=h.get(g);b===void 0?h.set(g,new Set([_])):b.add(_)}).finally(()=>{const b=l.get(g);b!==void 0&&b.delete(_)}),S}},Zn=(i,t)=>{const e=i.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},Yc=(i,t)=>{const e=Array.from(i).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return i.delete(n),n},Ap=(i,t,e,n)=>{const s=Zn(i,t),r=Yc(s,a=>a[0]===e&&a[1]===n);return s.size===0&&i.delete(t),r},Wo=i=>Zn(Tp,i),Dr=i=>{if(Rr.has(i))throw new Error("The AudioNode is already stored.");Rr.add(i),Wo(i).forEach(t=>t(!0))},Cp=i=>"port"in i,Ho=i=>{if(!Rr.has(i))throw new Error("The AudioNode is not stored.");Rr.delete(i),Wo(i).forEach(t=>t(!1))},mh=(i,t)=>{!Cp(i)&&t.every(e=>e.size===0)&&Ho(i)},qS=(i,t,e,n,s,r,a,o,c,l,h,u,f)=>{const m=new WeakMap;return(g,_,p,d,y)=>{const{activeInputs:v,passiveInputs:S}=r(_),{outputs:b}=r(g),E=o(g),M=C=>{const k=c(_),x=c(g);if(C){const A=Ap(S,g,p,d);i(v,g,A,!1),!y&&!u(g)&&e(x,k,p,d),f(_)&&Dr(_)}else{const A=n(v,g,p,d);t(S,d,A,!1),!y&&!u(g)&&s(x,k,p,d);const F=a(_);if(F===0)h(_)&&mh(_,v);else{const G=m.get(_);G!==void 0&&clearTimeout(G),m.set(_,setTimeout(()=>{h(_)&&mh(_,v)},F*1e3))}}};return l(b,[_,p,d],C=>C[0]===_&&C[1]===p&&C[2]===d,!0)?(E.add(M),h(g)?i(v,g,[p,d,M],!0):t(S,d,[g,p,M],!0),!0):!1}},jS=i=>(t,e,[n,s,r],a)=>{const o=t.get(n);o===void 0?t.set(n,new Set([[s,e,r]])):i(o,[s,e,r],c=>c[0]===s&&c[1]===e,a)},XS=i=>(t,e)=>{const n=i(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const s=()=>{e.removeEventListener("ended",s),e.disconnect(n),n.disconnect()};e.addEventListener("ended",s)},KS=i=>(t,e)=>{i(t).add(e)},YS={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},$S=(i,t,e,n,s,r)=>class extends i{constructor(o,c){const l=s(o),h={...YS,...c},u=n(l,h),f=r(l)?t():null;super(o,!1,u,f),this._nativeAnalyserNode=u}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(o){this._nativeAnalyserNode.fftSize=o}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(o){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=o,!(o>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(o){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=o,!(this._nativeAnalyserNode.maxDecibels>o))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(o){this._nativeAnalyserNode.smoothingTimeConstant=o}getByteFrequencyData(o){this._nativeAnalyserNode.getByteFrequencyData(o)}getByteTimeDomainData(o){this._nativeAnalyserNode.getByteTimeDomainData(o)}getFloatFrequencyData(o){this._nativeAnalyserNode.getFloatFrequencyData(o)}getFloatTimeDomainData(o){this._nativeAnalyserNode.getFloatTimeDomainData(o)}},nn=(i,t)=>i.context===t,ZS=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=t(r);if(!nn(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,fftSize:o.fftSize,maxDecibels:o.maxDecibels,minDecibels:o.minDecibels,smoothingTimeConstant:o.smoothingTimeConstant};o=i(a,l)}return n.set(a,o),await e(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},qa=i=>{try{i.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},gi=()=>new DOMException("","IndexSizeError"),Gh=i=>{i.getChannelData=(t=>e=>{try{return t.call(i,e)}catch(n){throw n.code===12?gi():n}})(i.getChannelData)},QS={numberOfChannels:1},JS=(i,t,e,n,s,r,a,o)=>{let c=null;return class Ip{constructor(h){if(s===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:u,numberOfChannels:f,sampleRate:m}={...QS,...h};c===null&&(c=new s(1,1,44100));const g=n!==null&&t(r,r)?new n({length:u,numberOfChannels:f,sampleRate:m}):c.createBuffer(f,u,m);if(g.numberOfChannels===0)throw e();return typeof g.copyFromChannel!="function"?(a(g),Gh(g)):t(qa,()=>qa(g))||o(g),i.add(g),g}static[Symbol.hasInstance](h){return h!==null&&typeof h=="object"&&Object.getPrototypeOf(h)===Ip.prototype||i.has(h)}}},mn=-34028234663852886e22,an=-mn,Li=i=>Rr.has(i),tb={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},eb=(i,t,e,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f={...tb,...h},m=s(u,f),g=a(u),_=g?t():null;super(l,!1,m,_),this._audioBufferSourceNodeRenderer=_,this._isBufferNullified=!1,this._isBufferSet=f.buffer!==null,this._nativeAudioBufferSourceNode=m,this._onended=null,this._playbackRate=e(this,g,m.playbackRate,an,mn)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(l){if(this._nativeAudioBufferSourceNode.buffer=l,l!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(l){this._nativeAudioBufferSourceNode.loop=l}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(l){this._nativeAudioBufferSourceNode.loopEnd=l}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(l){this._nativeAudioBufferSourceNode.loopStart=l}get onended(){return this._onended}set onended(l){const h=typeof l=="function"?o(this,l):null;this._nativeAudioBufferSourceNode.onended=h;const u=this._nativeAudioBufferSourceNode.onended;this._onended=u!==null&&u===h?l:u}get playbackRate(){return this._playbackRate}start(l=0,h=0,u){if(this._nativeAudioBufferSourceNode.start(l,h,u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=u===void 0?[l,h]:[l,h,u]),this.context.state!=="closed"){Dr(this);const f=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",f),Li(this)&&Ho(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",f)}}stop(l=0){this._nativeAudioBufferSourceNode.stop(l),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=l)}},nb=(i,t,e,n,s)=>()=>{const r=new WeakMap;let a=null,o=null;const c=async(l,h)=>{let u=e(l);const f=nn(u,h);if(!f){const m={buffer:u.buffer,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,loop:u.loop,loopEnd:u.loopEnd,loopStart:u.loopStart,playbackRate:u.playbackRate.value};u=t(h,m),a!==null&&u.start(...a),o!==null&&u.stop(o)}return r.set(h,u),f?await i(h,l.playbackRate,u.playbackRate):await n(h,l.playbackRate,u.playbackRate),await s(l,h,u),u};return{set start(l){a=l},set stop(l){o=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},ib=i=>"playbackRate"in i,sb=i=>"frequency"in i&&"gain"in i,rb=i=>"offset"in i,ob=i=>!("frequency"in i)&&"gain"in i,ab=i=>"detune"in i&&"frequency"in i,cb=i=>"pan"in i,cn=i=>Zn(Mp,i),qo=i=>Zn(wp,i),gh=(i,t)=>{const{activeInputs:e}=cn(i);e.forEach(s=>s.forEach(([r])=>{t.includes(i)||gh(r,[...t,i])}));const n=ib(i)?[i.playbackRate]:Cp(i)?Array.from(i.parameters.values()):sb(i)?[i.Q,i.detune,i.frequency,i.gain]:rb(i)?[i.offset]:ob(i)?[i.gain]:ab(i)?[i.detune,i.frequency]:cb(i)?[i.pan]:[];for(const s of n){const r=qo(s);r!==void 0&&r.activeInputs.forEach(([a])=>gh(a,t))}Li(i)&&Ho(i)},Rp=i=>{gh(i.destination,[])},lb=i=>i===void 0||typeof i=="number"||typeof i=="string"&&(i==="balanced"||i==="interactive"||i==="playback"),hb=(i,t,e,n,s,r,a,o,c)=>class extends i{constructor(h={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let u;try{u=new c(h)}catch(g){throw g.code===12&&g.message==="sampleRate is not in range"?e():g}if(u===null)throw n();if(!lb(h.latencyHint))throw new TypeError(`The provided value '${h.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(h.sampleRate!==void 0&&u.sampleRate!==h.sampleRate)throw e();super(u,2);const{latencyHint:f}=h,{sampleRate:m}=u;if(this._baseLatency=typeof u.baseLatency=="number"?u.baseLatency:f==="balanced"?512/m:f==="interactive"||f===void 0?256/m:f==="playback"?1024/m:Math.max(2,Math.min(128,Math.round(f*m/128)))*128/m,this._nativeAudioContext=u,c.name==="webkitAudioContext"?(this._nativeGainNode=u.createGain(),this._nativeOscillatorNode=u.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(u.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,u.state==="running"){this._state="suspended";const g=()=>{this._state==="suspended"&&(this._state=null),u.removeEventListener("statechange",g)};u.addEventListener("statechange",g)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),Rp(this)}))}createMediaElementSource(h){return new s(this,{mediaElement:h})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(h){return new a(this,{mediaStream:h})}createMediaStreamTrackSource(h){return new o(this,{mediaStreamTrack:h})}resume(){return this._state==="suspended"?new Promise((h,u)=>{const f=()=>{this._nativeAudioContext.removeEventListener("statechange",f),this._nativeAudioContext.state==="running"?h():this.resume().then(h,u)};this._nativeAudioContext.addEventListener("statechange",f)}):this._nativeAudioContext.resume().catch(h=>{throw h===void 0||h.code===15?t():h})}suspend(){return this._nativeAudioContext.suspend().catch(h=>{throw h===void 0?t():h})}},ub=(i,t,e,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f=a(u),m=s(u,h,f),g=f?t(o):null;super(l,!1,m,g),this._isNodeOfNativeOfflineAudioContext=f,this._nativeAudioDestinationNode=m}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(l>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=l}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(l){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=l}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},db=i=>{const t=new WeakMap,e=async(n,s)=>{const r=s.destination;return t.set(s,r),await i(n,s,r),r};return{render(n,s){const r=t.get(s);return r!==void 0?Promise.resolve(r):e(n,s)}}},fb=(i,t,e,n,s,r,a,o)=>(c,l)=>{const h=l.listener,u=()=>{const b=new Float32Array(1),E=t(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),M=a(l);let C=!1,k=[0,0,-1,0,1,0],x=[0,0,0];const A=()=>{if(C)return;C=!0;const V=n(l,256,9,0);V.onaudioprocess=({inputBuffer:U})=>{const H=[r(U,b,0),r(U,b,1),r(U,b,2),r(U,b,3),r(U,b,4),r(U,b,5)];H.some((q,Y)=>q!==k[Y])&&(h.setOrientation(...H),k=H);const W=[r(U,b,6),r(U,b,7),r(U,b,8)];W.some((q,Y)=>q!==x[Y])&&(h.setPosition(...W),x=W)},E.connect(V)},F=V=>U=>{U!==k[V]&&(k[V]=U,h.setOrientation(...k))},G=V=>U=>{U!==x[V]&&(x[V]=U,h.setPosition(...x))},D=(V,U,H)=>{const W=e(l,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:U});W.connect(E,0,V),W.start(),Object.defineProperty(W.offset,"defaultValue",{get(){return U}});const q=i({context:c},M,W.offset,an,mn);return o(q,"value",Y=>()=>Y.call(q),Y=>tt=>{try{Y.call(q,tt)}catch(ht){if(ht.code!==9)throw ht}A(),M&&H(tt)}),q.cancelAndHoldAtTime=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.cancelAndHoldAtTime),q.cancelScheduledValues=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.cancelScheduledValues),q.exponentialRampToValueAtTime=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.exponentialRampToValueAtTime),q.linearRampToValueAtTime=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.linearRampToValueAtTime),q.setTargetAtTime=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.setTargetAtTime),q.setValueAtTime=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.setValueAtTime),q.setValueCurveAtTime=(Y=>M?()=>{throw s()}:(...tt)=>{const ht=Y.apply(q,tt);return A(),ht})(q.setValueCurveAtTime),q};return{forwardX:D(0,0,F(0)),forwardY:D(1,0,F(1)),forwardZ:D(2,-1,F(2)),positionX:D(6,0,G(0)),positionY:D(7,0,G(1)),positionZ:D(8,0,G(2)),upX:D(3,0,F(3)),upY:D(4,1,F(4)),upZ:D(5,0,F(5))}},{forwardX:f,forwardY:m,forwardZ:g,positionX:_,positionY:p,positionZ:d,upX:y,upY:v,upZ:S}=h.forwardX===void 0?u():h;return{get forwardX(){return f},get forwardY(){return m},get forwardZ(){return g},get positionX(){return _},get positionY(){return p},get positionZ(){return d},get upX(){return y},get upY(){return v},get upZ(){return S}}},ja=i=>"context"in i,jo=i=>ja(i[0]),Ws=(i,t,e,n)=>{for(const s of i)if(e(s)){if(n)return!1;throw Error("The set contains at least one similar element.")}return i.add(t),!0},uf=(i,t,[e,n],s)=>{Ws(i,[t,e,n],r=>r[0]===t&&r[1]===e,s)},df=(i,[t,e,n],s)=>{const r=i.get(t);r===void 0?i.set(t,new Set([[e,n]])):Ws(r,[e,n],a=>a[0]===e,s)},so=i=>"inputs"in i,Xa=(i,t,e,n)=>{if(so(t)){const s=t.inputs[n];return i.connect(s,e,0),[s,e,0]}return i.connect(t,e,n),[t,e,n]},Dp=(i,t,e)=>{for(const n of i)if(n[0]===t&&n[1]===e)return i.delete(n),n;return null},pb=(i,t,e)=>Yc(i,n=>n[0]===t&&n[1]===e),Pp=(i,t)=>{if(!Wo(i).delete(t))throw new Error("Missing the expected event listener.")},Lp=(i,t,e)=>{const n=Zn(i,t),s=Yc(n,r=>r[0]===e);return n.size===0&&i.delete(t),s},Ka=(i,t,e,n)=>{so(t)?i.disconnect(t.inputs[n],e,0):i.disconnect(t,e,n)},_e=i=>Zn(Vh,i),Oo=i=>Zn(zh,i),Ns=i=>dh.has(i),Oa=i=>!Rr.has(i),ff=(i,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=i.createScriptProcessor(256,1,1),s=i.createGain(),r=i.createBuffer(1,2,44100),a=r.getChannelData(0);a[0]=1,a[1]=1;const o=i.createBufferSource();o.buffer=r,o.loop=!0,o.connect(n).connect(i.destination),o.connect(s),o.disconnect(s),n.onaudioprocess=c=>{const l=c.inputBuffer.getChannelData(0);Array.prototype.some.call(l,h=>h===1)?e(!0):e(!1),o.stop(),n.onaudioprocess=null,o.disconnect(n),n.disconnect(i.destination)},o.start()}}),Hl=(i,t)=>{const e=new Map;for(const n of i)for(const s of n){const r=e.get(s);e.set(s,r===void 0?1:r+1)}e.forEach((n,s)=>t(s,n))},Ya=i=>"context"in i,mb=i=>{const t=new Map;i.connect=(e=>(n,s=0,r=0)=>{const a=Ya(n)?e(n,s,r):e(n,s),o=t.get(n);return o===void 0?t.set(n,[{input:r,output:s}]):o.every(c=>c.input!==r||c.output!==s)&&o.push({input:r,output:s}),a})(i.connect.bind(i)),i.disconnect=(e=>(n,s,r)=>{if(e.apply(i),n===void 0)t.clear();else if(typeof n=="number")for(const[a,o]of t){const c=o.filter(l=>l.output!==n);c.length===0?t.delete(a):t.set(a,c)}else if(t.has(n))if(s===void 0)t.delete(n);else{const a=t.get(n);if(a!==void 0){const o=a.filter(c=>c.output!==s&&(c.input!==r||r===void 0));o.length===0?t.delete(n):t.set(n,o)}}for(const[a,o]of t)o.forEach(c=>{Ya(a)?i.connect(a,c.output,c.input):i.connect(a,c.output)})})(i.disconnect)},gb=(i,t,e,n)=>{const{activeInputs:s,passiveInputs:r}=qo(t),{outputs:a}=cn(i),o=Wo(i),c=l=>{const h=_e(i),u=Oo(t);if(l){const f=Lp(r,i,e);uf(s,i,f,!1),!n&&!Ns(i)&&h.connect(u,e)}else{const f=pb(s,i,e);df(r,f,!1),!n&&!Ns(i)&&h.disconnect(u,e)}};return Ws(a,[t,e],l=>l[0]===t&&l[1]===e,!0)?(o.add(c),Li(i)?uf(s,i,[e,c],!0):df(r,[i,e,c],!0),!0):!1},_b=(i,t,e,n)=>{const{activeInputs:s,passiveInputs:r}=cn(t),a=Dp(s[n],i,e);return a===null?[Ap(r,i,e,n)[2],!1]:[a[2],!0]},yb=(i,t,e)=>{const{activeInputs:n,passiveInputs:s}=qo(t),r=Dp(n,i,e);return r===null?[Lp(s,i,e)[1],!1]:[r[2],!0]},Wh=(i,t,e,n,s)=>{const[r,a]=_b(i,e,n,s);if(r!==null&&(Pp(i,r),a&&!t&&!Ns(i)&&Ka(_e(i),_e(e),n,s)),Li(e)){const{activeInputs:o}=cn(e);mh(e,o)}},Hh=(i,t,e,n)=>{const[s,r]=yb(i,e,n);s!==null&&(Pp(i,s),r&&!t&&!Ns(i)&&_e(i).disconnect(Oo(e),n))},vb=(i,t)=>{const e=cn(i),n=[];for(const s of e.outputs)jo(s)?Wh(i,t,...s):Hh(i,t,...s),n.push(s[0]);return e.outputs.clear(),n},xb=(i,t,e)=>{const n=cn(i),s=[];for(const r of n.outputs)r[1]===e&&(jo(r)?Wh(i,t,...r):Hh(i,t,...r),s.push(r[0]),n.outputs.delete(r));return s},Sb=(i,t,e,n,s)=>{const r=cn(i);return Array.from(r.outputs).filter(a=>a[0]===e&&(n===void 0||a[1]===n)&&(s===void 0||a[2]===s)).map(a=>(jo(a)?Wh(i,t,...a):Hh(i,t,...a),r.outputs.delete(a),a[0]))},bb=(i,t,e,n,s,r,a,o,c,l,h,u,f,m,g,_)=>class extends l{constructor(d,y,v,S){super(v),this._context=d,this._nativeAudioNode=v;const b=h(d);u(b)&&e(ff,()=>ff(b,_))!==!0&&mb(v),Vh.set(this,v),Tp.set(this,new Set),d.state!=="closed"&&y&&Dr(this),i(this,S,v)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(d){this._nativeAudioNode.channelCount=d}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(d){this._nativeAudioNode.channelCountMode=d}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(d){this._nativeAudioNode.channelInterpretation=d}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(d,y=0,v=0){if(y<0||y>=this._nativeAudioNode.numberOfOutputs)throw s();const S=h(this._context),b=g(S);if(f(d)||m(d))throw r();if(ja(d)){const C=_e(d);try{const x=Xa(this._nativeAudioNode,C,y,v),A=Oa(this);(b||A)&&this._nativeAudioNode.disconnect(...x),this.context.state!=="closed"&&!A&&Oa(d)&&Dr(d)}catch(x){throw x.code===12?r():x}if(t(this,d,y,v,b)){const x=c([this],d);Hl(x,n(b))}return d}const E=Oo(d);if(E.name==="playbackRate"&&E.maxValue===1024)throw a();try{this._nativeAudioNode.connect(E,y),(b||Oa(this))&&this._nativeAudioNode.disconnect(E,y)}catch(C){throw C.code===12?r():C}if(gb(this,d,y,b)){const C=c([this],d);Hl(C,n(b))}}disconnect(d,y,v){let S;const b=h(this._context),E=g(b);if(d===void 0)S=vb(this,E);else if(typeof d=="number"){if(d<0||d>=this.numberOfOutputs)throw s();S=xb(this,E,d)}else{if(y!==void 0&&(y<0||y>=this.numberOfOutputs)||ja(d)&&v!==void 0&&(v<0||v>=d.numberOfInputs))throw s();if(S=Sb(this,E,d,y,v),S.length===0)throw r()}for(const M of S){const C=c([this],M);Hl(C,o)}}},Mb=(i,t,e,n,s,r,a,o,c,l,h,u,f)=>(m,g,_,p=null,d=null)=>{const y=_.value,v=new LS(y),S=g?n(v):null,b={get defaultValue(){return y},get maxValue(){return p===null?_.maxValue:p},get minValue(){return d===null?_.minValue:d},get value(){return _.value},set value(E){_.value=E,b.setValueAtTime(E,m.context.currentTime)},cancelAndHoldAtTime(E){if(typeof _.cancelAndHoldAtTime=="function")S===null&&v.flush(m.context.currentTime),v.add(s(E)),_.cancelAndHoldAtTime(E);else{const M=Array.from(v).pop();S===null&&v.flush(m.context.currentTime),v.add(s(E));const C=Array.from(v).pop();_.cancelScheduledValues(E),M!==C&&C!==void 0&&(C.type==="exponentialRampToValue"?_.exponentialRampToValueAtTime(C.value,C.endTime):C.type==="linearRampToValue"?_.linearRampToValueAtTime(C.value,C.endTime):C.type==="setValue"?_.setValueAtTime(C.value,C.startTime):C.type==="setValueCurve"&&_.setValueCurveAtTime(C.values,C.startTime,C.duration))}return b},cancelScheduledValues(E){return S===null&&v.flush(m.context.currentTime),v.add(r(E)),_.cancelScheduledValues(E),b},exponentialRampToValueAtTime(E,M){if(E===0)throw new RangeError;if(!Number.isFinite(M)||M<0)throw new RangeError;const C=m.context.currentTime;return S===null&&v.flush(C),Array.from(v).length===0&&(v.add(l(y,C)),_.setValueAtTime(y,C)),v.add(a(E,M)),_.exponentialRampToValueAtTime(E,M),b},linearRampToValueAtTime(E,M){const C=m.context.currentTime;return S===null&&v.flush(C),Array.from(v).length===0&&(v.add(l(y,C)),_.setValueAtTime(y,C)),v.add(o(E,M)),_.linearRampToValueAtTime(E,M),b},setTargetAtTime(E,M,C){return S===null&&v.flush(m.context.currentTime),v.add(c(E,M,C)),_.setTargetAtTime(E,M,C),b},setValueAtTime(E,M){return S===null&&v.flush(m.context.currentTime),v.add(l(E,M)),_.setValueAtTime(E,M),b},setValueCurveAtTime(E,M,C){const k=E instanceof Float32Array?E:new Float32Array(E);if(u!==null&&u.name==="webkitAudioContext"){const x=M+C,A=m.context.sampleRate,F=Math.ceil(M*A),G=Math.floor(x*A),D=G-F,V=new Float32Array(D);for(let H=0;H<D;H+=1){const W=(k.length-1)/C*((F+H)/A-M),q=Math.floor(W),Y=Math.ceil(W);V[H]=q===Y?k[q]:(1-(W-q))*k[q]+(1-(Y-W))*k[Y]}S===null&&v.flush(m.context.currentTime),v.add(h(V,M,C)),_.setValueCurveAtTime(V,M,C);const U=G/A;U<x&&f(b,V[V.length-1],U),f(b,k[k.length-1],x)}else S===null&&v.flush(m.context.currentTime),v.add(h(k,M,C)),_.setValueCurveAtTime(k,M,C);return b}};return e.set(b,_),t.set(b,m),i(b,S),b},wb=i=>({replay(t){for(const e of i)if(e.type==="exponentialRampToValue"){const{endTime:n,value:s}=e;t.exponentialRampToValueAtTime(s,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:s}=e;t.linearRampToValueAtTime(s,n)}else if(e.type==="setTarget"){const{startTime:n,target:s,timeConstant:r}=e;t.setTargetAtTime(s,n,r)}else if(e.type==="setValue"){const{startTime:n,value:s}=e;t.setValueAtTime(s,n)}else if(e.type==="setValueCurve"){const{duration:n,startTime:s,values:r}=e;t.setValueCurveAtTime(r,s,n)}else throw new Error("Can't apply an unknown automation.")}});class Op{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,s)=>t.call(e,n,s,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const Tb={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Eb=(i,t,e,n,s,r,a,o,c,l,h,u,f,m)=>class extends t{constructor(_,p,d){var y;const v=o(_),S=c(v),b=h({...Tb,...d});f(b);const E=fh.get(v),M=E==null?void 0:E.get(p),C=S||v.state!=="closed"?v:(y=a(v))!==null&&y!==void 0?y:v,k=s(C,S?null:_.baseLatency,l,p,M,b),x=S?n(p,b,M):null;super(_,!0,k,x);const A=[];k.parameters.forEach((G,D)=>{const V=e(this,S,G);A.push([D,V])}),this._nativeAudioWorkletNode=k,this._onprocessorerror=null,this._parameters=new Op(A),S&&i(v,this);const{activeInputs:F}=r(this);u(k,F)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(_){const p=typeof _=="function"?m(this,_):null;this._nativeAudioWorkletNode.onprocessorerror=p;const d=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=d!==null&&d===p?_:d}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function $a(i,t,e,n,s){if(typeof i.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),i.copyFromChannel(t[e],n,s);else{const r=i.getChannelData(n);if(t[e].byteLength===0)t[e]=r.slice(s,s+128);else{const a=new Float32Array(r.buffer,s*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(a)}}}const Np=(i,t,e,n,s)=>{typeof i.copyToChannel=="function"?t[e].byteLength!==0&&i.copyToChannel(t[e],n,s):t[e].byteLength!==0&&i.getChannelData(n).set(t[e],s)},Za=(i,t)=>{const e=[];for(let n=0;n<i;n+=1){const s=[],r=typeof t=="number"?t:t[n];for(let a=0;a<r;a+=1)s.push(new Float32Array(128));e.push(s)}return e},Ab=(i,t)=>{const e=Zn(ph,i),n=_e(t);return Zn(e,n)},Cb=async(i,t,e,n,s,r,a)=>{const o=t===null?Math.ceil(i.context.length/128)*128:t.length,c=n.channelCount*n.numberOfInputs,l=s.reduce((p,d)=>p+d,0),h=l===0?null:e.createBuffer(l,o,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const u=cn(i),f=await Ab(e,i),m=Za(n.numberOfInputs,n.channelCount),g=Za(n.numberOfOutputs,s),_=Array.from(i.parameters.keys()).reduce((p,d)=>({...p,[d]:new Float32Array(128)}),{});for(let p=0;p<o;p+=128){if(n.numberOfInputs>0&&t!==null)for(let d=0;d<n.numberOfInputs;d+=1)for(let y=0;y<n.channelCount;y+=1)$a(t,m[d],y,y,p);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:d},y)=>{$a(t,_,d,c+y,p)});for(let d=0;d<n.numberOfInputs;d+=1)for(let y=0;y<s[d];y+=1)g[d][y].byteLength===0&&(g[d][y]=new Float32Array(128));try{const d=m.map((v,S)=>u.activeInputs[S].size===0?[]:v),y=a(p/e.sampleRate,e.sampleRate,()=>f.process(d,g,_));if(h!==null)for(let v=0,S=0;v<n.numberOfOutputs;v+=1){for(let b=0;b<s[v];b+=1)Np(h,g[v],b,S+b,p);S+=s[v]}if(!y)break}catch(d){i.dispatchEvent(new ErrorEvent("processorerror",{colno:d.colno,filename:d.filename,lineno:d.lineno,message:d.message}));break}}return h},Ib=(i,t,e,n,s,r,a,o,c,l,h,u,f,m,g,_)=>(p,d,y)=>{const v=new WeakMap;let S=null;const b=async(E,M)=>{let C=h(E),k=null;const x=nn(C,M),A=Array.isArray(d.outputChannelCount)?d.outputChannelCount:Array.from(d.outputChannelCount);if(u===null){const F=A.reduce((U,H)=>U+H,0),G=s(M,{channelCount:Math.max(1,F),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,F)}),D=[];for(let U=0;U<E.numberOfOutputs;U+=1)D.push(n(M,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:A[U]}));const V=a(M,{channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,gain:1});V.connect=t.bind(null,D),V.disconnect=c.bind(null,D),k=[G,D,V]}else x||(C=new u(M,p));if(v.set(M,k===null?C:k[2]),k!==null){if(S===null){if(y===void 0)throw new Error("Missing the processor constructor.");if(f===null)throw new Error("Missing the native OfflineAudioContext constructor.");const H=E.channelCount*E.numberOfInputs,W=y.parameterDescriptors===void 0?0:y.parameterDescriptors.length,q=H+W;S=Cb(E,q===0?null:await(async()=>{const tt=new f(q,Math.ceil(E.context.length/128)*128,M.sampleRate),ht=[],It=[];for(let ut=0;ut<d.numberOfInputs;ut+=1)ht.push(a(tt,{channelCount:d.channelCount,channelCountMode:d.channelCountMode,channelInterpretation:d.channelInterpretation,gain:1})),It.push(s(tt,{channelCount:d.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:d.channelCount}));const X=await Promise.all(Array.from(E.parameters.values()).map(async ut=>{const Et=r(tt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:ut.value});return await m(tt,ut,Et.offset),Et})),J=n(tt,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,H+W)});for(let ut=0;ut<d.numberOfInputs;ut+=1){ht[ut].connect(It[ut]);for(let Et=0;Et<d.channelCount;Et+=1)It[ut].connect(J,Et,ut*d.channelCount+Et)}for(const[ut,Et]of X.entries())Et.connect(J,0,H+ut),Et.start(0);return J.connect(tt.destination),await Promise.all(ht.map(ut=>g(E,tt,ut))),_(tt)})(),M,d,A,y,l)}const F=await S,G=e(M,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[D,V,U]=k;F!==null&&(G.buffer=F,G.start(0)),G.connect(D);for(let H=0,W=0;H<E.numberOfOutputs;H+=1){const q=V[H];for(let Y=0;Y<A[H];Y+=1)D.connect(q,W+Y,Y);W+=A[H]}return U}if(x)for(const[F,G]of E.parameters.entries())await i(M,G,C.parameters.get(F));else for(const[F,G]of E.parameters.entries())await m(M,G,C.parameters.get(F));return await g(E,M,C),C};return{render(E,M){o(M,E);const C=v.get(M);return C!==void 0?Promise.resolve(C):b(E,M)}}},Rb=(i,t,e,n,s,r,a,o,c,l,h,u,f,m,g,_,p,d,y,v)=>class extends g{constructor(b,E){super(b,E),this._nativeContext=b,this._audioWorklet=i===void 0?void 0:{addModule:(M,C)=>i(this,M,C)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new s(this)}createBuffer(b,E,M){return new e({length:E,numberOfChannels:b,sampleRate:M})}createBufferSource(){return new n(this)}createChannelMerger(b=6){return new r(this,{numberOfInputs:b})}createChannelSplitter(b=6){return new a(this,{numberOfOutputs:b})}createConstantSource(){return new o(this)}createConvolver(){return new c(this)}createDelay(b=1){return new h(this,{maxDelayTime:b})}createDynamicsCompressor(){return new u(this)}createGain(){return new f(this)}createIIRFilter(b,E){return new m(this,{feedback:E,feedforward:b})}createOscillator(){return new _(this)}createPanner(){return new p(this)}createPeriodicWave(b,E,M={disableNormalization:!1}){return new d(this,{...M,imag:E,real:b})}createStereoPanner(){return new y(this)}createWaveShaper(){return new v(this)}decodeAudioData(b,E,M){return l(this._nativeContext,b).then(C=>(typeof E=="function"&&E(C),C),C=>{throw typeof M=="function"&&M(C),C})}},Db={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Pb=(i,t,e,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f={...Db,...h},m=s(u,f),g=a(u),_=g?e():null;super(l,!1,m,_),this._Q=t(this,g,m.Q,an,mn),this._detune=t(this,g,m.detune,1200*Math.log2(an),-1200*Math.log2(an)),this._frequency=t(this,g,m.frequency,l.sampleRate/2,0),this._gain=t(this,g,m.gain,40*Math.log10(an),mn),this._nativeBiquadFilterNode=m,o(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(l){this._nativeBiquadFilterNode.type=l}getFrequencyResponse(l,h,u){try{this._nativeBiquadFilterNode.getFrequencyResponse(l,h,u)}catch(f){throw f.code===11?n():f}if(l.length!==h.length||h.length!==u.length)throw n()}},Lb=(i,t,e,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=e(o);const h=nn(l,c);if(!h){const u={Q:l.Q.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,detune:l.detune.value,frequency:l.frequency.value,gain:l.gain.value,type:l.type};l=t(c,u)}return r.set(c,l),h?(await i(c,o.Q,l.Q),await i(c,o.detune,l.detune),await i(c,o.frequency,l.frequency),await i(c,o.gain,l.gain)):(await n(c,o.Q,l.Q),await n(c,o.detune,l.detune),await n(c,o.frequency,l.frequency),await n(c,o.gain,l.gain)),await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},Ob=(i,t)=>(e,n)=>{const s=t.get(e);if(s!==void 0)return s;const r=i.get(e);if(r!==void 0)return r;try{const a=n();return a instanceof Promise?(i.set(e,a),a.catch(()=>!1).then(o=>(i.delete(e),t.set(e,o),o))):(t.set(e,a),a)}catch{return t.set(e,!1),!1}},Nb={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},Fb=(i,t,e,n,s)=>class extends i{constructor(a,o){const c=n(a),l={...Nb,...o},h=e(c,l),u=s(c)?t():null;super(a,!1,h,u)}},kb=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=t(r);if(!nn(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfInputs:o.numberOfInputs};o=i(a,l)}return n.set(a,o),await e(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},Ub={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Bb=(i,t,e,n,s,r)=>class extends i{constructor(o,c){const l=n(o),h=r({...Ub,...c}),u=e(l,h),f=s(l)?t():null;super(o,!1,u,f)}},Vb=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=t(r);if(!nn(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,numberOfOutputs:o.numberOfOutputs};o=i(a,l)}return n.set(a,o),await e(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},zb=i=>(t,e,n)=>i(e,t,n),Gb=i=>(t,e,n=0,s=0)=>{const r=t[n];if(r===void 0)throw i();return Ya(e)?r.connect(e,0,s):r.connect(e,0)},Wb=i=>(t,e)=>{const n=i(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),s=t.createBuffer(1,2,44100);return n.buffer=s,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}},Hb={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},qb=(i,t,e,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...Hb,...l},f=n(h,u),m=r(h),g=m?e():null;super(c,!1,f,g),this._constantSourceNodeRenderer=g,this._nativeConstantSourceNode=f,this._offset=t(this,m,f.offset,an,mn),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?a(this,c):null;this._nativeConstantSourceNode.onended=l;const h=this._nativeConstantSourceNode.onended;this._onended=h!==null&&h===l?c:h}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Dr(this);const l=()=>{this._nativeConstantSourceNode.removeEventListener("ended",l),Li(this)&&Ho(this)};this._nativeConstantSourceNode.addEventListener("ended",l)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},jb=(i,t,e,n,s)=>()=>{const r=new WeakMap;let a=null,o=null;const c=async(l,h)=>{let u=e(l);const f=nn(u,h);if(!f){const m={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,offset:u.offset.value};u=t(h,m),a!==null&&u.start(a),o!==null&&u.stop(o)}return r.set(h,u),f?await i(h,l.offset,u.offset):await n(h,l.offset,u.offset),await s(l,h,u),u};return{set start(l){a=l},set stop(l){o=l},render(l,h){const u=r.get(h);return u!==void 0?Promise.resolve(u):c(l,h)}}},Xb=i=>t=>(i[0]=t,i[0]),Kb={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},Yb=(i,t,e,n,s,r)=>class extends i{constructor(o,c){const l=n(o),h={...Kb,...c},u=e(l,h),m=s(l)?t():null;super(o,!1,u,m),this._isBufferNullified=!1,this._nativeConvolverNode=u,h.buffer!==null&&r(this,h.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(o){if(this._nativeConvolverNode.buffer=o,o===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,c.sampleRate),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(o){this._nativeConvolverNode.normalize=o}},$b=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=t(r);if(!nn(o,a)){const l={buffer:o.buffer,channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,disableNormalization:!o.normalize};o=i(a,l)}return n.set(a,o),so(o)?await e(r,a,o.inputs[0]):await e(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},Zb=(i,t)=>(e,n,s)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,s)}catch(r){throw r.name==="SyntaxError"?i():r}},Qb=()=>new DOMException("","DataCloneError"),pf=i=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const s=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>s();try{t.postMessage(i,[i])}catch{}finally{s()}})},Jb=(i,t,e,n,s,r,a,o,c,l,h)=>(u,f)=>{const m=a(u)?u:r(u);if(s.has(f)){const g=e();return Promise.reject(g)}try{s.add(f)}catch{}return t(c,()=>c(m))?m.decodeAudioData(f).then(g=>(pf(f).catch(()=>{}),t(o,()=>o(g))||h(g),i.add(g),g)):new Promise((g,_)=>{const p=async()=>{try{await pf(f)}catch{}},d=y=>{_(y),p()};try{m.decodeAudioData(f,y=>{typeof y.copyFromChannel!="function"&&(l(y),Gh(y)),i.add(y),p().then(()=>g(y))},y=>{d(y===null?n():y)})}catch(y){d(y)}})},tM=(i,t,e,n,s,r,a,o)=>(c,l)=>{const h=t.get(c);if(h===void 0)throw new Error("Missing the expected cycle count.");const u=r(c.context),f=o(u);if(h===l){if(t.delete(c),!f&&a(c)){const m=n(c),{outputs:g}=e(c);for(const _ of g)if(jo(_)){const p=n(_[0]);i(m,p,_[1],_[2])}else{const p=s(_[0]);m.connect(p,_[1])}}}else t.set(c,h-l)},eM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},nM=(i,t,e,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...eM,...l},f=n(h,u),m=r(h),g=m?e(u.maxDelayTime):null;super(c,!1,f,g),this._delayTime=t(this,m,f.delayTime),a(this,u.maxDelayTime)}get delayTime(){return this._delayTime}},iM=(i,t,e,n,s)=>r=>{const a=new WeakMap,o=async(c,l)=>{let h=e(c);const u=nn(h,l);if(!u){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,delayTime:h.delayTime.value,maxDelayTime:r};h=t(l,f)}return a.set(l,h),u?await i(l,c.delayTime,h.delayTime):await n(l,c.delayTime,h.delayTime),await s(c,l,h),h};return{render(c,l){const h=a.get(l);return h!==void 0?Promise.resolve(h):o(c,l)}}},sM=i=>(t,e,n,s)=>i(t[s],r=>r[0]===e&&r[1]===n),rM=i=>(t,e)=>{i(t).delete(e)},oM=i=>"delayTime"in i,aM=(i,t,e)=>function n(s,r){const a=ja(r)?r:e(i,r);if(oM(a))return[];if(s[0]===a)return[s];if(s.includes(a))return[];const{outputs:o}=t(a);return Array.from(o).map(c=>n([...s,a],c[0])).reduce((c,l)=>c.concat(l),[])},Ca=(i,t,e)=>{const n=t[e];if(n===void 0)throw i();return n},cM=i=>(t,e=void 0,n=void 0,s=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?Ca(i,t,e).disconnect():Ya(e)?n===void 0?t.forEach(r=>r.disconnect(e)):s===void 0?Ca(i,t,n).disconnect(e,0):Ca(i,t,n).disconnect(e,0,s):n===void 0?t.forEach(r=>r.disconnect(e)):Ca(i,t,n).disconnect(e,0),lM={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},hM=(i,t,e,n,s,r,a,o)=>class extends i{constructor(l,h){const u=r(l),f={...lM,...h},m=n(u,f),g=a(u),_=g?e():null;super(l,!1,m,_),this._attack=t(this,g,m.attack),this._knee=t(this,g,m.knee),this._nativeDynamicsCompressorNode=m,this._ratio=t(this,g,m.ratio),this._release=t(this,g,m.release),this._threshold=t(this,g,m.threshold),o(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(l){const h=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=l,l>2)throw this._nativeDynamicsCompressorNode.channelCount=h,s()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(l){const h=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=l,l==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=h,s()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},uM=(i,t,e,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=e(o);const h=nn(l,c);if(!h){const u={attack:l.attack.value,channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,knee:l.knee.value,ratio:l.ratio.value,release:l.release.value,threshold:l.threshold.value};l=t(c,u)}return r.set(c,l),h?(await i(c,o.attack,l.attack),await i(c,o.knee,l.knee),await i(c,o.ratio,l.ratio),await i(c,o.release,l.release),await i(c,o.threshold,l.threshold)):(await n(c,o.attack,l.attack),await n(c,o.knee,l.knee),await n(c,o.ratio,l.ratio),await n(c,o.release,l.release),await n(c,o.threshold,l.threshold)),await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},dM=()=>new DOMException("","EncodingError"),fM=i=>t=>new Promise((e,n)=>{if(i===null){n(new SyntaxError);return}const s=i.document.head;if(s===null)n(new SyntaxError);else{const r=i.document.createElement("script"),a=new Blob([t],{type:"application/javascript"}),o=URL.createObjectURL(a),c=i.onerror,l=()=>{i.onerror=c,URL.revokeObjectURL(o)};i.onerror=(h,u,f,m,g)=>{if(u===o||u===i.location.href&&f===1&&m===1)return l(),n(g),!1;if(c!==null)return c(h,u,f,m,g)},r.onerror=()=>{l(),n(new SyntaxError)},r.onload=()=>{l(),e()},r.src=o,r.type="module",s.appendChild(r)}}),pM=i=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,n,s){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=i(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,s)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,n,s){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,s)}},mM=i=>(t,e,n)=>{Object.defineProperties(i,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return n()}finally{i!==null&&(delete i.currentFrame,delete i.currentTime)}},gM=i=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw i()},_M={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},yM=(i,t,e,n,s,r)=>class extends i{constructor(o,c){const l=s(o),h={..._M,...c},u=n(l,h),f=r(l),m=f?e():null;super(o,!1,u,m),this._gain=t(this,f,u.gain,an,mn)}get gain(){return this._gain}},vM=(i,t,e,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=e(o);const h=nn(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,gain:l.gain.value};l=t(c,u)}return r.set(c,l),h?await i(c,o.gain,l.gain):await n(c,o.gain,l.gain),await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},xM=(i,t)=>e=>t(i,e),SM=i=>t=>{const e=i(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},bM=i=>t=>{var e;return(e=i.get(t))!==null&&e!==void 0?e:0},MM=i=>t=>{const e=i(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},wM=i=>t=>i.get(t),Ge=()=>new DOMException("","InvalidStateError"),TM=i=>t=>{const e=i.get(t);if(e===void 0)throw Ge();return e},EM=(i,t)=>e=>{let n=i.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),i.set(e,n),n},AM=i=>t=>{const e=i.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},$c=()=>new DOMException("","InvalidAccessError"),CM=i=>{i.getFrequencyResponse=(t=>(e,n,s)=>{if(e.length!==n.length||n.length!==s.length)throw $c();return t.call(i,e,n,s)})(i.getFrequencyResponse)},IM={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},RM=(i,t,e,n,s,r)=>class extends i{constructor(o,c){const l=n(o),h=s(l),u={...IM,...c},f=t(l,h?null:o.baseLatency,u),m=h?e(u.feedback,u.feedforward):null;super(o,!1,f,m),CM(f),this._nativeIIRFilterNode=f,r(this,1)}getFrequencyResponse(o,c,l){return this._nativeIIRFilterNode.getFrequencyResponse(o,c,l)}},Fp=(i,t,e,n,s,r,a,o,c,l,h)=>{const u=l.length;let f=o;for(let m=0;m<u;m+=1){let g=e[0]*l[m];for(let _=1;_<s;_+=1){const p=f-_&c-1;g+=e[_]*r[p],g-=i[_]*a[p]}for(let _=s;_<n;_+=1)g+=e[_]*r[f-_&c-1];for(let _=s;_<t;_+=1)g-=i[_]*a[f-_&c-1];r[f]=l[m],a[f]=g,f=f+1&c-1,h[m]=g}return f},DM=(i,t,e,n)=>{const s=e instanceof Float64Array?e:new Float64Array(e),r=n instanceof Float64Array?n:new Float64Array(n),a=s.length,o=r.length,c=Math.min(a,o);if(s[0]!==1){for(let g=0;g<a;g+=1)r[g]/=s[0];for(let g=1;g<o;g+=1)s[g]/=s[0]}const l=32,h=new Float32Array(l),u=new Float32Array(l),f=t.createBuffer(i.numberOfChannels,i.length,i.sampleRate),m=i.numberOfChannels;for(let g=0;g<m;g+=1){const _=i.getChannelData(g),p=f.getChannelData(g);h.fill(0),u.fill(0),Fp(s,a,r,o,c,h,u,0,l,_,p)}return f},PM=(i,t,e,n,s)=>(r,a)=>{const o=new WeakMap;let c=null;const l=async(h,u)=>{let f=null,m=t(h);const g=nn(m,u);if(u.createIIRFilter===void 0?f=i(u,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):g||(m=u.createIIRFilter(a,r)),o.set(u,f===null?m:f),f!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const p=new e(h.context.destination.channelCount,h.context.length,u.sampleRate);c=(async()=>{await n(h,p,p.destination);const d=await s(p);return DM(d,u,r,a)})()}const _=await c;return f.buffer=_,f.start(0),f}return await n(h,u,m),m};return{render(h,u){const f=o.get(u);return f!==void 0?Promise.resolve(f):l(h,u)}}},LM=(i,t,e,n,s,r)=>a=>(o,c)=>{const l=i.get(o);if(l===void 0){if(!a&&r(o)){const h=n(o),{outputs:u}=e(o);for(const f of u)if(jo(f)){const m=n(f[0]);t(h,m,f[1],f[2])}else{const m=s(f[0]);h.disconnect(m,f[1])}}i.set(o,c)}else i.set(o,l+c)},OM=(i,t)=>e=>{const n=i.get(e);return t(n)||t(e)},NM=(i,t)=>e=>i.has(e)||t(e),FM=(i,t)=>e=>i.has(e)||t(e),kM=(i,t)=>e=>{const n=i.get(e);return t(n)||t(e)},UM=i=>t=>i!==null&&t instanceof i,BM=i=>t=>i!==null&&typeof i.AudioNode=="function"&&t instanceof i.AudioNode,VM=i=>t=>i!==null&&typeof i.AudioParam=="function"&&t instanceof i.AudioParam,zM=(i,t)=>e=>i(e)||t(e),GM=i=>t=>i!==null&&t instanceof i,WM=i=>i!==null&&i.isSecureContext,HM=async(i,t,e,n,s,r,a,o,c,l,h,u,f,m,g,_)=>i(t,t)&&i(e,e)&&i(s,s)&&i(r,r)&&i(o,o)&&i(c,c)&&i(l,l)&&i(h,h)&&i(u,u)&&i(f,f)&&i(m,m)?(await Promise.all([i(n,n),i(a,a),i(g,g),i(_,_)])).every(d=>d):!1,qM=(i,t,e,n)=>class extends i{constructor(r,a){const o=e(r),c=t(o,a);if(n(o))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},jM={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},XM=(i,t,e,n)=>class extends i{constructor(r,a){const o=e(r);if(n(o))throw new TypeError;const c={...jM,...a},l=t(o,c);super(r,!1,l,null),this._nativeMediaStreamAudioDestinationNode=l}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},KM=(i,t,e,n)=>class extends i{constructor(r,a){const o=e(r),c=t(o,a);if(n(o))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},YM=(i,t,e)=>class extends i{constructor(s,r){const a=e(s),o=t(a,r);super(s,!0,o,null)}},$M=(i,t,e,n,s,r)=>class extends e{constructor(o,c){super(o),this._nativeContext=o,Kc.set(this,o),n(o)&&s.set(o,new Set),this._destination=new i(this,c),this._listener=t(this,o),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(o){const c=typeof o=="function"?r(this,o):null;this._nativeContext.onstatechange=c;const l=this._nativeContext.onstatechange;this._onstatechange=l!==null&&l===c?o:l}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},No=i=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=i.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},ZM=(i,t)=>(e,n,s)=>{const r=new Set;return e.connect=(a=>(o,c=0,l=0)=>{const h=r.size===0;if(t(o))return a.call(e,o,c,l),i(r,[o,c,l],u=>u[0]===o&&u[1]===c&&u[2]===l,!0),h&&n(),o;a.call(e,o,c),i(r,[o,c],u=>u[0]===o&&u[1]===c,!0),h&&n()})(e.connect),e.disconnect=(a=>(o,c,l)=>{const h=r.size>0;if(o===void 0)a.apply(e),r.clear();else if(typeof o=="number"){a.call(e,o);for(const f of r)f[1]===o&&r.delete(f)}else{t(o)?a.call(e,o,c,l):a.call(e,o,c);for(const f of r)f[0]===o&&(c===void 0||f[1]===c)&&(l===void 0||f[2]===l)&&r.delete(f)}const u=r.size===0;h&&u&&s()})(e.disconnect),e},ve=(i,t,e)=>{const n=t[e];n!==void 0&&n!==i[e]&&(i[e]=n)},Fe=(i,t)=>{ve(i,t,"channelCount"),ve(i,t,"channelCountMode"),ve(i,t,"channelInterpretation")},mf=i=>typeof i.getFloatTimeDomainData=="function",QM=i=>{i.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);i.getByteTimeDomainData(e);const n=Math.max(e.length,i.fftSize);for(let s=0;s<n;s+=1)t[s]=(e[s]-128)*.0078125;return t}},JM=(i,t)=>(e,n)=>{const s=e.createAnalyser();if(Fe(s,n),!(n.maxDecibels>n.minDecibels))throw t();return ve(s,n,"fftSize"),ve(s,n,"maxDecibels"),ve(s,n,"minDecibels"),ve(s,n,"smoothingTimeConstant"),i(mf,()=>mf(s))||QM(s),s},tw=i=>i===null?null:i.hasOwnProperty("AudioBuffer")?i.AudioBuffer:null,Ae=(i,t,e)=>{const n=t[e];n!==void 0&&n!==i[e].value&&(i[e].value=n)},ew=i=>{i.start=(t=>{let e=!1;return(n=0,s=0,r)=>{if(e)throw Ge();t.call(i,n,s,r),e=!0}})(i.start)},qh=i=>{i.start=(t=>(e=0,n=0,s)=>{if(typeof s=="number"&&s<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(i,e,n,s)})(i.start)},jh=i=>{i.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(i,e)})(i.stop)},nw=(i,t,e,n,s,r,a,o,c,l,h)=>(u,f)=>{const m=u.createBufferSource();return Fe(m,f),Ae(m,f,"playbackRate"),ve(m,f,"buffer"),ve(m,f,"loop"),ve(m,f,"loopEnd"),ve(m,f,"loopStart"),t(e,()=>e(u))||ew(m),t(n,()=>n(u))||c(m),t(s,()=>s(u))||l(m,u),t(r,()=>r(u))||qh(m),t(a,()=>a(u))||h(m,u),t(o,()=>o(u))||jh(m),i(u,m),m},iw=i=>i===null?null:i.hasOwnProperty("AudioContext")?i.AudioContext:i.hasOwnProperty("webkitAudioContext")?i.webkitAudioContext:null,sw=(i,t)=>(e,n,s)=>{const r=e.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}s&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const a=i(e,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(a,"channelCount",o=>()=>o.call(a),o=>c=>{o.call(a,c);try{r.channelCount=c}catch(l){if(c>r.maxChannelCount)throw l}}),t(a,"channelCountMode",o=>()=>o.call(a),o=>c=>{o.call(a,c),r.channelCountMode=c}),t(a,"channelInterpretation",o=>()=>o.call(a),o=>c=>{o.call(a,c),r.channelInterpretation=c}),Object.defineProperty(a,"maxChannelCount",{get:()=>r.maxChannelCount}),a.connect(r),a},rw=i=>i===null?null:i.hasOwnProperty("AudioWorkletNode")?i.AudioWorkletNode:null,ow=i=>{const{port1:t}=new MessageChannel;try{t.postMessage(i)}finally{t.close()}},aw=(i,t,e,n,s)=>(r,a,o,c,l,h)=>{if(o!==null)try{const u=new o(r,c,h),f=new Map;let m=null;if(Object.defineProperties(u,{channelCount:{get:()=>h.channelCount,set:()=>{throw i()}},channelCountMode:{get:()=>"explicit",set:()=>{throw i()}},onprocessorerror:{get:()=>m,set:g=>{typeof m=="function"&&u.removeEventListener("processorerror",m),m=typeof g=="function"?g:null,typeof m=="function"&&u.addEventListener("processorerror",m)}}}),u.addEventListener=(g=>(..._)=>{if(_[0]==="processorerror"){const p=typeof _[1]=="function"?_[1]:typeof _[1]=="object"&&_[1]!==null&&typeof _[1].handleEvent=="function"?_[1].handleEvent:null;if(p!==null){const d=f.get(_[1]);d!==void 0?_[1]=d:(_[1]=y=>{y.type==="error"?(Object.defineProperties(y,{type:{value:"processorerror"}}),p(y)):p(new ErrorEvent(_[0],{...y}))},f.set(p,_[1]))}}return g.call(u,"error",_[1],_[2]),g.call(u,..._)})(u.addEventListener),u.removeEventListener=(g=>(..._)=>{if(_[0]==="processorerror"){const p=f.get(_[1]);p!==void 0&&(f.delete(_[1]),_[1]=p)}return g.call(u,"error",_[1],_[2]),g.call(u,_[0],_[1],_[2])})(u.removeEventListener),h.numberOfOutputs!==0){const g=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return u.connect(g).connect(r.destination),s(u,()=>g.disconnect(),()=>g.connect(r.destination))}return u}catch(u){throw u.code===11?n():u}if(l===void 0)throw n();return ow(h),t(r,a,l,h)},kp=(i,t)=>i===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(i*t))))),cw=i=>new Promise((t,e)=>{const{port1:n,port2:s}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),s.close(),t(r)},n.onmessageerror=({data:r})=>{n.close(),s.close(),e(r)},s.postMessage(i)}),lw=async(i,t)=>{const e=await cw(t);return new i(e)},hw=(i,t,e,n)=>{let s=ph.get(i);s===void 0&&(s=new WeakMap,ph.set(i,s));const r=lw(e,n);return s.set(t,r),r},uw=(i,t,e,n,s,r,a,o,c,l,h,u,f)=>(m,g,_,p)=>{if(p.numberOfInputs===0&&p.numberOfOutputs===0)throw c();const d=Array.isArray(p.outputChannelCount)?p.outputChannelCount:Array.from(p.outputChannelCount);if(d.some(nt=>nt<1))throw c();if(d.length!==p.numberOfOutputs)throw t();if(p.channelCountMode!=="explicit")throw c();const y=p.channelCount*p.numberOfInputs,v=d.reduce((nt,at)=>nt+at,0),S=_.parameterDescriptors===void 0?0:_.parameterDescriptors.length;if(y+S>6||v>6)throw c();const b=new MessageChannel,E=[],M=[];for(let nt=0;nt<p.numberOfInputs;nt+=1)E.push(a(m,{channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,gain:1})),M.push(s(m,{channelCount:p.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:p.channelCount}));const C=[];if(_.parameterDescriptors!==void 0)for(const{defaultValue:nt,maxValue:at,minValue:Rt,name:Mt}of _.parameterDescriptors){const _t=r(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:p.parameterData[Mt]!==void 0?p.parameterData[Mt]:nt===void 0?0:nt});Object.defineProperties(_t.offset,{defaultValue:{get:()=>nt===void 0?0:nt},maxValue:{get:()=>at===void 0?an:at},minValue:{get:()=>Rt===void 0?mn:Rt}}),C.push(_t)}const k=n(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,y+S)}),x=kp(g,m.sampleRate),A=o(m,x,y+S,Math.max(1,v)),F=s(m,{channelCount:Math.max(1,v),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,v)}),G=[];for(let nt=0;nt<p.numberOfOutputs;nt+=1)G.push(n(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:d[nt]}));for(let nt=0;nt<p.numberOfInputs;nt+=1){E[nt].connect(M[nt]);for(let at=0;at<p.channelCount;at+=1)M[nt].connect(k,at,nt*p.channelCount+at)}const D=new Op(_.parameterDescriptors===void 0?[]:_.parameterDescriptors.map(({name:nt},at)=>{const Rt=C[at];return Rt.connect(k,0,y+at),Rt.start(0),[nt,Rt.offset]}));k.connect(A);let V=p.channelInterpretation,U=null;const H=p.numberOfOutputs===0?[A]:G,W={get bufferSize(){return x},get channelCount(){return p.channelCount},set channelCount(nt){throw e()},get channelCountMode(){return p.channelCountMode},set channelCountMode(nt){throw e()},get channelInterpretation(){return V},set channelInterpretation(nt){for(const at of E)at.channelInterpretation=nt;V=nt},get context(){return A.context},get inputs(){return E},get numberOfInputs(){return p.numberOfInputs},get numberOfOutputs(){return p.numberOfOutputs},get onprocessorerror(){return U},set onprocessorerror(nt){typeof U=="function"&&W.removeEventListener("processorerror",U),U=typeof nt=="function"?nt:null,typeof U=="function"&&W.addEventListener("processorerror",U)},get parameters(){return D},get port(){return b.port2},addEventListener(...nt){return A.addEventListener(nt[0],nt[1],nt[2])},connect:i.bind(null,H),disconnect:l.bind(null,H),dispatchEvent(...nt){return A.dispatchEvent(nt[0])},removeEventListener(...nt){return A.removeEventListener(nt[0],nt[1],nt[2])}},q=new Map;b.port1.addEventListener=(nt=>(...at)=>{if(at[0]==="message"){const Rt=typeof at[1]=="function"?at[1]:typeof at[1]=="object"&&at[1]!==null&&typeof at[1].handleEvent=="function"?at[1].handleEvent:null;if(Rt!==null){const Mt=q.get(at[1]);Mt!==void 0?at[1]=Mt:(at[1]=_t=>{h(m.currentTime,m.sampleRate,()=>Rt(_t))},q.set(Rt,at[1]))}}return nt.call(b.port1,at[0],at[1],at[2])})(b.port1.addEventListener),b.port1.removeEventListener=(nt=>(...at)=>{if(at[0]==="message"){const Rt=q.get(at[1]);Rt!==void 0&&(q.delete(at[1]),at[1]=Rt)}return nt.call(b.port1,at[0],at[1],at[2])})(b.port1.removeEventListener);let Y=null;Object.defineProperty(b.port1,"onmessage",{get:()=>Y,set:nt=>{typeof Y=="function"&&b.port1.removeEventListener("message",Y),Y=typeof nt=="function"?nt:null,typeof Y=="function"&&(b.port1.addEventListener("message",Y),b.port1.start())}}),_.prototype.port=b.port1;let tt=null;hw(m,W,_,p).then(nt=>tt=nt);const It=Za(p.numberOfInputs,p.channelCount),X=Za(p.numberOfOutputs,d),J=_.parameterDescriptors===void 0?[]:_.parameterDescriptors.reduce((nt,{name:at})=>({...nt,[at]:new Float32Array(128)}),{});let ut=!0;const Et=()=>{p.numberOfOutputs>0&&A.disconnect(F);for(let nt=0,at=0;nt<p.numberOfOutputs;nt+=1){const Rt=G[nt];for(let Mt=0;Mt<d[nt];Mt+=1)F.disconnect(Rt,at+Mt,Mt);at+=d[nt]}},st=new Map;A.onaudioprocess=({inputBuffer:nt,outputBuffer:at})=>{if(tt!==null){const Rt=u(W);for(let Mt=0;Mt<x;Mt+=128){for(let _t=0;_t<p.numberOfInputs;_t+=1)for(let Vt=0;Vt<p.channelCount;Vt+=1)$a(nt,It[_t],Vt,Vt,Mt);_.parameterDescriptors!==void 0&&_.parameterDescriptors.forEach(({name:_t},Vt)=>{$a(nt,J,_t,y+Vt,Mt)});for(let _t=0;_t<p.numberOfInputs;_t+=1)for(let Vt=0;Vt<d[_t];Vt+=1)X[_t][Vt].byteLength===0&&(X[_t][Vt]=new Float32Array(128));try{const _t=It.map((R,T)=>{if(Rt[T].size>0)return st.set(T,x/128),R;const et=st.get(T);return et===void 0?[]:(R.every(lt=>lt.every(ot=>ot===0))&&(et===1?st.delete(T):st.set(T,et-1)),R)});ut=h(m.currentTime+Mt/m.sampleRate,m.sampleRate,()=>tt.process(_t,X,J));for(let R=0,T=0;R<p.numberOfOutputs;R+=1){for(let Q=0;Q<d[R];Q+=1)Np(at,X[R],Q,T+Q,Mt);T+=d[R]}}catch(_t){ut=!1,W.dispatchEvent(new ErrorEvent("processorerror",{colno:_t.colno,filename:_t.filename,lineno:_t.lineno,message:_t.message}))}if(!ut){for(let _t=0;_t<p.numberOfInputs;_t+=1){E[_t].disconnect(M[_t]);for(let Vt=0;Vt<p.channelCount;Vt+=1)M[Mt].disconnect(k,Vt,_t*p.channelCount+Vt)}if(_.parameterDescriptors!==void 0){const _t=_.parameterDescriptors.length;for(let Vt=0;Vt<_t;Vt+=1){const R=C[Vt];R.disconnect(k,0,y+Vt),R.stop()}}k.disconnect(A),A.onaudioprocess=null,vt?Et():B();break}}}};let vt=!1;const Kt=a(m,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),kt=()=>A.connect(Kt).connect(m.destination),B=()=>{A.disconnect(Kt),Kt.disconnect()},Ie=()=>{if(ut){B(),p.numberOfOutputs>0&&A.connect(F);for(let nt=0,at=0;nt<p.numberOfOutputs;nt+=1){const Rt=G[nt];for(let Mt=0;Mt<d[nt];Mt+=1)F.connect(Rt,at+Mt,Mt);at+=d[nt]}}vt=!0},Lt=()=>{ut&&(kt(),Et()),vt=!1};return kt(),f(W,Ie,Lt)},Up=(i,t)=>{const e=i.createBiquadFilter();return Fe(e,t),Ae(e,t,"Q"),Ae(e,t,"detune"),Ae(e,t,"frequency"),Ae(e,t,"gain"),ve(e,t,"type"),e},dw=(i,t)=>(e,n)=>{const s=e.createChannelMerger(n.numberOfInputs);return i!==null&&i.name==="webkitAudioContext"&&t(e,s),Fe(s,n),s},fw=i=>{const t=i.numberOfOutputs;Object.defineProperty(i,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw Ge()}}),Object.defineProperty(i,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw Ge()}}),Object.defineProperty(i,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw Ge()}})},Xo=(i,t)=>{const e=i.createChannelSplitter(t.numberOfOutputs);return Fe(e,t),fw(e),e},pw=(i,t,e,n,s)=>(r,a)=>{if(r.createConstantSource===void 0)return e(r,a);const o=r.createConstantSource();return Fe(o,a),Ae(o,a,"offset"),t(n,()=>n(r))||qh(o),t(s,()=>s(r))||jh(o),i(r,o),o},ro=(i,t)=>(i.connect=t.connect.bind(t),i.disconnect=t.disconnect.bind(t),i),mw=(i,t,e,n)=>(s,{offset:r,...a})=>{const o=s.createBuffer(1,2,44100),c=t(s,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),l=e(s,{...a,gain:r}),h=o.getChannelData(0);h[0]=1,h[1]=1,c.buffer=o,c.loop=!0;const u={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(g){l.channelCount=g},get channelCountMode(){return l.channelCountMode},set channelCountMode(g){l.channelCountMode=g},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(g){l.channelInterpretation=g},get context(){return l.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get offset(){return l.gain},get onended(){return c.onended},set onended(g){c.onended=g},addEventListener(...g){return c.addEventListener(g[0],g[1],g[2])},dispatchEvent(...g){return c.dispatchEvent(g[0])},removeEventListener(...g){return c.removeEventListener(g[0],g[1],g[2])},start(g=0){c.start.call(c,g)},stop(g=0){c.stop.call(c,g)}},f=()=>c.connect(l),m=()=>c.disconnect(l);return i(s,c),n(ro(u,l),f,m)},gw=(i,t)=>(e,n)=>{const s=e.createConvolver();if(Fe(s,n),n.disableNormalization===s.normalize&&(s.normalize=!n.disableNormalization),ve(s,n,"buffer"),n.channelCount>2||(t(s,"channelCount",r=>()=>r.call(s),r=>a=>{if(a>2)throw i();return r.call(s,a)}),n.channelCountMode==="max"))throw i();return t(s,"channelCountMode",r=>()=>r.call(s),r=>a=>{if(a==="max")throw i();return r.call(s,a)}),s},Bp=(i,t)=>{const e=i.createDelay(t.maxDelayTime);return Fe(e,t),Ae(e,t,"delayTime"),e},_w=i=>(t,e)=>{const n=t.createDynamicsCompressor();if(Fe(n,e),e.channelCount>2||e.channelCountMode==="max")throw i();return Ae(n,e,"attack"),Ae(n,e,"knee"),Ae(n,e,"ratio"),Ae(n,e,"release"),Ae(n,e,"threshold"),n},vn=(i,t)=>{const e=i.createGain();return Fe(e,t),Ae(e,t,"gain"),e},yw=i=>(t,e,n)=>{if(t.createIIRFilter===void 0)return i(t,e,n);const s=t.createIIRFilter(n.feedforward,n.feedback);return Fe(s,n),s};function vw(i,t){const e=t[0]*t[0]+t[1]*t[1];return[(i[0]*t[0]+i[1]*t[1])/e,(i[1]*t[0]-i[0]*t[1])/e]}function xw(i,t){return[i[0]*t[0]-i[1]*t[1],i[0]*t[1]+i[1]*t[0]]}function gf(i,t){let e=[0,0];for(let n=i.length-1;n>=0;n-=1)e=xw(e,t),e[0]+=i[n];return e}const Sw=(i,t,e,n)=>(s,r,{channelCount:a,channelCountMode:o,channelInterpretation:c,feedback:l,feedforward:h})=>{const u=kp(r,s.sampleRate),f=l instanceof Float64Array?l:new Float64Array(l),m=h instanceof Float64Array?h:new Float64Array(h),g=f.length,_=m.length,p=Math.min(g,_);if(g===0||g>20)throw n();if(f[0]===0)throw t();if(_===0||_>20)throw n();if(m[0]===0)throw t();if(f[0]!==1){for(let C=0;C<_;C+=1)m[C]/=f[0];for(let C=1;C<g;C+=1)f[C]/=f[0]}const d=e(s,u,a,a);d.channelCount=a,d.channelCountMode=o,d.channelInterpretation=c;const y=32,v=[],S=[],b=[];for(let C=0;C<a;C+=1){v.push(0);const k=new Float32Array(y),x=new Float32Array(y);k.fill(0),x.fill(0),S.push(k),b.push(x)}d.onaudioprocess=C=>{const k=C.inputBuffer,x=C.outputBuffer,A=k.numberOfChannels;for(let F=0;F<A;F+=1){const G=k.getChannelData(F),D=x.getChannelData(F);v[F]=Fp(f,g,m,_,p,S[F],b[F],v[F],y,G,D)}};const E=s.sampleRate/2;return ro({get bufferSize(){return u},get channelCount(){return d.channelCount},set channelCount(C){d.channelCount=C},get channelCountMode(){return d.channelCountMode},set channelCountMode(C){d.channelCountMode=C},get channelInterpretation(){return d.channelInterpretation},set channelInterpretation(C){d.channelInterpretation=C},get context(){return d.context},get inputs(){return[d]},get numberOfInputs(){return d.numberOfInputs},get numberOfOutputs(){return d.numberOfOutputs},addEventListener(...C){return d.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return d.dispatchEvent(C[0])},getFrequencyResponse(C,k,x){if(C.length!==k.length||k.length!==x.length)throw i();const A=C.length;for(let F=0;F<A;F+=1){const G=-Math.PI*(C[F]/E),D=[Math.cos(G),Math.sin(G)],V=gf(m,D),U=gf(f,D),H=vw(V,U);k[F]=Math.sqrt(H[0]*H[0]+H[1]*H[1]),x[F]=Math.atan2(H[1],H[0])}},removeEventListener(...C){return d.removeEventListener(C[0],C[1],C[2])}},d)},bw=(i,t)=>i.createMediaElementSource(t.mediaElement),Mw=(i,t)=>{const e=i.createMediaStreamDestination();return Fe(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},ww=(i,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,a)=>r.id<a.id?-1:r.id>a.id?1:0);const n=e.slice(0,1),s=i.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(s,"mediaStream",{value:t}),s},Tw=(i,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const s=new MediaStream([n]),r=e.createMediaStreamSource(s);if(n.kind!=="audio")throw i();if(t(e))throw new TypeError;return r},Ew=i=>i===null?null:i.hasOwnProperty("OfflineAudioContext")?i.OfflineAudioContext:i.hasOwnProperty("webkitOfflineAudioContext")?i.webkitOfflineAudioContext:null,Aw=(i,t,e,n,s,r)=>(a,o)=>{const c=a.createOscillator();return Fe(c,o),Ae(c,o,"detune"),Ae(c,o,"frequency"),o.periodicWave!==void 0?c.setPeriodicWave(o.periodicWave):ve(c,o,"type"),t(e,()=>e(a))||qh(c),t(n,()=>n(a))||r(c,a),t(s,()=>s(a))||jh(c),i(a,c),c},Cw=i=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?i(t,e):(Fe(n,e),Ae(n,e,"orientationX"),Ae(n,e,"orientationY"),Ae(n,e,"orientationZ"),Ae(n,e,"positionX"),Ae(n,e,"positionY"),Ae(n,e,"positionZ"),ve(n,e,"coneInnerAngle"),ve(n,e,"coneOuterAngle"),ve(n,e,"coneOuterGain"),ve(n,e,"distanceModel"),ve(n,e,"maxDistance"),ve(n,e,"panningModel"),ve(n,e,"refDistance"),ve(n,e,"rolloffFactor"),n)},Iw=(i,t,e,n,s,r,a,o,c,l)=>(h,{coneInnerAngle:u,coneOuterAngle:f,coneOuterGain:m,distanceModel:g,maxDistance:_,orientationX:p,orientationY:d,orientationZ:y,panningModel:v,positionX:S,positionY:b,positionZ:E,refDistance:M,rolloffFactor:C,...k})=>{const x=h.createPanner();if(k.channelCount>2||k.channelCountMode==="max")throw a();Fe(x,k);const A={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},F=e(h,{...A,channelInterpretation:"speakers",numberOfInputs:6}),G=n(h,{...k,gain:1}),D=n(h,{...A,gain:1}),V=n(h,{...A,gain:0}),U=n(h,{...A,gain:0}),H=n(h,{...A,gain:0}),W=n(h,{...A,gain:0}),q=n(h,{...A,gain:0}),Y=s(h,256,6,1),tt=r(h,{...A,curve:new Float32Array([1,1]),oversample:"none"});let ht=[p,d,y],It=[S,b,E];const X=new Float32Array(1);Y.onaudioprocess=({inputBuffer:st})=>{const vt=[c(st,X,0),c(st,X,1),c(st,X,2)];vt.some((kt,B)=>kt!==ht[B])&&(x.setOrientation(...vt),ht=vt);const Kt=[c(st,X,3),c(st,X,4),c(st,X,5)];Kt.some((kt,B)=>kt!==It[B])&&(x.setPosition(...Kt),It=Kt)},Object.defineProperty(V.gain,"defaultValue",{get:()=>0}),Object.defineProperty(U.gain,"defaultValue",{get:()=>0}),Object.defineProperty(H.gain,"defaultValue",{get:()=>0}),Object.defineProperty(W.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0});const J={get bufferSize(){},get channelCount(){return x.channelCount},set channelCount(st){if(st>2)throw a();G.channelCount=st,x.channelCount=st},get channelCountMode(){return x.channelCountMode},set channelCountMode(st){if(st==="max")throw a();G.channelCountMode=st,x.channelCountMode=st},get channelInterpretation(){return x.channelInterpretation},set channelInterpretation(st){G.channelInterpretation=st,x.channelInterpretation=st},get coneInnerAngle(){return x.coneInnerAngle},set coneInnerAngle(st){x.coneInnerAngle=st},get coneOuterAngle(){return x.coneOuterAngle},set coneOuterAngle(st){x.coneOuterAngle=st},get coneOuterGain(){return x.coneOuterGain},set coneOuterGain(st){if(st<0||st>1)throw t();x.coneOuterGain=st},get context(){return x.context},get distanceModel(){return x.distanceModel},set distanceModel(st){x.distanceModel=st},get inputs(){return[G]},get maxDistance(){return x.maxDistance},set maxDistance(st){if(st<0)throw new RangeError;x.maxDistance=st},get numberOfInputs(){return x.numberOfInputs},get numberOfOutputs(){return x.numberOfOutputs},get orientationX(){return D.gain},get orientationY(){return V.gain},get orientationZ(){return U.gain},get panningModel(){return x.panningModel},set panningModel(st){x.panningModel=st},get positionX(){return H.gain},get positionY(){return W.gain},get positionZ(){return q.gain},get refDistance(){return x.refDistance},set refDistance(st){if(st<0)throw new RangeError;x.refDistance=st},get rolloffFactor(){return x.rolloffFactor},set rolloffFactor(st){if(st<0)throw new RangeError;x.rolloffFactor=st},addEventListener(...st){return G.addEventListener(st[0],st[1],st[2])},dispatchEvent(...st){return G.dispatchEvent(st[0])},removeEventListener(...st){return G.removeEventListener(st[0],st[1],st[2])}};u!==J.coneInnerAngle&&(J.coneInnerAngle=u),f!==J.coneOuterAngle&&(J.coneOuterAngle=f),m!==J.coneOuterGain&&(J.coneOuterGain=m),g!==J.distanceModel&&(J.distanceModel=g),_!==J.maxDistance&&(J.maxDistance=_),p!==J.orientationX.value&&(J.orientationX.value=p),d!==J.orientationY.value&&(J.orientationY.value=d),y!==J.orientationZ.value&&(J.orientationZ.value=y),v!==J.panningModel&&(J.panningModel=v),S!==J.positionX.value&&(J.positionX.value=S),b!==J.positionY.value&&(J.positionY.value=b),E!==J.positionZ.value&&(J.positionZ.value=E),M!==J.refDistance&&(J.refDistance=M),C!==J.rolloffFactor&&(J.rolloffFactor=C),(ht[0]!==1||ht[1]!==0||ht[2]!==0)&&x.setOrientation(...ht),(It[0]!==0||It[1]!==0||It[2]!==0)&&x.setPosition(...It);const ut=()=>{G.connect(x),i(G,tt,0,0),tt.connect(D).connect(F,0,0),tt.connect(V).connect(F,0,1),tt.connect(U).connect(F,0,2),tt.connect(H).connect(F,0,3),tt.connect(W).connect(F,0,4),tt.connect(q).connect(F,0,5),F.connect(Y).connect(h.destination)},Et=()=>{G.disconnect(x),o(G,tt,0,0),tt.disconnect(D),D.disconnect(F),tt.disconnect(V),V.disconnect(F),tt.disconnect(U),U.disconnect(F),tt.disconnect(H),H.disconnect(F),tt.disconnect(W),W.disconnect(F),tt.disconnect(q),q.disconnect(F),F.disconnect(Y),Y.disconnect(h.destination)};return l(ro(J,x),ut,Et)},Rw=i=>(t,{disableNormalization:e,imag:n,real:s})=>{const r=n instanceof Float32Array?n:new Float32Array(n),a=s instanceof Float32Array?s:new Float32Array(s),o=t.createPeriodicWave(a,r,{disableNormalization:e});if(Array.from(n).length<2)throw i();return o},Ko=(i,t,e,n)=>i.createScriptProcessor(t,e,n),Dw=(i,t)=>(e,n)=>{const s=n.channelCountMode;if(s==="clamped-max")throw t();if(e.createStereoPanner===void 0)return i(e,n);const r=e.createStereoPanner();return Fe(r,n),Ae(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>s,set:a=>{if(a!==s)throw t()}}),r},Pw=(i,t,e,n,s,r)=>{const o=new Float32Array([1,1]),c=Math.PI/2,l={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},h={...l,oversample:"none"},u=(g,_,p,d)=>{const y=new Float32Array(16385),v=new Float32Array(16385);for(let k=0;k<16385;k+=1){const x=k/16384*c;y[k]=Math.cos(x),v[k]=Math.sin(x)}const S=e(g,{...l,gain:0}),b=n(g,{...h,curve:y}),E=n(g,{...h,curve:o}),M=e(g,{...l,gain:0}),C=n(g,{...h,curve:v});return{connectGraph(){_.connect(S),_.connect(E.inputs===void 0?E:E.inputs[0]),_.connect(M),E.connect(p),p.connect(b.inputs===void 0?b:b.inputs[0]),p.connect(C.inputs===void 0?C:C.inputs[0]),b.connect(S.gain),C.connect(M.gain),S.connect(d,0,0),M.connect(d,0,1)},disconnectGraph(){_.disconnect(S),_.disconnect(E.inputs===void 0?E:E.inputs[0]),_.disconnect(M),E.disconnect(p),p.disconnect(b.inputs===void 0?b:b.inputs[0]),p.disconnect(C.inputs===void 0?C:C.inputs[0]),b.disconnect(S.gain),C.disconnect(M.gain),S.disconnect(d,0,0),M.disconnect(d,0,1)}}},f=(g,_,p,d)=>{const y=new Float32Array(16385),v=new Float32Array(16385),S=new Float32Array(16385),b=new Float32Array(16385),E=Math.floor(16385/2);for(let H=0;H<16385;H+=1)if(H>E){const W=(H-E)/(16384-E)*c;y[H]=Math.cos(W),v[H]=Math.sin(W),S[H]=0,b[H]=1}else{const W=H/(16384-E)*c;y[H]=1,v[H]=0,S[H]=Math.cos(W),b[H]=Math.sin(W)}const M=t(g,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),C=e(g,{...l,gain:0}),k=n(g,{...h,curve:y}),x=e(g,{...l,gain:0}),A=n(g,{...h,curve:v}),F=n(g,{...h,curve:o}),G=e(g,{...l,gain:0}),D=n(g,{...h,curve:S}),V=e(g,{...l,gain:0}),U=n(g,{...h,curve:b});return{connectGraph(){_.connect(M),_.connect(F.inputs===void 0?F:F.inputs[0]),M.connect(C,0),M.connect(x,0),M.connect(G,1),M.connect(V,1),F.connect(p),p.connect(k.inputs===void 0?k:k.inputs[0]),p.connect(A.inputs===void 0?A:A.inputs[0]),p.connect(D.inputs===void 0?D:D.inputs[0]),p.connect(U.inputs===void 0?U:U.inputs[0]),k.connect(C.gain),A.connect(x.gain),D.connect(G.gain),U.connect(V.gain),C.connect(d,0,0),G.connect(d,0,0),x.connect(d,0,1),V.connect(d,0,1)},disconnectGraph(){_.disconnect(M),_.disconnect(F.inputs===void 0?F:F.inputs[0]),M.disconnect(C,0),M.disconnect(x,0),M.disconnect(G,1),M.disconnect(V,1),F.disconnect(p),p.disconnect(k.inputs===void 0?k:k.inputs[0]),p.disconnect(A.inputs===void 0?A:A.inputs[0]),p.disconnect(D.inputs===void 0?D:D.inputs[0]),p.disconnect(U.inputs===void 0?U:U.inputs[0]),k.disconnect(C.gain),A.disconnect(x.gain),D.disconnect(G.gain),U.disconnect(V.gain),C.disconnect(d,0,0),G.disconnect(d,0,0),x.disconnect(d,0,1),V.disconnect(d,0,1)}}},m=(g,_,p,d,y)=>{if(_===1)return u(g,p,d,y);if(_===2)return f(g,p,d,y);throw s()};return(g,{channelCount:_,channelCountMode:p,pan:d,...y})=>{if(p==="max")throw s();const v=i(g,{...y,channelCount:1,channelCountMode:p,numberOfInputs:2}),S=e(g,{...y,channelCount:_,channelCountMode:p,gain:1}),b=e(g,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:d});let{connectGraph:E,disconnectGraph:M}=m(g,_,S,b,v);Object.defineProperty(b.gain,"defaultValue",{get:()=>0}),Object.defineProperty(b.gain,"maxValue",{get:()=>1}),Object.defineProperty(b.gain,"minValue",{get:()=>-1});const C={get bufferSize(){},get channelCount(){return S.channelCount},set channelCount(F){S.channelCount!==F&&(k&&M(),{connectGraph:E,disconnectGraph:M}=m(g,F,S,b,v),k&&E()),S.channelCount=F},get channelCountMode(){return S.channelCountMode},set channelCountMode(F){if(F==="clamped-max"||F==="max")throw s();S.channelCountMode=F},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(F){S.channelInterpretation=F},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},get pan(){return b.gain},addEventListener(...F){return S.addEventListener(F[0],F[1],F[2])},dispatchEvent(...F){return S.dispatchEvent(F[0])},removeEventListener(...F){return S.removeEventListener(F[0],F[1],F[2])}};let k=!1;const x=()=>{E(),k=!0},A=()=>{M(),k=!1};return r(ro(C,v),x,A)}},Lw=(i,t,e,n,s,r,a)=>(o,c)=>{const l=o.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&o.createGain().gain.automationRate===void 0)return e(o,c);Fe(l,c);const h=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(h!==null&&h.length<2)throw t();ve(l,{curve:h},"curve"),ve(l,c,"oversample");let u=null,f=!1;return a(l,"curve",_=>()=>_.call(l),_=>p=>(_.call(l,p),f&&(n(p)&&u===null?u=i(o,l):!n(p)&&u!==null&&(u(),u=null)),p)),s(l,()=>{f=!0,n(l.curve)&&(u=i(o,l))},()=>{f=!1,u!==null&&(u(),u=null)})},Ow=(i,t,e,n,s)=>(r,{curve:a,oversample:o,...c})=>{const l=r.createWaveShaper(),h=r.createWaveShaper();Fe(l,c),Fe(h,c);const u=e(r,{...c,gain:1}),f=e(r,{...c,gain:-1}),m=e(r,{...c,gain:1}),g=e(r,{...c,gain:-1});let _=null,p=!1,d=null;const y={get bufferSize(){},get channelCount(){return l.channelCount},set channelCount(b){u.channelCount=b,f.channelCount=b,l.channelCount=b,m.channelCount=b,h.channelCount=b,g.channelCount=b},get channelCountMode(){return l.channelCountMode},set channelCountMode(b){u.channelCountMode=b,f.channelCountMode=b,l.channelCountMode=b,m.channelCountMode=b,h.channelCountMode=b,g.channelCountMode=b},get channelInterpretation(){return l.channelInterpretation},set channelInterpretation(b){u.channelInterpretation=b,f.channelInterpretation=b,l.channelInterpretation=b,m.channelInterpretation=b,h.channelInterpretation=b,g.channelInterpretation=b},get context(){return l.context},get curve(){return d},set curve(b){if(b!==null&&b.length<2)throw t();if(b===null)l.curve=b,h.curve=b;else{const E=b.length,M=new Float32Array(E+2-E%2),C=new Float32Array(E+2-E%2);M[0]=b[0],C[0]=-b[E-1];const k=Math.ceil((E+1)/2),x=(E+1)/2-1;for(let A=1;A<k;A+=1){const F=A/k*x,G=Math.floor(F),D=Math.ceil(F);M[A]=G===D?b[G]:(1-(F-G))*b[G]+(1-(D-F))*b[D],C[A]=G===D?-b[E-1-G]:-((1-(F-G))*b[E-1-G])-(1-(D-F))*b[E-1-D]}M[k]=E%2===1?b[k-1]:(b[k-2]+b[k-1])/2,l.curve=M,h.curve=C}d=b,p&&(n(d)&&_===null?_=i(r,u):_!==null&&(_(),_=null))},get inputs(){return[u]},get numberOfInputs(){return l.numberOfInputs},get numberOfOutputs(){return l.numberOfOutputs},get oversample(){return l.oversample},set oversample(b){l.oversample=b,h.oversample=b},addEventListener(...b){return u.addEventListener(b[0],b[1],b[2])},dispatchEvent(...b){return u.dispatchEvent(b[0])},removeEventListener(...b){return u.removeEventListener(b[0],b[1],b[2])}};a!==null&&(y.curve=a instanceof Float32Array?a:new Float32Array(a)),o!==y.oversample&&(y.oversample=o);const v=()=>{u.connect(l).connect(m),u.connect(f).connect(h).connect(g).connect(m),p=!0,n(d)&&(_=i(r,u))},S=()=>{u.disconnect(l),l.disconnect(m),u.disconnect(f),f.disconnect(h),h.disconnect(g),g.disconnect(m),p=!1,_!==null&&(_(),_=null)};return s(ro(y,m),v,S)},fn=()=>new DOMException("","NotSupportedError"),Nw={numberOfChannels:1},Fw=(i,t,e,n,s)=>class extends i{constructor(a,o,c){let l;if(typeof a=="number"&&o!==void 0&&c!==void 0)l={length:o,numberOfChannels:a,sampleRate:c};else if(typeof a=="object")l=a;else throw new Error("The given parameters are not valid.");const{length:h,numberOfChannels:u,sampleRate:f}={...Nw,...l},m=n(u,h,f);t(No,()=>No(m))||m.addEventListener("statechange",(()=>{let g=0;const _=p=>{this._state==="running"&&(g>0?(m.removeEventListener("statechange",_),p.stopImmediatePropagation(),this._waitForThePromiseToSettle(p)):g+=1)};return _})()),super(m,u),this._length=h,this._nativeOfflineAudioContext=m,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",s(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,Rp(this)}))}_waitForThePromiseToSettle(a){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(a):setTimeout(()=>this._waitForThePromiseToSettle(a))}},kw={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Uw=(i,t,e,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...kw,...l},f=e(h,u),m=r(h),g=m?n():null,_=c.sampleRate/2;super(c,!1,f,g),this._detune=t(this,m,f.detune,153600,-153600),this._frequency=t(this,m,f.frequency,_,-_),this._nativeOscillatorNode=f,this._onended=null,this._oscillatorNodeRenderer=g,this._oscillatorNodeRenderer!==null&&u.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=u.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const l=typeof c=="function"?a(this,c):null;this._nativeOscillatorNode.onended=l;const h=this._nativeOscillatorNode.onended;this._onended=h!==null&&h===l?c:h}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Dr(this);const l=()=>{this._nativeOscillatorNode.removeEventListener("ended",l),Li(this)&&Ho(this)};this._nativeOscillatorNode.addEventListener("ended",l)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Bw=(i,t,e,n,s)=>()=>{const r=new WeakMap;let a=null,o=null,c=null;const l=async(h,u)=>{let f=e(h);const m=nn(f,u);if(!m){const g={channelCount:f.channelCount,channelCountMode:f.channelCountMode,channelInterpretation:f.channelInterpretation,detune:f.detune.value,frequency:f.frequency.value,periodicWave:a===null?void 0:a,type:f.type};f=t(u,g),o!==null&&f.start(o),c!==null&&f.stop(c)}return r.set(u,f),m?(await i(u,h.detune,f.detune),await i(u,h.frequency,f.frequency)):(await n(u,h.detune,f.detune),await n(u,h.frequency,f.frequency)),await s(h,u,f),f};return{set periodicWave(h){a=h},set start(h){o=h},set stop(h){c=h},render(h,u){const f=r.get(u);return f!==void 0?Promise.resolve(f):l(h,u)}}},Vw={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},zw=(i,t,e,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...Vw,...l},f=e(h,u),m=r(h),g=m?n():null;super(c,!1,f,g),this._nativePannerNode=f,this._orientationX=t(this,m,f.orientationX,an,mn),this._orientationY=t(this,m,f.orientationY,an,mn),this._orientationZ=t(this,m,f.orientationZ,an,mn),this._positionX=t(this,m,f.positionX,an,mn),this._positionY=t(this,m,f.positionY,an,mn),this._positionZ=t(this,m,f.positionZ,an,mn),a(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Gw=(i,t,e,n,s,r,a,o,c,l)=>()=>{const h=new WeakMap;let u=null;const f=async(m,g)=>{let _=null,p=r(m);const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation},y={...d,coneInnerAngle:p.coneInnerAngle,coneOuterAngle:p.coneOuterAngle,coneOuterGain:p.coneOuterGain,distanceModel:p.distanceModel,maxDistance:p.maxDistance,panningModel:p.panningModel,refDistance:p.refDistance,rolloffFactor:p.rolloffFactor},v=nn(p,g);if("bufferSize"in p)_=n(g,{...d,gain:1});else if(!v){const S={...y,orientationX:p.orientationX.value,orientationY:p.orientationY.value,orientationZ:p.orientationZ.value,positionX:p.positionX.value,positionY:p.positionY.value,positionZ:p.positionZ.value};p=s(g,S)}if(h.set(g,_===null?p:_),_!==null){if(u===null){if(a===null)throw new Error("Missing the native OfflineAudioContext constructor.");const A=new a(6,m.context.length,g.sampleRate),F=t(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});F.connect(A.destination),u=(async()=>{const G=await Promise.all([m.orientationX,m.orientationY,m.orientationZ,m.positionX,m.positionY,m.positionZ].map(async(D,V)=>{const U=e(A,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:V===0?1:0});return await o(A,D,U.offset),U}));for(let D=0;D<6;D+=1)G[D].connect(F,0,D),G[D].start(0);return l(A)})()}const S=await u,b=n(g,{...d,gain:1});await c(m,g,b);const E=[];for(let A=0;A<S.numberOfChannels;A+=1)E.push(S.getChannelData(A));let M=[E[0][0],E[1][0],E[2][0]],C=[E[3][0],E[4][0],E[5][0]],k=n(g,{...d,gain:1}),x=s(g,{...y,orientationX:M[0],orientationY:M[1],orientationZ:M[2],positionX:C[0],positionY:C[1],positionZ:C[2]});b.connect(k).connect(x.inputs[0]),x.connect(_);for(let A=128;A<S.length;A+=128){const F=[E[0][A],E[1][A],E[2][A]],G=[E[3][A],E[4][A],E[5][A]];if(F.some((D,V)=>D!==M[V])||G.some((D,V)=>D!==C[V])){M=F,C=G;const D=A/g.sampleRate;k.gain.setValueAtTime(0,D),k=n(g,{...d,gain:0}),x=s(g,{...y,orientationX:M[0],orientationY:M[1],orientationZ:M[2],positionX:C[0],positionY:C[1],positionZ:C[2]}),k.gain.setValueAtTime(1,D),b.connect(k).connect(x.inputs[0]),x.connect(_)}}return _}return v?(await i(g,m.orientationX,p.orientationX),await i(g,m.orientationY,p.orientationY),await i(g,m.orientationZ,p.orientationZ),await i(g,m.positionX,p.positionX),await i(g,m.positionY,p.positionY),await i(g,m.positionZ,p.positionZ)):(await o(g,m.orientationX,p.orientationX),await o(g,m.orientationY,p.orientationY),await o(g,m.orientationZ,p.orientationZ),await o(g,m.positionX,p.positionX),await o(g,m.positionY,p.positionY),await o(g,m.positionZ,p.positionZ)),so(p)?await c(m,g,p.inputs[0]):await c(m,g,p),p};return{render(m,g){const _=h.get(g);return _!==void 0?Promise.resolve(_):f(m,g)}}},Ww={disableNormalization:!1},Hw=(i,t,e,n)=>class Vp{constructor(r,a){const o=t(r),c=n({...Ww,...a}),l=i(o,c);return e.add(l),l}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===Vp.prototype||e.has(r)}},qw=(i,t)=>(e,n,s)=>(i(n).replay(s),t(n,e,s)),jw=(i,t,e)=>async(n,s,r)=>{const a=i(n);await Promise.all(a.activeInputs.map((o,c)=>Array.from(o).map(async([l,h])=>{const f=await t(l).render(l,s),m=n.context.destination;!e(l)&&(n!==m||!e(n))&&f.connect(r,h,c)})).reduce((o,c)=>[...o,...c],[]))},Xw=(i,t,e)=>async(n,s,r)=>{const a=t(n);await Promise.all(Array.from(a.activeInputs).map(async([o,c])=>{const h=await i(o).render(o,s);e(o)||h.connect(r,c)}))},Kw=(i,t,e,n)=>s=>i(No,()=>No(s))?Promise.resolve(i(n,n)).then(r=>{if(!r){const a=e(s,512,0,1);s.oncomplete=()=>{a.onaudioprocess=null,a.disconnect()},a.onaudioprocess=()=>s.currentTime,a.connect(s.destination)}return s.startRendering()}):new Promise(r=>{const a=t(s,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});s.oncomplete=o=>{a.disconnect(),r(o.renderedBuffer)},a.connect(s.destination),s.startRendering()}),Yw=i=>(t,e)=>{i.set(t,e)},$w=i=>(t,e)=>i.set(t,e),Zw=(i,t,e,n,s,r,a,o)=>(c,l)=>e(c).render(c,l).then(()=>Promise.all(Array.from(n(l)).map(h=>e(h).render(h,l)))).then(()=>s(l)).then(h=>(typeof h.copyFromChannel!="function"?(a(h),Gh(h)):t(r,()=>r(h))||o(h),i.add(h),h)),Qw={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},Jw=(i,t,e,n,s,r)=>class extends i{constructor(o,c){const l=s(o),h={...Qw,...c},u=e(l,h),f=r(l),m=f?n():null;super(o,!1,u,m),this._pan=t(this,f,u.pan)}get pan(){return this._pan}},tT=(i,t,e,n,s)=>()=>{const r=new WeakMap,a=async(o,c)=>{let l=e(o);const h=nn(l,c);if(!h){const u={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,pan:l.pan.value};l=t(c,u)}return r.set(c,l),h?await i(c,o.pan,l.pan):await n(c,o.pan,l.pan),so(l)?await s(o,c,l.inputs[0]):await s(o,c,l),l};return{render(o,c){const l=r.get(c);return l!==void 0?Promise.resolve(l):a(o,c)}}},eT=i=>()=>{if(i===null)return!1;try{new i({length:1,sampleRate:44100})}catch{return!1}return!0},nT=i=>()=>{if(i===null)return!1;const e=new i(1,1,44100).createBuffer(1,1,44100);if(e.copyToChannel===void 0)return!0;const n=new Float32Array(2);try{e.copyFromChannel(n,0,0)}catch{return!1}return!0},iT=i=>()=>{if(i===null)return!1;if(i.prototype!==void 0&&i.prototype.close!==void 0)return!0;const t=new i,e=t.close!==void 0;try{t.close()}catch{}return e},sT=i=>()=>{if(i===null)return Promise.resolve(!1);const t=new i(1,1,44100);return new Promise(e=>{let n=!0;const s=a=>{n&&(n=!1,t.startRendering(),e(a instanceof TypeError))};let r;try{r=t.decodeAudioData(null,()=>{},s)}catch(a){s(a)}r!==void 0&&r.catch(s)})},rT=i=>()=>{if(i===null)return!1;let t;try{t=new i({latencyHint:"balanced"})}catch{return!1}return t.close(),!0},oT=i=>()=>{if(i===null)return!1;const e=new i(1,1,44100).createGain(),n=e.connect(e)===e;return e.disconnect(e),n},aT=(i,t)=>async()=>{if(i===null)return!0;if(t===null)return!1;const e=new Blob(['let c,p;class A extends AudioWorkletProcessor{constructor(){super();this.port.onmessage=(e)=>{p=e.data;p.onmessage=()=>{p.postMessage(c);p.close()};this.port.postMessage(0)}}process(){c=1}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new MessageChannel,s=new t(1,128,44100),r=URL.createObjectURL(e);let a=!1;try{await s.audioWorklet.addModule(r);const o=new i(s,"a",{numberOfOutputs:0}),c=s.createOscillator();await new Promise(l=>{o.port.onmessage=()=>l(),o.port.postMessage(n.port2,[n.port2])}),o.port.onmessage=()=>a=!0,c.connect(o),c.start(0),await s.startRendering(),a=await new Promise(l=>{n.port1.onmessage=({data:h})=>l(h===1),n.port1.postMessage(0)})}catch{}finally{n.port1.close(),URL.revokeObjectURL(r)}return a},cT=(i,t)=>async()=>{if(i===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),s=URL.createObjectURL(e);let r=!1,a=!1;try{await n.audioWorklet.addModule(s);const o=new i(n,"a",{numberOfOutputs:0}),c=n.createOscillator();o.port.onmessage=()=>r=!0,o.onprocessorerror=()=>a=!0,c.connect(o),c.start(0),await n.startRendering(),await new Promise(l=>setTimeout(l))}catch{}finally{URL.revokeObjectURL(s)}return r&&!a},lT=i=>()=>{if(i===null)return!1;const e=new i(1,1,44100).createChannelMerger();if(e.channelCountMode==="max")return!0;try{e.channelCount=2}catch{return!0}return!1},hT=i=>()=>{if(i===null)return!1;const t=new i(1,1,44100);return t.createConstantSource===void 0?!0:t.createConstantSource().offset.maxValue!==Number.POSITIVE_INFINITY},uT=i=>()=>{if(i===null)return!1;const t=new i(1,1,44100),e=t.createConvolver();e.buffer=t.createBuffer(1,1,t.sampleRate);try{e.buffer=t.createBuffer(1,1,t.sampleRate)}catch{return!1}return!0},dT=i=>()=>{if(i===null)return!1;const e=new i(1,1,44100).createConvolver();try{e.channelCount=1}catch{return!1}return!0},fT=i=>()=>i!==null&&i.hasOwnProperty("isSecureContext"),pT=i=>()=>{if(i===null)return!1;const t=new i;try{return t.createMediaStreamSource(new MediaStream),!1}catch{return!0}finally{t.close()}},mT=(i,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=i(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(s=>{e.oncomplete=()=>{n.disconnect(),s(e.currentTime!==0)},e.startRendering()})},gT=i=>()=>{if(i===null)return Promise.resolve(!1);const t=new i(1,1,44100);if(t.createStereoPanner===void 0||t.createConstantSource===void 0)return Promise.resolve(!0);const e=t.createConstantSource(),n=t.createStereoPanner();return e.channelCount=1,e.offset.value=1,n.channelCount=1,e.start(),e.connect(n).connect(t.destination),t.startRendering().then(s=>s.getChannelData(0)[0]!==1)},_T=()=>new DOMException("","UnknownError"),yT={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},vT=(i,t,e,n,s,r,a)=>class extends i{constructor(c,l){const h=s(c),u={...yT,...l},f=e(h,u),g=r(h)?n():null;super(c,!0,f,g),this._isCurveNullified=!1,this._nativeWaveShaperNode=f,a(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},xT=(i,t,e)=>()=>{const n=new WeakMap,s=async(r,a)=>{let o=t(r);if(!nn(o,a)){const l={channelCount:o.channelCount,channelCountMode:o.channelCountMode,channelInterpretation:o.channelInterpretation,curve:o.curve,oversample:o.oversample};o=i(a,l)}return n.set(a,o),so(o)?await e(r,a,o.inputs[0]):await e(r,a,o),o};return{render(r,a){const o=n.get(a);return o!==void 0?Promise.resolve(o):s(r,a)}}},ST=()=>typeof window>"u"?null:window,bT=(i,t)=>e=>{e.copyFromChannel=(n,s,r=0)=>{const a=i(r),o=i(s);if(o>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(o),h=n.length;for(let u=a<0?-a:0;u+a<c&&u<h;u+=1)n[u]=l[u+a]},e.copyToChannel=(n,s,r=0)=>{const a=i(r),o=i(s);if(o>=e.numberOfChannels)throw t();const c=e.length,l=e.getChannelData(o),h=n.length;for(let u=a<0?-a:0;u+a<c&&u<h;u+=1)l[u+a]=n[u]}},MT=i=>t=>{t.copyFromChannel=(e=>(n,s,r=0)=>{const a=i(r),o=i(s);if(a<t.length)return e.call(t,n,o,a)})(t.copyFromChannel),t.copyToChannel=(e=>(n,s,r=0)=>{const a=i(r),o=i(s);if(a<t.length)return e.call(t,n,o,a)})(t.copyToChannel)},wT=i=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),i(t,"buffer",s=>()=>{const r=s.call(t);return r===n?null:r},s=>r=>s.call(t,r===null?n:r))},TT=(i,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw i()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw i()}});const s=e.createBufferSource();t(n,()=>{const o=n.numberOfInputs;for(let c=0;c<o;c+=1)s.connect(n,0,c)},()=>s.disconnect(n))},zp=(i,t,e)=>i.copyFromChannel===void 0?i.getChannelData(e)[0]:(i.copyFromChannel(t,e),t[0]),Gp=i=>{if(i===null)return!1;const t=i.length;return t%2!==0?i[Math.floor(t/2)]!==0:i[t/2-1]+i[t/2]!==0},Yo=(i,t,e,n)=>{let s=i;for(;!s.hasOwnProperty(t);)s=Object.getPrototypeOf(s);const{get:r,set:a}=Object.getOwnPropertyDescriptor(s,t);Object.defineProperty(i,t,{get:e(r),set:n(a)})},ET=i=>({...i,outputChannelCount:i.outputChannelCount!==void 0?i.outputChannelCount:i.numberOfInputs===1&&i.numberOfOutputs===1?[i.channelCount]:Array.from({length:i.numberOfOutputs},()=>1)}),AT=i=>({...i,channelCount:i.numberOfOutputs}),CT=i=>{const{imag:t,real:e}=i;return t===void 0?e===void 0?{...i,imag:[0,0],real:[0,0]}:{...i,imag:Array.from(e,()=>0),real:e}:e===void 0?{...i,imag:t,real:Array.from(t,()=>0)}:{...i,imag:t,real:e}},Wp=(i,t,e)=>{try{i.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;Wp(i,t,e+1e-7)}},IT=i=>{const t=i.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},RT=i=>{const t=i.createBufferSource(),e=i.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},DT=i=>{const t=i.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},Xh=i=>{const t=i.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},Hp=i=>{const t=i.createBuffer(1,1,44100),e=i.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},Kh=i=>{const t=i.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},PT=i=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(i)}finally{t.close(),e.close()}},LT=()=>{try{new DOMException}catch{return!1}return!0},OT=()=>new Promise(i=>{const t=new ArrayBuffer(0),{port1:e,port2:n}=new MessageChannel;e.onmessage=({data:s})=>i(s!==null),n.postMessage(t,[t])}),NT=i=>{i.start=(t=>(e=0,n=0,s)=>{const r=i.buffer,a=r===null?n:Math.min(r.duration,n);r!==null&&a>r.duration-.5/i.context.sampleRate?t.call(i,e,0,0):t.call(i,e,a,s)})(i.start)},qp=(i,t)=>{const e=t.createGain();i.connect(e);const n=(s=>()=>{s.call(i,e),i.removeEventListener("ended",n)})(i.disconnect);i.addEventListener("ended",n),ro(i,e),i.stop=(s=>{let r=!1;return(a=0)=>{if(r)try{s.call(i,a)}catch{e.gain.setValueAtTime(0,a)}else s.call(i,a),r=!0}})(i.stop)},oo=(i,t)=>e=>{const n={value:i};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(i,e):t.handleEvent.call(i,e)},FT=VS(Ws),kT=jS(Ws),UT=sM(Yc),jp=new WeakMap,BT=bM(jp),Gn=Ob(new Map,new WeakMap),Qn=ST(),Xp=JM(Gn,gi),Yh=SM(cn),$e=jw(cn,Yh,Ns),VT=ZS(Xp,_e,$e),ue=TM(Kc),Ve=Ew(Qn),oe=GM(Ve),Kp=new WeakMap,Yp=pM(oo),os=iw(Qn),$h=UM(os),Zh=BM(Qn),$p=VM(Qn),Pr=rw(Qn),De=bb(zS(Mp),qS(FT,kT,Xa,UT,Ka,cn,BT,Wo,_e,Ws,Li,Ns,Oa),Gn,LM(dh,Ka,cn,_e,Oo,Li),gi,$c,fn,tM(Xa,dh,cn,_e,Oo,ue,Li,oe),aM(Kp,cn,Zn),Yp,ue,$h,Zh,$p,oe,Pr),zT=$S(De,VT,gi,Xp,ue,oe),Qh=new WeakSet,_f=tw(Qn),Zp=Xb(new Uint32Array(1)),Jh=bT(Zp,gi),tu=MT(Zp),GT=JS(Qh,Gn,fn,_f,Ve,eT(_f),Jh,tu),Zc=XS(vn),Qp=Xw(Yh,qo,Ns),_i=zb(Qp),ao=nw(Zc,Gn,IT,RT,DT,Xh,Hp,Kh,NT,wT(Yo),qp),yi=qw(MM(qo),Qp),WT=nb(_i,ao,_e,yi,$e),Jn=Mb(GS(wp),Kp,zh,wb,OS,NS,FS,kS,US,lh,Sp,os,Wp),HT=eb(De,WT,Jn,Ge,ao,ue,oe,oo),qT=ub(De,db,gi,Ge,sw(vn,Yo),ue,oe,$e),jT=Lb(_i,Up,_e,yi,$e),Hs=$w(jp),XT=Pb(De,Jn,jT,$c,Up,ue,oe,Hs),ms=ZM(Ws,Zh),KT=TT(Ge,ms),gs=dw(os,KT),YT=kb(gs,_e,$e),$T=Fb(De,YT,gs,ue,oe),ZT=Vb(Xo,_e,$e),QT=Bb(De,ZT,Xo,ue,oe,AT),JT=mw(Zc,ao,vn,ms),co=pw(Zc,Gn,JT,Xh,Kh),tE=jb(_i,co,_e,yi,$e),eE=qb(De,Jn,tE,co,ue,oe,oo),Jp=gw(fn,Yo),nE=$b(Jp,_e,$e),iE=Yb(De,nE,Jp,ue,oe,Hs),sE=iM(_i,Bp,_e,yi,$e),rE=nM(De,Jn,sE,Bp,ue,oe,Hs),tm=_w(fn),oE=uM(_i,tm,_e,yi,$e),aE=hM(De,Jn,oE,tm,fn,ue,oe,Hs),cE=vM(_i,vn,_e,yi,$e),lE=yM(De,Jn,cE,vn,ue,oe),hE=Sw($c,Ge,Ko,fn),Qc=Kw(Gn,vn,Ko,mT(vn,Ve)),uE=PM(ao,_e,Ve,$e,Qc),dE=yw(hE),fE=RM(De,dE,uE,ue,oe,Hs),pE=fb(Jn,gs,co,Ko,fn,zp,oe,Yo),em=new WeakMap,mE=$M(qT,pE,Yp,oe,em,oo),nm=Aw(Zc,Gn,Xh,Hp,Kh,qp),gE=Bw(_i,nm,_e,yi,$e),_E=Uw(De,Jn,nm,gE,ue,oe,oo),im=Wb(ao),yE=Ow(im,Ge,vn,Gp,ms),Jc=Lw(im,Ge,yE,Gp,ms,os,Yo),vE=Iw(Xa,Ge,gs,vn,Ko,Jc,fn,Ka,zp,ms),sm=Cw(vE),xE=Gw(_i,gs,co,vn,sm,_e,Ve,yi,$e,Qc),SE=zw(De,Jn,sm,xE,ue,oe,Hs),bE=Rw(gi),ME=Hw(bE,ue,new WeakSet,CT),wE=Pw(gs,Xo,vn,Jc,fn,ms),rm=Dw(wE,fn),TE=tT(_i,rm,_e,yi,$e),EE=Jw(De,Jn,rm,TE,ue,oe),AE=xT(Jc,_e,$e),CE=vT(De,Ge,Jc,AE,ue,oe,Hs),om=WM(Qn),eu=mM(Qn),am=new WeakMap,IE=EM(am,Ve),RE=om?HS(Gn,fn,fM(Qn),eu,gM(BS),ue,IE,oe,Pr,new WeakMap,new WeakMap,cT(Pr,Ve),Qn):void 0,DE=zM($h,oe),PE=Jb(Qh,Gn,Qb,dM,new WeakSet,ue,DE,qa,No,Jh,tu),cm=Rb(RE,zT,GT,HT,XT,$T,QT,eE,iE,PE,rE,aE,lE,fE,mE,_E,SE,ME,EE,CE),LE=qM(De,bw,ue,oe),OE=XM(De,Mw,ue,oe),NE=KM(De,ww,ue,oe),FE=Tw(Ge,oe),kE=YM(De,FE,ue),UE=hb(cm,Ge,fn,_T,LE,OE,NE,kE,os),nu=AM(em),BE=KS(nu),lm=Gb(gi),VE=rM(nu),hm=cM(gi),um=new WeakMap,zE=xM(um,Zn),GE=uw(lm,gi,Ge,gs,Xo,co,vn,Ko,fn,hm,eu,zE,ms),WE=aw(Ge,GE,vn,fn,ms),HE=Ib(_i,lm,ao,gs,Xo,co,vn,VE,hm,eu,_e,Pr,Ve,yi,$e,Qc),qE=wM(am),jE=Yw(um),yf=om?Eb(BE,De,Jn,HE,WE,cn,qE,ue,oe,Pr,ET,jE,PT,oo):void 0,XE=Zb(fn,Ve),KE=Zw(Qh,Gn,Yh,nu,Qc,qa,Jh,tu),YE=Fw(cm,Gn,Ge,XE,KE),$E=OM(Kc,$h),ZE=NM(Vh,Zh),QE=FM(zh,$p),JE=kM(Kc,oe),tA=()=>HM(Gn,nT(Ve),iT(os),sT(Ve),rT(os),oT(Ve),aT(Pr,Ve),lT(Ve),hT(Ve),uT(Ve),dT(Ve),LT,fT(Qn),pT(os),gT(Ve),OT);function Ct(i,t){if(!i)throw new Error(t)}function je(i,t,e=1/0){if(!(t<=i&&i<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${i}`)}function iu(i){!i.isOffline&&i.state!=="running"&&$o('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let su=console;function eA(i){su=i}function dm(...i){su.log(...i)}function $o(...i){su.warn(...i)}const nA=Object.freeze(Object.defineProperty({__proto__:null,assert:Ct,assertContextRunning:iu,assertRange:je,log:dm,setLogger:eA,warn:$o},Symbol.toStringTag,{value:"Module"}));function _n(i){return typeof i>"u"}function qt(i){return!_n(i)}function fm(i){return typeof i=="function"}function In(i){return typeof i=="number"}function Oi(i){return Object.prototype.toString.call(i)==="[object Object]"&&i.constructor===Object}function ru(i){return typeof i=="boolean"}function Ye(i){return Array.isArray(i)}function Vn(i){return typeof i=="string"}function Eo(i){return Vn(i)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(i)}function iA(i){return new UE(i)}function sA(i,t,e){return new YE(i,t,e)}const Ni=typeof self=="object"?self:null,rA=Ni&&(Ni.hasOwnProperty("AudioContext")||Ni.hasOwnProperty("webkitAudioContext"));function oA(i,t,e){return Ct(qt(yf),"This node only works in a secure context (https or localhost)"),new yf(i,t,e)}function ti(i,t,e,n){var s=arguments.length,r=s<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(i,t,e,n);else for(var o=i.length-1;o>=0;o--)(a=i[o])&&(r=(s<3?a(r):s>3?a(t,e,r):a(t,e))||r);return s>3&&r&&Object.defineProperty(t,e,r),r}function he(i,t,e,n){function s(r){return r instanceof e?r:new e(function(a){a(r)})}return new(e||(e=Promise))(function(r,a){function o(h){try{l(n.next(h))}catch(u){a(u)}}function c(h){try{l(n.throw(h))}catch(u){a(u)}}function l(h){h.done?r(h.value):s(h.value).then(o,c)}l((n=n.apply(i,t||[])).next())})}class aA{constructor(t,e,n){this._callback=t,this._type=e,this._updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&(clearTimeout(this._timeout),this._timeout=0),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){this._updateInterval=Math.max(t,128/44100),this._type==="worker"&&this._worker.postMessage(Math.max(t*1e3,1))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function Fs(i){return QE(i)}function as(i){return ZE(i)}function Na(i){return JE(i)}function mr(i){return $E(i)}function pm(i){return i instanceof AudioBuffer}function cA(i,t){return i==="value"||Fs(t)||as(t)||pm(t)}function kn(i,...t){if(!t.length)return i;const e=t.shift();if(Oi(i)&&Oi(e))for(const n in e)cA(n,e[n])?i[n]=e[n]:Oi(e[n])?(i[n]||Object.assign(i,{[n]:{}}),kn(i[n],e[n])):Object.assign(i,{[n]:e[n]});return kn(i,...t)}function lA(i,t){return i.length===t.length&&i.every((e,n)=>t[n]===e)}function L(i,t,e=[],n){const s={},r=Array.from(t);if(Oi(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(o=>Reflect.has(i,o))||(kn(s,{[n]:r[0]}),e.splice(e.indexOf(n),1),r.shift())),r.length===1&&Oi(r[0]))kn(s,r[0]);else for(let a=0;a<e.length;a++)qt(r[a])&&(s[e[a]]=r[a]);return kn(i,s)}function hA(i){return i.constructor.getDefaults()}function Un(i,t){return _n(i)?t:i}function Xe(i,t){return t.forEach(e=>{Reflect.has(i,e)&&delete i[e]}),i}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */let Vi=class{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||Ni&&this.toString()===Ni.TONE_DEBUG_CLASS)&&dm(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}};Vi.version=Uh;const ou=1e-6;function Qa(i,t){return i>t+ou}function _h(i,t){return Qa(i,t)||Xn(i,t)}function mm(i,t){return i+ou<t}function Xn(i,t){return Math.abs(i-t)<ou}function gm(i,t,e){return Math.max(Math.min(i,e),t)}class ei extends Vi{constructor(){super(),this.name="Timeline",this._timeline=[];const t=L(ei.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(Ct(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];Ct(_h(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Xn(this._timeline[e].time,t)){for(let n=e;n>=0&&Xn(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&_h(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const s=this._timeline.length;let r=s;if(s>0&&this._timeline[s-1][e]<=t)return s-1;for(;n<r;){let a=Math.floor(n+(r-n)/2);const o=this._timeline[a],c=this._timeline[a+1];if(Xn(o[e],t)){for(let l=a;l<this._timeline.length;l++){const h=this._timeline[l];if(Xn(h[e],t))a=l;else break}return a}else{if(mm(o[e],t)&&Qa(c[e],t))return a;Qa(o[e],t)?r=a:n=a+1}}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let s=this._search(t),r=this._search(e);return s!==-1&&r!==-1?(this._timeline[s].time!==t&&(s+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,s,r)):s===-1&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&Xn(this._timeline[n].time,t)){let s=n;for(let r=n;r>=0&&Xn(this._timeline[r].time,t);r--)s=r;this._iterate(r=>{e(r)},s,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const _m=[];function tl(i){_m.push(i)}function uA(i){_m.forEach(t=>t(i))}const ym=[];function el(i){ym.push(i)}function dA(i){ym.forEach(t=>t(i))}class lo extends Vi{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(s=>{_n(this._events)&&(this._events={}),this._events.hasOwnProperty(s)||(this._events[s]=[]),this._events[s].push(e)}),this}once(t,e){const n=(...s)=>{e(...s),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(s=>{if(_n(this._events)&&(this._events={}),this._events.hasOwnProperty(t))if(_n(e))this._events[t]=[];else{const r=this._events[t];for(let a=r.length-1;a>=0;a--)r[a]===e&&r.splice(a,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let s=0,r=n.length;s<r;s++)n[s].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(lo.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class au extends lo{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class ho extends au{constructor(){super(),this.name="Context",this._constants=new Map,this._timeouts=new ei,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletModules=new Map;const t=L(ho.getDefaults(),arguments,["context"]);t.context?this._context=t.context:this._context=iA({latencyHint:t.latencyHint}),this._ticker=new aA(this.emit.bind(this,"tick"),t.clockSource,t.updateInterval),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this._setLatencyHint(t.latencyHint),this.lookAhead=t.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(uA(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return Ct(mr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return Ct(mr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return Ct(mr(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){Ct(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){Ct(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){Ct(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){Ct(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return oA(this.rawContext,t,e)}addAudioWorkletModule(t,e){return he(this,void 0,void 0,function*(){Ct(qt(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletModules.has(e)||this._workletModules.set(e,this.rawContext.audioWorklet.addModule(t)),yield this._workletModules.get(e)})}workletsAreReady(){return he(this,void 0,void 0,function*(){const t=[];this._workletModules.forEach(e=>t.push(e)),yield Promise.all(t)})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get latencyHint(){return this._latencyHint}_setLatencyHint(t){let e=0;if(this._latencyHint=t,Vn(t))switch(t){case"interactive":e=.1;break;case"playback":e=.5;break;case"balanced":e=.25;break}this.lookAhead=e,this.updateInterval=e/2}get rawContext(){return this._context}now(){return this._context.currentTime+this.lookAhead}immediate(){return this._context.currentTime}resume(){return mr(this._context)?this._context.resume():Promise.resolve()}close(){return he(this,void 0,void 0,function*(){mr(this._context)&&(yield this._context.close()),this._initialized&&dA(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=t;const s=this._context.createBufferSource();return s.channelCount=1,s.channelCountMode="explicit",s.buffer=e,s.loop=!0,s.start(0),this._constants.set(t,s),s}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,s=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),s()},id:n,time:r+e})};return s(),n}}class fA extends au{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t,e){return he(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function Pt(i,t){Ye(t)?t.forEach(e=>Pt(i,e)):Object.defineProperty(i,t,{enumerable:!0,writable:!1})}function Zo(i,t){Ye(t)?t.forEach(e=>Zo(i,e)):Object.defineProperty(i,t,{writable:!0})}const ee=()=>{};class ne extends Vi{constructor(){super(),this.name="ToneAudioBuffer",this.onload=ee;const t=L(ne.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,t.url&&pm(t.url)||t.url instanceof ne?this.set(t.url):Vn(t.url)&&this.load(t.url).catch(t.onerror)}static getDefaults(){return{onerror:ee,onload:ee,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:me().sampleRate}set(t){return t instanceof ne?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return he(this,void 0,void 0,function*(){const e=ne.load(t).then(n=>{this.set(n),this.onload(this)});ne.downloads.push(e);try{yield e}finally{const n=ne.downloads.indexOf(e);ne.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Ye(t)&&t[0].length>0,n=e?t.length:1,s=e?t[0].length:t.length,r=me(),a=r.createBuffer(n,s,r.sampleRate),o=!e&&n===1?[t]:t;for(let c=0;c<n;c++)a.copyToChannel(o[c],c);return this._buffer=a,this}toMono(t){if(In(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let s=0;s<n;s++){const r=this.toArray(s);for(let a=0;a<r.length;a++)e[a]+=r[a]}e=e.map(s=>s/n),this.fromArray(e)}return this}toArray(t){if(In(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){const n=Math.floor(t*this.sampleRate),s=Math.floor(e*this.sampleRate);Ct(n<s,"The start time must be less than the end time");const r=s-n,a=me().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let o=0;o<this.numberOfChannels;o++)a.copyToChannel(this.getChannelData(o).subarray(n,s),o);return new ne(a)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new ne().fromArray(t)}static fromUrl(t){return he(this,void 0,void 0,function*(){return yield new ne().load(t)})}static load(t){return he(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const o=e[1].split("|");let c=o[0];for(const l of o)if(ne.supportsType(l)){c=l;break}t=t.replace(e[0],c)}const n=ne.baseUrl===""||ne.baseUrl.endsWith("/")?ne.baseUrl:ne.baseUrl+"/",s=yield fetch(n+t);if(!s.ok)throw new Error(`could not load url: ${t}`);const r=yield s.arrayBuffer();return yield me().decodeAudioData(r)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return he(this,void 0,void 0,function*(){for(yield Promise.resolve();ne.downloads.length;)yield ne.downloads[0]})}}ne.baseUrl="";ne.downloads=[];class uo extends ho{constructor(){super({clockSource:"offline",context:Na(arguments[0])?arguments[0]:sA(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:Na(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=Na(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return he(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(s=>setTimeout(s,1)))}})}render(t=!0){return he(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new ne(e)})}close(){return Promise.resolve()}}const vm=new fA;let Mr=vm;function me(){return Mr===vm&&rA&&Ja(new ho),Mr}function Ja(i){mr(i)?Mr=new ho(i):Na(i)?Mr=new uo(i):Mr=i}function xm(){return Mr.resume()}if(Ni&&!Ni.TONE_SILENCE_LOGGING){const t=` * Tone.js v${Uh} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function Lr(i){return Math.pow(10,i/20)}function Qo(i){return 20*(Math.log(i)/Math.LN10)}function Or(i){return Math.pow(2,i/12)}let nl=440;function pA(){return nl}function mA(i){nl=i}function es(i){return Math.round(Sm(i))}function Sm(i){return 69+12*Math.log2(i/nl)}function cu(i){return nl*Math.pow(2,(i-69)/12)}class lu extends Vi{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),s=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*s:this._beatsToUnits(4/n)*s},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let s=0;return t&&t!=="0"&&(s+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(s+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(s+=this._beatsToUnits(parseFloat(n)/4)),s},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof lu&&this.fromType(this._val),_n(this._val))return this._noArg();if(Vn(this._val)&&_n(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(Oi(this._val)){let t=0;for(const e in this._val)if(qt(this._val[e])){const n=this._val[e],s=new this.constructor(this.context,e).valueOf()*n;t+=s}return t}if(qt(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return Vn(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class An extends lu{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new An(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),s=this.valueOf(),o=Math.round(s/n)*n-s;return s+o*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const a=Math.pow(2,r);e.push(a+"n."),e.push(a+"n"),e.push(a+"t")}e.push("0");let n=e[0],s=new An(this.context,e[0]).toSeconds();return e.forEach(r=>{const a=new An(this.context,r).toSeconds();Math.abs(a-t)<Math.abs(s-t)&&(n=r,s=a)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let s=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=s.toString();return r.length>3&&(s=parseFloat(parseFloat(r).toFixed(3))),[n,e,s].join(":")}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.round(e*this._getPPQ())}toSeconds(){return this.valueOf()}toMidi(){return es(this.toFrequency())}_now(){return this.context.now()}}function gA(i,t){return new An(me(),i,t)}class ln extends An{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return pA()}static set A4(t){mA(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:ln.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,method(t,e){const s=_A[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?s:ln.mtof(s)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let s=1;return t&&t!=="0"&&(s*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(s*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(s*=this._beatsToUnits(parseFloat(n)/4)),s}}})}transpose(t){return new ln(this.context,this.valueOf()*Or(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return es(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/ln.A4);let n=Math.round(12*e)+57;const s=Math.floor(n/12);return s<0&&(n+=-12*s),yA[n%12]+s.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return cu(t)}static ftom(t){return es(t)}}const _A={cbb:-2,cb:-1,c:0,"c#":1,cx:2,dbb:0,db:1,d:2,"d#":3,dx:4,ebb:2,eb:3,e:4,"e#":5,ex:6,fbb:3,fb:4,f:5,"f#":6,fx:7,gbb:5,gb:6,g:7,"g#":8,gx:9,abb:7,ab:8,a:9,"a#":10,ax:11,bbb:9,bb:10,b:11,"b#":12,bx:13},yA=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function yh(i,t){return new ln(me(),i,t)}class Le extends An{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}function vA(i,t){return new Le(me(),i,t)}class We extends Vi{constructor(){super();const t=L(We.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:me()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return new An(this.context,t).toSeconds()}toFrequency(t){return new ln(this.context,t).toFrequency()}toTicks(t){return new Le(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{_n(t[n])&&delete e[n]}),e}get(){const t=hA(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];qt(n)&&qt(n.value)&&qt(n.setValueAtTime)?t[e]=n.value:n instanceof We?t[e]=n._getPartialProperties(t[e]):Ye(n)||In(n)||Vn(n)||ru(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&qt(this[e])&&(this[e]&&qt(this[e].value)&&qt(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof We?this[e].set(t[e]):this[e]=t[e])}),this}}class fo extends ei{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return je(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){const n=this._search(e);for(let s=n;s>=0;s--){const r=this._timeline[s];if(r.state===t)return r}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let s=n;s<this._timeline.length;s++){const r=this._timeline[s];if(r.state===t)return r}}}class Bt extends We{constructor(){super(L(Bt.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=L(Bt.getDefaults(),arguments,["param","units","convert"]);for(Ct(qt(t.param)&&(Fs(t.param)||t.param instanceof Bt),"param must be an AudioParam");!Fs(t.param);)t.param=t.param._param;this._swappable=qt(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new ei(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,qt(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(We.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return qt(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return qt(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return qt(this.maxValue)&&qt(this.minValue)&&je(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?Lr(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?Qo(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),s=this._fromType(t);return Ct(isFinite(s)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(s),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:s}),this._param.setValueAtTime(s,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),s=this._events.get(e);let r=this._initialValue;if(s===null)r=this._initialValue;else if(s.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const a=this._events.getBefore(s.time);let o;a===null?o=this._initialValue:o=a.value,s.type==="setTargetAtTime"&&(r=this._exponentialApproach(s.time,o,s.value,s.constant,e))}else if(n===null)r=s.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let a=s.value;if(s.type==="setTargetAtTime"){const o=this._events.getBefore(s.time);o===null?a=this._initialValue:a=o.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(s.time,a,n.time,n.value,e):r=this._exponentialInterpolate(s.time,a,n.time,n.value,e)}else r=s.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),s=this.toSeconds(e);return Ct(isFinite(n)&&isFinite(s),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:s,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,s),this._param.linearRampToValueAtTime(n,s),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=Xn(n,0)?this._minOutput:n,this._assertRange(n);const s=this.toSeconds(e);return Ct(isFinite(n)&&isFinite(s),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:s,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,s),this._param.exponentialRampToValueAtTime(n,s),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const s=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,s),this.cancelAndHoldAtTime(e+n*.9),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const s=this._fromType(t);Ct(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(s),Ct(isFinite(s)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:s}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(s,r,n),this}setValueCurveAtTime(t,e,n,s=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*s;this.setValueAtTime(this._toType(r),e);const a=n/(t.length-1);for(let o=1;o<t.length;o++){const c=this._fromType(t[o])*s;this.linearRampToValueAtTime(this._toType(c),e+o*a)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return Ct(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));Ct(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const s=this._events.get(e),r=this._events.getAfter(e);return s&&Xn(s.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const s=this._events.getAfter(n.time),r=s?s.time:e+2,a=(r-e)/10;for(let o=e;o<r;o+=a)t.linearRampToValueAtTime(this.getValueAtTime(o),o)}return this._events.forEachAfter(this.context.currentTime,s=>{s.type==="cancelScheduledValues"?t.cancelScheduledValues(s.time):s.type==="setTargetAtTime"?t.setTargetAtTime(s.value,s.time,s.constant):t[s.type](s.value,s.time)}),this}setParam(t){Ct(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,s,r){return n+(e-n)*Math.exp(-(r-t)/s)}_linearInterpolate(t,e,n,s,r){return e+(s-e)*((r-t)/(n-t))}_exponentialInterpolate(t,e,n,s,r){return e*Math.pow(s/e,(r-t)/(n-t))}}class rt extends We{constructor(){super(...arguments),this.name="ToneAudioNode",this._internalChannels=[]}get numberOfInputs(){return qt(this.input)?Fs(this.input)||this.input instanceof Bt?1:this.input.numberOfInputs:0}get numberOfOutputs(){return qt(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return qt(t)&&(t instanceof rt||as(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(n=>{n.channelCount=t.channelCount,n.channelCountMode=t.channelCountMode,n.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();Ct(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return xn(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return $o("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return hu(this,t,e,n),this}chain(...t){return Rn(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),qt(this.input)&&(this.input instanceof rt?this.input.dispose():as(this.input)&&this.input.disconnect()),qt(this.output)&&(this.output instanceof rt?this.output.dispose():as(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Rn(...i){const t=i.shift();i.reduce((e,n)=>(e instanceof rt?e.connect(n):as(e)&&xn(e,n),n),t)}function xn(i,t,e=0,n=0){for(Ct(qt(i),"Cannot connect from undefined node"),Ct(qt(t),"Cannot connect to undefined node"),(t instanceof rt||as(t))&&Ct(t.numberOfInputs>0,"Cannot connect to node with no inputs"),Ct(i.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof rt||t instanceof Bt;)qt(t.input)&&(t=t.input);for(;i instanceof rt;)qt(i.output)&&(i=i.output);Fs(t)?i.connect(t,e):i.connect(t,e,n)}function hu(i,t,e=0,n=0){if(qt(t))for(;t instanceof rt;)t=t.input;for(;!as(i);)qt(i.output)&&(i=i.output);Fs(t)?i.disconnect(t,e):as(t)?i.disconnect(t,e,n):i.disconnect()}class Tt extends rt{constructor(){super(L(Tt.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=L(Tt.getDefaults(),arguments,["gain","units"]);this.gain=new Bt({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Pt(this,"gain")}static getDefaults(){return Object.assign(rt.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class Nr extends rt{constructor(t){super(t),this.onended=ee,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new Tt({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(rt.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:ee})}_startGain(t,e=1){Ct(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){Ct(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.context.currentTime),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==ee&&(this.onended(this),this.onended=ee,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),Ct(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.disconnect(),this}}class Fo extends Nr{constructor(){super(L(Fo.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=L(Fo.getDefaults(),arguments,["offset"]);xn(this._source,this._gainNode),this.offset=new Bt({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(Nr.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class Nt extends rt{constructor(){super(L(Nt.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=L(Nt.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new Fo({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(rt.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return Jo(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,s){return this._param.setValueCurveAtTime(t,e,n,s),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function Jo(i,t,e,n){(t instanceof Bt||Fs(t)||t instanceof Nt&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof Nt&&(t.overridden=!0)),xn(i,t,e,n)}class tc extends Bt{constructor(){super(L(tc.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new ei(1/0),this._multiplier=1;const t=L(tc.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Bt.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const s=this._fromType(t),r=this._events.get(e),a=Math.round(Math.max(1/n,1));for(let o=0;o<=a;o++){const c=n*o+e,l=this._exponentialApproach(r.time,r.value,s,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const s=this._events.get(n),r=this._events.previousEvent(s),a=this._getTicksUntilEvent(r,n);return s.ticks=Math.max(a,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),s=this._events.get(e),r=Math.round(Math.max((e-s.time)*10,1)),a=(e-s.time)/r;for(let o=0;o<=r;o++){const c=a*o+s.time,l=this._exponentialInterpolate(s.time,s.value,e,n,c);this.linearRampToValueAtTime(this._toType(l),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(_n(t.ticks)){const a=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(a,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let s=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(s=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+s)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(e);return this.getTimeOfTick(s+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const s=this._fromType(this.getValueAtTime(e.time)),a=(this._fromType(this.getValueAtTime(n.time))-s)/(n.time-e.time),o=Math.sqrt(Math.pow(s,2)-2*a*(e.ticks-t)),c=(-s+o)/a,l=(-s-o)/a;return(c>0?c:l)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),s=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+s)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class ec extends Nt{constructor(){super(L(ec.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=L(ec.getDefaults(),arguments,["value"]);this.input=this._param=new tc({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(Nt.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class nc extends We{constructor(){super(L(nc.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new fo,this._tickOffset=new ei;const t=L(nc.getDefaults(),arguments,["frequency"]);this.frequency=new ec({context:this.context,units:t.units,value:t.frequency}),Pt(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},We.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),qt(e)&&this.setTicksAtTime(e,n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&this._state.setStateAtTime("paused",e),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),s={state:"paused",time:e};this._state.add(s);let r=n,a=0;return this._state.forEachBetween(n.time,e+this.sampleTime,o=>{let c=r.time;const l=this._tickOffset.get(o.time);l&&l.time>=r.time&&(a=l.ticks,c=l.time),r.state==="started"&&o.state!=="started"&&(a+=this.frequency.getTicksAtTime(o.time)-this.frequency.getTicksAtTime(c)),r=o}),this._state.remove(s),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);let s=e,r=0;return this._state.forEachBetween(e.time,t+this.sampleTime,a=>{let o=s.time;const c=this._tickOffset.get(a.time);c&&c.time>=s.time&&(r=c.seconds,o=c.time),s.state==="started"&&a.state!=="started"&&(r+=a.time-o),s=a}),this._state.remove(n),r}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),s=this._state.get(e),r=Math.max(n.time,s.time),a=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(a)}forEachTickBetween(t,e,n){let s=this._state.get(t);this._state.forEachBetween(t,e,a=>{s&&s.state==="started"&&a.state!=="started"&&this.forEachTickBetween(Math.max(s.time,t),a.time-this.sampleTime,n),s=a});let r=null;if(s&&s.state==="started"){const a=Math.max(s.time,t),o=this.frequency.getTicksAtTime(a),c=this.frequency.getTicksAtTime(s.time),l=o-c;let h=Math.ceil(l)-l;h=Xn(h,1)?0:h;let u=this.frequency.getTimeOfTick(o+h);for(;u<e;){try{n(u,Math.round(this.getTicksAtTime(u)))}catch(f){r=f;break}u+=this.frequency.getDurationOfTicks(1,u)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this.frequency.dispose(),this}}class ks extends We{constructor(){super(L(ks.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=ee,this._lastUpdate=0,this._state=new fo("stopped"),this._boundLoop=this._loop.bind(this);const t=L(ks.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new nc({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Pt(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(We.getDefaults(),{callback:ee,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){iu(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),s=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(s+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const s=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,s);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(t,e,(n,s)=>{this.callback(n,s)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}lo.mixin(ks);class yn extends rt{constructor(){super(L(yn.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=L(yn.getDefaults(),arguments,["delayTime","maxDelay"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new Bt({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Pt(this,"delayTime")}static getDefaults(){return Object.assign(rt.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}function xA(i,t,e=2,n=me().sampleRate){return he(this,void 0,void 0,function*(){const s=me(),r=new uo(e,t,n);Ja(r),yield i(r);const a=r.render();Ja(s);const o=yield a;return new ne(o)})}class po extends Vi{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=L(po.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:ee,onload:ee,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return Ct(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=ee,s=ee){return Vn(e)?this._buffers.set(t.toString(),new ne(this.baseUrl+e,n,s)):this._buffers.set(t.toString(),new ne(e,n,s)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class Fr extends ln{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return es(super._frequencyToUnits(t))}_ticksToUnits(t){return es(super._ticksToUnits(t))}_beatsToUnits(t){return es(super._beatsToUnits(t))}_secondsToUnits(t){return es(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return cu(this.toMidi())}transpose(t){return new Fr(this.context,this.toMidi()+t)}}function SA(i,t){return new Fr(me(),i,t)}class le extends Le{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}function bA(i,t){return new le(me(),i,t)}let MA=class extends We{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new ei,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}};tl(i=>{i.draw=new MA({context:i})});el(i=>{i.draw.dispose()});class bm extends Vi{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){Ct(qt(t.time),"Events must have a time property"),Ct(qt(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new wA(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let n,s=null;if(e>0)if(t.left.right===null)n=t.left,n.right=t.right,s=n;else{for(n=t.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,s=n.parent,n.left=t.left,n.right=t.right)}else if(t.right.left===null)n=t.right,n.left=t.left,s=n;else{for(n=t.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,s=n.parent,n.left=t.left,n.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=n:t.parent.right=n:this._setRoot(n),s&&this._rebalance(s)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),s=t.right;s&&(t.right=s.left,s.left=t),e!==null?n?e.left=s:e.right=s:this._setRoot(s)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),s=t.left;s&&(t.left=s.right,s.right=t),e!==null?n?e.left=s:e.right=s:this._setRoot(s)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let s=1;s<e.length;s++)e[s].low>n.low&&(n=e[s]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(s=>{s.event&&e(s.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(s=>{s.event&&e(s.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class wA{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}const TA=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));class hi extends rt{constructor(){super(L(hi.getDefaults(),arguments,["volume"])),this.name="Volume";const t=L(hi.getDefaults(),arguments,["volume"]);this.input=this.output=new Tt({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Pt(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(rt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}let EA=class vh extends rt{constructor(){super(L(vh.getDefaults(),arguments)),this.name="Destination",this.input=new hi({context:this.context}),this.output=new Tt({context:this.context}),this.volume=this.input.volume;const t=L(vh.getDefaults(),arguments);Rn(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(rt.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),Rn(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}};tl(i=>{i.destination=new EA({context:i})});el(i=>{i.destination.dispose()});class AA extends Vi{constructor(t){super(),this.name="TimelineValue",this._timeline=new ei({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class hs{constructor(t,e){this.id=hs._eventId++;const n=Object.assign(hs.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=n.time}static getDefaults(){return{callback:ee,once:!1,time:0}}invoke(t){this.callback&&(this.callback(t),this._once&&this.transport.clear(this.id))}dispose(){return this.callback=void 0,this}}hs._eventId=0;class uu extends hs{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(uu.getDefaults(),e);this.duration=new le(t.context,n.duration).valueOf(),this._interval=new le(t.context,n.interval).valueOf(),this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},hs.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvents(t){const e=this.transport.getTicksAtTime(t);e>=this.time&&e>=this._nextTick&&this._nextTick+this._interval<this.time+this.duration&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new le(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.time;const e=this.transport.getTicksAtTime(t);e>this.time&&(this._nextTick=this.time+Math.ceil((e-this.time)/this._interval)*this._interval),this._currentId=this.transport.scheduleOnce(this.invoke.bind(this),new le(this.context,this._nextTick).toSeconds()),this._nextTick+=this._interval,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new le(this.context,this._nextTick).toSeconds())}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this}}let Mm=class xh extends We{constructor(){super(L(xh.getDefaults(),arguments)),this.name="Transport",this._loop=new AA(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new ei,this._repeatedEvents=new bm,this._syncedSignals=[],this._swingAmount=0;const t=L(xh.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new ks({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Pt(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(We.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const n=e%(this._swingTicks*2)/(this._swingTicks*2),s=Math.sin(n*Math.PI)*this._swingAmount;t+=new le(this.context,this._swingTicks*2/3).toSeconds()*s}this._timeline.forEachAtTime(e,n=>n.invoke(t))}schedule(t,e){const n=new hs(this,{callback:t,time:new Le(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,s=1/0){const r=new uu(this,{callback:t,duration:new An(this.context,s).toTicks(),interval:new An(this.context,e).toTicks(),time:new Le(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new hs(this,{callback:t,once:!0,time:new Le(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new le(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){let n;return qt(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Ye(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new An(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new An(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new le(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new le(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),s=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e),r=e+s;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return Math.round(this._clock.getTicksAtTime(t))}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=this.getTicksAtTime(e),s=t-n%t;return this._clock.nextTickTime(s,e)}}syncSignal(t,e){if(!e){const s=this.now();if(t.getValueAtTime(s)!==0){const a=1/(60/this.bpm.getValueAtTime(s)/this.PPQ);e=t.getValueAtTime(s)/a}else e=0}const n=new Tt(e);return this.bpm.connect(n),n.connect(t._param),this._syncedSignals.push({initial:t.value,ratio:n,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Zo(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}};lo.mixin(Mm);tl(i=>{i.transport=new Mm({context:i})});el(i=>{i.transport.dispose()});class Ce extends rt{constructor(t){super(t),this.input=void 0,this._state=new fo("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=ee,this._syncedStop=ee,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new hi({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Pt(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(rt.getDefaults(),{mute:!1,onstop:ee,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let s=_n(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(s=this._clampToCurrentTime(s),!this._synced&&this._state.getValueAtTime(s)==="started")Ct(Qa(s,this._state.get(s).time),"Start time must be strictly greater than previous start time"),this._state.cancel(s),this._state.setStateAtTime("started",s),this.log("restart",s),this.restart(s,e,n);else if(this.log("start",s),this._state.setStateAtTime("started",s),this._synced){const r=this._state.get(s);r&&(r.offset=this.toSeconds(Un(e,0)),r.duration=n?this.toSeconds(n):void 0);const a=this.context.transport.schedule(o=>{this._start(o,e,n)},s);this._scheduled.push(a),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>s&&this._syncedStart(this.now(),this.context.transport.seconds)}else iu(this.context),this._start(s,e,n);return this}stop(t){let e=_n(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||qt(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(e>0){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const s=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-s),this._start(t,this.toSeconds(n.offset)+s,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=ee,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class ki extends Nr{constructor(){super(L(ki.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=L(ki.getDefaults(),arguments,["url","onload"]);xn(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new Bt({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new ne(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(Nr.getDefaults(),{url:new ne,loop:!1,loopEnd:0,loopStart:0,onload:ee,onerror:ee,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,s=1){Ct(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,s),this.loop?e=Un(e,this.loopStart):e=Un(e,0);let a=Math.max(this.toSeconds(e),0);if(this.loop){const o=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),l=o-c;_h(a,o)&&(a=(a-c)%l+c),Xn(a,this.buffer.duration)&&(a=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,mm(a,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,a)),qt(n)){let o=this.toSeconds(n);o=Math.max(o,0),this.stop(r+o)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class Ui extends Ce{constructor(){super(L(Ui.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=L(Ui.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Ce.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(Ct(t in vf,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=vf[this._type];this._source=new ki({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const dr=44100*5,ql=2,Ti={brown:null,pink:null,white:null},vf={get brown(){if(!Ti.brown){const i=[];for(let t=0;t<ql;t++){const e=new Float32Array(dr);i[t]=e;let n=0;for(let s=0;s<dr;s++){const r=Math.random()*2-1;e[s]=(n+.02*r)/1.02,n=e[s],e[s]*=3.5}}Ti.brown=new ne().fromArray(i)}return Ti.brown},get pink(){if(!Ti.pink){const i=[];for(let t=0;t<ql;t++){const e=new Float32Array(dr);i[t]=e;let n,s,r,a,o,c,l;n=s=r=a=o=c=l=0;for(let h=0;h<dr;h++){const u=Math.random()*2-1;n=.99886*n+u*.0555179,s=.99332*s+u*.0750759,r=.969*r+u*.153852,a=.8665*a+u*.3104856,o=.55*o+u*.5329522,c=-.7616*c-u*.016898,e[h]=n+s+r+a+o+c+l+u*.5362,e[h]*=.11,l=u*.115926}}Ti.pink=new ne().fromArray(i)}return Ti.pink},get white(){if(!Ti.white){const i=[];for(let t=0;t<ql;t++){const e=new Float32Array(dr);i[t]=e;for(let n=0;n<dr;n++)e[n]=Math.random()*2-1}Ti.white=new ne().fromArray(i)}return Ti.white}};class xr extends rt{constructor(){super(L(xr.getDefaults(),arguments,["volume"])),this.name="UserMedia";const t=L(xr.getDefaults(),arguments,["volume"]);this._volume=this.output=new hi({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Pt(this,"volume"),this.mute=t.mute}static getDefaults(){return Object.assign(rt.getDefaults(),{mute:!1,volume:0})}open(t){return he(this,void 0,void 0,function*(){Ct(xr.supported,"UserMedia is not supported"),this.state==="started"&&this.close();const e=yield xr.enumerateDevices();In(t)?this._device=e[t]:(this._device=e.find(r=>r.label===t||r.deviceId===t),!this._device&&e.length>0&&(this._device=e[0]),Ct(qt(this._device),`No matching device ${t}`));const n={audio:{echoCancellation:!1,sampleRate:this.context.sampleRate,noiseSuppression:!1,mozNoiseSuppression:!1}};this._device&&(n.audio.deviceId=this._device.deviceId);const s=yield navigator.mediaDevices.getUserMedia(n);if(!this._stream){this._stream=s;const r=this.context.createMediaStreamSource(s);xn(r,this.output),this._mediaStream=r}return this})}close(){return this._stream&&this._mediaStream&&(this._stream.getAudioTracks().forEach(t=>{t.stop()}),this._stream=void 0,this._mediaStream.disconnect(),this._mediaStream=void 0),this._device=void 0,this}static enumerateDevices(){return he(this,void 0,void 0,function*(){return(yield navigator.mediaDevices.enumerateDevices()).filter(e=>e.kind==="audioinput")})}get state(){return this._stream&&this._stream.active?"started":"stopped"}get deviceId(){if(this._device)return this._device.deviceId}get groupId(){if(this._device)return this._device.groupId}get label(){if(this._device)return this._device.label}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this.close(),this._volume.dispose(),this.volume.dispose(),this}static get supported(){return qt(navigator.mediaDevices)&&qt(navigator.mediaDevices.getUserMedia)}}function qs(i,t){return he(this,void 0,void 0,function*(){const e=t/i.context.sampleRate,n=new uo(1,e,i.context.sampleRate);return new i.constructor(Object.assign(i.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class kr extends Nr{constructor(){super(L(kr.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=L(kr.getDefaults(),arguments,["frequency","type"]);xn(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new Bt({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new Bt({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Pt(this,["frequency","detune"])}static getDefaults(){return Object.assign(Nr.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class pe extends Ce{constructor(){super(L(pe.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=L(pe.getDefaults(),arguments,["frequency","type"]);this.frequency=new Nt({context:this.context,units:"frequency",value:t.frequency}),Pt(this,"frequency"),this.detune=new Nt({context:this.context,units:"cents",value:t.detune}),Pt(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(Ce.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new kr({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return pe._periodicWaveCache.find(e=>e.phase===this._phase&&lA(e.partials,this._partials));{const t=pe._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if(qt(n)){const{partials:s,wave:r}=n;this._wave=r,this._partials=s,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[s,r]=this._getRealImaginary(t,this._phase),a=this.context.createPeriodicWave(s,r);this._wave=a,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),pe._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:s,type:this._type,wave:this._wave}),pe._periodicWaveCache.length>100&&pe._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){je(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const s=new Float32Array(t);this._partials.forEach((r,a)=>s[a]=r),this._partials=Array.from(s),this.type=this._type}}_getRealImaginary(t,e){let s=2048;const r=new Float32Array(s),a=new Float32Array(s);let o=1;if(t==="custom"){if(o=this._partials.length+1,this._partialCount=this._partials.length,s=o,this._partials.length===0)return[r,a]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(o=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],o=Math.max(o,2),s=o):this._partialCount=0,this._partials=[]}for(let c=1;c<s;++c){const l=2/(c*Math.PI);let h;switch(t){case"sine":h=c<=o?1:0,this._partials[c-1]=h;break;case"square":h=c&1?2*l:0,this._partials[c-1]=h;break;case"sawtooth":h=l*(c&1?1:-1),this._partials[c-1]=h;break;case"triangle":c&1?h=2*(l*l)*(c-1>>1&1?-1:1):h=0,this._partials[c-1]=h;break;case"custom":h=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}h!==0?(r[c]=-h*Math.sin(e*c),a[c]=h*Math.cos(e*c)):(r[c]=0,a[c]=0)}return[r,a]}_inverseFFT(t,e,n){let s=0;const r=t.length;for(let a=0;a<r;a++)s+=t[a]*Math.cos(a*n)+e[a]*Math.sin(a*n);return s}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const s=Math.PI*2,r=32;for(let a=0;a<r;a++)n=Math.max(this._inverseFFT(t,e,a/r*s),n);return gm(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}pe._periodicWaveCache=[];class Dn extends rt{constructor(){super(Object.assign(L(Dn.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return Jo(this,t,e,n),this}}class zn extends Dn{constructor(){super(Object.assign(L(zn.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=L(zn.getDefaults(),arguments,["mapping","length"]);Ye(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):fm(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(Nt.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let s=0,r=e;s<r;s++){const a=s/(r-1)*2-1;n[s]=t(a,s)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(n=>n.includes(t));Ct(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class il extends Dn{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new zn({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ge extends Nt{constructor(){super(Object.assign(L(ge.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=L(ge.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new Tt({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Nt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class Ur extends Ce{constructor(){super(L(Ur.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new il({context:this.context}),this._modulationNode=new Tt({context:this.context});const t=L(Ur.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new pe({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new pe({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ge({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Pt(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(pe.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class Us extends Ce{constructor(){super(L(Us.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new Tt({context:this.context,gain:0});const t=L(Us.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new pe({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new Nt({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new pe({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ge({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new ge({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Pt(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(pe.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Bs extends Ce{constructor(){super(L(Bs.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new Tt({context:this.context,gain:0}),this._thresh=new zn({context:this.context,mapping:e=>e<=0?-1:1});const t=L(Bs.getDefaults(),arguments,["frequency","width"]);this.width=new Nt({context:this.context,units:"audioRange",value:t.width}),this._triangle=new pe({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Pt(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(Ce.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class Br extends Ce{constructor(){super(L(Br.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=L(Br.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new Nt({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Nt({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Pt(this,["frequency","detune"])}static getDefaults(){return Object.assign(pe.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((s,r)=>s.detune.value=e+n*r)}}get count(){return this._oscillators.length}set count(t){if(je(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new pe({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):ee});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class Vr extends Ce{constructor(){super(L(Vr.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new ge({context:this.context,value:2});const t=L(Vr.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new Bs({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new pe({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Pt(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(Ce.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const xf={am:Ur,fat:Br,fm:Us,oscillator:pe,pulse:Bs,pwm:Vr};class ui extends Ce{constructor(){super(L(ui.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=L(ui.getDefaults(),arguments,["frequency","type"]);this.frequency=new Nt({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Nt({context:this.context,units:"cents",value:t.detune}),Pt(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(pe.getDefaults(),Us.getDefaults(),Ur.getDefaults(),Br.getDefaults(),Bs.getDefaults(),Vr.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=xf[t],n=this.now();if(this._oscillator){const s=this._oscillator;s.stop(n),this.context.setTimeout(()=>s.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof xf[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&In(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&In(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Vn(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return he(this,void 0,void 0,function*(){return qs(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class js extends Nt{constructor(){super(Object.assign(L(js.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new Tt({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,Rn(this._constantSource,this._sum)}static getDefaults(){return Object.assign(Nt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class di extends Dn{constructor(){super(Object.assign(L(di.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=L(di.getDefaults(),arguments,["min","max"]);this._mult=this.input=new ge({context:this.context,value:t.max-t.min}),this._add=this.output=new js({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Dn.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class sl extends Dn{constructor(){super(Object.assign(L(sl.getDefaults(),arguments))),this.name="Zero",this._gain=new Tt({context:this.context}),this.output=this._gain,this.input=void 0,xn(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),hu(this.context.getConstant(0),this._gain),this}}class en extends rt{constructor(){super(L(en.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=Bt.prototype._fromType,this._toType=Bt.prototype._toType,this._is=Bt.prototype._is,this._clampValue=Bt.prototype._clampValue;const t=L(en.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new pe(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new Tt({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new Nt({context:this.context,units:"audioRange",value:0}),this._zeros=new sl({context:this.context}),this._a2g=new il({context:this.context}),this._scaler=this.output=new di({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Pt(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(pe.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,n=this.max;this._units=t,this.min=e,this.max=n}get state(){return this._oscillator.state}connect(t,e,n){return(t instanceof Bt||t instanceof Nt)&&(this.convert=t.convert,this.units=t.units),Jo(this,t,e,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function wm(i,t=1/0){const e=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){je(r,i,t),e.set(this,r)}})}}function zi(i,t=1/0){const e=new WeakMap;return function(n,s){Reflect.defineProperty(n,s,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){je(this.toSeconds(r),i,t),e.set(this,r)}})}}class Vs extends Ce{constructor(){super(L(Vs.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=L(Vs.getDefaults(),arguments,["url","onload"]);this._buffer=new ne({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Ce.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:ee,onerror:ee,playbackRate:1,reverse:!1})}load(t){return he(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=ee){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){this._loop?e=Un(e,this._loopStart):e=Un(e,0);const s=this.toSeconds(e),r=n;n=Un(n,Math.max(this._buffer.duration-s,0));let a=this.toSeconds(n);a=a/this._playbackRate,t=this.toSeconds(t);const o=new ki({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+a),this._state.setStateAtTime("stopped",t+a,{implicitEnd:!0})),this._activeSources.add(o),this._loop&&_n(r)?o.start(t,s):o.start(t,s,a-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){this._stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const s=this.toSeconds(t);this._stop(n),this._start(n,s)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&je(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&je(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(s=>s.cancelStop())),this._activeSources.forEach(s=>{s.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}ti([zi(0)],Vs.prototype,"fadeIn",void 0);ti([zi(0)],Vs.prototype,"fadeOut",void 0);class ic extends rt{constructor(){super(L(ic.getDefaults(),arguments,["urls","onload"],"urls")),this.name="Players",this.input=void 0,this._players=new Map;const t=L(ic.getDefaults(),arguments,["urls","onload"],"urls");this._volume=this.output=new hi({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Pt(this,"volume"),this._buffers=new po({urls:t.urls,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.mute=t.mute,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(Ce.getDefaults(),{baseUrl:"",fadeIn:0,fadeOut:0,mute:!1,onload:ee,onerror:ee,urls:{},volume:0})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._players.forEach(e=>{e.fadeIn=t})}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._players.forEach(e=>{e.fadeOut=t})}get state(){return Array.from(this._players).some(([e,n])=>n.state==="started")?"started":"stopped"}has(t){return this._buffers.has(t)}player(t){if(Ct(this.has(t),`No Player with the name ${t} exists on this object`),!this._players.has(t)){const e=new Vs({context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,url:this._buffers.get(t)}).connect(this.output);this._players.set(t,e)}return this._players.get(t)}get loaded(){return this._buffers.loaded}add(t,e,n){return Ct(!this._buffers.has(t),"A buffer with that name already exists on this object"),this._buffers.add(t,e,n),this}stopAll(t){return this._players.forEach(e=>e.stop(t)),this}dispose(){return super.dispose(),this._volume.dispose(),this.volume.dispose(),this._players.forEach(t=>t.dispose()),this._buffers.dispose(),this}}class sc extends Ce{constructor(){super(L(sc.getDefaults(),arguments,["url","onload"])),this.name="GrainPlayer",this._loopStart=0,this._loopEnd=0,this._activeSources=[];const t=L(sc.getDefaults(),arguments,["url","onload"]);this.buffer=new ne({onload:t.onload,onerror:t.onerror,reverse:t.reverse,url:t.url}),this._clock=new ks({context:this.context,callback:this._tick.bind(this),frequency:1/t.grainSize}),this._playbackRate=t.playbackRate,this._grainSize=t.grainSize,this._overlap=t.overlap,this.detune=t.detune,this.overlap=t.overlap,this.loop=t.loop,this.playbackRate=t.playbackRate,this.grainSize=t.grainSize,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.reverse=t.reverse,this._clock.on("stop",this._onstop.bind(this))}static getDefaults(){return Object.assign(Ce.getDefaults(),{onload:ee,onerror:ee,overlap:.1,grainSize:.2,playbackRate:1,detune:0,loop:!1,loopStart:0,loopEnd:0,reverse:!1})}_start(t,e,n){e=Un(e,0),e=this.toSeconds(e),t=this.toSeconds(t);const s=1/this._clock.frequency.getValueAtTime(t);this._clock.start(t,e/s),n&&this.stop(t+this.toSeconds(n))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){this._stop(t),this._start(t,e,n)}_stop(t){this._clock.stop(t)}_onstop(t){this._activeSources.forEach(e=>{e.fadeOut=0,e.stop(t)}),this.onstop(this)}_tick(t){const e=this._clock.getTicksAtTime(t),n=e*this._grainSize;if(this.log("offset",n),!this.loop&&n>this.buffer.duration){this.stop(t);return}const s=n<this._overlap?0:this._overlap,r=new ki({context:this.context,url:this.buffer,fadeIn:s,fadeOut:this._overlap,loop:this.loop,loopStart:this._loopStart,loopEnd:this._loopEnd,playbackRate:Or(this.detune/100)}).connect(this.output);r.start(t,this._grainSize*e),r.stop(t+this._grainSize/this.playbackRate),this._activeSources.push(r),r.onended=()=>{const a=this._activeSources.indexOf(r);a!==-1&&this._activeSources.splice(a,1)}}get playbackRate(){return this._playbackRate}set playbackRate(t){je(t,.001),this._playbackRate=t,this.grainSize=this._grainSize}get loopStart(){return this._loopStart}set loopStart(t){this.buffer.loaded&&je(this.toSeconds(t),0,this.buffer.duration),this._loopStart=this.toSeconds(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this.buffer.loaded&&je(this.toSeconds(t),0,this.buffer.duration),this._loopEnd=this.toSeconds(t)}get reverse(){return this.buffer.reverse}set reverse(t){this.buffer.reverse=t}get grainSize(){return this._grainSize}set grainSize(t){this._grainSize=this.toSeconds(t),this._clock.frequency.setValueAtTime(this._playbackRate/this._grainSize,this.now())}get overlap(){return this._overlap}set overlap(t){const e=this.toSeconds(t);je(e,0),this._overlap=e}get loaded(){return this.buffer.loaded}dispose(){return super.dispose(),this.buffer.dispose(),this._clock.dispose(),this._activeSources.forEach(t=>t.dispose()),this}}class Tm extends Dn{constructor(){super(...arguments),this.name="Abs",this._abs=new zn({context:this.context,mapping:t=>Math.abs(t)<.001?0:Math.abs(t)}),this.input=this._abs,this.output=this._abs}dispose(){return super.dispose(),this._abs.dispose(),this}}class Em extends Dn{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new zn({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class du extends Dn{constructor(){super(...arguments),this.name="Negate",this._multiply=new ge({context:this.context,value:-1}),this.input=this._multiply,this.output=this._multiply}dispose(){return super.dispose(),this._multiply.dispose(),this}}class Xs extends Nt{constructor(){super(Object.assign(L(Xs.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Subtract",this._sum=new Tt({context:this.context}),this.input=this._sum,this.output=this._sum,this._neg=new du({context:this.context}),this.subtrahend=this._param,Rn(this._constantSource,this._neg,this._sum)}static getDefaults(){return Object.assign(Nt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._neg.dispose(),this._sum.dispose(),this}}class rl extends Dn{constructor(){super(Object.assign(L(rl.getDefaults(),arguments))),this.name="GreaterThanZero",this._thresh=this.output=new zn({context:this.context,length:127,mapping:t=>t<=0?0:1}),this._scale=this.input=new ge({context:this.context,value:1e4}),this._scale.connect(this._thresh)}dispose(){return super.dispose(),this._scale.dispose(),this._thresh.dispose(),this}}class ko extends Nt{constructor(){super(Object.assign(L(ko.getDefaults(),arguments,["value"]))),this.name="GreaterThan",this.override=!1;const t=L(ko.getDefaults(),arguments,["value"]);this._subtract=this.input=new Xs({context:this.context,value:t.value}),this._gtz=this.output=new rl({context:this.context}),this.comparator=this._param=this._subtract.subtrahend,Pt(this,"comparator"),this._subtract.connect(this._gtz)}static getDefaults(){return Object.assign(Nt.getDefaults(),{value:0})}dispose(){return super.dispose(),this._gtz.dispose(),this._subtract.dispose(),this.comparator.dispose(),this}}class zr extends Dn{constructor(){super(Object.assign(L(zr.getDefaults(),arguments,["value"]))),this.name="Pow";const t=L(zr.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new zn({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Dn.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Uo extends di{constructor(){super(Object.assign(L(Uo.getDefaults(),arguments,["min","max","exponent"]))),this.name="ScaleExp";const t=L(Uo.getDefaults(),arguments,["min","max","exponent"]);this.input=this._exp=new zr({context:this.context,value:t.exponent}),this._exp.connect(this._mult)}static getDefaults(){return Object.assign(di.getDefaults(),{exponent:1})}get exponent(){return this._exp.value}set exponent(t){this._exp.value=t}dispose(){return super.dispose(),this._exp.dispose(),this}}class CA extends Nt{constructor(){super(L(Nt.getDefaults(),arguments,["value","units"])),this.name="SyncedSignal",this.override=!1;const t=L(Nt.getDefaults(),arguments,["value","units"]);this._lastVal=t.value,this._synced=this.context.transport.scheduleRepeat(this._onTick.bind(this),"1i"),this._syncedCallback=this._anchorValue.bind(this),this.context.transport.on("start",this._syncedCallback),this.context.transport.on("pause",this._syncedCallback),this.context.transport.on("stop",this._syncedCallback),this._constantSource.disconnect(),this._constantSource.stop(0),this._constantSource=this.output=new Fo({context:this.context,offset:t.value,units:t.units}).start(0),this.setValueAtTime(t.value,0)}_onTick(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal!==e&&(this._lastVal=e,this._constantSource.offset.setValueAtTime(e,t))}_anchorValue(t){const e=super.getValueAtTime(this.context.transport.seconds);this._lastVal=e,this._constantSource.offset.cancelAndHoldAtTime(t),this._constantSource.offset.setValueAtTime(e,t)}getValueAtTime(t){const e=new Le(this.context,t).toSeconds();return super.getValueAtTime(e)}setValueAtTime(t,e){const n=new Le(this.context,e).toSeconds();return super.setValueAtTime(t,n),this}linearRampToValueAtTime(t,e){const n=new Le(this.context,e).toSeconds();return super.linearRampToValueAtTime(t,n),this}exponentialRampToValueAtTime(t,e){const n=new Le(this.context,e).toSeconds();return super.exponentialRampToValueAtTime(t,n),this}setTargetAtTime(t,e,n){const s=new Le(this.context,e).toSeconds();return super.setTargetAtTime(t,s,n),this}cancelScheduledValues(t){const e=new Le(this.context,t).toSeconds();return super.cancelScheduledValues(e),this}setValueCurveAtTime(t,e,n,s){const r=new Le(this.context,e).toSeconds();return n=this.toSeconds(n),super.setValueCurveAtTime(t,r,n,s),this}cancelAndHoldAtTime(t){const e=new Le(this.context,t).toSeconds();return super.cancelAndHoldAtTime(e),this}setRampPoint(t){const e=new Le(this.context,t).toSeconds();return super.setRampPoint(e),this}exponentialRampTo(t,e,n){const s=new Le(this.context,n).toSeconds();return super.exponentialRampTo(t,e,s),this}linearRampTo(t,e,n){const s=new Le(this.context,n).toSeconds();return super.linearRampTo(t,e,s),this}targetRampTo(t,e,n){const s=new Le(this.context,n).toSeconds();return super.targetRampTo(t,e,s),this}dispose(){return super.dispose(),this.context.transport.clear(this._synced),this.context.transport.off("start",this._syncedCallback),this.context.transport.off("pause",this._syncedCallback),this.context.transport.off("stop",this._syncedCallback),this._constantSource.dispose(),this}}class He extends rt{constructor(){super(L(He.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new Nt({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=L(He.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(rt.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(Vn(t))return t;{let n;for(n in Ia)if(Ia[n][e]===t)return n;return t}}_setCurve(t,e,n){if(Vn(n)&&Reflect.has(Ia,n)){const s=Ia[n];Oi(s)?t!=="_decayCurve"&&(this[t]=s[e]):this[t]=s}else if(Ye(n)&&t!=="_decayCurve")this[t]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._decayCurve}set decayCurve(t){Ct(["linear","exponential"].some(e=>e===t),`Invalid envelope curve: ${t}`),this._decayCurve=t}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let s=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),a=this.getValueAtTime(t);if(a>0){const o=1/s;s=(1-a)/o}if(s<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,s,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,s,t);else{this._sig.cancelAndHoldAtTime(t);let o=this._attackCurve;for(let c=1;c<o.length;c++)if(o[c-1]<=a&&a<=o[c]){o=this._attackCurve.slice(c),o[0]=a;break}this._sig.setValueCurveAtTime(o,t,s,e)}if(r&&this.sustain<1){const o=e*this.sustain,c=t+s;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(o,r+c):this._sig.exponentialApproachValueAtTime(o,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(Ct(Ye(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return Jo(this,t,e,n),this}asArray(t=1024){return he(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,n=new uo(1,e,this.context.sampleRate),s=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=s+this.toSeconds(this.release),a=r*.1,o=r+a,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/o,decay:e*this.toSeconds(this.decay)/o,release:e*this.toSeconds(this.release)/o,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(e*(s+a)/o,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}ti([zi(0)],He.prototype,"attack",void 0);ti([zi(0)],He.prototype,"decay",void 0);ti([wm(0,1)],He.prototype,"sustain",void 0);ti([zi(0)],He.prototype,"release",void 0);const Ia=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/127*(Math.PI/2));const s=[],r=6.4;for(t=0;t<127;t++){e=t/127;const f=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;s[t]=f/10+e*.83}s[127]=1;const a=[],o=5;for(t=0;t<128;t++)a[t]=Math.ceil(t/127*o)/o;const c=[];for(t=0;t<128;t++)e=t/127,c[t]=.5*(1-Math.cos(Math.PI*e));const l=[];for(t=0;t<128;t++){e=t/127;const f=Math.pow(e,3)*4+.2,m=Math.cos(f*Math.PI*2*e);l[t]=Math.abs(m*(1-e))}function h(f){const m=new Array(f.length);for(let g=0;g<f.length;g++)m[g]=1-f[g];return m}function u(f){return f.slice(0).reverse()}return{bounce:{In:h(l),Out:l},cosine:{In:n,Out:u(n)},exponential:"exponential",linear:"linear",ripple:{In:s,Out:h(s)},sine:{In:c,Out:h(c)},step:{In:a,Out:h(a)}}})();class Pn extends rt{constructor(){super(L(Pn.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease;const t=L(Pn.getDefaults(),arguments);this._volume=this.output=new hi({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Pt(this,"volume")}static getDefaults(){return Object.assign(rt.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...s)=>{const r=s[e],a=this.context.transport.schedule(o=>{s[e]=o,n.apply(this,s)},r);this._scheduledEvents.push(a)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n),a=this.toSeconds(e);return this.triggerAttack(t,r,s),this.triggerRelease(r+a),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Ke extends Pn{constructor(){super(L(Ke.getDefaults(),arguments));const t=L(Ke.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(Pn.getDefaults(),{detune:0,onsilence:ee,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const s=this.toSeconds(e);return this._triggerEnvelopeAttack(s,n),this.setNote(t,s),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),s=t instanceof ln?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(s,r,n)}else this.frequency.setValueAtTime(s,n);return this}}ti([zi(0)],Ke.prototype,"portamento",void 0);class mo extends He{constructor(){super(L(mo.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new Tt({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class gn extends Ke{constructor(){super(L(gn.getDefaults(),arguments)),this.name="Synth";const t=L(gn.getDefaults(),arguments);this.oscillator=new ui(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new mo(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Pt(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Ke.getDefaults(),{envelope:Object.assign(Xe(He.getDefaults(),Object.keys(rt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(Xe(ui.getDefaults(),[...Object.keys(Ce.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+s)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class Gr extends Ke{constructor(){super(L(Gr.getDefaults(),arguments)),this.name="ModulationSynth";const t=L(Gr.getDefaults(),arguments);this._carrier=new gn({context:this.context,oscillator:t.oscillator,envelope:t.envelope,onsilence:()=>this.onsilence(this),volume:-10}),this._modulator=new gn({context:this.context,oscillator:t.modulation,envelope:t.modulationEnvelope,volume:-10}),this.oscillator=this._carrier.oscillator,this.envelope=this._carrier.envelope,this.modulation=this._modulator.oscillator,this.modulationEnvelope=this._modulator.envelope,this.frequency=new Nt({context:this.context,units:"frequency"}),this.detune=new Nt({context:this.context,value:t.detune,units:"cents"}),this.harmonicity=new ge({context:this.context,value:t.harmonicity,minValue:0}),this._modulationNode=new Tt({context:this.context,gain:0}),Pt(this,["frequency","harmonicity","oscillator","envelope","modulation","modulationEnvelope","detune"])}static getDefaults(){return Object.assign(Ke.getDefaults(),{harmonicity:3,oscillator:Object.assign(Xe(ui.getDefaults(),[...Object.keys(Ce.getDefaults()),"frequency","detune"]),{type:"sine"}),envelope:Object.assign(Xe(He.getDefaults(),Object.keys(rt.getDefaults())),{attack:.01,decay:.01,sustain:1,release:.5}),modulation:Object.assign(Xe(ui.getDefaults(),[...Object.keys(Ce.getDefaults()),"frequency","detune"]),{type:"square"}),modulationEnvelope:Object.assign(Xe(He.getDefaults(),Object.keys(rt.getDefaults())),{attack:.5,decay:0,sustain:1,release:.5})})}_triggerEnvelopeAttack(t,e){this._carrier._triggerEnvelopeAttack(t,e),this._modulator._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this._carrier._triggerEnvelopeRelease(t),this._modulator._triggerEnvelopeRelease(t),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this._carrier.dispose(),this._modulator.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._modulationNode.dispose(),this}}class fu extends Gr{constructor(){super(L(fu.getDefaults(),arguments)),this.name="AMSynth",this._modulationScale=new il({context:this.context}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output)}dispose(){return super.dispose(),this._modulationScale.dispose(),this}}class Wr extends rt{constructor(){super(L(Wr.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=L(Wr.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new Bt({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new Bt({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new Bt({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new Bt({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(rt.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){Ct(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let a=0;a<t;a++){const c=Math.pow(a/t,2)*19980+20;e[a]=c}const n=new Float32Array(t),s=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,n,s),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class hn extends rt{constructor(){super(L(hn.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new Tt({context:this.context}),this.output=new Tt({context:this.context}),this._filters=[];const t=L(hn.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new Nt({context:this.context,units:"positive",value:t.Q}),this.frequency=new Nt({context:this.context,units:"frequency",value:t.frequency}),this.detune=new Nt({context:this.context,units:"cents",value:t.detune}),this.gain=new Nt({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Pt(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(rt.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){Ct(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(n=>n.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=In(t)?t:parseInt(t,10),n=[-12,-24,-48,-96];let s=n.indexOf(e);Ct(s!==-1,`rolloff can only be ${n.join(", ")}`),s+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(s);for(let r=0;r<s;r++){const a=new Wr({context:this.context});a.type=this._type,this.frequency.connect(a.frequency),this.detune.connect(a.detune),this.Q.connect(a.Q),this.gain.connect(a.gain),this._filters[r]=a}this._internalChannels=this._filters,Rn(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new Wr({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,a)=>n[a]*=r)}),e.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),Zo(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class Hr extends He{constructor(){super(L(Hr.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const t=L(Hr.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new zr({context:this.context,value:t.exponent}),this._scale=this.output=new di({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(He.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);je(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class ns extends Ke{constructor(){super(L(ns.getDefaults(),arguments)),this.name="MonoSynth";const t=L(ns.getDefaults(),arguments);this.oscillator=new ui(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new hn(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new Hr(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new mo(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),Pt(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Ke.getDefaults(),{envelope:Object.assign(Xe(He.getDefaults(),Object.keys(rt.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(Xe(hn.getDefaults(),Object.keys(rt.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(Xe(Hr.getDefaults(),Object.keys(rt.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(Xe(ui.getDefaults(),Object.keys(Ce.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),s=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+s)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class Bo extends Ke{constructor(){super(L(Bo.getDefaults(),arguments)),this.name="DuoSynth";const t=L(Bo.getDefaults(),arguments);this.voice0=new ns(Object.assign(t.voice0,{context:this.context,onsilence:()=>this.onsilence(this)})),this.voice1=new ns(Object.assign(t.voice1,{context:this.context})),this.harmonicity=new ge({context:this.context,units:"positive",value:t.harmonicity}),this._vibrato=new en({frequency:t.vibratoRate,context:this.context,min:-50,max:50}),this._vibrato.start(),this.vibratoRate=this._vibrato.frequency,this._vibratoGain=new Tt({context:this.context,units:"normalRange",gain:t.vibratoAmount}),this.vibratoAmount=this._vibratoGain.gain,this.frequency=new Nt({context:this.context,units:"frequency",value:440}),this.detune=new Nt({context:this.context,units:"cents",value:t.detune}),this.frequency.connect(this.voice0.frequency),this.frequency.chain(this.harmonicity,this.voice1.frequency),this._vibrato.connect(this._vibratoGain),this._vibratoGain.fan(this.voice0.detune,this.voice1.detune),this.detune.fan(this.voice0.detune,this.voice1.detune),this.voice0.connect(this.output),this.voice1.connect(this.output),Pt(this,["voice0","voice1","frequency","vibratoAmount","vibratoRate"])}getLevelAtTime(t){return t=this.toSeconds(t),this.voice0.envelope.getValueAtTime(t)+this.voice1.envelope.getValueAtTime(t)}static getDefaults(){return kn(Ke.getDefaults(),{vibratoAmount:.5,vibratoRate:5,harmonicity:1.5,voice0:kn(Xe(ns.getDefaults(),Object.keys(Ke.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}}),voice1:kn(Xe(ns.getDefaults(),Object.keys(Ke.getDefaults())),{filterEnvelope:{attack:.01,decay:0,sustain:1,release:.5},envelope:{attack:.01,decay:0,sustain:1,release:.5}})})}_triggerEnvelopeAttack(t,e){this.voice0._triggerEnvelopeAttack(t,e),this.voice1._triggerEnvelopeAttack(t,e)}_triggerEnvelopeRelease(t){return this.voice0._triggerEnvelopeRelease(t),this.voice1._triggerEnvelopeRelease(t),this}dispose(){return super.dispose(),this.voice0.dispose(),this.voice1.dispose(),this.frequency.dispose(),this.detune.dispose(),this._vibrato.dispose(),this.vibratoRate.dispose(),this._vibratoGain.dispose(),this.harmonicity.dispose(),this}}class rc extends Gr{constructor(){super(L(rc.getDefaults(),arguments)),this.name="FMSynth";const t=L(rc.getDefaults(),arguments);this.modulationIndex=new ge({context:this.context,value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this.detune.fan(this._carrier.detune,this._modulator.detune),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output)}static getDefaults(){return Object.assign(Gr.getDefaults(),{modulationIndex:10})}dispose(){return super.dispose(),this.modulationIndex.dispose(),this}}const Sf=[1,1.483,1.932,2.546,2.63,3.897];class oc extends Ke{constructor(){super(L(oc.getDefaults(),arguments)),this.name="MetalSynth",this._oscillators=[],this._freqMultipliers=[];const t=L(oc.getDefaults(),arguments);this.detune=new Nt({context:this.context,units:"cents",value:t.detune}),this.frequency=new Nt({context:this.context,units:"frequency"}),this._amplitude=new Tt({context:this.context,gain:0}).connect(this.output),this._highpass=new hn({Q:0,context:this.context,type:"highpass"}).connect(this._amplitude);for(let e=0;e<Sf.length;e++){const n=new Us({context:this.context,harmonicity:t.harmonicity,modulationIndex:t.modulationIndex,modulationType:"square",onstop:e===0?()=>this.onsilence(this):ee,type:"square"});n.connect(this._highpass),this._oscillators[e]=n;const s=new ge({context:this.context,value:Sf[e]});this._freqMultipliers[e]=s,this.frequency.chain(s,n.frequency),this.detune.connect(n.detune)}this._filterFreqScaler=new di({context:this.context,max:7e3,min:this.toFrequency(t.resonance)}),this.envelope=new He({attack:t.envelope.attack,attackCurve:"linear",context:this.context,decay:t.envelope.decay,release:t.envelope.release,sustain:0}),this.envelope.chain(this._filterFreqScaler,this._highpass.frequency),this.envelope.connect(this._amplitude.gain),this._octaves=t.octaves,this.octaves=t.octaves}static getDefaults(){return kn(Ke.getDefaults(),{envelope:Object.assign(Xe(He.getDefaults(),Object.keys(rt.getDefaults())),{attack:.001,decay:1.4,release:.2}),harmonicity:5.1,modulationIndex:32,octaves:1.5,resonance:4e3})}_triggerEnvelopeAttack(t,e=1){return this.envelope.triggerAttack(t,e),this._oscillators.forEach(n=>n.start(t)),this.envelope.sustain===0&&this._oscillators.forEach(n=>{n.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay))}),this}_triggerEnvelopeRelease(t){return this.envelope.triggerRelease(t),this._oscillators.forEach(e=>e.stop(t+this.toSeconds(this.envelope.release))),this}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}get modulationIndex(){return this._oscillators[0].modulationIndex.value}set modulationIndex(t){this._oscillators.forEach(e=>e.modulationIndex.value=t)}get harmonicity(){return this._oscillators[0].harmonicity.value}set harmonicity(t){this._oscillators.forEach(e=>e.harmonicity.value=t)}get resonance(){return this._filterFreqScaler.min}set resonance(t){this._filterFreqScaler.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._filterFreqScaler.max=this._filterFreqScaler.min*Math.pow(2,t)}dispose(){return super.dispose(),this._oscillators.forEach(t=>t.dispose()),this._freqMultipliers.forEach(t=>t.dispose()),this.frequency.dispose(),this.detune.dispose(),this._filterFreqScaler.dispose(),this._amplitude.dispose(),this.envelope.dispose(),this._highpass.dispose(),this}}class zs extends gn{constructor(){super(L(zs.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=L(zs.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Pt(this,["oscillator","envelope"])}static getDefaults(){return kn(Ke.getDefaults(),gn.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),s=this.toFrequency(t instanceof ln?t.toFrequency():t),r=s*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(s,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}ti([wm(0)],zs.prototype,"octaves",void 0);ti([zi(0)],zs.prototype,"pitchDecay",void 0);class ac extends Pn{constructor(){super(L(ac.getDefaults(),arguments)),this.name="NoiseSynth";const t=L(ac.getDefaults(),arguments);this.noise=new Ui(Object.assign({context:this.context},t.noise)),this.envelope=new mo(Object.assign({context:this.context},t.envelope)),this.noise.chain(this.envelope,this.output)}static getDefaults(){return Object.assign(Pn.getDefaults(),{envelope:Object.assign(Xe(He.getDefaults(),Object.keys(rt.getDefaults())),{decay:.1,sustain:0}),noise:Object.assign(Xe(Ui.getDefaults(),Object.keys(Ce.getDefaults())),{type:"white"})})}triggerAttack(t,e=1){return t=this.toSeconds(t),this.envelope.triggerAttack(t,e),this.noise.start(t),this.envelope.sustain===0&&this.noise.stop(t+this.toSeconds(this.envelope.attack)+this.toSeconds(this.envelope.decay)),this}triggerRelease(t){return t=this.toSeconds(t),this.envelope.triggerRelease(t),this.noise.stop(t+this.toSeconds(this.envelope.release)),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",0),this._syncMethod("triggerRelease",0)),this}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),t=this.toSeconds(t),this.triggerAttack(e,n),this.triggerRelease(e+t),this}dispose(){return super.dispose(),this.noise.dispose(),this.envelope.dispose(),this}}const pu=new Set;function mu(i){pu.add(i)}function Am(i,t){const e=`registerProcessor("${i}", ${t})`;pu.add(e)}function IA(){return Array.from(pu).join(`
`)}class Sh extends rt{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=ee;const e=URL.createObjectURL(new Blob([IA()],{type:"text/javascript"})),n=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(e,n).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(n,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}const RA=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;mu(RA);const DA=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;mu(DA);const PA=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;mu(PA);const Cm="feedback-comb-filter",LA=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Am(Cm,LA);class qr extends Sh{constructor(){super(L(qr.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const t=L(qr.getDefaults(),arguments,["delayTime","resonance"]);this.input=new Tt({context:this.context}),this.output=new Tt({context:this.context}),this.delayTime=new Bt({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new Bt({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),Pt(this,["resonance","delayTime"])}_audioWorkletName(){return Cm}static getDefaults(){return Object.assign(rt.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){Rn(this.input,t,this.output);const e=t.parameters.get("delayTime");this.delayTime.setParam(e);const n=t.parameters.get("feedback");this.resonance.setParam(n)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class jr extends rt{constructor(){super(L(jr.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const t=L(jr.getDefaults(),arguments,["frequency","type"]);this._frequency=t.frequency,this._type=t.type,this.input=new Tt({context:this.context}),this.output=new Tt({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(rt.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,e=this.toFrequency(this._frequency),n=1/(2*Math.PI*e);if(this._type==="lowpass"){const s=1/(n*this.context.sampleRate),r=s-1;this._filter=this.context.createIIRFilter([s,0],[1,r])}else{const s=1/(n*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,s])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(t),t.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let r=0;r<t;r++){const o=Math.pow(r/t,2)*19980+20;e[r]=o}const n=new Float32Array(t),s=new Float32Array(t);return this._filter.getFrequencyResponse(e,n,s),n}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class Xr extends rt{constructor(){super(L(Xr.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const t=L(Xr.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new qr({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new jr({context:this.context,frequency:t.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(rt.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class Vo extends Pn{constructor(){super(L(Vo.getDefaults(),arguments)),this.name="PluckSynth";const t=L(Vo.getDefaults(),arguments);this._noise=new Ui({context:this.context,type:"pink"}),this.attackNoise=t.attackNoise,this._lfcf=new Xr({context:this.context,dampening:t.dampening,resonance:t.resonance}),this.resonance=t.resonance,this.release=t.release,this._noise.connect(this._lfcf),this._lfcf.connect(this.output)}static getDefaults(){return kn(Pn.getDefaults(),{attackNoise:1,dampening:4e3,resonance:.7,release:1})}get dampening(){return this._lfcf.dampening}set dampening(t){this._lfcf.dampening=t}triggerAttack(t,e){const n=this.toFrequency(t);e=this.toSeconds(e);const s=1/n;return this._lfcf.delayTime.setValueAtTime(s,e),this._noise.start(e),this._noise.stop(e+s*this.attackNoise),this._lfcf.resonance.cancelScheduledValues(e),this._lfcf.resonance.setValueAtTime(this.resonance,e),this}triggerRelease(t){return this._lfcf.resonance.linearRampTo(0,this.release,t),this}dispose(){return super.dispose(),this._noise.dispose(),this._lfcf.dispose(),this}}class Di extends Pn{constructor(){super(L(Di.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0;const t=L(Di.getDefaults(),arguments,["voice","options"]);Ct(!In(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Pn.getDefaults(),{maxPolyphony:32,options:{},voice:gn})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex(n=>n.voice===t);this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return t.connect(this.output),this._voices.push(t),t}else $o("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,n){t.forEach(s=>{const r=new Fr(this.context,s).toMidi(),a=this._getNextAvailableVoice();a&&(a.triggerAttack(s,e,n),this._activeVoices.push({midi:r,voice:a,released:!1}),this.log("triggerAttack",s,e))})}_triggerRelease(t,e){t.forEach(n=>{const s=new Fr(this.context,n).toMidi(),r=this._activeVoices.find(({midi:a,released:o})=>a===s&&!o);r&&(r.voice.triggerRelease(e),r.released=!0,this.log("triggerRelease",n,e))})}_scheduleEvent(t,e,n,s){Ct(!this.disposed,"Synth was already disposed"),n<=this.now()?t==="attack"?this._triggerAttack(e,n,s):this._triggerRelease(e,n):this.context.setTimeout(()=>{this._scheduleEvent(t,e,n,s)},n-this.now())}triggerAttack(t,e,n){Array.isArray(t)||(t=[t]);const s=this.toSeconds(e);return this._scheduleEvent("attack",t,s,n),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const n=this.toSeconds(e);return this._scheduleEvent("release",t,n),this}triggerAttackRelease(t,e,n,s){const r=this.toSeconds(n);if(this.triggerAttack(t,r,s),Ye(e)){Ct(Ye(t),"If the duration is an array, the notes must also be an array"),t=t;for(let a=0;a<t.length;a++){const o=e[Math.min(a,e.length-1)],c=this.toSeconds(o);Ct(c>0,"The duration must be greater than 0"),this.triggerRelease(t[a],r+c)}}else{const a=this.toSeconds(e);Ct(a>0,"The duration must be greater than 0"),this.triggerRelease(t,r+a)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}set(t){const e=Xe(t,["onsilence","context"]);return this.options=kn(this.options,e),this._voices.forEach(n=>n.set(e)),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach(({voice:n})=>{n.triggerRelease(e)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(t=>t.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class Kr extends Pn{constructor(){super(L(Kr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=L(Kr.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(n=>{const s=parseInt(n,10);if(Ct(Eo(n)||In(s)&&isFinite(s),`url key is neither a note or midi pitch: ${n}`),Eo(n)){const r=new ln(this.context,n).toMidi();e[r]=t.urls[n]}else In(s)&&isFinite(s)&&(e[s]=t.urls[s])}),this._buffers=new po({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(Pn.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:ee,onerror:ee,release:.1,urls:{}})}_findClosest(t){let n=0;for(;n<96;){if(this._buffers.has(t+n))return-n;if(this._buffers.has(t-n))return n;n++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(s=>{const r=Sm(new ln(this.context,s).toFrequency()),a=Math.round(r),o=r-a,c=this._findClosest(a),l=a-c,h=this._buffers.get(l),u=Or(c+o),f=new ki({url:h,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:u}).connect(this.output);f.start(e,0,h.duration/u,n),Ye(this._activeSources.get(a))||this._activeSources.set(a,[]),this._activeSources.get(a).push(f),f.onended=()=>{if(this._activeSources&&this._activeSources.has(a)){const m=this._activeSources.get(a),g=m.indexOf(f);g!==-1&&m.splice(g,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const s=new ln(this.context,n).toMidi();if(this._activeSources.has(s)&&this._activeSources.get(s).length){const r=this._activeSources.get(s);e=this.toSeconds(e),r.forEach(a=>{a.stop(e)}),this._activeSources.set(s,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,s=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,s),Ye(e)?(Ct(Ye(t),"notes must be an array when duration is array"),t.forEach((a,o)=>{const c=e[Math.min(o,e.length-1)];this.triggerRelease(a,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(Ct(Eo(t)||isFinite(t),`note must be a pitch or midi: ${t}`),Eo(t)){const s=new ln(this.context,t).toMidi();this._buffers.add(s,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}ti([zi(0)],Kr.prototype,"attack",void 0);ti([zi(0)],Kr.prototype,"release",void 0);class $n extends We{constructor(){super(L($n.getDefaults(),arguments,["callback","value"])),this.name="ToneEvent",this._state=new fo("stopped"),this._startOffset=0;const t=L($n.getDefaults(),arguments,["callback","value"]);this._loop=t.loop,this.callback=t.callback,this.value=t.value,this._loopStart=this.toTicks(t.loopStart),this._loopEnd=this.toTicks(t.loopEnd),this._playbackRate=t.playbackRate,this._probability=t.probability,this._humanize=t.humanize,this.mute=t.mute,this._playbackRate=t.playbackRate,this._state.increasing=!0,this._rescheduleEvents()}static getDefaults(){return Object.assign(We.getDefaults(),{callback:ee,humanize:!1,loop:!1,loopEnd:"1m",loopStart:0,mute:!1,playbackRate:1,probability:1,value:null})}_rescheduleEvents(t=-1){this._state.forEachFrom(t,e=>{let n;if(e.state==="started"){e.id!==-1&&this.context.transport.clear(e.id);const s=e.time+Math.round(this.startOffset/this._playbackRate);if(this._loop===!0||In(this._loop)&&this._loop>1){n=1/0,In(this._loop)&&(n=this._loop*this._getLoopDuration());const r=this._state.getAfter(s);r!==null&&(n=Math.min(n,r.time-s)),n!==1/0&&(this._state.setStateAtTime("stopped",s+n+1,{id:-1}),n=new le(this.context,n));const a=new le(this.context,this._getLoopDuration());e.id=this.context.transport.scheduleRepeat(this._tick.bind(this),a,new le(this.context,s),n)}else e.id=this.context.transport.schedule(this._tick.bind(this),new le(this.context,s))}})}get state(){return this._state.getValueAtTime(this.context.transport.ticks)}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t}get probability(){return this._probability}set probability(t){this._probability=t}get humanize(){return this._humanize}set humanize(t){this._humanize=t}start(t){const e=this.toTicks(t);return this._state.getValueAtTime(e)==="stopped"&&(this._state.add({id:-1,state:"started",time:e}),this._rescheduleEvents(e)),this}stop(t){this.cancel(t);const e=this.toTicks(t);if(this._state.getValueAtTime(e)==="started"){this._state.setStateAtTime("stopped",e,{id:-1});const n=this._state.getBefore(e);let s=e;n!==null&&(s=n.time),this._rescheduleEvents(s)}return this}cancel(t){t=Un(t,-1/0);const e=this.toTicks(t);return this._state.forEachFrom(e,n=>{this.context.transport.clear(n.id)}),this._state.cancel(e),this}_tick(t){const e=this.context.transport.getTicksAtTime(t);if(!this.mute&&this._state.getValueAtTime(e)==="started"){if(this.probability<1&&Math.random()>this.probability)return;if(this.humanize){let n=.02;ru(this.humanize)||(n=this.toSeconds(this.humanize)),t+=(Math.random()*2-1)*n}this.callback(t,this.value)}}_getLoopDuration(){return Math.round((this._loopEnd-this._loopStart)/this._playbackRate)}get loop(){return this._loop}set loop(t){this._loop=t,this._rescheduleEvents()}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._rescheduleEvents()}get loopEnd(){return new le(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._rescheduleEvents()}get loopStart(){return new le(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._rescheduleEvents()}get progress(){if(this._loop){const t=this.context.transport.ticks,e=this._state.get(t);if(e!==null&&e.state==="started"){const n=this._getLoopDuration();return(t-e.time)%n/n}else return 0}else return 0}dispose(){return super.dispose(),this.cancel(),this._state.dispose(),this}}class Yr extends We{constructor(){super(L(Yr.getDefaults(),arguments,["callback","interval"])),this.name="Loop";const t=L(Yr.getDefaults(),arguments,["callback","interval"]);this._event=new $n({context:this.context,callback:this._tick.bind(this),loop:!0,loopEnd:t.interval,playbackRate:t.playbackRate,probability:t.probability}),this.callback=t.callback,this.iterations=t.iterations}static getDefaults(){return Object.assign(We.getDefaults(),{interval:"4n",callback:ee,playbackRate:1,iterations:1/0,probability:1,mute:!1,humanize:!1})}start(t){return this._event.start(t),this}stop(t){return this._event.stop(t),this}cancel(t){return this._event.cancel(t),this}_tick(t){this.callback(t)}get state(){return this._event.state}get progress(){return this._event.progress}get interval(){return this._event.loopEnd}set interval(t){this._event.loopEnd=t}get playbackRate(){return this._event.playbackRate}set playbackRate(t){this._event.playbackRate=t}get humanize(){return this._event.humanize}set humanize(t){this._event.humanize=t}get probability(){return this._event.probability}set probability(t){this._event.probability=t}get mute(){return this._event.mute}set mute(t){this._event.mute=t}get iterations(){return this._event.loop===!0?1/0:this._event.loop}set iterations(t){t===1/0?this._event.loop=!0:this._event.loop=t}dispose(){return super.dispose(),this._event.dispose(),this}}class wr extends $n{constructor(){super(L(wr.getDefaults(),arguments,["callback","events"])),this.name="Part",this._state=new fo("stopped"),this._events=new Set;const t=L(wr.getDefaults(),arguments,["callback","events"]);this._state.increasing=!0,t.events.forEach(e=>{Ye(e)?this.add(e[0],e[1]):this.add(e)})}static getDefaults(){return Object.assign($n.getDefaults(),{events:[]})}start(t,e){const n=this.toTicks(t);if(this._state.getValueAtTime(n)!=="started"){e=Un(e,this._loop?this._loopStart:0),this._loop?e=Un(e,this._loopStart):e=Un(e,0);const s=this.toTicks(e);this._state.add({id:-1,offset:s,state:"started",time:n}),this._forEach(r=>{this._startNote(r,n,s)})}return this}_startNote(t,e,n){e-=n,this._loop?t.startOffset>=this._loopStart&&t.startOffset<this._loopEnd?(t.startOffset<n&&(e+=this._getLoopDuration()),t.start(new le(this.context,e))):t.startOffset<this._loopStart&&t.startOffset>=n&&(t.loop=!1,t.start(new le(this.context,e))):t.startOffset>=n&&t.start(new le(this.context,e))}get startOffset(){return this._startOffset}set startOffset(t){this._startOffset=t,this._forEach(e=>{e.startOffset+=this._startOffset})}stop(t){const e=this.toTicks(t);return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._forEach(n=>{n.stop(t)}),this}at(t,e){const n=new Le(this.context,t).toTicks(),s=new le(this.context,1).toSeconds(),r=this._events.values();let a=r.next();for(;!a.done;){const o=a.value;if(Math.abs(n-o.startOffset)<s)return qt(e)&&(o.value=e),o;a=r.next()}return qt(e)?(this.add(t,e),this.at(t)):null}add(t,e){t instanceof Object&&Reflect.has(t,"time")&&(e=t,t=e.time);const n=this.toTicks(t);let s;return e instanceof $n?(s=e,s.callback=this._tick.bind(this)):s=new $n({callback:this._tick.bind(this),context:this.context,value:e}),s.startOffset=n,s.set({humanize:this.humanize,loop:this.loop,loopEnd:this.loopEnd,loopStart:this.loopStart,playbackRate:this.playbackRate,probability:this.probability}),this._events.add(s),this._restartEvent(s),this}_restartEvent(t){this._state.forEach(e=>{e.state==="started"?this._startNote(t,e.time,e.offset):t.stop(new le(this.context,e.time))})}remove(t,e){return Oi(t)&&t.hasOwnProperty("time")&&(e=t,t=e.time),t=this.toTicks(t),this._events.forEach(n=>{n.startOffset===t&&(_n(e)||qt(e)&&n.value===e)&&(this._events.delete(n),n.dispose())}),this}clear(){return this._forEach(t=>t.dispose()),this._events.clear(),this}cancel(t){return this._forEach(e=>e.cancel(t)),this._state.cancel(this.toTicks(t)),this}_forEach(t){return this._events&&this._events.forEach(e=>{e instanceof wr?e._forEach(t):t(e)}),this}_setAll(t,e){this._forEach(n=>{n[t]=e})}_tick(t,e){this.mute||this.callback(t,e)}_testLoopBoundries(t){this._loop&&(t.startOffset<this._loopStart||t.startOffset>=this._loopEnd)?t.cancel(0):t.state==="stopped"&&this._restartEvent(t)}get probability(){return this._probability}set probability(t){this._probability=t,this._setAll("probability",t)}get humanize(){return this._humanize}set humanize(t){this._humanize=t,this._setAll("humanize",t)}get loop(){return this._loop}set loop(t){this._loop=t,this._forEach(e=>{e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.loop=t,this._testLoopBoundries(e)})}get loopEnd(){return new le(this.context,this._loopEnd).toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopEnd=t,this._testLoopBoundries(e)})}get loopStart(){return new le(this.context,this._loopStart).toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t),this._loop&&this._forEach(e=>{e.loopStart=this.loopStart,this._testLoopBoundries(e)})}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._setAll("playbackRate",t)}get length(){return this._events.size}dispose(){return super.dispose(),this.clear(),this}}function*OA(i){let t=0;for(;t<i.length;)t=go(t,i),yield i[t],t++}function*NA(i){let t=i.length-1;for(;t>=0;)t=go(t,i),yield i[t],t--}function*wo(i,t){for(;;)yield*t(i)}function go(i,t){return gm(i,0,t.length-1)}function*bf(i,t){let e=t?0:i.length-1;for(;;)e=go(e,i),yield i[e],t?(e++,e>=i.length-1&&(t=!1)):(e--,e<=0&&(t=!0))}function*FA(i){let t=0,e=0;for(;t<i.length;)t=go(t,i),yield i[t],e++,t+=e%2?2:-1}function*kA(i){let t=i.length-1,e=0;for(;t>=0;)t=go(t,i),yield i[t],e++,t+=e%2?-2:1}function*UA(i){for(;;){const t=Math.floor(Math.random()*i.length);yield i[t]}}function*BA(i){const t=[];for(let e=0;e<i.length;e++)t.push(e);for(;t.length>0;){const e=t.splice(Math.floor(t.length*Math.random()),1),n=go(e[0],i);yield i[n]}}function*VA(i){let t=Math.floor(Math.random()*i.length);for(;;)t===0?t++:t===i.length-1||Math.random()<.5?t--:t++,yield i[t]}function*Mf(i,t="up",e=0){switch(Ct(i.length>0,"The array must have more than one value in it"),t){case"up":yield*wo(i,OA);case"down":yield*wo(i,NA);case"upDown":yield*bf(i,!0);case"downUp":yield*bf(i,!1);case"alternateUp":yield*wo(i,FA);case"alternateDown":yield*wo(i,kA);case"random":yield*UA(i);case"randomOnce":yield*wo(i,BA);case"randomWalk":yield*VA(i)}}class cc extends Yr{constructor(){super(L(cc.getDefaults(),arguments,["callback","values","pattern"])),this.name="Pattern";const t=L(cc.getDefaults(),arguments,["callback","values","pattern"]);this.callback=t.callback,this._values=t.values,this._pattern=Mf(t.values,t.pattern),this._type=t.pattern}static getDefaults(){return Object.assign(Yr.getDefaults(),{pattern:"up",values:[],callback:ee})}_tick(t){const e=this._pattern.next();this._value=e.value,this.callback(t,this._value)}get values(){return this._values}set values(t){this._values=t,this.pattern=this._type}get value(){return this._value}get pattern(){return this._type}set pattern(t){this._type=t,this._pattern=Mf(this._values,this._type)}}class lc extends $n{constructor(){super(L(lc.getDefaults(),arguments,["callback","events","subdivision"])),this.name="Sequence",this._part=new wr({callback:this._seqCallback.bind(this),context:this.context}),this._events=[],this._eventsArray=[];const t=L(lc.getDefaults(),arguments,["callback","events","subdivision"]);this._subdivision=this.toTicks(t.subdivision),this.events=t.events,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.playbackRate=t.playbackRate,this.probability=t.probability,this.humanize=t.humanize,this.mute=t.mute,this.playbackRate=t.playbackRate}static getDefaults(){return Object.assign(Xe($n.getDefaults(),["value"]),{events:[],loop:!0,loopEnd:0,loopStart:0,subdivision:"8n"})}_seqCallback(t,e){e!==null&&this.callback(t,e)}get events(){return this._events}set events(t){this.clear(),this._eventsArray=t,this._events=this._createSequence(this._eventsArray),this._eventsUpdated()}start(t,e){return this._part.start(t,e&&this._indexTime(e)),this}stop(t){return this._part.stop(t),this}get subdivision(){return new le(this.context,this._subdivision).toSeconds()}_createSequence(t){return new Proxy(t,{get:(e,n)=>e[n],set:(e,n,s)=>(Vn(n)&&isFinite(parseInt(n,10))&&Ye(s)?e[n]=this._createSequence(s):e[n]=s,this._eventsUpdated(),!0)})}_eventsUpdated(){this._part.clear(),this._rescheduleSequence(this._eventsArray,this._subdivision,this.startOffset),this.loopEnd=this.loopEnd}_rescheduleSequence(t,e,n){t.forEach((s,r)=>{const a=r*e+n;if(Ye(s))this._rescheduleSequence(s,e/s.length,a);else{const o=new le(this.context,a,"i").toSeconds();this._part.add(o,s)}})}_indexTime(t){return new le(this.context,t*this._subdivision+this.startOffset).toSeconds()}clear(){return this._part.clear(),this}dispose(){return super.dispose(),this._part.dispose(),this}get loop(){return this._part.loop}set loop(t){this._part.loop=t}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this._part.loopStart=this._indexTime(t)}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,t===0?this._part.loopEnd=this._indexTime(this._eventsArray.length):this._part.loopEnd=this._indexTime(t)}get startOffset(){return this._part.startOffset}set startOffset(t){this._part.startOffset=t}get playbackRate(){return this._part.playbackRate}set playbackRate(t){this._part.playbackRate=t}get probability(){return this._part.probability}set probability(t){this._part.probability=t}get progress(){return this._part.progress}get humanize(){return this._part.humanize}set humanize(t){this._part.humanize=t}get length(){return this._part.length}}class Gs extends rt{constructor(){super(Object.assign(L(Gs.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Em({context:this.context}),this.a=new Tt({context:this.context,gain:0}),this.b=new Tt({context:this.context,gain:0}),this.output=new Tt({context:this.context}),this._internalChannels=[this.a,this.b];const t=L(Gs.getDefaults(),arguments,["fade"]);this.fade=new Nt({context:this.context,units:"normalRange",value:t.fade}),Pt(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",xn(this._split,this.a.gain,0),xn(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(rt.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class ke extends rt{constructor(t){super(t),this.name="Effect",this._dryWet=new Gs({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new Tt({context:this.context}),this.effectReturn=new Tt({context:this.context}),this.input=new Tt({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Pt(this,"wet")}static getDefaults(){return Object.assign(rt.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class hc extends ke{constructor(t){super(t),this.name="LFOEffect",this._lfo=new en({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,Pt(this,["frequency","depth"])}static getDefaults(){return Object.assign(ke.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class uc extends hc{constructor(){super(L(uc.getDefaults(),arguments,["frequency","baseFrequency","octaves"])),this.name="AutoFilter";const t=L(uc.getDefaults(),arguments,["frequency","baseFrequency","octaves"]);this.filter=new hn(Object.assign(t.filter,{context:this.context})),this.connectEffect(this.filter),this._lfo.connect(this.filter.frequency),this.octaves=t.octaves,this.baseFrequency=t.baseFrequency}static getDefaults(){return Object.assign(hc.getDefaults(),{baseFrequency:200,octaves:2.6,filter:{type:"lowpass",rolloff:-12,Q:1}})}get baseFrequency(){return this._lfo.min}set baseFrequency(t){this._lfo.min=this.toFrequency(t),this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._lfo.max=this._lfo.min*Math.pow(2,t)}dispose(){return super.dispose(),this.filter.dispose(),this}}class $r extends rt{constructor(){super(Object.assign(L($r.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=L($r.getDefaults(),arguments,["pan"]);this.pan=new Bt({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Pt(this,"pan")}static getDefaults(){return Object.assign(rt.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class dc extends hc{constructor(){super(L(dc.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const t=L(dc.getDefaults(),arguments,["frequency"]);this._panner=new $r({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(hc.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}class Zr extends rt{constructor(){super(L(Zr.getDefaults(),arguments,["smoothing"])),this.name="Follower";const t=L(Zr.getDefaults(),arguments,["smoothing"]);this._abs=this.input=new Tm({context:this.context}),this._lowpass=this.output=new jr({context:this.context,frequency:1/this.toSeconds(t.smoothing),type:"lowpass"}),this._abs.connect(this._lowpass),this._smoothing=t.smoothing}static getDefaults(){return Object.assign(rt.getDefaults(),{smoothing:.05})}get smoothing(){return this._smoothing}set smoothing(t){this._smoothing=t,this._lowpass.frequency=1/this.toSeconds(this.smoothing)}dispose(){return super.dispose(),this._abs.dispose(),this._lowpass.dispose(),this}}class fc extends ke{constructor(){super(L(fc.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"])),this.name="AutoWah";const t=L(fc.getDefaults(),arguments,["baseFrequency","octaves","sensitivity"]);this._follower=new Zr({context:this.context,smoothing:t.follower}),this._sweepRange=new Uo({context:this.context,min:0,max:1,exponent:.5}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this._inputBoost=new Tt({context:this.context}),this._bandpass=new hn({context:this.context,rolloff:-48,frequency:0,Q:t.Q}),this._peaking=new hn({context:this.context,type:"peaking"}),this._peaking.gain.value=t.gain,this.gain=this._peaking.gain,this.Q=this._bandpass.Q,this.effectSend.chain(this._inputBoost,this._follower,this._sweepRange),this._sweepRange.connect(this._bandpass.frequency),this._sweepRange.connect(this._peaking.frequency),this.effectSend.chain(this._bandpass,this._peaking,this.effectReturn),this._setSweepRange(),this.sensitivity=t.sensitivity,Pt(this,["gain","Q"])}static getDefaults(){return Object.assign(ke.getDefaults(),{baseFrequency:100,octaves:6,sensitivity:0,Q:2,gain:2,follower:.2})}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._setSweepRange()}get follower(){return this._follower.smoothing}set follower(t){this._follower.smoothing=t}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._setSweepRange()}get sensitivity(){return Qo(1/this._inputBoost.gain.value)}set sensitivity(t){this._inputBoost.gain.value=1/Lr(t)}_setSweepRange(){this._sweepRange.min=this._baseFrequency,this._sweepRange.max=Math.min(this._baseFrequency*Math.pow(2,this._octaves),this.context.sampleRate/2)}dispose(){return super.dispose(),this._follower.dispose(),this._sweepRange.dispose(),this._bandpass.dispose(),this._peaking.dispose(),this._inputBoost.dispose(),this}}const Im="bit-crusher",zA=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Am(Im,zA);class pc extends ke{constructor(){super(L(pc.getDefaults(),arguments,["bits"])),this.name="BitCrusher";const t=L(pc.getDefaults(),arguments,["bits"]);this._bitCrusherWorklet=new mc({context:this.context,bits:t.bits}),this.connectEffect(this._bitCrusherWorklet),this.bits=this._bitCrusherWorklet.bits}static getDefaults(){return Object.assign(ke.getDefaults(),{bits:4})}dispose(){return super.dispose(),this._bitCrusherWorklet.dispose(),this}}class mc extends Sh{constructor(){super(L(mc.getDefaults(),arguments)),this.name="BitCrusherWorklet";const t=L(mc.getDefaults(),arguments);this.input=new Tt({context:this.context}),this.output=new Tt({context:this.context}),this.bits=new Bt({context:this.context,value:t.bits,units:"positive",minValue:1,maxValue:16,param:this._dummyParam,swappable:!0})}static getDefaults(){return Object.assign(Sh.getDefaults(),{bits:12})}_audioWorkletName(){return Im}onReady(t){Rn(this.input,t,this.output);const e=t.parameters.get("bits");this.bits.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.bits.dispose(),this}}class gc extends ke{constructor(){super(L(gc.getDefaults(),arguments,["order"])),this.name="Chebyshev";const t=L(gc.getDefaults(),arguments,["order"]);this._shaper=new zn({context:this.context,length:4096}),this._order=t.order,this.connectEffect(this._shaper),this.order=t.order,this.oversample=t.oversample}static getDefaults(){return Object.assign(ke.getDefaults(),{order:1,oversample:"none"})}_getCoefficient(t,e,n){return n.has(e)||(e===0?n.set(e,0):e===1?n.set(e,t):n.set(e,2*t*this._getCoefficient(t,e-1,n)-this._getCoefficient(t,e-2,n))),n.get(e)}get order(){return this._order}set order(t){this._order=t,this._shaper.setMap(e=>this._getCoefficient(e,t,new Map))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class us extends rt{constructor(){super(L(us.getDefaults(),arguments,["channels"])),this.name="Split";const t=L(us.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(rt.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class Bi extends rt{constructor(){super(L(Bi.getDefaults(),arguments,["channels"])),this.name="Merge";const t=L(Bi.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(rt.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class fi extends rt{constructor(t){super(t),this.name="StereoEffect",this.input=new Tt({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new Gs({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new us({context:this.context,channels:2}),this._merge=new Bi({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),Pt(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),Rn(...t),xn(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),Rn(...t),xn(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(rt.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class bh extends fi{constructor(t){super(t),this.feedback=new Nt({context:this.context,value:t.feedback,units:"normalRange"}),this._feedbackL=new Tt({context:this.context}),this._feedbackR=new Tt({context:this.context}),this._feedbackSplit=new us({context:this.context,channels:2}),this._feedbackMerge=new Bi({context:this.context,channels:2}),this._merge.connect(this._feedbackSplit),this._feedbackMerge.connect(this._split),this._feedbackSplit.connect(this._feedbackL,0,0),this._feedbackL.connect(this._feedbackMerge,0,0),this._feedbackSplit.connect(this._feedbackR,1,0),this._feedbackR.connect(this._feedbackMerge,0,1),this.feedback.fan(this._feedbackL.gain,this._feedbackR.gain),Pt(this,["feedback"])}static getDefaults(){return Object.assign(fi.getDefaults(),{feedback:.5})}dispose(){return super.dispose(),this.feedback.dispose(),this._feedbackL.dispose(),this._feedbackR.dispose(),this._feedbackSplit.dispose(),this._feedbackMerge.dispose(),this}}class _c extends bh{constructor(){super(L(_c.getDefaults(),arguments,["frequency","delayTime","depth"])),this.name="Chorus";const t=L(_c.getDefaults(),arguments,["frequency","delayTime","depth"]);this._depth=t.depth,this._delayTime=t.delayTime/1e3,this._lfoL=new en({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new en({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._delayNodeL=new yn({context:this.context}),this._delayNodeR=new yn({context:this.context}),this.frequency=this._lfoL.frequency,Pt(this,["frequency"]),this._lfoL.frequency.connect(this._lfoR.frequency),this.connectEffectLeft(this._delayNodeL),this.connectEffectRight(this._delayNodeR),this._lfoL.connect(this._delayNodeL.delayTime),this._lfoR.connect(this._delayNodeR.delayTime),this.depth=this._depth,this.type=t.type,this.spread=t.spread}static getDefaults(){return Object.assign(bh.getDefaults(),{frequency:1.5,delayTime:3.5,depth:.7,type:"sine",spread:180,feedback:0,wet:.5})}get depth(){return this._depth}set depth(t){this._depth=t;const e=this._delayTime*t;this._lfoL.min=Math.max(this._delayTime-e,0),this._lfoL.max=this._delayTime+e,this._lfoR.min=Math.max(this._delayTime-e,0),this._lfoR.max=this._delayTime+e}get delayTime(){return this._delayTime*1e3}set delayTime(t){this._delayTime=t/1e3,this.depth=this._depth}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._delayNodeL.dispose(),this._delayNodeR.dispose(),this.frequency.dispose(),this}}class yc extends ke{constructor(){super(L(yc.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=L(yc.getDefaults(),arguments,["distortion"]);this._shaper=new zn({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(ke.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const e=t*100,n=Math.PI/180;this._shaper.setMap(s=>Math.abs(s)<.001?0:(3+e)*s*20*n/(Math.PI+e*Math.abs(s)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}class vc extends ke{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new Tt({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,Pt(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(ke.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class xc extends vc{constructor(){super(L(xc.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const t=L(xc.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new yn({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Pt(this,"delayTime")}static getDefaults(){return Object.assign(vc.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class GA extends rt{constructor(t){super(t),this.name="PhaseShiftAllpass",this.input=new Tt({context:this.context}),this.output=new Tt({context:this.context}),this.offset90=new Tt({context:this.context});const e=[.6923878,.9360654322959,.988229522686,.9987488452737],n=[.4021921162426,.856171088242,.9722909545651,.9952884791278];this._bank0=this._createAllPassFilterBank(e),this._bank1=this._createAllPassFilterBank(n),this._oneSampleDelay=this.context.createIIRFilter([0,1],[1,0]),Rn(this.input,...this._bank0,this._oneSampleDelay,this.output),Rn(this.input,...this._bank1,this.offset90)}_createAllPassFilterBank(t){return t.map(n=>{const s=[[n*n,0,-1],[1,0,-(n*n)]];return this.context.createIIRFilter(s[0],s[1])})}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.offset90.dispose(),this._bank0.forEach(t=>t.disconnect()),this._bank1.forEach(t=>t.disconnect()),this._oneSampleDelay.disconnect(),this}}class Sc extends ke{constructor(){super(L(Sc.getDefaults(),arguments,["frequency"])),this.name="FrequencyShifter";const t=L(Sc.getDefaults(),arguments,["frequency"]);this.frequency=new Nt({context:this.context,units:"frequency",value:t.frequency,minValue:-this.context.sampleRate/2,maxValue:this.context.sampleRate/2}),this._sine=new kr({context:this.context,type:"sine"}),this._cosine=new pe({context:this.context,phase:-90,type:"sine"}),this._sineMultiply=new ge({context:this.context}),this._cosineMultiply=new ge({context:this.context}),this._negate=new du({context:this.context}),this._add=new js({context:this.context}),this._phaseShifter=new GA({context:this.context}),this.effectSend.connect(this._phaseShifter),this.frequency.fan(this._sine.frequency,this._cosine.frequency),this._phaseShifter.offset90.connect(this._cosineMultiply),this._cosine.connect(this._cosineMultiply.factor),this._phaseShifter.connect(this._sineMultiply),this._sine.connect(this._sineMultiply.factor),this._sineMultiply.connect(this._negate),this._cosineMultiply.connect(this._add),this._negate.connect(this._add.addend),this._add.connect(this.effectReturn);const e=this.immediate();this._sine.start(e),this._cosine.start(e)}static getDefaults(){return Object.assign(ke.getDefaults(),{frequency:0})}dispose(){return super.dispose(),this.frequency.dispose(),this._add.dispose(),this._cosine.dispose(),this._cosineMultiply.dispose(),this._negate.dispose(),this._phaseShifter.dispose(),this._sine.dispose(),this._sineMultiply.dispose(),this}}const wf=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],Tf=[225,556,441,341];class bc extends fi{constructor(){super(L(bc.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const t=L(bc.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new Nt({context:this.context,value:t.roomSize,units:"normalRange"}),this._allpassFiltersL=Tf.map(e=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=e,n}),this._allpassFiltersR=Tf.map(e=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=e,n}),this._combFilters=wf.map((e,n)=>{const s=new Xr({context:this.context,dampening:t.dampening,delayTime:e});return n<wf.length/2?this.connectEffectLeft(s,...this._allpassFiltersL):this.connectEffectRight(s,...this._allpassFiltersR),this.roomSize.connect(s.resonance),s}),Pt(this,["roomSize"])}static getDefaults(){return Object.assign(fi.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach(e=>e.dampening=t)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(t=>t.disconnect()),this._allpassFiltersR.forEach(t=>t.disconnect()),this._combFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this}}const Ef=[1687/25e3,1601/25e3,2053/25e3,2251/25e3],WA=[.773,.802,.753,.733],HA=[347,113,37];class Mc extends fi{constructor(){super(L(Mc.getDefaults(),arguments,["roomSize"])),this.name="JCReverb",this._allpassFilters=[],this._feedbackCombFilters=[];const t=L(Mc.getDefaults(),arguments,["roomSize"]);this.roomSize=new Nt({context:this.context,value:t.roomSize,units:"normalRange"}),this._scaleRoomSize=new di({context:this.context,min:-.733,max:.197}),this._allpassFilters=HA.map(e=>{const n=this.context.createBiquadFilter();return n.type="allpass",n.frequency.value=e,n}),this._feedbackCombFilters=Ef.map((e,n)=>{const s=new qr({context:this.context,delayTime:e});return this._scaleRoomSize.connect(s.resonance),s.resonance.value=WA[n],n<Ef.length/2?this.connectEffectLeft(...this._allpassFilters,s):this.connectEffectRight(...this._allpassFilters,s),s}),this.roomSize.connect(this._scaleRoomSize),Pt(this,["roomSize"])}static getDefaults(){return Object.assign(fi.getDefaults(),{roomSize:.5})}dispose(){return super.dispose(),this._allpassFilters.forEach(t=>t.disconnect()),this._feedbackCombFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this._scaleRoomSize.dispose(),this}}class Af extends bh{constructor(t){super(t),this._feedbackL.disconnect(),this._feedbackL.connect(this._feedbackMerge,0,1),this._feedbackR.disconnect(),this._feedbackR.connect(this._feedbackMerge,0,0),Pt(this,["feedback"])}}class wc extends Af{constructor(){super(L(wc.getDefaults(),arguments,["delayTime","feedback"])),this.name="PingPongDelay";const t=L(wc.getDefaults(),arguments,["delayTime","feedback"]);this._leftDelay=new yn({context:this.context,maxDelay:t.maxDelay}),this._rightDelay=new yn({context:this.context,maxDelay:t.maxDelay}),this._rightPreDelay=new yn({context:this.context,maxDelay:t.maxDelay}),this.delayTime=new Nt({context:this.context,units:"time",value:t.delayTime}),this.connectEffectLeft(this._leftDelay),this.connectEffectRight(this._rightPreDelay,this._rightDelay),this.delayTime.fan(this._leftDelay.delayTime,this._rightDelay.delayTime,this._rightPreDelay.delayTime),this._feedbackL.disconnect(),this._feedbackL.connect(this._rightDelay),Pt(this,["delayTime"])}static getDefaults(){return Object.assign(Af.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._leftDelay.dispose(),this._rightDelay.dispose(),this._rightPreDelay.dispose(),this.delayTime.dispose(),this}}class Tc extends vc{constructor(){super(L(Tc.getDefaults(),arguments,["pitch"])),this.name="PitchShift";const t=L(Tc.getDefaults(),arguments,["pitch"]);this._frequency=new Nt({context:this.context}),this._delayA=new yn({maxDelay:1,context:this.context}),this._lfoA=new en({context:this.context,min:0,max:.1,type:"sawtooth"}).connect(this._delayA.delayTime),this._delayB=new yn({maxDelay:1,context:this.context}),this._lfoB=new en({context:this.context,min:0,max:.1,type:"sawtooth",phase:180}).connect(this._delayB.delayTime),this._crossFade=new Gs({context:this.context}),this._crossFadeLFO=new en({context:this.context,min:0,max:1,type:"triangle",phase:90}).connect(this._crossFade.fade),this._feedbackDelay=new yn({delayTime:t.delayTime,context:this.context}),this.delayTime=this._feedbackDelay.delayTime,Pt(this,"delayTime"),this._pitch=t.pitch,this._windowSize=t.windowSize,this._delayA.connect(this._crossFade.a),this._delayB.connect(this._crossFade.b),this._frequency.fan(this._lfoA.frequency,this._lfoB.frequency,this._crossFadeLFO.frequency),this.effectSend.fan(this._delayA,this._delayB),this._crossFade.chain(this._feedbackDelay,this.effectReturn);const e=this.now();this._lfoA.start(e),this._lfoB.start(e),this._crossFadeLFO.start(e),this.windowSize=this._windowSize}static getDefaults(){return Object.assign(vc.getDefaults(),{pitch:0,windowSize:.1,delayTime:0,feedback:0})}get pitch(){return this._pitch}set pitch(t){this._pitch=t;let e=0;t<0?(this._lfoA.min=0,this._lfoA.max=this._windowSize,this._lfoB.min=0,this._lfoB.max=this._windowSize,e=Or(t-1)+1):(this._lfoA.min=this._windowSize,this._lfoA.max=0,this._lfoB.min=this._windowSize,this._lfoB.max=0,e=Or(t)-1),this._frequency.value=e*(1.2/this._windowSize)}get windowSize(){return this._windowSize}set windowSize(t){this._windowSize=this.toSeconds(t),this.pitch=this._pitch}dispose(){return super.dispose(),this._frequency.dispose(),this._delayA.dispose(),this._delayB.dispose(),this._lfoA.dispose(),this._lfoB.dispose(),this._crossFade.dispose(),this._crossFadeLFO.dispose(),this._feedbackDelay.dispose(),this}}class Ec extends fi{constructor(){super(L(Ec.getDefaults(),arguments,["frequency","octaves","baseFrequency"])),this.name="Phaser";const t=L(Ec.getDefaults(),arguments,["frequency","octaves","baseFrequency"]);this._lfoL=new en({context:this.context,frequency:t.frequency,min:0,max:1}),this._lfoR=new en({context:this.context,frequency:t.frequency,min:0,max:1,phase:180}),this._baseFrequency=this.toFrequency(t.baseFrequency),this._octaves=t.octaves,this.Q=new Nt({context:this.context,value:t.Q,units:"positive"}),this._filtersL=this._makeFilters(t.stages,this._lfoL),this._filtersR=this._makeFilters(t.stages,this._lfoR),this.frequency=this._lfoL.frequency,this.frequency.value=t.frequency,this.connectEffectLeft(...this._filtersL),this.connectEffectRight(...this._filtersR),this._lfoL.frequency.connect(this._lfoR.frequency),this.baseFrequency=t.baseFrequency,this.octaves=t.octaves,this._lfoL.start(),this._lfoR.start(),Pt(this,["frequency","Q"])}static getDefaults(){return Object.assign(fi.getDefaults(),{frequency:.5,octaves:3,stages:10,Q:10,baseFrequency:350})}_makeFilters(t,e){const n=[];for(let s=0;s<t;s++){const r=this.context.createBiquadFilter();r.type="allpass",this.Q.connect(r.Q),e.connect(r.frequency),n.push(r)}return n}get octaves(){return this._octaves}set octaves(t){this._octaves=t;const e=this._baseFrequency*Math.pow(2,t);this._lfoL.max=e,this._lfoR.max=e}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){this._baseFrequency=this.toFrequency(t),this._lfoL.min=this._baseFrequency,this._lfoR.min=this._baseFrequency,this.octaves=this._octaves}dispose(){return super.dispose(),this.Q.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._filtersL.forEach(t=>t.disconnect()),this._filtersR.forEach(t=>t.disconnect()),this.frequency.dispose(),this}}class Qr extends ke{constructor(){super(L(Qr.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=L(Qr.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(ke.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),je(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),je(t,0),this._preDelay=t,this.generate()}generate(){return he(this,void 0,void 0,function*(){const t=this.ready,e=new uo(2,this._decay+this._preDelay,this.context.sampleRate),n=new Ui({context:e}),s=new Ui({context:e}),r=new Bi({context:e});n.connect(r,0,0),s.connect(r,0,1);const a=new Tt({context:e}).toDestination();r.connect(a),n.start(0),s.start(0),a.gain.setValueAtTime(0,0),a.gain.setValueAtTime(1,this._preDelay),a.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const o=e.render();return this.ready=o.then(ee),yield t,this._convolver.buffer=(yield o).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class ta extends rt{constructor(){super(L(ta.getDefaults(),arguments)),this.name="MidSideSplit",this._split=this.input=new us({channels:2,context:this.context}),this._midAdd=new js({context:this.context}),this.mid=new ge({context:this.context,value:Math.SQRT1_2}),this._sideSubtract=new Xs({context:this.context}),this.side=new ge({context:this.context,value:Math.SQRT1_2}),this._split.connect(this._midAdd,0),this._split.connect(this._midAdd.addend,1),this._split.connect(this._sideSubtract,0),this._split.connect(this._sideSubtract.subtrahend,1),this._midAdd.connect(this.mid),this._sideSubtract.connect(this.side)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midAdd.dispose(),this._sideSubtract.dispose(),this._split.dispose(),this}}class ea extends rt{constructor(){super(L(ea.getDefaults(),arguments)),this.name="MidSideMerge",this.mid=new Tt({context:this.context}),this.side=new Tt({context:this.context}),this._left=new js({context:this.context}),this._leftMult=new ge({context:this.context,value:Math.SQRT1_2}),this._right=new Xs({context:this.context}),this._rightMult=new ge({context:this.context,value:Math.SQRT1_2}),this._merge=this.output=new Bi({context:this.context}),this.mid.fan(this._left),this.side.connect(this._left.addend),this.mid.connect(this._right),this.side.connect(this._right.subtrahend),this._left.connect(this._leftMult),this._right.connect(this._rightMult),this._leftMult.connect(this._merge,0,0),this._rightMult.connect(this._merge,0,1)}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._leftMult.dispose(),this._rightMult.dispose(),this._left.dispose(),this._right.dispose(),this}}class Cf extends ke{constructor(t){super(t),this.name="MidSideEffect",this._midSideMerge=new ea({context:this.context}),this._midSideSplit=new ta({context:this.context}),this._midSend=this._midSideSplit.mid,this._sideSend=this._midSideSplit.side,this._midReturn=this._midSideMerge.mid,this._sideReturn=this._midSideMerge.side,this.effectSend.connect(this._midSideSplit),this._midSideMerge.connect(this.effectReturn)}connectEffectMid(...t){this._midSend.chain(...t,this._midReturn)}connectEffectSide(...t){this._sideSend.chain(...t,this._sideReturn)}dispose(){return super.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this._midSend.dispose(),this._sideSend.dispose(),this._midReturn.dispose(),this._sideReturn.dispose(),this}}class Ac extends Cf{constructor(){super(L(Ac.getDefaults(),arguments,["width"])),this.name="StereoWidener";const t=L(Ac.getDefaults(),arguments,["width"]);this.width=new Nt({context:this.context,value:t.width,units:"normalRange"}),Pt(this,["width"]),this._twoTimesWidthMid=new ge({context:this.context,value:2}),this._twoTimesWidthSide=new ge({context:this.context,value:2}),this._midMult=new ge({context:this.context}),this._twoTimesWidthMid.connect(this._midMult.factor),this.connectEffectMid(this._midMult),this._oneMinusWidth=new Xs({context:this.context}),this._oneMinusWidth.connect(this._twoTimesWidthMid),xn(this.context.getConstant(1),this._oneMinusWidth),this.width.connect(this._oneMinusWidth.subtrahend),this._sideMult=new ge({context:this.context}),this.width.connect(this._twoTimesWidthSide),this._twoTimesWidthSide.connect(this._sideMult.factor),this.connectEffectSide(this._sideMult)}static getDefaults(){return Object.assign(Cf.getDefaults(),{width:.5})}dispose(){return super.dispose(),this.width.dispose(),this._midMult.dispose(),this._sideMult.dispose(),this._twoTimesWidthMid.dispose(),this._twoTimesWidthSide.dispose(),this._oneMinusWidth.dispose(),this}}class Cc extends fi{constructor(){super(L(Cc.getDefaults(),arguments,["frequency","depth"])),this.name="Tremolo";const t=L(Cc.getDefaults(),arguments,["frequency","depth"]);this._lfoL=new en({context:this.context,type:t.type,min:1,max:0}),this._lfoR=new en({context:this.context,type:t.type,min:1,max:0}),this._amplitudeL=new Tt({context:this.context}),this._amplitudeR=new Tt({context:this.context}),this.frequency=new Nt({context:this.context,value:t.frequency,units:"frequency"}),this.depth=new Nt({context:this.context,value:t.depth,units:"normalRange"}),Pt(this,["frequency","depth"]),this.connectEffectLeft(this._amplitudeL),this.connectEffectRight(this._amplitudeR),this._lfoL.connect(this._amplitudeL.gain),this._lfoR.connect(this._amplitudeR.gain),this.frequency.fan(this._lfoL.frequency,this._lfoR.frequency),this.depth.fan(this._lfoR.amplitude,this._lfoL.amplitude),this.spread=t.spread}static getDefaults(){return Object.assign(fi.getDefaults(),{frequency:10,type:"sine",depth:.5,spread:180})}start(t){return this._lfoL.start(t),this._lfoR.start(t),this}stop(t){return this._lfoL.stop(t),this._lfoR.stop(t),this}sync(){return this._lfoL.sync(),this._lfoR.sync(),this.context.transport.syncSignal(this.frequency),this}unsync(){return this._lfoL.unsync(),this._lfoR.unsync(),this.context.transport.unsyncSignal(this.frequency),this}get type(){return this._lfoL.type}set type(t){this._lfoL.type=t,this._lfoR.type=t}get spread(){return this._lfoR.phase-this._lfoL.phase}set spread(t){this._lfoL.phase=90-t/2,this._lfoR.phase=t/2+90}dispose(){return super.dispose(),this._lfoL.dispose(),this._lfoR.dispose(),this._amplitudeL.dispose(),this._amplitudeR.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Ic extends ke{constructor(){super(L(Ic.getDefaults(),arguments,["frequency","depth"])),this.name="Vibrato";const t=L(Ic.getDefaults(),arguments,["frequency","depth"]);this._delayNode=new yn({context:this.context,delayTime:0,maxDelay:t.maxDelay}),this._lfo=new en({context:this.context,type:t.type,min:0,max:t.maxDelay,frequency:t.frequency,phase:-90}).start().connect(this._delayNode.delayTime),this.frequency=this._lfo.frequency,this.depth=this._lfo.amplitude,this.depth.value=t.depth,Pt(this,["frequency","depth"]),this.effectSend.chain(this._delayNode,this.effectReturn)}static getDefaults(){return Object.assign(ke.getDefaults(),{maxDelay:.005,frequency:5,depth:.1,type:"sine"})}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._delayNode.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class Jr extends rt{constructor(){super(L(Jr.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const t=L(Jr.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new Tt({context:this.context}),this._split=new us({context:this.context,channels:t.channels}),this.input.connect(this._split),je(t.channels,1);for(let e=0;e<t.channels;e++)this._analysers[e]=this.context.createAnalyser(),this._split.connect(this._analysers[e],e,0);this.size=t.size,this.type=t.type}static getDefaults(){return Object.assign(rt.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((t,e)=>{const n=this._buffers[e];this._type==="fft"?t.getFloatFrequencyData(n):this._type==="waveform"&&t.getFloatTimeDomainData(n)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach((e,n)=>{e.fftSize=t*2,this._buffers[n]=new Float32Array(t)})}get channels(){return this._analysers.length}get type(){return this._type}set type(t){Ct(t==="waveform"||t==="fft",`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach(e=>e.smoothingTimeConstant=t)}dispose(){return super.dispose(),this._analysers.forEach(t=>t.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class ds extends rt{constructor(){super(L(ds.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new Jr({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Rc extends ds{constructor(){super(L(Rc.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const t=L(Rc.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new Jr({context:this.context,size:256,type:"waveform",channels:t.channels}),this.smoothing=t.smoothing,this.normalRange=t.normalRange}static getDefaults(){return Object.assign(ds.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return $o("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),n=(this.channels===1?[t]:t).map(s=>{const r=s.reduce((o,c)=>o+c*c,0),a=Math.sqrt(r/s.length);return this._rms=Math.max(a,this._rms*this.smoothing),this.normalRange?this._rms:Qo(this._rms)});return this.channels===1?n[0]:n}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}class Dc extends ds{constructor(){super(L(Dc.getDefaults(),arguments,["size"])),this.name="FFT";const t=L(Dc.getDefaults(),arguments,["size"]);this.normalRange=t.normalRange,this._analyser.type="fft",this.size=t.size}static getDefaults(){return Object.assign(rt.getDefaults(),{normalRange:!1,size:1024,smoothing:.8})}getValue(){return this._analyser.getValue().map(e=>this.normalRange?Lr(e):e)}get size(){return this._analyser.size}set size(t){this._analyser.size=t}get smoothing(){return this._analyser.smoothing}set smoothing(t){this._analyser.smoothing=t}getFrequencyOfIndex(t){return Ct(0<=t&&t<this.size,`index must be greater than or equal to 0 and less than ${this.size}`),t*this.context.sampleRate/(this.size*2)}}class gu extends ds{constructor(){super(L(gu.getDefaults(),arguments)),this.name="DCMeter",this._analyser.type="waveform",this._analyser.size=256}getValue(){return this._analyser.getValue()[0]}}class Pc extends ds{constructor(){super(L(Pc.getDefaults(),arguments,["size"])),this.name="Waveform";const t=L(Pc.getDefaults(),arguments,["size"]);this._analyser.type="waveform",this.size=t.size}static getDefaults(){return Object.assign(ds.getDefaults(),{size:1024})}getValue(){return this._analyser.getValue()}get size(){return this._analyser.size}set size(t){this._analyser.size=t}}class Ee extends rt{constructor(){super(L(Ee.getDefaults(),arguments,["solo"])),this.name="Solo";const t=L(Ee.getDefaults(),arguments,["solo"]);this.input=this.output=new Tt({context:this.context}),Ee._allSolos.has(this.context)||Ee._allSolos.set(this.context,new Set),Ee._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(rt.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),Ee._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){Ee._soloed.has(this.context)||Ee._soloed.set(this.context,new Set),Ee._soloed.get(this.context).add(this)}_removeSolo(){Ee._soloed.has(this.context)&&Ee._soloed.get(this.context).delete(this)}_isSoloed(){return Ee._soloed.has(this.context)&&Ee._soloed.get(this.context).has(this)}_noSolos(){return!Ee._soloed.has(this.context)||Ee._soloed.has(this.context)&&Ee._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),Ee._allSolos.get(this.context).delete(this),this._removeSolo(),this}}Ee._allSolos=new Map;Ee._soloed=new Map;class zo extends rt{constructor(){super(L(zo.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=L(zo.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new $r({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new hi({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Pt(this,["pan","volume"])}static getDefaults(){return Object.assign(rt.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class Ji extends rt{constructor(){super(L(Ji.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=L(Ji.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new Ee({solo:t.solo,context:this.context}),this._panVol=this.output=new zo({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Pt(this,["pan","volume"])}static getDefaults(){return Object.assign(rt.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return Ji.buses.has(t)||Ji.buses.set(t,new Tt({context:this.context})),Ji.buses.get(t)}send(t,e=0){const n=this._getBus(t),s=new Tt({context:this.context,units:"decibels",gain:e});return this.connect(s),s.connect(n),s}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}Ji.buses=new Map;class _u extends rt{constructor(){super(L(_u.getDefaults(),arguments)),this.name="Mono",this.input=new Tt({context:this.context}),this._merge=this.output=new Bi({channels:2,context:this.context}),this.input.connect(this._merge,0,0),this.input.connect(this._merge,0,1)}dispose(){return super.dispose(),this._merge.dispose(),this.input.dispose(),this}}class to extends rt{constructor(){super(L(to.getDefaults(),arguments,["lowFrequency","highFrequency"])),this.name="MultibandSplit",this.input=new Tt({context:this.context}),this.output=void 0,this.low=new hn({context:this.context,frequency:0,type:"lowpass"}),this._lowMidFilter=new hn({context:this.context,frequency:0,type:"highpass"}),this.mid=new hn({context:this.context,frequency:0,type:"lowpass"}),this.high=new hn({context:this.context,frequency:0,type:"highpass"}),this._internalChannels=[this.low,this.mid,this.high];const t=L(to.getDefaults(),arguments,["lowFrequency","highFrequency"]);this.lowFrequency=new Nt({context:this.context,units:"frequency",value:t.lowFrequency}),this.highFrequency=new Nt({context:this.context,units:"frequency",value:t.highFrequency}),this.Q=new Nt({context:this.context,units:"positive",value:t.Q}),this.input.fan(this.low,this.high),this.input.chain(this._lowMidFilter,this.mid),this.lowFrequency.fan(this.low.frequency,this._lowMidFilter.frequency),this.highFrequency.fan(this.mid.frequency,this.high.frequency),this.Q.connect(this.low.Q),this.Q.connect(this._lowMidFilter.Q),this.Q.connect(this.mid.Q),this.Q.connect(this.high.Q),Pt(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(rt.getDefaults(),{Q:1,highFrequency:2500,lowFrequency:400})}dispose(){return super.dispose(),Zo(this,["high","mid","low","highFrequency","lowFrequency"]),this.low.dispose(),this._lowMidFilter.dispose(),this.mid.dispose(),this.high.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this.Q.dispose(),this}}let qA=class extends rt{constructor(){super(...arguments),this.name="Listener",this.positionX=new Bt({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new Bt({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new Bt({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new Bt({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new Bt({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new Bt({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new Bt({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new Bt({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new Bt({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(rt.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}};tl(i=>{i.listener=new qA({context:i})});el(i=>{i.listener.dispose()});class Lc extends rt{constructor(){super(L(Lc.getDefaults(),arguments,["positionX","positionY","positionZ"])),this.name="Panner3D";const t=L(Lc.getDefaults(),arguments,["positionX","positionY","positionZ"]);this._panner=this.input=this.output=this.context.createPanner(),this.panningModel=t.panningModel,this.maxDistance=t.maxDistance,this.distanceModel=t.distanceModel,this.coneOuterGain=t.coneOuterGain,this.coneOuterAngle=t.coneOuterAngle,this.coneInnerAngle=t.coneInnerAngle,this.refDistance=t.refDistance,this.rolloffFactor=t.rolloffFactor,this.positionX=new Bt({context:this.context,param:this._panner.positionX,value:t.positionX}),this.positionY=new Bt({context:this.context,param:this._panner.positionY,value:t.positionY}),this.positionZ=new Bt({context:this.context,param:this._panner.positionZ,value:t.positionZ}),this.orientationX=new Bt({context:this.context,param:this._panner.orientationX,value:t.orientationX}),this.orientationY=new Bt({context:this.context,param:this._panner.orientationY,value:t.orientationY}),this.orientationZ=new Bt({context:this.context,param:this._panner.orientationZ,value:t.orientationZ})}static getDefaults(){return Object.assign(rt.getDefaults(),{coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:0,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1})}setPosition(t,e,n){return this.positionX.value=t,this.positionY.value=e,this.positionZ.value=n,this}setOrientation(t,e,n){return this.orientationX.value=t,this.orientationY.value=e,this.orientationZ.value=n,this}get panningModel(){return this._panner.panningModel}set panningModel(t){this._panner.panningModel=t}get refDistance(){return this._panner.refDistance}set refDistance(t){this._panner.refDistance=t}get rolloffFactor(){return this._panner.rolloffFactor}set rolloffFactor(t){this._panner.rolloffFactor=t}get distanceModel(){return this._panner.distanceModel}set distanceModel(t){this._panner.distanceModel=t}get coneInnerAngle(){return this._panner.coneInnerAngle}set coneInnerAngle(t){this._panner.coneInnerAngle=t}get coneOuterAngle(){return this._panner.coneOuterAngle}set coneOuterAngle(t){this._panner.coneOuterAngle=t}get coneOuterGain(){return this._panner.coneOuterGain}set coneOuterGain(t){this._panner.coneOuterGain=t}get maxDistance(){return this._panner.maxDistance}set maxDistance(t){this._panner.maxDistance=t}dispose(){return super.dispose(),this._panner.disconnect(),this.orientationX.dispose(),this.orientationY.dispose(),this.orientationZ.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this}}class Io extends rt{constructor(){super(L(Io.getDefaults(),arguments)),this.name="Recorder";const t=L(Io.getDefaults(),arguments);this.input=new Tt({context:this.context}),Ct(Io.supported,"Media Recorder API is not available"),this._stream=this.context.createMediaStreamDestination(),this.input.connect(this._stream),this._recorder=new MediaRecorder(this._stream.stream,{mimeType:t.mimeType})}static getDefaults(){return rt.getDefaults()}get mimeType(){return this._recorder.mimeType}static get supported(){return Ni!==null&&Reflect.has(Ni,"MediaRecorder")}get state(){return this._recorder.state==="inactive"?"stopped":this._recorder.state==="paused"?"paused":"started"}start(){return he(this,void 0,void 0,function*(){Ct(this.state!=="started","Recorder is already started");const t=new Promise(e=>{const n=()=>{this._recorder.removeEventListener("start",n,!1),e()};this._recorder.addEventListener("start",n,!1)});return this._recorder.start(),yield t})}stop(){return he(this,void 0,void 0,function*(){Ct(this.state!=="stopped","Recorder is not started");const t=new Promise(e=>{const n=s=>{this._recorder.removeEventListener("dataavailable",n,!1),e(s.data)};this._recorder.addEventListener("dataavailable",n,!1)});return this._recorder.stop(),yield t})}pause(){return Ct(this.state==="started","Recorder must be started"),this._recorder.pause(),this}dispose(){return super.dispose(),this.input.dispose(),this._stream.disconnect(),this}}class ai extends rt{constructor(){super(L(ai.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=L(ai.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new Bt({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new Bt({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new Bt({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new Bt({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new Bt({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),Pt(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(rt.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}class Oc extends rt{constructor(){super(Object.assign(L(Oc.getDefaults(),arguments,["threshold","smoothing"]))),this.name="Gate";const t=L(Oc.getDefaults(),arguments,["threshold","smoothing"]);this._follower=new Zr({context:this.context,smoothing:t.smoothing}),this._gt=new ko({context:this.context,value:Lr(t.threshold)}),this.input=new Tt({context:this.context}),this._gate=this.output=new Tt({context:this.context}),this.input.connect(this._gate),this.input.chain(this._follower,this._gt,this._gate.gain)}static getDefaults(){return Object.assign(rt.getDefaults(),{smoothing:.1,threshold:-40})}get threshold(){return Qo(this._gt.value)}set threshold(t){this._gt.value=Lr(t)}get smoothing(){return this._follower.smoothing}set smoothing(t){this._follower.smoothing=t}dispose(){return super.dispose(),this.input.dispose(),this._follower.dispose(),this._gt.dispose(),this._gate.dispose(),this}}class Nc extends rt{constructor(){super(Object.assign(L(Nc.getDefaults(),arguments,["threshold"]))),this.name="Limiter";const t=L(Nc.getDefaults(),arguments,["threshold"]);this._compressor=this.input=this.output=new ai({context:this.context,ratio:20,attack:.003,release:.01,threshold:t.threshold}),this.threshold=this._compressor.threshold,Pt(this,"threshold")}static getDefaults(){return Object.assign(rt.getDefaults(),{threshold:-12})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.dispose(),this.threshold.dispose(),this}}class Fc extends rt{constructor(){super(Object.assign(L(Fc.getDefaults(),arguments))),this.name="MidSideCompressor";const t=L(Fc.getDefaults(),arguments);this._midSideSplit=this.input=new ta({context:this.context}),this._midSideMerge=this.output=new ea({context:this.context}),this.mid=new ai(Object.assign(t.mid,{context:this.context})),this.side=new ai(Object.assign(t.side,{context:this.context})),this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid),this._midSideSplit.side.chain(this.side,this._midSideMerge.side),Pt(this,["mid","side"])}static getDefaults(){return Object.assign(rt.getDefaults(),{mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},side:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10}})}dispose(){return super.dispose(),this.mid.dispose(),this.side.dispose(),this._midSideSplit.dispose(),this._midSideMerge.dispose(),this}}class kc extends rt{constructor(){super(Object.assign(L(kc.getDefaults(),arguments))),this.name="MultibandCompressor";const t=L(kc.getDefaults(),arguments);this._splitter=this.input=new to({context:this.context,lowFrequency:t.lowFrequency,highFrequency:t.highFrequency}),this.lowFrequency=this._splitter.lowFrequency,this.highFrequency=this._splitter.highFrequency,this.output=new Tt({context:this.context}),this.low=new ai(Object.assign(t.low,{context:this.context})),this.mid=new ai(Object.assign(t.mid,{context:this.context})),this.high=new ai(Object.assign(t.high,{context:this.context})),this._splitter.low.chain(this.low,this.output),this._splitter.mid.chain(this.mid,this.output),this._splitter.high.chain(this.high,this.output),Pt(this,["high","mid","low","highFrequency","lowFrequency"])}static getDefaults(){return Object.assign(rt.getDefaults(),{lowFrequency:250,highFrequency:2e3,low:{ratio:6,threshold:-30,release:.25,attack:.03,knee:10},mid:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16},high:{ratio:3,threshold:-24,release:.03,attack:.02,knee:16}})}dispose(){return super.dispose(),this._splitter.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.output.dispose(),this}}class Uc extends rt{constructor(){super(L(Uc.getDefaults(),arguments,["low","mid","high"])),this.name="EQ3",this.output=new Tt({context:this.context}),this._internalChannels=[];const t=L(Uc.getDefaults(),arguments,["low","mid","high"]);this.input=this._multibandSplit=new to({context:this.context,highFrequency:t.highFrequency,lowFrequency:t.lowFrequency}),this._lowGain=new Tt({context:this.context,gain:t.low,units:"decibels"}),this._midGain=new Tt({context:this.context,gain:t.mid,units:"decibels"}),this._highGain=new Tt({context:this.context,gain:t.high,units:"decibels"}),this.low=this._lowGain.gain,this.mid=this._midGain.gain,this.high=this._highGain.gain,this.Q=this._multibandSplit.Q,this.lowFrequency=this._multibandSplit.lowFrequency,this.highFrequency=this._multibandSplit.highFrequency,this._multibandSplit.low.chain(this._lowGain,this.output),this._multibandSplit.mid.chain(this._midGain,this.output),this._multibandSplit.high.chain(this._highGain,this.output),Pt(this,["low","mid","high","lowFrequency","highFrequency"]),this._internalChannels=[this._multibandSplit]}static getDefaults(){return Object.assign(rt.getDefaults(),{high:0,highFrequency:2500,low:0,lowFrequency:400,mid:0})}dispose(){return super.dispose(),Zo(this,["low","mid","high","lowFrequency","highFrequency"]),this._multibandSplit.dispose(),this.lowFrequency.dispose(),this.highFrequency.dispose(),this._lowGain.dispose(),this._midGain.dispose(),this._highGain.dispose(),this.low.dispose(),this.mid.dispose(),this.high.dispose(),this.Q.dispose(),this}}class Bc extends rt{constructor(){super(L(Bc.getDefaults(),arguments,["url","onload"])),this.name="Convolver",this._convolver=this.context.createConvolver();const t=L(Bc.getDefaults(),arguments,["url","onload"]);this._buffer=new ne(t.url,e=>{this.buffer=e,t.onload()}),this.input=new Tt({context:this.context}),this.output=new Tt({context:this.context}),this._buffer.loaded&&(this.buffer=this._buffer),this.normalize=t.normalize,this.input.chain(this._convolver,this.output)}static getDefaults(){return Object.assign(rt.getDefaults(),{normalize:!0,onload:ee})}load(t){return he(this,void 0,void 0,function*(){this.buffer=yield this._buffer.load(t)})}get buffer(){return this._buffer.length?this._buffer:null}set buffer(t){t&&this._buffer.set(t),this._convolver.buffer&&(this.input.disconnect(),this._convolver.disconnect(),this._convolver=this.context.createConvolver(),this.input.chain(this._convolver,this.output));const e=this._buffer.get();this._convolver.buffer=e||null}get normalize(){return this._convolver.normalize}set normalize(t){this._convolver.normalize=t}dispose(){return super.dispose(),this._buffer.dispose(),this._convolver.disconnect(),this}}function Te(){return me().now()}function jA(){return me().immediate()}const XA=me().transport;function KA(){return me().transport}const yu=me().destination,YA=me().destination;function $A(){return me().destination}const ZA=me().listener;function QA(){return me().listener}const JA=me().draw;function tC(){return me().draw}const eC=me();function nC(){return ne.loaded()}const iC=ne,sC=po,rC=ki,oC=Object.freeze(Object.defineProperty({__proto__:null,AMOscillator:Ur,AMSynth:fu,Abs:Tm,Add:js,AmplitudeEnvelope:mo,Analyser:Jr,AudioToGain:il,AutoFilter:uc,AutoPanner:dc,AutoWah:fc,BaseContext:au,BiquadFilter:Wr,BitCrusher:pc,Buffer:iC,BufferSource:rC,Buffers:sC,Channel:Ji,Chebyshev:gc,Chorus:_c,Clock:ks,Compressor:ai,Context:ho,Convolver:Bc,CrossFade:Gs,DCMeter:gu,Delay:yn,Destination:yu,Distortion:yc,Draw:JA,DuoSynth:Bo,EQ3:Uc,Emitter:lo,Envelope:He,FFT:Dc,FMOscillator:Us,FMSynth:rc,FatOscillator:Br,FeedbackCombFilter:qr,FeedbackDelay:xc,Filter:hn,Follower:Zr,Freeverb:bc,Frequency:yh,FrequencyClass:ln,FrequencyEnvelope:Hr,FrequencyShifter:Sc,Gain:Tt,GainToAudio:Em,Gate:Oc,GrainPlayer:sc,GreaterThan:ko,GreaterThanZero:rl,IntervalTimeline:bm,JCReverb:Mc,LFO:en,Limiter:Nc,Listener:ZA,Loop:Yr,LowpassCombFilter:Xr,Master:YA,MembraneSynth:zs,Merge:Bi,MetalSynth:oc,Meter:Rc,MidSideCompressor:Fc,MidSideMerge:ea,MidSideSplit:ta,Midi:SA,MidiClass:Fr,Mono:_u,MonoSynth:ns,MultibandCompressor:kc,MultibandSplit:to,Multiply:ge,Negate:du,Noise:Ui,NoiseSynth:ac,Offline:xA,OfflineContext:uo,OmniOscillator:ui,OnePoleFilter:jr,Oscillator:pe,PWMOscillator:Vr,PanVol:zo,Panner:$r,Panner3D:Lc,Param:Bt,Part:wr,Pattern:cc,Phaser:Ec,PingPongDelay:wc,PitchShift:Tc,Player:Vs,Players:ic,PluckSynth:Vo,PolySynth:Di,Pow:zr,PulseOscillator:Bs,Recorder:Io,Reverb:Qr,Sampler:Kr,Scale:di,ScaleExp:Uo,Sequence:lc,Signal:Nt,Solo:Ee,Split:us,StateTimeline:fo,StereoWidener:Ac,Subtract:Xs,SyncedSignal:CA,Synth:gn,Ticks:bA,TicksClass:le,Time:gA,TimeClass:An,Timeline:ei,ToneAudioBuffer:ne,ToneAudioBuffers:po,ToneAudioNode:rt,ToneBufferSource:ki,ToneEvent:$n,ToneOscillatorNode:kr,Transport:XA,TransportTime:vA,TransportTimeClass:Le,Tremolo:Cc,Unit:TA,UserMedia:xr,Vibrato:Ic,Volume:hi,WaveShaper:zn,Waveform:Pc,Zero:sl,connect:xn,connectSeries:Rn,connectSignal:Jo,context:eC,dbToGain:Lr,debug:nA,defaultArg:Un,disconnect:hu,ftom:es,gainToDb:Qo,getContext:me,getDestination:$A,getDraw:tC,getListener:QA,getTransport:KA,immediate:jA,intervalToFrequencyRatio:Or,isArray:Ye,isBoolean:ru,isDefined:qt,isFunction:fm,isNote:Eo,isNumber:In,isObject:Oi,isString:Vn,isUndef:_n,loaded:nC,mtof:cu,now:Te,optionsFromArguments:L,setContext:Ja,start:xm,supported:tA,version:Uh},Symbol.toStringTag,{value:"Module"})),Is=class Is{constructor(){w(this,"modelInstance");w(this,"_raycasterId");w(this,"_pointerId");w(this,"_bodyName");w(this,"_bodyId");w(this,"_bodyUUID");w(this,"_keyId");w(this,"_keyboardId");w(this,"_selectedKey")}get raycasterId(){return this._raycasterId}set raycasterId(t){this._raycasterId=t}get bodyName(){return this._bodyName}set bodyName(t){this._bodyName=t}get bodyId(){return this._bodyId}set bodyId(t){this._bodyId=t,this.selectedKey}get bodyUUID(){return this._bodyUUID}set bodyUUID(t){this._bodyUUID=t}get keyId(){return this._keyId}set keyId(t){this._keyId=t}get keyboardId(){return this._keyboardId}set keyboardId(t){this._keyboardId=t}get selectedKey(){return this._selectedKey}set selectedKey(t){this._selectedKey=t}static get Instance(){return Is._instance||(Is._instance=new Is),Is._instance}populateWithDummyDetails(){this._keyId=1001,console.log(this._keyId),this._keyboardId=1001,console.log(this._keyboardId),this._bodyName="ajhInitialSelectedKey",console.log(this._bodyName)}};w(Is,"_instance",null);let Vc=Is;const To=new N;function Nn(i,t,e,n,s,r){const a=2*Math.PI*s/4,o=Math.max(r-2*s,0),c=Math.PI/4;To.copy(t),To[n]=0,To.normalize();const l=.5*a/(a+o),h=1-To.angleTo(i)/c;return Math.sign(To[e])===1?h*l:o/(a+o)+l+l*(1-h)}class zc extends li{constructor(t=1,e=1,n=1,s=2,r=.1){if(s=s*2+1,r=Math.min(t/2,e/2,n/2,r),super(1,1,1,s,s,s),s===1)return;const a=this.toNonIndexed();this.index=null,this.attributes.position=a.attributes.position,this.attributes.normal=a.attributes.normal,this.attributes.uv=a.attributes.uv;const o=new N,c=new N,l=new N(t,e,n).divideScalar(2).subScalar(r),h=this.attributes.position.array,u=this.attributes.normal.array,f=this.attributes.uv.array,m=h.length/6,g=new N,_=.5/s;for(let p=0,d=0;p<h.length;p+=3,d+=2)switch(o.fromArray(h,p),c.copy(o),c.x-=Math.sign(c.x)*_,c.y-=Math.sign(c.y)*_,c.z-=Math.sign(c.z)*_,c.normalize(),h[p+0]=l.x*Math.sign(o.x)+c.x*r,h[p+1]=l.y*Math.sign(o.y)+c.y*r,h[p+2]=l.z*Math.sign(o.z)+c.z*r,u[p+0]=c.x,u[p+1]=c.y,u[p+2]=c.z,Math.floor(p/m)){case 0:g.set(1,0,0),f[d+0]=Nn(g,c,"z","y",r,n),f[d+1]=1-Nn(g,c,"y","z",r,e);break;case 1:g.set(-1,0,0),f[d+0]=1-Nn(g,c,"z","y",r,n),f[d+1]=1-Nn(g,c,"y","z",r,e);break;case 2:g.set(0,1,0),f[d+0]=1-Nn(g,c,"x","z",r,t),f[d+1]=Nn(g,c,"z","x",r,n);break;case 3:g.set(0,-1,0),f[d+0]=1-Nn(g,c,"x","z",r,t),f[d+1]=1-Nn(g,c,"z","x",r,n);break;case 4:g.set(0,0,1),f[d+0]=1-Nn(g,c,"x","y",r,t),f[d+1]=1-Nn(g,c,"y","x",r,e);break;case 5:g.set(0,0,-1),f[d+0]=Nn(g,c,"x","y",r,t),f[d+1]=1-Nn(g,c,"y","x",r,e);break}}}class aC{constructor(){w(this,"_avatarGeometry");w(this,"_boxGeometry");w(this,"_sphereGeometry");w(this,"_geometriesArray");w(this,"_torusGeometry");w(this,"_bijaGeometry");w(this,"_cubeGeometry");w(this,"_keyGeometry");w(this,"_roundedCubeGeometry");w(this,"_octalSphereGeometry");w(this,"_smoothSphereGeometry");this._roundedCubeGeometry=new zc(1,1,1,7,.2),this._keyGeometry=new zc(1,1,1,7,.82),this.cubeGeometry=new li(1,1,1),this._boxGeometry=new li(1,1,1,5,5,5),this._sphereGeometry=new yr(1),this._octalSphereGeometry=new yr(1,8,8),this._smoothSphereGeometry=new yr(1,32,32),this._avatarGeometry=new Fh(.3,1),this._geometriesArray=new Array,this._bijaGeometry=new yr(.12,32,16)}get cubeGeometry(){return this._cubeGeometry}set cubeGeometry(t){this._cubeGeometry=t}get keyGeometry(){return this._keyGeometry}set keyGeometry(t){this._keyGeometry=t}get roundedCubeGeometry(){return this._roundedCubeGeometry}set roundedCubeGeometry(t){this._roundedCubeGeometry=t}get octalSphereGeometry(){return this._octalSphereGeometry}set octalSphereGeometry(t){this._octalSphereGeometry=t}get smoothSphereGeometry(){return this._smoothSphereGeometry}set smoothSphereGeometry(t){this._smoothSphereGeometry=t}get boxGeometry(){return this._boxGeometry}get sphereGeometry(){return this._sphereGeometry}get torusGeometry(){return this._torusGeometry}get geometriesArray(){return this._geometriesArray}get bijaGeometry(){return this._bijaGeometry}get avatarGeometry(){return this._avatarGeometry}set avatarGeometry(t){this._avatarGeometry=t}set boxGeometry(t){this._boxGeometry=t}set sphereGeometry(t){this._sphereGeometry=t}set torusGeometry(t){this._torusGeometry=t}set geometriesArray(t){this._geometriesArray=t}set bijaGeometry(t){this._bijaGeometry=t}}class cC{constructor(){w(this,"_avatarMaterial",new Fn({flatShading:!0,color:16750592,polygonOffset:!0,polygonOffsetUnits:1,polygonOffsetFactor:1}));w(this,"_glowMaterial");w(this,"_lambertMaterial");w(this,"_lambertParams",new Object);w(this,"_phongMaterial");w(this,"_phongParams",new Object);w(this,"_physicalMaterial");w(this,"_physicalMaterialParams",new Object);w(this,"_toonMaterial");w(this,"_toonMaterialParameters",new Object);w(this,"_backgroundMaterial");w(this,"_enterButtonMaterial");this.lambertParams.color=new xt(16776960),this._lambertMaterial=new bS(this.lambertParams),this._lambertMaterial.needsUpdate=!0,this._phongParams.color=new xt(16776960),this._phongMaterial=new xS(this.phongParams),this._phongMaterial.needsUpdate=!0,this._physicalMaterialParams.color=new xt(16776960),this._physicalMaterial=new vS(this.physicalMaterialParams),this._physicalMaterial.needsUpdate=!0,this._toonMaterialParameters.color=new xt(16776960),this._toonMaterialParameters.side=si,this._toonMaterial=new SS,this._toonMaterial.needsUpdate=!0;var t=["varying vec3 vNormal;","void main() {","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join(`
`),e=["varying vec3 vNormal;","void main() {","float intensity = pow( 0.8 - dot( vNormal, vec3( 0, 0, 1.0 ) ), 12.0 );","gl_FragColor = vec4( 1, 1.0, 1.0, 1.0 ) * intensity;","}"].join(`
`),n=cp.clone({});this.glowMaterial=new Fi({uniforms:n,vertexShader:t,fragmentShader:e,side:un,blending:$l,transparent:!0}),this.enterButtonMaterial=new Fn({color:"#C08715"}),this.backgroundMaterial=new Fn({color:"#5CF61F"})}get avatarMaterial(){return this._avatarMaterial}set avatarMaterial(t){this._avatarMaterial=t}get glowMaterial(){return this._glowMaterial}set glowMaterial(t){this._glowMaterial=t}get backgroundMaterial(){return this._backgroundMaterial}set backgroundMaterial(t){this._backgroundMaterial=t}get enterButtonMaterial(){return this._enterButtonMaterial}set enterButtonMaterial(t){this._enterButtonMaterial=t}get lambertMaterial(){return this._lambertMaterial}get phongMaterial(){return this._phongMaterial}get physicalMaterial(){return this._physicalMaterial}get lambertParams(){return this._lambertParams}get phongParams(){return this._phongParams}get physicalMaterialParams(){return this._physicalMaterialParams}get toonMaterial(){return this._toonMaterial}get toonMaterialParameters(){return this._toonMaterialParameters}set lambertMaterial(t){this._lambertMaterial=t}set phongMaterial(t){this._phongMaterial=t}set physicalMaterial(t){this._physicalMaterial=t}set lambertParams(t){this._lambertParams=t}set phongParams(t){this._phongParams=t}set physicalMaterialParams(t){this._physicalMaterialParams=t}set toonMaterial(t){this._toonMaterial=t}set toonMaterialParameters(t){this._toonMaterialParameters=t}}var vu={exports:{}},Tr=typeof Reflect=="object"?Reflect:null,If=Tr&&typeof Tr.apply=="function"?Tr.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)},Fa;Tr&&typeof Tr.ownKeys=="function"?Fa=Tr.ownKeys:Object.getOwnPropertySymbols?Fa=function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:Fa=function(t){return Object.getOwnPropertyNames(t)};function lC(i){console&&console.warn&&console.warn(i)}var Rm=Number.isNaN||function(t){return t!==t};function ae(){ae.init.call(this)}vu.exports=ae;vu.exports.once=fC;ae.EventEmitter=ae;ae.prototype._events=void 0;ae.prototype._eventsCount=0;ae.prototype._maxListeners=void 0;var Rf=10;function ol(i){if(typeof i!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i)}Object.defineProperty(ae,"defaultMaxListeners",{enumerable:!0,get:function(){return Rf},set:function(i){if(typeof i!="number"||i<0||Rm(i))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+i+".");Rf=i}});ae.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};ae.prototype.setMaxListeners=function(t){if(typeof t!="number"||t<0||Rm(t))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+t+".");return this._maxListeners=t,this};function Dm(i){return i._maxListeners===void 0?ae.defaultMaxListeners:i._maxListeners}ae.prototype.getMaxListeners=function(){return Dm(this)};ae.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var s=t==="error",r=this._events;if(r!==void 0)s=s&&r.error===void 0;else if(!s)return!1;if(s){var a;if(e.length>0&&(a=e[0]),a instanceof Error)throw a;var o=new Error("Unhandled error."+(a?" ("+a.message+")":""));throw o.context=a,o}var c=r[t];if(c===void 0)return!1;if(typeof c=="function")If(c,this,e);else for(var l=c.length,h=Fm(c,l),n=0;n<l;++n)If(h[n],this,e);return!0};function Pm(i,t,e,n){var s,r,a;if(ol(e),r=i._events,r===void 0?(r=i._events=Object.create(null),i._eventsCount=0):(r.newListener!==void 0&&(i.emit("newListener",t,e.listener?e.listener:e),r=i._events),a=r[t]),a===void 0)a=r[t]=e,++i._eventsCount;else if(typeof a=="function"?a=r[t]=n?[e,a]:[a,e]:n?a.unshift(e):a.push(e),s=Dm(i),s>0&&a.length>s&&!a.warned){a.warned=!0;var o=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");o.name="MaxListenersExceededWarning",o.emitter=i,o.type=t,o.count=a.length,lC(o)}return i}ae.prototype.addListener=function(t,e){return Pm(this,t,e,!1)};ae.prototype.on=ae.prototype.addListener;ae.prototype.prependListener=function(t,e){return Pm(this,t,e,!0)};function hC(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function Lm(i,t,e){var n={fired:!1,wrapFn:void 0,target:i,type:t,listener:e},s=hC.bind(n);return s.listener=e,n.wrapFn=s,s}ae.prototype.once=function(t,e){return ol(e),this.on(t,Lm(this,t,e)),this};ae.prototype.prependOnceListener=function(t,e){return ol(e),this.prependListener(t,Lm(this,t,e)),this};ae.prototype.removeListener=function(t,e){var n,s,r,a,o;if(ol(e),s=this._events,s===void 0)return this;if(n=s[t],n===void 0)return this;if(n===e||n.listener===e)--this._eventsCount===0?this._events=Object.create(null):(delete s[t],s.removeListener&&this.emit("removeListener",t,n.listener||e));else if(typeof n!="function"){for(r=-1,a=n.length-1;a>=0;a--)if(n[a]===e||n[a].listener===e){o=n[a].listener,r=a;break}if(r<0)return this;r===0?n.shift():uC(n,r),n.length===1&&(s[t]=n[0]),s.removeListener!==void 0&&this.emit("removeListener",t,o||e)}return this};ae.prototype.off=ae.prototype.removeListener;ae.prototype.removeAllListeners=function(t){var e,n,s;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[t]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[t]),this;if(arguments.length===0){var r=Object.keys(n),a;for(s=0;s<r.length;++s)a=r[s],a!=="removeListener"&&this.removeAllListeners(a);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(e=n[t],typeof e=="function")this.removeListener(t,e);else if(e!==void 0)for(s=e.length-1;s>=0;s--)this.removeListener(t,e[s]);return this};function Om(i,t,e){var n=i._events;if(n===void 0)return[];var s=n[t];return s===void 0?[]:typeof s=="function"?e?[s.listener||s]:[s]:e?dC(s):Fm(s,s.length)}ae.prototype.listeners=function(t){return Om(this,t,!0)};ae.prototype.rawListeners=function(t){return Om(this,t,!1)};ae.listenerCount=function(i,t){return typeof i.listenerCount=="function"?i.listenerCount(t):Nm.call(i,t)};ae.prototype.listenerCount=Nm;function Nm(i){var t=this._events;if(t!==void 0){var e=t[i];if(typeof e=="function")return 1;if(e!==void 0)return e.length}return 0}ae.prototype.eventNames=function(){return this._eventsCount>0?Fa(this._events):[]};function Fm(i,t){for(var e=new Array(t),n=0;n<t;++n)e[n]=i[n];return e}function uC(i,t){for(;t+1<i.length;t++)i[t]=i[t+1];i.pop()}function dC(i){for(var t=new Array(i.length),e=0;e<t.length;++e)t[e]=i[e].listener||i[e];return t}function fC(i,t){return new Promise(function(e,n){function s(a){i.removeListener(t,r),n(a)}function r(){typeof i.removeListener=="function"&&i.removeListener("error",s),e([].slice.call(arguments))}km(i,t,r,{once:!0}),t!=="error"&&pC(i,s,{once:!0})})}function pC(i,t,e){typeof i.on=="function"&&km(i,"error",t,e)}function km(i,t,e,n){if(typeof i.on=="function")n.once?i.once(t,e):i.on(t,e);else if(typeof i.addEventListener=="function")i.addEventListener(t,function s(r){n.once&&i.removeEventListener(t,s),e(r)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof i)}var mC=vu.exports;class Mh{constructor(){w(this,"_emitter",new mC.EventEmitter)}get emitter(){return this._emitter.getMaxListeners()!=1024&&this._emitter.setMaxListeners(1024),this._emitter}set emitter(t){this._emitter=t}emit(t,...e){this.emitter.emit(t,...e)}on(t,e){this.emitter.on(t,e)}off(t,e){this.emitter.off(t,e)}}function gC(){const i=new Mh;return i.emitter.setMaxListeners(1024),i}function _C(){return new Mh().emitter.setMaxListeners(1024),new Mh}/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.19.2
 * @author George Michael Brower
 * @license MIT
 */class ci{constructor(t,e,n,s,r="div"){this.parent=t,this.object=e,this.property=n,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement(r),this.domElement.classList.add("controller"),this.domElement.classList.add(s),this.$name=document.createElement("div"),this.$name.classList.add("name"),ci.nextNameID=ci.nextNameID||0,this.$name.id=`lil-gui-name-${++ci.nextNameID}`,this.$widget=document.createElement("div"),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.domElement.addEventListener("keydown",a=>a.stopPropagation()),this.domElement.addEventListener("keyup",a=>a.stopPropagation()),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(n)}name(t){return this._name=t,this.$name.textContent=t,this}onChange(t){return this._onChange=t,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(t=!0){return this.disable(!t)}disable(t=!0){return t===this._disabled?this:(this._disabled=t,this.domElement.classList.toggle("disabled",t),this.$disable.toggleAttribute("disabled",t),this)}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(t){const e=this.parent.add(this.object,this.property,t);return e.name(this._name),this.destroy(),e}min(t){return this}max(t){return this}step(t){return this}decimals(t){return this}listen(t=!0){return this._listening=t,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const t=this.save();t!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=t}getValue(){return this.object[this.property]}setValue(t){return this.getValue()!==t&&(this.object[this.property]=t,this._callOnChange(),this.updateDisplay()),this}updateDisplay(){return this}load(t){return this.setValue(t),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class yC extends ci{constructor(t,e,n){super(t,e,n,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function wh(i){let t,e;return(t=i.match(/(#|0x)?([a-f0-9]{6})/i))?e=t[2]:(t=i.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?e=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=i.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(e=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),e?"#"+e:!1}const vC={isPrimitive:!0,match:i=>typeof i=="string",fromHexString:wh,toHexString:wh},Go={isPrimitive:!0,match:i=>typeof i=="number",fromHexString:i=>parseInt(i.substring(1),16),toHexString:i=>"#"+i.toString(16).padStart(6,0)},xC={isPrimitive:!1,match:i=>Array.isArray(i),fromHexString(i,t,e=1){const n=Go.fromHexString(i);t[0]=(n>>16&255)/255*e,t[1]=(n>>8&255)/255*e,t[2]=(n&255)/255*e},toHexString([i,t,e],n=1){n=255/n;const s=i*n<<16^t*n<<8^e*n<<0;return Go.toHexString(s)}},SC={isPrimitive:!1,match:i=>Object(i)===i,fromHexString(i,t,e=1){const n=Go.fromHexString(i);t.r=(n>>16&255)/255*e,t.g=(n>>8&255)/255*e,t.b=(n&255)/255*e},toHexString({r:i,g:t,b:e},n=1){n=255/n;const s=i*n<<16^t*n<<8^e*n<<0;return Go.toHexString(s)}},bC=[vC,Go,xC,SC];function MC(i){return bC.find(t=>t.match(i))}class wC extends ci{constructor(t,e,n,s){super(t,e,n,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=MC(this.initialValue),this._rgbScale=s,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const r=wh(this.$text.value);r&&this._setValueFromHexString(r)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(t){if(this._format.isPrimitive){const e=this._format.fromHexString(t);this.setValue(e)}else this._format.fromHexString(t,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(t){return this._setValueFromHexString(t),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class jl extends ci{constructor(t,e,n){super(t,e,n,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",s=>{s.preventDefault(),this.getValue().call(this.object),this._callOnChange()}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class TC extends ci{constructor(t,e,n,s,r,a){super(t,e,n,"number"),this._initInput(),this.min(s),this.max(r);const o=a!==void 0;this.step(o?a:this._getImplicitStep(),o),this.updateDisplay()}decimals(t){return this._decimals=t,this.updateDisplay(),this}min(t){return this._min=t,this._onUpdateMinMax(),this}max(t){return this._max=t,this._onUpdateMinMax(),this}step(t,e=!0){return this._step=t,this._stepExplicit=e,this}updateDisplay(){const t=this.getValue();if(this._hasSlider){let e=(t-this._min)/(this._max-this._min);e=Math.max(0,Math.min(e,1)),this.$fill.style.width=e*100+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?t:t.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),window.matchMedia("(pointer: coarse)").matches&&(this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any")),this.$widget.appendChild(this.$input),this.$disable=this.$input;const e=()=>{let y=parseFloat(this.$input.value);isNaN(y)||(this._stepExplicit&&(y=this._snap(y)),this.setValue(this._clamp(y)))},n=y=>{const v=parseFloat(this.$input.value);isNaN(v)||(this._snapClampSetValue(v+y),this.$input.value=this.getValue())},s=y=>{y.key==="Enter"&&this.$input.blur(),y.code==="ArrowUp"&&(y.preventDefault(),n(this._step*this._arrowKeyMultiplier(y))),y.code==="ArrowDown"&&(y.preventDefault(),n(this._step*this._arrowKeyMultiplier(y)*-1))},r=y=>{this._inputFocused&&(y.preventDefault(),n(this._step*this._normalizeMouseWheel(y)))};let a=!1,o,c,l,h,u;const f=5,m=y=>{o=y.clientX,c=l=y.clientY,a=!0,h=this.getValue(),u=0,window.addEventListener("mousemove",g),window.addEventListener("mouseup",_)},g=y=>{if(a){const v=y.clientX-o,S=y.clientY-c;Math.abs(S)>f?(y.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(v)>f&&_()}if(!a){const v=y.clientY-l;u-=v*this._step*this._arrowKeyMultiplier(y),h+u>this._max?u=this._max-h:h+u<this._min&&(u=this._min-h),this._snapClampSetValue(h+u)}l=y.clientY},_=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",g),window.removeEventListener("mouseup",_)},p=()=>{this._inputFocused=!0},d=()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()};this.$input.addEventListener("input",e),this.$input.addEventListener("keydown",s),this.$input.addEventListener("wheel",r,{passive:!1}),this.$input.addEventListener("mousedown",m),this.$input.addEventListener("focus",p),this.$input.addEventListener("blur",d)}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const t=(d,y,v,S,b)=>(d-y)/(v-y)*(b-S)+S,e=d=>{const y=this.$slider.getBoundingClientRect();let v=t(d,y.left,y.right,this._min,this._max);this._snapClampSetValue(v)},n=d=>{this._setDraggingStyle(!0),e(d.clientX),window.addEventListener("mousemove",s),window.addEventListener("mouseup",r)},s=d=>{e(d.clientX)},r=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",s),window.removeEventListener("mouseup",r)};let a=!1,o,c;const l=d=>{d.preventDefault(),this._setDraggingStyle(!0),e(d.touches[0].clientX),a=!1},h=d=>{d.touches.length>1||(this._hasScrollBar?(o=d.touches[0].clientX,c=d.touches[0].clientY,a=!0):l(d),window.addEventListener("touchmove",u,{passive:!1}),window.addEventListener("touchend",f))},u=d=>{if(a){const y=d.touches[0].clientX-o,v=d.touches[0].clientY-c;Math.abs(y)>Math.abs(v)?l(d):(window.removeEventListener("touchmove",u),window.removeEventListener("touchend",f))}else d.preventDefault(),e(d.touches[0].clientX)},f=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",u),window.removeEventListener("touchend",f)},m=this._callOnFinishChange.bind(this),g=400;let _;const p=d=>{if(Math.abs(d.deltaX)<Math.abs(d.deltaY)&&this._hasScrollBar)return;d.preventDefault();const v=this._normalizeMouseWheel(d)*this._step;this._snapClampSetValue(this.getValue()+v),this.$input.value=this.getValue(),clearTimeout(_),_=setTimeout(m,g)};this.$slider.addEventListener("mousedown",n),this.$slider.addEventListener("touchstart",h,{passive:!1}),this.$slider.addEventListener("wheel",p,{passive:!1})}_setDraggingStyle(t,e="horizontal"){this.$slider&&this.$slider.classList.toggle("active",t),document.body.classList.toggle("lil-gui-dragging",t),document.body.classList.toggle(`lil-gui-${e}`,t)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(t){let{deltaX:e,deltaY:n}=t;return Math.floor(t.deltaY)!==t.deltaY&&t.wheelDelta&&(e=0,n=-t.wheelDelta/120,n*=this._stepExplicit?1:10),e+-n}_arrowKeyMultiplier(t){let e=this._stepExplicit?1:10;return t.shiftKey?e*=10:t.altKey&&(e/=10),e}_snap(t){const e=Math.round(t/this._step)*this._step;return parseFloat(e.toPrecision(15))}_clamp(t){return t<this._min&&(t=this._min),t>this._max&&(t=this._max),t}_snapClampSetValue(t){this.setValue(this._clamp(this._snap(t)))}get _hasScrollBar(){const t=this.parent.root.$children;return t.scrollHeight>t.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class EC extends ci{constructor(t,e,n,s){super(t,e,n,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.options(s)}options(t){return this._values=Array.isArray(t)?t:Object.values(t),this._names=Array.isArray(t)?t:Object.keys(t),this.$select.replaceChildren(),this._names.forEach(e=>{const n=document.createElement("option");n.textContent=e,this.$select.appendChild(n)}),this.updateDisplay(),this}updateDisplay(){const t=this.getValue(),e=this._values.indexOf(t);return this.$select.selectedIndex=e,this.$display.textContent=e===-1?t:this._names[e],this}}class AC extends ci{constructor(t,e,n){super(t,e,n,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("spellcheck","false"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",s=>{s.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}const CC=`.lil-gui {
  font-family: var(--font-family);
  font-size: var(--font-size);
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  text-align: left;
  color: var(--text-color);
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  --background-color: #1f1f1f;
  --text-color: #ebebeb;
  --title-background-color: #111111;
  --title-text-color: #ebebeb;
  --widget-color: #424242;
  --hover-color: #4f4f4f;
  --focus-color: #595959;
  --number-color: #2cc9ff;
  --string-color: #a2db3c;
  --font-size: 11px;
  --input-font-size: 11px;
  --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;
  --font-family-mono: Menlo, Monaco, Consolas, "Droid Sans Mono", monospace;
  --padding: 4px;
  --spacing: 4px;
  --widget-height: 20px;
  --title-height: calc(var(--widget-height) + var(--spacing) * 1.25);
  --name-width: 45%;
  --slider-knob-width: 2px;
  --slider-input-width: 27%;
  --color-input-width: 27%;
  --slider-input-min-width: 45px;
  --color-input-min-width: 45px;
  --folder-indent: 7px;
  --widget-padding: 0 0 0 3px;
  --widget-border-radius: 2px;
  --checkbox-size: calc(0.75 * var(--widget-height));
  --scrollbar-width: 5px;
}
.lil-gui, .lil-gui * {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
.lil-gui.root {
  width: var(--width, 245px);
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}
.lil-gui.root > .title {
  background: var(--title-background-color);
  color: var(--title-text-color);
}
.lil-gui.root > .children {
  overflow-x: hidden;
  overflow-y: auto;
}
.lil-gui.root > .children::-webkit-scrollbar {
  width: var(--scrollbar-width);
  height: var(--scrollbar-width);
  background: var(--background-color);
}
.lil-gui.root > .children::-webkit-scrollbar-thumb {
  border-radius: var(--scrollbar-width);
  background: var(--focus-color);
}
@media (pointer: coarse) {
  .lil-gui.allow-touch-styles, .lil-gui.allow-touch-styles .lil-gui {
    --widget-height: 28px;
    --padding: 6px;
    --spacing: 6px;
    --font-size: 13px;
    --input-font-size: 16px;
    --folder-indent: 10px;
    --scrollbar-width: 7px;
    --slider-input-min-width: 50px;
    --color-input-min-width: 65px;
  }
}
.lil-gui.force-touch-styles, .lil-gui.force-touch-styles .lil-gui {
  --widget-height: 28px;
  --padding: 6px;
  --spacing: 6px;
  --font-size: 13px;
  --input-font-size: 16px;
  --folder-indent: 10px;
  --scrollbar-width: 7px;
  --slider-input-min-width: 50px;
  --color-input-min-width: 65px;
}
.lil-gui.autoPlace {
  max-height: 100%;
  position: fixed;
  top: 0;
  right: 15px;
  z-index: 1001;
}

.lil-gui .controller {
  display: flex;
  align-items: center;
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
}
.lil-gui .controller.disabled {
  opacity: 0.5;
}
.lil-gui .controller.disabled, .lil-gui .controller.disabled * {
  pointer-events: none !important;
}
.lil-gui .controller > .name {
  min-width: var(--name-width);
  flex-shrink: 0;
  white-space: pre;
  padding-right: var(--spacing);
  line-height: var(--widget-height);
}
.lil-gui .controller .widget {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  min-height: var(--widget-height);
}
.lil-gui .controller.string input {
  color: var(--string-color);
}
.lil-gui .controller.boolean {
  cursor: pointer;
}
.lil-gui .controller.color .display {
  width: 100%;
  height: var(--widget-height);
  border-radius: var(--widget-border-radius);
  position: relative;
}
@media (hover: hover) {
  .lil-gui .controller.color .display:hover:before {
    content: " ";
    display: block;
    position: absolute;
    border-radius: var(--widget-border-radius);
    border: 1px solid #fff9;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }
}
.lil-gui .controller.color input[type=color] {
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.lil-gui .controller.color input[type=text] {
  margin-left: var(--spacing);
  font-family: var(--font-family-mono);
  min-width: var(--color-input-min-width);
  width: var(--color-input-width);
  flex-shrink: 0;
}
.lil-gui .controller.option select {
  opacity: 0;
  position: absolute;
  width: 100%;
  max-width: 100%;
}
.lil-gui .controller.option .display {
  position: relative;
  pointer-events: none;
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  line-height: var(--widget-height);
  max-width: 100%;
  overflow: hidden;
  word-break: break-all;
  padding-left: 0.55em;
  padding-right: 1.75em;
  background: var(--widget-color);
}
@media (hover: hover) {
  .lil-gui .controller.option .display.focus {
    background: var(--focus-color);
  }
}
.lil-gui .controller.option .display.active {
  background: var(--focus-color);
}
.lil-gui .controller.option .display:after {
  font-family: "lil-gui";
  content: "↕";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  padding-right: 0.375em;
}
.lil-gui .controller.option .widget,
.lil-gui .controller.option select {
  cursor: pointer;
}
@media (hover: hover) {
  .lil-gui .controller.option .widget:hover .display {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number input {
  color: var(--number-color);
}
.lil-gui .controller.number.hasSlider input {
  margin-left: var(--spacing);
  width: var(--slider-input-width);
  min-width: var(--slider-input-min-width);
  flex-shrink: 0;
}
.lil-gui .controller.number .slider {
  width: 100%;
  height: var(--widget-height);
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  padding-right: var(--slider-knob-width);
  overflow: hidden;
  cursor: ew-resize;
  touch-action: pan-y;
}
@media (hover: hover) {
  .lil-gui .controller.number .slider:hover {
    background: var(--hover-color);
  }
}
.lil-gui .controller.number .slider.active {
  background: var(--focus-color);
}
.lil-gui .controller.number .slider.active .fill {
  opacity: 0.95;
}
.lil-gui .controller.number .fill {
  height: 100%;
  border-right: var(--slider-knob-width) solid var(--number-color);
  box-sizing: content-box;
}

.lil-gui-dragging .lil-gui {
  --hover-color: var(--widget-color);
}
.lil-gui-dragging * {
  cursor: ew-resize !important;
}

.lil-gui-dragging.lil-gui-vertical * {
  cursor: ns-resize !important;
}

.lil-gui .title {
  height: var(--title-height);
  line-height: calc(var(--title-height) - 4px);
  font-weight: 600;
  padding: 0 var(--padding);
  -webkit-tap-highlight-color: transparent;
  cursor: pointer;
  outline: none;
  text-decoration-skip: objects;
}
.lil-gui .title:before {
  font-family: "lil-gui";
  content: "▾";
  padding-right: 2px;
  display: inline-block;
}
.lil-gui .title:active {
  background: var(--title-background-color);
  opacity: 0.75;
}
@media (hover: hover) {
  body:not(.lil-gui-dragging) .lil-gui .title:hover {
    background: var(--title-background-color);
    opacity: 0.85;
  }
  .lil-gui .title:focus {
    text-decoration: underline var(--focus-color);
  }
}
.lil-gui.root > .title:focus {
  text-decoration: none !important;
}
.lil-gui.closed > .title:before {
  content: "▸";
}
.lil-gui.closed > .children {
  transform: translateY(-7px);
  opacity: 0;
}
.lil-gui.closed:not(.transition) > .children {
  display: none;
}
.lil-gui.transition > .children {
  transition-duration: 300ms;
  transition-property: height, opacity, transform;
  transition-timing-function: cubic-bezier(0.2, 0.6, 0.35, 1);
  overflow: hidden;
  pointer-events: none;
}
.lil-gui .children:empty:before {
  content: "Empty";
  padding: 0 var(--padding);
  margin: var(--spacing) 0;
  display: block;
  height: var(--widget-height);
  font-style: italic;
  line-height: var(--widget-height);
  opacity: 0.5;
}
.lil-gui.root > .children > .lil-gui > .title {
  border: 0 solid var(--widget-color);
  border-width: 1px 0;
  transition: border-color 300ms;
}
.lil-gui.root > .children > .lil-gui.closed > .title {
  border-bottom-color: transparent;
}
.lil-gui + .controller {
  border-top: 1px solid var(--widget-color);
  margin-top: 0;
  padding-top: var(--spacing);
}
.lil-gui .lil-gui .lil-gui > .title {
  border: none;
}
.lil-gui .lil-gui .lil-gui > .children {
  border: none;
  margin-left: var(--folder-indent);
  border-left: 2px solid var(--widget-color);
}
.lil-gui .lil-gui .controller {
  border: none;
}

.lil-gui label, .lil-gui input, .lil-gui button {
  -webkit-tap-highlight-color: transparent;
}
.lil-gui input {
  border: 0;
  outline: none;
  font-family: var(--font-family);
  font-size: var(--input-font-size);
  border-radius: var(--widget-border-radius);
  height: var(--widget-height);
  background: var(--widget-color);
  color: var(--text-color);
  width: 100%;
}
@media (hover: hover) {
  .lil-gui input:hover {
    background: var(--hover-color);
  }
  .lil-gui input:active {
    background: var(--focus-color);
  }
}
.lil-gui input:disabled {
  opacity: 1;
}
.lil-gui input[type=text],
.lil-gui input[type=number] {
  padding: var(--widget-padding);
  -moz-appearance: textfield;
}
.lil-gui input[type=text]:focus,
.lil-gui input[type=number]:focus {
  background: var(--focus-color);
}
.lil-gui input[type=checkbox] {
  appearance: none;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  border-radius: var(--widget-border-radius);
  text-align: center;
  cursor: pointer;
}
.lil-gui input[type=checkbox]:checked:before {
  font-family: "lil-gui";
  content: "✓";
  font-size: var(--checkbox-size);
  line-height: var(--checkbox-size);
}
@media (hover: hover) {
  .lil-gui input[type=checkbox]:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button {
  outline: none;
  cursor: pointer;
  font-family: var(--font-family);
  font-size: var(--font-size);
  color: var(--text-color);
  width: 100%;
  height: var(--widget-height);
  text-transform: none;
  background: var(--widget-color);
  border-radius: var(--widget-border-radius);
  border: none;
}
@media (hover: hover) {
  .lil-gui button:hover {
    background: var(--hover-color);
  }
  .lil-gui button:focus {
    box-shadow: inset 0 0 0 1px var(--focus-color);
  }
}
.lil-gui button:active {
  background: var(--focus-color);
}

@font-face {
  font-family: "lil-gui";
  src: url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff");
}`;function IC(i){const t=document.createElement("style");t.innerHTML=i;const e=document.querySelector("head link[rel=stylesheet], head style");e?document.head.insertBefore(t,e):document.head.appendChild(t)}let Df=!1;class xu{constructor({parent:t,autoPlace:e=t===void 0,container:n,width:s,title:r="Controls",closeFolders:a=!1,injectStyles:o=!0,touchStyles:c=!0}={}){if(this.parent=t,this.root=t?t.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",l=>{(l.code==="Enter"||l.code==="Space")&&(l.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(r),this.parent){this.parent.children.push(this),this.parent.folders.push(this),this.parent.$children.appendChild(this.domElement);return}this.domElement.classList.add("root"),c&&this.domElement.classList.add("allow-touch-styles"),!Df&&o&&(IC(CC),Df=!0),n?n.appendChild(this.domElement):e&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),s&&this.domElement.style.setProperty("--width",s+"px"),this._closeFolders=a}add(t,e,n,s,r){if(Object(n)===n)return new EC(this,t,e,n);const a=t[e];switch(typeof a){case"number":return new TC(this,t,e,n,s,r);case"boolean":return new yC(this,t,e);case"string":return new AC(this,t,e);case"function":return new jl(this,t,e)}console.error(`gui.add failed
	property:`,e,`
	object:`,t,`
	value:`,a)}addColor(t,e,n=1){return new wC(this,t,e,n)}addFolder(t){const e=new xu({parent:this,title:t});return this.root._closeFolders&&e.close(),e}load(t,e=!0){return t.controllers&&this.controllers.forEach(n=>{n instanceof jl||n._name in t.controllers&&n.load(t.controllers[n._name])}),e&&t.folders&&this.folders.forEach(n=>{n._title in t.folders&&n.load(t.folders[n._title])}),this}save(t=!0){const e={controllers:{},folders:{}};return this.controllers.forEach(n=>{if(!(n instanceof jl)){if(n._name in e.controllers)throw new Error(`Cannot save GUI with duplicate property "${n._name}"`);e.controllers[n._name]=n.save()}}),t&&this.folders.forEach(n=>{if(n._title in e.folders)throw new Error(`Cannot save GUI with duplicate folder "${n._title}"`);e.folders[n._title]=n.save()}),e}open(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}_setClosed(t){this._closed!==t&&(this._closed=t,this._callOnOpenClose(this))}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(t=!0){return this._setClosed(!t),this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const e=this.$children.clientHeight;this.$children.style.height=e+"px",this.domElement.classList.add("transition");const n=r=>{r.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",n))};this.$children.addEventListener("transitionend",n);const s=t?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!t),requestAnimationFrame(()=>{this.$children.style.height=s+"px"})}),this}title(t){return this._title=t,this.$title.textContent=t,this}reset(t=!0){return(t?this.controllersRecursive():this.controllers).forEach(n=>n.reset()),this}onChange(t){return this._onChange=t,this}_callOnChange(t){this.parent&&this.parent._callOnChange(t),this._onChange!==void 0&&this._onChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(t){this.parent&&this.parent._callOnFinishChange(t),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onOpenClose(t){return this._onOpenClose=t,this}_callOnOpenClose(t){this.parent&&this.parent._callOnOpenClose(t),this._onOpenClose!==void 0&&this._onOpenClose.call(this,t)}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(t=>t.destroy())}controllersRecursive(){let t=Array.from(this.controllers);return this.folders.forEach(e=>{t=t.concat(e.controllersRecursive())}),t}foldersRecursive(){let t=Array.from(this.folders);return this.folders.forEach(e=>{t=t.concat(e.foldersRecursive())}),t}}class RC{constructor(t,e=24){w(this,"seedColours",[new xt(255),new xt(65280),new xt(16711680),new xt(16776960)]);w(this,"_gold",new xt(11184640));w(this,"_mutedColour",new xt(4210752));w(this,"_id");w(this,"_seedColour");w(this,"_light");w(this,"_dark");w(this,"_amountOfColours");w(this,"_lightdarkArray");w(this,"_spectrumArray");w(this,"_spectrumLightArray");w(this,"_spectrumDarkArray");this._id=t,this._amountOfColours=e,this._seedColour=this.seedColours[t],this._lightdarkArray=this.generateLightToDarkArray(e,this.seedColours[t]),this._spectrumArray=this.generateSpectrumArray(e,.2),this._spectrumLightArray=this.generateSpectrumArray(e,.4),this._spectrumDarkArray=this.generateSpectrumArray(e,.04),this._light=this.lightdarkArray[this.lightdarkArray.length-1],this._dark=this.lightdarkArray[0]}get gold(){return this._gold}set gold(t){this._gold=t}get mutedColour(){return this._mutedColour}set mutedColour(t){this._mutedColour=t}get spectrumLightArray(){return this._spectrumLightArray}set spectrumLightArray(t){this._spectrumLightArray=t}get spectrumDarkArray(){return this._spectrumDarkArray}set spectrumDarkArray(t){this._spectrumDarkArray=t}generateColourArray(t,e=!1){let n;return e?n=this.generateLightToDarkArray(t,this._seedColour):n=this.generateSpectrumArray(t),n}generateSpectrumArray(t,e=.5){let n=Math.random()*1,s=[];for(let r=0;r<t;r++){let a=new xt;n=0+r/t*1,a.setHSL(n,1,e),s.push(a)}return s}generateLightToDarkArray(t,e=new xt(65280)){let n=.16,s={h:0,s:0,l:0};e.getHSL(s);let r=[];for(let a=0;a<t;a++){let o=new xt;n=.003+a/t*.9,o.setHSL(s.h,s.s,n),r.push(o)}return r}generateRandomColours(t,e){for(let n=0;n<t;n++){let s=new xt,r=Math.random(),a=Math.random(),o=Math.random();s.setRGB(r,a,o),e.push(s),console.log("---> generatedColour: "+e[n].r)}}get id(){return this._id}get light(){return this._light}get dark(){return this._dark}get amountOfColours(){return this._amountOfColours}get seedColour(){return this._seedColour}get lightdarkArray(){return this._lightdarkArray}get spectrumArray(){return this._spectrumArray}set id(t){this._id=t}set light(t){this._light=t}set dark(t){this._dark=t}set amountOfColours(t){this._amountOfColours=t}set lightdarkArray(t){this._lightdarkArray=t}set seedColour(t){this._seedColour=t}set spectrumArray(t){this._spectrumArray=t}}class DC{constructor(){}}class PC{constructor(){}}class LC{constructor(){}}class OC{constructor(){}}class NC{constructor(){w(this,"_selectedKeys",new Array)}get selectedKeys(){return this._selectedKeys}set selectedKeys(t){this._selectedKeys=t}removeSelectedKeyByRayCasterId(t){for(let e=0;e<this._selectedKeys.length;e++)this._selectedKeys[e].raycasterId==t&&this._selectedKeys.splice(e,1)}checkIfExistsAndUpdateOrCreateNewSelectedKey(t,e,n,s,r,a,o){let c=!1,l;for(let h=0;h<this._selectedKeys.length;h++){const u=this._selectedKeys[h];u.raycasterId==a&&(l=u,c=!0)}if(c)l.bodyId=t,l.bodyName=e,l.bodyUUID=n,l.keyId=s,l.keyboardId=r,l.raycasterId=a,l.selectedKey=o;else{let h=new Vc;h.bodyId=t,h.bodyName=e,h.bodyUUID=n,h.keyId=s,h.keyboardId=r,h.raycasterId=a,h.selectedKey=o,this._selectedKeys.push(h)}}getSelectedKeyByRayCasterId(t){let e=null;for(let n=0;n<this._selectedKeys.length;n++){const s=this._selectedKeys[n];s.raycasterId==t&&(e=s)}return e}getSelectedKeyByBodyUUID(t){let e=null;for(let n=0;n<this._selectedKeys.length;n++){const s=this._selectedKeys[n];s.bodyUUID==t&&(e=s)}return e}}class Um{constructor(){w(this,"HorizontalKeys","horizontal");w(this,"VerticalKeys","vertical");w(this,"CirclesOfKeys","circular");w(this,"RandomlyPlacedKeys","random");w(this,"ThreeDimensionalKeys","threedimensionalkeys");w(this,"Voronoi","voronoi");w(this,"EffectsXY","effectsxy")}}class FC{constructor(t){w(this,"modelInstance");w(this,"INTERSECTED");w(this,"_rayCaster",new Xc);w(this,"_id");this.id=t,this.modelInstance=Sn.Instance}get rayCaster(){return this._rayCaster}set rayCaster(t){this._rayCaster=t}get id(){return this._id}set id(t){this._id=t}setRaycasterToCamera(){this.rayCaster.setFromCamera(this.modelInstance.raycasterPointers.getRayPointerByID(this.id).rayPointer,this.modelInstance.camera)}findInstrumentKeysFromRaycast(){let t;try{t=this.rayCaster.intersectObjects(this.modelInstance.currentKeyBoard.getKeyBodies(),!1),t.length>0?(this.INTERSECTED!=t[0].object&&(this.INTERSECTED&&console.log("INTERSECTED????"),this.INTERSECTED!=t[0].object,this.INTERSECTED=t[0].object,console.log("RAY IS NOW TOUCHING "+this.INTERSECTED.uuid+" : "+this.modelInstance.currentKeyBoard.getKeyByBodyUUID(this.INTERSECTED.uuid).KeyState.Id),this.modelInstance.selectedKeys.checkIfExistsAndUpdateOrCreateNewSelectedKey(this.INTERSECTED.id,this.INTERSECTED.name,this.INTERSECTED.uuid,this.modelInstance.currentKeyBoard.getKeyByBodyUUID(this.INTERSECTED.uuid).KeyState.Id,this.modelInstance.currentKeyBoard.id,this.id,this.modelInstance.currentKeyBoard.getKeyByBodyUUID(this.INTERSECTED.uuid)),this.modelInstance.musicalKeyEventEmitter.emit("touchedByRay",!0,this.id,this.modelInstance.selectedKeys.getSelectedKeyByRayCasterId(this.id).bodyId,this.modelInstance.selectedKeys.getSelectedKeyByRayCasterId(this.id).bodyUUID),console.log("INTERSECTED"+t.length+" : "+this.INTERSECTED.id)),this.modelInstance.pointLights[0].position.x=t[0].point.x,this.modelInstance.pointLights[0].position.z=-t[0].point.z):(this.INTERSECTED&&(console.log("NOT TOUCHING ANYTHING"),console.log("Not touching last touched"+this.modelInstance.selectedKey.bodyUUID)),this.INTERSECTED=null)}catch(e){console.log(e)}}}class kC{constructor(){w(this,"_rayCasters",new Array)}get rayCasters(){return this._rayCasters}set rayCasters(t){this._rayCasters=t}getRayCasterByID(t){let e=null;for(let n=0;n<this.rayCasters.length;n++){const s=this.rayCasters[n];s.id==t&&(e=s)}return e}addRayCaster(t){this.rayCasters.push(new FC(t)),console.log("added 1 item to RayCasters, id: "+t)}removeRayCaster(t){let e=null;for(let n=0;n<this.rayCasters.length;n++)this.rayCasters[n].id==t&&(e=n);e!=null&&(this.rayCasters.splice(e,1),console.log("removed 1 item from RayCasters"))}setAllRaycastersToCamera(){for(let t=0;t<this.rayCasters.length;t++)this.rayCasters[t].setRaycasterToCamera()}}class UC{constructor(t,e,n){w(this,"_rayPointer",new bt);w(this,"_id");this.rayPointer.x=e,this.rayPointer.y=n,this.id=t}get rayPointer(){return this._rayPointer}set rayPointer(t){this._rayPointer=t}get id(){return this._id}set id(t){this._id=t}}class BC{constructor(){w(this,"_raypointers",new Array)}get raypointers(){return this._raypointers}set raypointers(t){this._raypointers=t}getRayPointerByID(t){let e=null;for(let n=0;n<this.raypointers.length;n++){const s=this.raypointers[n];s.id==t&&(e=s)}return e}addRayPointer(t,e,n){this.raypointers.push(new UC(t,e,n)),console.log("added 1 item to raypointers, id: "+t+", pos: "+e+","+n)}removeRayPointer(t){let e=null;for(let n=0;n<this.raypointers.length;n++)this.raypointers[n].id==t&&(e=n);e!=null&&(this.raypointers.splice(e,1),console.log("removed 1 item from raypointers"))}}class VC{constructor(){w(this,"intervals");w(this,"scale");w(this,"name");w(this,"noteNamesOneOctave",["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"])}transpose(t){this.scale;let e=new Array;for(let n=0;n<this.intervals.length;n++){const s=this.intervals[n];e.push(this.noteNamesOneOctave[(s+t)%this.noteNamesOneOctave.length])}this.scale=e}}class Bm{constructor(t=0){w(this,"SemitoneOffset",0);w(this,"Major");w(this,"MelodicMinor");w(this,"HarmonicicMinor");w(this,"MinorThirdFifthSeventh");w(this,"Chromatic");w(this,"CircleOfFifths");w(this,"MinorPentatonic");w(this,"BlackKeys");w(this,"nMajor","Major");w(this,"nMelodicMinor","MelodicMinor");w(this,"nHarmonicicMinor","HarmonicMinor");w(this,"nMinorThirdFifthSeventh","MinorThirdFifthSeventh");w(this,"nChromatic","Chromatic");w(this,"nCircleOfFifths","CircleOfFifths");w(this,"nMinorPentatonic","MinorPentatonic");w(this,"nBlackKeys","BlackKeys");w(this,"_Chromatic",[0,1,2,3,4,5,6,7,8,9,10,11]);w(this,"_Major",[0,2,4,5,7,9,11]);w(this,"_MelodicMinor",[0,2,3,5,7,8,11]);w(this,"_HarmonicicMinor",[0,2,3,5,7,8,10]);w(this,"_MinorThirdFifthSeventh",[0,3,7,10]);w(this,"_CircleOfFifths",[7]);w(this,"_MinorPentatonic",[0,1,4,5,7,8,11]);w(this,"_BlackKeys",[1,3,6,8,10]);w(this,"_noteNamesOneOctave",["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]);this.createAllScales(this.SemitoneOffset)}createAllScales(t){this.SemitoneOffset=t,this.BlackKeys=this.createScale(this.nBlackKeys,this._BlackKeys,this.SemitoneOffset),this.Chromatic=this.createScale(this.nChromatic,this._Chromatic,this.SemitoneOffset),this.CircleOfFifths=this.createScale(this.nCircleOfFifths,this._CircleOfFifths,this.SemitoneOffset),this.HarmonicicMinor=this.createScale(this.nHarmonicicMinor,this._HarmonicicMinor,this.SemitoneOffset),this.Major=this.createScale(this.nMajor,this._Major,this.SemitoneOffset),this.MelodicMinor=this.createScale(this.nMelodicMinor,this._MelodicMinor),this.SemitoneOffset,this.MinorPentatonic=this.createScale(this.nMinorPentatonic,this._MinorPentatonic,this.SemitoneOffset),this.MinorThirdFifthSeventh=this.createScale(this.nMinorThirdFifthSeventh,this._MinorThirdFifthSeventh,this.SemitoneOffset)}createScale(t,e,n=0){let s=new VC;s.name=t;let r=new Array;for(let a=0;a<e.length;a++){const o=e[a];r.push(this._noteNamesOneOctave[(o+n)%this._noteNamesOneOctave.length])}return s.scale=r,s.intervals=e,s}getScaleAndTranspose(t,e){let n=null,s=[this.Major,this.MelodicMinor,this.HarmonicicMinor,this.MinorThirdFifthSeventh,this.Chromatic,this.CircleOfFifths,this.MinorPentatonic,this.BlackKeys];for(let r=0;r<s.length;r++){const a=s[r];a.name==t&&(n=a)}if(n!=null){let r=new Array;for(let a=0;a<n.intervals.length;a++){const o=n.intervals[a];r.push(this._noteNamesOneOctave[(o+e)%this._noteNamesOneOctave.length])}n.scale=r}return n}getScaleFromName(t){let e=null,n=[this.Major,this.MelodicMinor,this.HarmonicicMinor,this.MinorThirdFifthSeventh,this.Chromatic,this.CircleOfFifths,this.MinorPentatonic,this.BlackKeys];for(let s=0;s<n.length;s++){const r=n[s];r.name==t&&(e=r)}return e}getNoteIndexFromName(t){let e=null;for(let n=0;n<this._noteNamesOneOctave.length;n++)this._noteNamesOneOctave[n]==t&&(e=n);return e}}class zC{constructor(){w(this,"scaleTypes",new Bm);w(this,"_noteNamesOneOctave",["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"]);w(this,"_noteNamesWithOctaveRegister",["C0","C#0","D0","D#0","E0","F0","F#0","G0","G#0","A0","A#0","B0","C1","C#1","D1","D#1","E1","F1","F#1","G1","G#1","A1","A#1","B1","C2","C#2","D2","D#2","E2","F2","F#2","G2","G#2","A2","A#2","B2","C3","C#3","D3","D#3","E3","F3","F#3","G3","G#3","A3","A#3","B3","C4","C#4","D4","D#4","E4","F4","F#4","G4","G#4","A4","A#4","B4","C5","C#5","D5","D#5","E5","F5","F#5","G5","G#5","A5","A#5","B5","C6","C#6","D6","D#6","E6","F6","F#6","G6","G#6","A6","A#6","B6","C7","C#7","D7","D#7","E7","F7","F#7","G7","G#7","A7","A#7","B7","C8","C#8","D8","D#8","E8","F8","F#8","G8","G#8","A8","A#8","B8","C9","C#9","D9","D#9","E9","F9","F#9","G9","G#9","A9","A#9","B9"]);w(this,"_noteSpeeds",["64n","64n","32t","32n","16t","16n","8t","8n","4t","4n","2t","2n","1t","1n","64t"]);w(this,"pitches",[261.63,277.18,293.66,311.13,329.63,349.23,369.99,392,415.3,440,466.16,493.88,523.25])}get noteNamesOneOctave(){return this._noteNamesOneOctave}set noteNamesOneOctave(t){this._noteNamesOneOctave=t}get noteNamesWithOctaveRegister(){return this._noteNamesWithOctaveRegister}set noteNamesWithOctaveRegister(t){this._noteNamesWithOctaveRegister=t}getNoteNamesForScale(t,e){let n=new Array;for(let s=0;s<t.length;s++){const r=t[s];n.push(this.noteNamesOneOctave[(r+e)%t.length])}return n}}const jn=class jn{constructor(){w(this,"showRayCasterEventMessages",!0);w(this,"showPointerEventMessages",!0);w(this,"showColourMessages",!0);w(this,"showMusicalKeyMessages",!1);w(this,"showKeyBoardMessages",!1);w(this,"showSequenceMessages",!1);w(this,"showAudioMessages",!1);w(this,"useSpectrumColours",!0);w(this,"_Stats");w(this,"_canvasInteraction");w(this,"_initialScreen");w(this,"textureLoader",new TS);w(this,"_ScalesCreation",new zC);w(this,"_fullScreenObject");w(this,"_currentKeyBoard");w(this,"_keyboardTypes",new Um);w(this,"_colourOptions",new DC);w(this,"_scaleOptions",new LC);w(this,"_scaleTypes",new Bm);w(this,"_instrumentOptions",new PC);w(this,"_keyInterfaceOptions",new OC);w(this,"_pointerDown",!1);w(this,"_count",0);w(this,"_colours");w(this,"_buffers");w(this,"_toneInstance",oC);w(this,"_selectedKey");w(this,"_selectedKeys",new NC);w(this,"_maxKeysPerKeyBoard",64);w(this,"_instruments");w(this,"_keyBodies");w(this,"_ambientLight");w(this,"_pointLight");w(this,"_cameraOrbitControls");w(this,"_clock");w(this,"_pointerEventsInstance");w(this,"_pointer",new bt);w(this,"_raycasterPointers",new BC);w(this,"_raycasters",new kC);w(this,"_isTouchingSomething",!1);w(this,"_keyboard");w(this,"_loadingManager");w(this,"_dragControls");w(this,"_pointLights",new Array);w(this,"_musicalKeyEventEmitter");w(this,"informationWindow");w(this,"_canvas");w(this,"_noteEventEmitter");w(this,"_ajhMidi");w(this,"_ajhMidiAccess");w(this,"_currentMidiOutId",0);w(this,"_currentMidiInId",0);w(this,"_availableMidiInputs",[]);w(this,"_currentMidiInputChannel",1);w(this,"_availableMidiOutputs",[]);w(this,"_currentMidiOutputChannel",1);w(this,"_audioContext");w(this,"_mouseCoordinates",new bt);w(this,"_gui",new xu);w(this,"_ajhGuiControls");w(this,"_counter");w(this,"_geometries",new aC);w(this,"_materials",new cC);w(this,"_camera");w(this,"_cameraTarget",new N);w(this,"_raycaster");w(this,"_scene");w(this,"_renderer");w(this,"_controls");w(this,"_composer");w(this,"_initPositionArray");w(this,"_notesArray");console.log("MODEL Instantiated"),this._colours=new RC(0,this.ScalesCreation.noteNamesOneOctave.length),this._colours.generateSpectrumArray(this.ScalesCreation.noteNamesOneOctave.length,.3),this.musicalKeyEventEmitter=gC(),this.noteEventEmitter=_C(),this.ajhGuiControls,this.selectedKey=Vc.Instance}get Stats(){return this._Stats}set Stats(t){this._Stats=t}get canvasInteraction(){return this._canvasInteraction}set canvasInteraction(t){this._canvasInteraction=t}get initialScreen(){return this._initialScreen}set initialScreen(t){this._initialScreen=t}get ScalesCreation(){return this._ScalesCreation}set ScalesCreation(t){this._ScalesCreation=t}get fullScreenObject(){return this._fullScreenObject}set fullScreenObject(t){this._fullScreenObject=t}get currentKeyBoard(){return this._currentKeyBoard}set currentKeyBoard(t){this._currentKeyBoard=t}get keyboardTypes(){return this._keyboardTypes}set keyboardTypes(t){this._keyboardTypes=t}get colourOptions(){return this._colourOptions}set colourOptions(t){this._colourOptions=t}get scaleOptions(){return this._scaleOptions}set scaleOptions(t){this._scaleOptions=t}get scaleTypes(){return this._scaleTypes}set scaleTypes(t){this._scaleTypes=t}get instrumentOptions(){return this._instrumentOptions}set instrumentOptions(t){this._instrumentOptions=t}get keyInterfaceOptions(){return this._keyInterfaceOptions}set keyInterfaceOptions(t){this._keyInterfaceOptions=t}get pointerDown(){return this._pointerDown}set pointerDown(t){this._pointerDown=t}get selectedKeys(){return this._selectedKeys}set selectedKeys(t){this._selectedKeys=t}get instruments(){return this._instruments}set instruments(t){this._instruments=t}get keyBodies(){return this._keyBodies}set keyBodies(t){this._keyBodies=t}toggleOrbitCameraEnabled(t){this.cameraOrbitControls.enablePan=t,this.cameraOrbitControls.enableZoom=t,this.cameraOrbitControls.enableRotate=t,this.cameraOrbitControls.enabled=t}getCameraViewSizeXY(){const e=new bt;return this.camera.getViewSize(this.camera.position.y-.7,e),e}getWorldCoordsFromMouseXY(t){var e=new N,n=new N;e.set(t.x,t.y,1),e.unproject(this.camera),e.sub(this.camera.position).normalize();var s=-this.camera.position.z/e.z;return n.copy(this.camera.position).add(e.multiplyScalar(s)),n}fitCameraToSelection(){let t=1.2;const e=new N,n=new N,s=new ls;s.makeEmpty();for(const h of[this.fullScreenObject.body])s.expandByObject(h);s.getSize(e),s.getCenter(n);const a=Math.max(e.x,e.y,e.z)/(2*Math.atan(Math.PI*this.camera.fov/360)),o=a/this.camera.aspect,c=t*Math.max(a,o),l=this.controls.target.clone().sub(this.camera.position).normalize().multiplyScalar(c);this.controls.target.copy(n),this.camera.near=c/100,this.camera.far=c*100,this.camera.updateProjectionMatrix(),this.camera.position.copy(this.controls.target).sub(l),this.controls.update()}get ambientLight(){return this._ambientLight}set ambientLight(t){this._ambientLight=t}get pointLight(){return this._pointLight}set pointLight(t){this._pointLight=t}get cameraOrbitControls(){return this._cameraOrbitControls}set cameraOrbitControls(t){this._cameraOrbitControls=t}get clock(){return this._clock}set clock(t){this._clock=t}get pointerEventsInstance(){return this._pointerEventsInstance}set pointerEventsInstance(t){this._pointerEventsInstance=t}get pointer(){return this._pointer}set pointer(t){this._pointer=t}get raycasterPointers(){return this._raycasterPointers}set raycasterPointers(t){this._raycasterPointers=t}get raycasters(){return this._raycasters}set raycasters(t){this._raycasters=t}get colours(){return this._colours}get counter(){return this._counter}get geometries(){return this._geometries}get materials(){return this._materials}get ajhGuiControls(){return this._ajhGuiControls}get camera(){return this._camera}get raycaster(){return this._raycaster}get scene(){return this._scene}get renderer(){return this._renderer}get controls(){return this._controls}get composer(){return this._composer}get initPositionArray(){return this._initPositionArray}get notesArray(){return this._notesArray}get buffers(){return this._buffers}get selectedKey(){return this._selectedKey}get musicalKeyEventEmitter(){return this._musicalKeyEventEmitter}get toneInstance(){return this._toneInstance}get maxKeysPerKeyBoard(){return this._maxKeysPerKeyBoard}get cameraTarget(){return this._cameraTarget}get count(){return this._count}set cameraTarget(t){this._cameraTarget=t,this._controls.target=this._cameraTarget}set isTouchingSomething(t){this._isTouchingSomething=t}set colours(t){this._colours=t}set counter(t){this._counter=t}set geometries(t){this._geometries=t}set materials(t){this._materials=t}set ajhGuiControls(t){this._ajhGuiControls=t}get keyboard(){return this._keyboard}set keyboard(t){this._keyboard=t}get loadingManager(){return this._loadingManager}set loadingManager(t){this._loadingManager=t}get dragControls(){return this._dragControls}set dragControls(t){this._dragControls=t}get pointLights(){return this._pointLights}set pointLights(t){this._pointLights=t}set count(t){this._count=t}get isTouchingSomething(){return this._isTouchingSomething}set camera(t){this._camera=t}set raycaster(t){this._raycaster=t}set scene(t){this._scene=t}set renderer(t){this._renderer=t}set controls(t){this._controls=t}set composer(t){this._composer=t}set initPositionArray(t){this._initPositionArray=t}set notesArray(t){this._notesArray=t}set buffers(t){this._buffers=t}set selectedKey(t){this._selectedKey=t,this.musicalKeyEventEmitter.emit("SelectionIdChanged",t)}set musicalKeyEventEmitter(t){this._musicalKeyEventEmitter=t}set maxKeysPerKeyBoard(t){this._maxKeysPerKeyBoard=t}get canvas(){return this._canvas}set canvas(t){this._canvas=t}get noteEventEmitter(){return this._noteEventEmitter}set noteEventEmitter(t){this._noteEventEmitter=t}get ajhMidi(){return this._ajhMidi}set ajhMidi(t){this._ajhMidi=t}get ajhMidiAccess(){return this._ajhMidiAccess}set ajhMidiAccess(t){this._ajhMidiAccess=t}get currentMidiOutId(){return this._currentMidiOutId}set currentMidiOutId(t){this._currentMidiOutId=t}get currentMidiInId(){return this._currentMidiInId}set currentMidiInId(t){this._currentMidiInId=t}get availableMidiInputs(){return this._availableMidiInputs}set availableMidiInputs(t){this._availableMidiInputs=t}get currentMidiInputChannel(){return this._currentMidiInputChannel}set currentMidiInputChannel(t){this._currentMidiInputChannel=t}get availableMidiOutputs(){return this._availableMidiOutputs}set availableMidiOutputs(t){this._availableMidiOutputs=t}get currentMidiOutputChannel(){return this._currentMidiOutputChannel}set currentMidiOutputChannel(t){this._currentMidiOutputChannel=t}get audioContext(){return this._audioContext}set audioContext(t){this._audioContext=t}get mouseCoordinates(){return this._mouseCoordinates}set mouseCoordinates(t){this._mouseCoordinates=t}get gui(){return this._gui}set gui(t){this._gui=t}static get Instance(){return jn._instance||(jn._instance=new jn),jn._instance}static getInstance(){return jn._instance||(jn._instance=new jn),jn._instance}};w(jn,"_instance",null);let Sn=jn;const Pf={type:"change"},Xl={type:"start"},Lf={type:"end"},Ra=new Dh,Of=new Ii,GC=Math.cos(70*rh.DEG2RAD);class WC extends ps{constructor(t,e){super(),this.object=t,this.domElement=e,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new N,this.cursor=new N,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ks.ROTATE,MIDDLE:Ks.DOLLY,RIGHT:Ks.PAN},this.touches={ONE:Ys.ROTATE,TWO:Ys.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(P){P.addEventListener("keydown",Ut),this._domElementKeyEvents=P},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Ut),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Pf),n.update(),r=s.NONE},this.update=function(){const P=new N,it=new Os().setFromUnitVectors(t.up,new N(0,1,0)),At=it.clone().invert(),O=new N,dt=new Os,j=new N,ct=2*Math.PI;return function(te=null){const se=n.object.position;P.copy(se).sub(n.target),P.applyQuaternion(it),o.setFromVector3(P),n.autoRotate&&r===s.NONE&&F(x(te)),n.enableDamping?(o.theta+=c.theta*n.dampingFactor,o.phi+=c.phi*n.dampingFactor):(o.theta+=c.theta,o.phi+=c.phi);let ce=n.minAzimuthAngle,we=n.maxAzimuthAngle;isFinite(ce)&&isFinite(we)&&(ce<-Math.PI?ce+=ct:ce>Math.PI&&(ce-=ct),we<-Math.PI?we+=ct:we>Math.PI&&(we-=ct),ce<=we?o.theta=Math.max(ce,Math.min(we,o.theta)):o.theta=o.theta>(ce+we)/2?Math.max(ce,o.theta):Math.min(we,o.theta)),o.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,o.phi)),o.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(h,n.dampingFactor):n.target.add(h),n.target.sub(n.cursor),n.target.clampLength(n.minTargetRadius,n.maxTargetRadius),n.target.add(n.cursor);let ie=!1;if(n.zoomToCursor&&E||n.object.isOrthographicCamera)o.radius=Y(o.radius);else{const de=o.radius;o.radius=Y(o.radius*l),ie=de!=o.radius}if(P.setFromSpherical(o),P.applyQuaternion(At),se.copy(n.target).add(P),n.object.lookAt(n.target),n.enableDamping===!0?(c.theta*=1-n.dampingFactor,c.phi*=1-n.dampingFactor,h.multiplyScalar(1-n.dampingFactor)):(c.set(0,0,0),h.set(0,0,0)),n.zoomToCursor&&E){let de=null;if(n.object.isPerspectiveCamera){const Ze=P.length();de=Y(Ze*l);const _s=Ze-de;n.object.position.addScaledVector(S,_s),n.object.updateMatrixWorld(),ie=!!_s}else if(n.object.isOrthographicCamera){const Ze=new N(b.x,b.y,0);Ze.unproject(n.object);const _s=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/l)),n.object.updateProjectionMatrix(),ie=_s!==n.object.zoom;const na=new N(b.x,b.y,0);na.unproject(n.object),n.object.position.sub(na).add(Ze),n.object.updateMatrixWorld(),de=P.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;de!==null&&(this.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(de).add(n.object.position):(Ra.origin.copy(n.object.position),Ra.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Ra.direction))<GC?t.lookAt(n.target):(Of.setFromNormalAndCoplanarPoint(n.object.up,n.target),Ra.intersectPlane(Of,n.target))))}else if(n.object.isOrthographicCamera){const de=n.object.zoom;n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/l)),de!==n.object.zoom&&(n.object.updateProjectionMatrix(),ie=!0)}return l=1,E=!1,ie||O.distanceToSquared(n.object.position)>a||8*(1-dt.dot(n.object.quaternion))>a||j.distanceToSquared(n.target)>a?(n.dispatchEvent(Pf),O.copy(n.object.position),dt.copy(n.object.quaternion),j.copy(n.target),!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",Ht),n.domElement.removeEventListener("pointerdown",_t),n.domElement.removeEventListener("pointercancel",R),n.domElement.removeEventListener("wheel",et),n.domElement.removeEventListener("pointermove",Vt),n.domElement.removeEventListener("pointerup",R),n.domElement.getRootNode().removeEventListener("keydown",ot,{capture:!0}),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",Ut),n._domElementKeyEvents=null)};const n=this,s={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=s.NONE;const a=1e-6,o=new tf,c=new tf;let l=1;const h=new N,u=new bt,f=new bt,m=new bt,g=new bt,_=new bt,p=new bt,d=new bt,y=new bt,v=new bt,S=new N,b=new bt;let E=!1;const M=[],C={};let k=!1;function x(P){return P!==null?2*Math.PI/60*n.autoRotateSpeed*P:2*Math.PI/60/60*n.autoRotateSpeed}function A(P){const it=Math.abs(P*.01);return Math.pow(.95,n.zoomSpeed*it)}function F(P){c.theta-=P}function G(P){c.phi-=P}const D=function(){const P=new N;return function(At,O){P.setFromMatrixColumn(O,0),P.multiplyScalar(-At),h.add(P)}}(),V=function(){const P=new N;return function(At,O){n.screenSpacePanning===!0?P.setFromMatrixColumn(O,1):(P.setFromMatrixColumn(O,0),P.crossVectors(n.object.up,P)),P.multiplyScalar(At),h.add(P)}}(),U=function(){const P=new N;return function(At,O){const dt=n.domElement;if(n.object.isPerspectiveCamera){const j=n.object.position;P.copy(j).sub(n.target);let ct=P.length();ct*=Math.tan(n.object.fov/2*Math.PI/180),D(2*At*ct/dt.clientHeight,n.object.matrix),V(2*O*ct/dt.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(D(At*(n.object.right-n.object.left)/n.object.zoom/dt.clientWidth,n.object.matrix),V(O*(n.object.top-n.object.bottom)/n.object.zoom/dt.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function H(P){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?l/=P:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function W(P){n.object.isPerspectiveCamera||n.object.isOrthographicCamera?l*=P:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function q(P,it){if(!n.zoomToCursor)return;E=!0;const At=n.domElement.getBoundingClientRect(),O=P-At.left,dt=it-At.top,j=At.width,ct=At.height;b.x=O/j*2-1,b.y=-(dt/ct)*2+1,S.set(b.x,b.y,1).unproject(n.object).sub(n.object.position).normalize()}function Y(P){return Math.max(n.minDistance,Math.min(n.maxDistance,P))}function tt(P){u.set(P.clientX,P.clientY)}function ht(P){q(P.clientX,P.clientX),d.set(P.clientX,P.clientY)}function It(P){g.set(P.clientX,P.clientY)}function X(P){f.set(P.clientX,P.clientY),m.subVectors(f,u).multiplyScalar(n.rotateSpeed);const it=n.domElement;F(2*Math.PI*m.x/it.clientHeight),G(2*Math.PI*m.y/it.clientHeight),u.copy(f),n.update()}function J(P){y.set(P.clientX,P.clientY),v.subVectors(y,d),v.y>0?H(A(v.y)):v.y<0&&W(A(v.y)),d.copy(y),n.update()}function ut(P){_.set(P.clientX,P.clientY),p.subVectors(_,g).multiplyScalar(n.panSpeed),U(p.x,p.y),g.copy(_),n.update()}function Et(P){q(P.clientX,P.clientY),P.deltaY<0?W(A(P.deltaY)):P.deltaY>0&&H(A(P.deltaY)),n.update()}function st(P){let it=!1;switch(P.code){case n.keys.UP:P.ctrlKey||P.metaKey||P.shiftKey?G(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(0,n.keyPanSpeed),it=!0;break;case n.keys.BOTTOM:P.ctrlKey||P.metaKey||P.shiftKey?G(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(0,-n.keyPanSpeed),it=!0;break;case n.keys.LEFT:P.ctrlKey||P.metaKey||P.shiftKey?F(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(n.keyPanSpeed,0),it=!0;break;case n.keys.RIGHT:P.ctrlKey||P.metaKey||P.shiftKey?F(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):U(-n.keyPanSpeed,0),it=!0;break}it&&(P.preventDefault(),n.update())}function vt(P){if(M.length===1)u.set(P.pageX,P.pageY);else{const it=wt(P),At=.5*(P.pageX+it.x),O=.5*(P.pageY+it.y);u.set(At,O)}}function Kt(P){if(M.length===1)g.set(P.pageX,P.pageY);else{const it=wt(P),At=.5*(P.pageX+it.x),O=.5*(P.pageY+it.y);g.set(At,O)}}function kt(P){const it=wt(P),At=P.pageX-it.x,O=P.pageY-it.y,dt=Math.sqrt(At*At+O*O);d.set(0,dt)}function B(P){n.enableZoom&&kt(P),n.enablePan&&Kt(P)}function Ie(P){n.enableZoom&&kt(P),n.enableRotate&&vt(P)}function Lt(P){if(M.length==1)f.set(P.pageX,P.pageY);else{const At=wt(P),O=.5*(P.pageX+At.x),dt=.5*(P.pageY+At.y);f.set(O,dt)}m.subVectors(f,u).multiplyScalar(n.rotateSpeed);const it=n.domElement;F(2*Math.PI*m.x/it.clientHeight),G(2*Math.PI*m.y/it.clientHeight),u.copy(f)}function nt(P){if(M.length===1)_.set(P.pageX,P.pageY);else{const it=wt(P),At=.5*(P.pageX+it.x),O=.5*(P.pageY+it.y);_.set(At,O)}p.subVectors(_,g).multiplyScalar(n.panSpeed),U(p.x,p.y),g.copy(_)}function at(P){const it=wt(P),At=P.pageX-it.x,O=P.pageY-it.y,dt=Math.sqrt(At*At+O*O);y.set(0,dt),v.set(0,Math.pow(y.y/d.y,n.zoomSpeed)),H(v.y),d.copy(y);const j=(P.pageX+it.x)*.5,ct=(P.pageY+it.y)*.5;q(j,ct)}function Rt(P){n.enableZoom&&at(P),n.enablePan&&nt(P)}function Mt(P){n.enableZoom&&at(P),n.enableRotate&&Lt(P)}function _t(P){n.enabled!==!1&&(M.length===0&&(n.domElement.setPointerCapture(P.pointerId),n.domElement.addEventListener("pointermove",Vt),n.domElement.addEventListener("pointerup",R)),!Qt(P)&&(ft(P),P.pointerType==="touch"?pt(P):T(P)))}function Vt(P){n.enabled!==!1&&(P.pointerType==="touch"?gt(P):Q(P))}function R(P){switch(Me(P),M.length){case 0:n.domElement.releasePointerCapture(P.pointerId),n.domElement.removeEventListener("pointermove",Vt),n.domElement.removeEventListener("pointerup",R),n.dispatchEvent(Lf),r=s.NONE;break;case 1:const it=M[0],At=C[it];pt({pointerId:it,pageX:At.x,pageY:At.y});break}}function T(P){let it;switch(P.button){case 0:it=n.mouseButtons.LEFT;break;case 1:it=n.mouseButtons.MIDDLE;break;case 2:it=n.mouseButtons.RIGHT;break;default:it=-1}switch(it){case Ks.DOLLY:if(n.enableZoom===!1)return;ht(P),r=s.DOLLY;break;case Ks.ROTATE:if(P.ctrlKey||P.metaKey||P.shiftKey){if(n.enablePan===!1)return;It(P),r=s.PAN}else{if(n.enableRotate===!1)return;tt(P),r=s.ROTATE}break;case Ks.PAN:if(P.ctrlKey||P.metaKey||P.shiftKey){if(n.enableRotate===!1)return;tt(P),r=s.ROTATE}else{if(n.enablePan===!1)return;It(P),r=s.PAN}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(Xl)}function Q(P){switch(r){case s.ROTATE:if(n.enableRotate===!1)return;X(P);break;case s.DOLLY:if(n.enableZoom===!1)return;J(P);break;case s.PAN:if(n.enablePan===!1)return;ut(P);break}}function et(P){n.enabled===!1||n.enableZoom===!1||r!==s.NONE||(P.preventDefault(),n.dispatchEvent(Xl),Et(lt(P)),n.dispatchEvent(Lf))}function lt(P){const it=P.deltaMode,At={clientX:P.clientX,clientY:P.clientY,deltaY:P.deltaY};switch(it){case 1:At.deltaY*=16;break;case 2:At.deltaY*=100;break}return P.ctrlKey&&!k&&(At.deltaY*=10),At}function ot(P){P.key==="Control"&&(k=!0,n.domElement.getRootNode().addEventListener("keyup",Wt,{passive:!0,capture:!0}))}function Wt(P){P.key==="Control"&&(k=!1,n.domElement.getRootNode().removeEventListener("keyup",Wt,{passive:!0,capture:!0}))}function Ut(P){n.enabled===!1||n.enablePan===!1||st(P)}function pt(P){switch(Ft(P),M.length){case 1:switch(n.touches.ONE){case Ys.ROTATE:if(n.enableRotate===!1)return;vt(P),r=s.TOUCH_ROTATE;break;case Ys.PAN:if(n.enablePan===!1)return;Kt(P),r=s.TOUCH_PAN;break;default:r=s.NONE}break;case 2:switch(n.touches.TWO){case Ys.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;B(P),r=s.TOUCH_DOLLY_PAN;break;case Ys.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ie(P),r=s.TOUCH_DOLLY_ROTATE;break;default:r=s.NONE}break;default:r=s.NONE}r!==s.NONE&&n.dispatchEvent(Xl)}function gt(P){switch(Ft(P),r){case s.TOUCH_ROTATE:if(n.enableRotate===!1)return;Lt(P),n.update();break;case s.TOUCH_PAN:if(n.enablePan===!1)return;nt(P),n.update();break;case s.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Rt(P),n.update();break;case s.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Mt(P),n.update();break;default:r=s.NONE}}function Ht(P){n.enabled!==!1&&P.preventDefault()}function ft(P){M.push(P.pointerId)}function Me(P){delete C[P.pointerId];for(let it=0;it<M.length;it++)if(M[it]==P.pointerId){M.splice(it,1);return}}function Qt(P){for(let it=0;it<M.length;it++)if(M[it]==P.pointerId)return!0;return!1}function Ft(P){let it=C[P.pointerId];it===void 0&&(it=new bt,C[P.pointerId]=it),it.set(P.pageX,P.pageY)}function wt(P){const it=P.pointerId===M[0]?M[1]:M[0];return C[it]}n.domElement.addEventListener("contextmenu",Ht),n.domElement.addEventListener("pointerdown",_t),n.domElement.addEventListener("pointercancel",R),n.domElement.addEventListener("wheel",et,{passive:!1}),n.domElement.getRootNode().addEventListener("keydown",ot,{passive:!0,capture:!0}),this.update()}}function HC(i){document.fullscreenElement?document.exitFullscreen():!document.fullscreenElement&&i.requestFullscreen?i.requestFullscreen():document.webkitFullscreenElement?document.webkitExitFullscreen():!document.webkitFullscreenElement&&i.webkitRequestFullscreen&&i.webkitRequestFullscreen()}var Ro=function(){var i=0,t=document.createElement("div");t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(h){h.preventDefault(),n(++i%t.children.length)},!1);function e(h){return t.appendChild(h.dom),h}function n(h){for(var u=0;u<t.children.length;u++)t.children[u].style.display=u===h?"block":"none";i=h}var s=(performance||Date).now(),r=s,a=0,o=e(new Ro.Panel("FPS","#0ff","#002")),c=e(new Ro.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var l=e(new Ro.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:t,addPanel:e,showPanel:n,begin:function(){s=(performance||Date).now()},end:function(){a++;var h=(performance||Date).now();if(c.update(h-s,200),h>=r+1e3&&(o.update(a*1e3/(h-r),100),r=h,a=0,l)){var u=performance.memory;l.update(u.usedJSHeapSize/1048576,u.jsHeapSizeLimit/1048576)}return h},update:function(){s=this.end()},domElement:t,setMode:n}};Ro.Panel=function(i,t,e){var n=1/0,s=0,r=Math.round,a=r(window.devicePixelRatio||1),o=80*a,c=48*a,l=3*a,h=2*a,u=3*a,f=15*a,m=74*a,g=30*a,_=document.createElement("canvas");_.width=o,_.height=c,_.style.cssText="width:80px;height:48px";var p=_.getContext("2d");return p.font="bold "+9*a+"px Helvetica,Arial,sans-serif",p.textBaseline="top",p.fillStyle=e,p.fillRect(0,0,o,c),p.fillStyle=t,p.fillText(i,l,h),p.fillRect(u,f,m,g),p.fillStyle=e,p.globalAlpha=.9,p.fillRect(u,f,m,g),{dom:_,update:function(d,y){n=Math.min(n,d),s=Math.max(s,d),p.fillStyle=e,p.globalAlpha=1,p.fillRect(0,0,o,f),p.fillStyle=t,p.fillText(r(d)+" "+i+" ("+r(n)+"-"+r(s)+")",l,h),p.drawImage(_,u+a,f,m-a,g,u,f,m-a,g),p.fillRect(u+m-a,f,a,g),p.fillStyle=e,p.globalAlpha=.9,p.fillRect(u+m-a,f,a,r((1-d/y)*g))}}};const fr=new Ii,Yi=new Xc,Ei=new bt,Nf=new N,Kl=new bt,Da=new bt,Pa=new N,Yl=new N,Ff=new Se,kf=new N,Uf=new N;class qC extends ps{constructor(t,e,n){super(),n.style.touchAction="none";let s=null,r=null;const a=[];this.mode="translate",this.rotateSpeed=1;const o=this;function c(){n.addEventListener("pointermove",g),n.addEventListener("pointerdown",_),n.addEventListener("pointerup",p),n.addEventListener("pointerleave",p)}function l(){n.removeEventListener("pointermove",g),n.removeEventListener("pointerdown",_),n.removeEventListener("pointerup",p),n.removeEventListener("pointerleave",p),n.style.cursor=""}function h(){l()}function u(){return t}function f(v){t=v}function m(){return Yi}function g(v){if(o.enabled!==!1){if(d(v),Yi.setFromCamera(Ei,e),s)o.mode==="translate"?Yi.ray.intersectPlane(fr,Pa)&&s.position.copy(Pa.sub(Nf).applyMatrix4(Ff)):o.mode==="rotate"&&(Kl.subVectors(Ei,Da).multiplyScalar(o.rotateSpeed),s.rotateOnWorldAxis(kf,Kl.x),s.rotateOnWorldAxis(Uf.normalize(),-Kl.y)),o.dispatchEvent({type:"drag",object:s}),Da.copy(Ei);else if(v.pointerType==="mouse"||v.pointerType==="pen")if(a.length=0,Yi.setFromCamera(Ei,e),Yi.intersectObjects(t,o.recursive,a),a.length>0){const S=a[0].object;fr.setFromNormalAndCoplanarPoint(e.getWorldDirection(fr.normal),Yl.setFromMatrixPosition(S.matrixWorld)),r!==S&&r!==null&&(o.dispatchEvent({type:"hoveroff",object:r}),n.style.cursor="auto",r=null),r!==S&&(o.dispatchEvent({type:"hoveron",object:S}),n.style.cursor="pointer",r=S)}else r!==null&&(o.dispatchEvent({type:"hoveroff",object:r}),n.style.cursor="auto",r=null);Da.copy(Ei)}}function _(v){o.enabled!==!1&&(d(v),a.length=0,Yi.setFromCamera(Ei,e),Yi.intersectObjects(t,o.recursive,a),a.length>0&&(o.transformGroup===!0?s=y(a[0].object):s=a[0].object,fr.setFromNormalAndCoplanarPoint(e.getWorldDirection(fr.normal),Yl.setFromMatrixPosition(s.matrixWorld)),Yi.ray.intersectPlane(fr,Pa)&&(o.mode==="translate"?(Ff.copy(s.parent.matrixWorld).invert(),Nf.copy(Pa).sub(Yl.setFromMatrixPosition(s.matrixWorld))):o.mode==="rotate"&&(kf.set(0,1,0).applyQuaternion(e.quaternion).normalize(),Uf.set(1,0,0).applyQuaternion(e.quaternion).normalize())),n.style.cursor="move",o.dispatchEvent({type:"dragstart",object:s})),Da.copy(Ei))}function p(){o.enabled!==!1&&(s&&(o.dispatchEvent({type:"dragend",object:s}),s=null),n.style.cursor=r?"pointer":"auto")}function d(v){const S=n.getBoundingClientRect();Ei.x=(v.clientX-S.left)/S.width*2-1,Ei.y=-(v.clientY-S.top)/S.height*2+1}function y(v,S=null){return v.isGroup&&(S=v),v.parent===null?S:y(v.parent,S)}c(),this.enabled=!0,this.recursive=!0,this.transformGroup=!1,this.activate=c,this.deactivate=l,this.dispose=h,this.getObjects=u,this.getRaycaster=m,this.setObjects=f}}class jC{constructor(t,e,n){w(this,"id");w(this,"point");w(this,"raycasterWithPointId");this.id=t,this.point=e,this.raycasterWithPointId=n}}class XC{constructor(t=null){w(this,"logEvents",!1);w(this,"whereToDisplay");this.whereToDisplay=t}enableLog(t){this.logEvents=!t}log(t,e){let n=t+" :: pointer ID : "+e.pointerId+" :: TYPE : "+e.pointerType+" :: isPrimary : "+e.isPrimary;this.whereToDisplay!=null?(n=`${t}:<br>  pointerID   = ${e.pointerId} + <br>  pointerType = ${e.pointerType}<br>  isPrimary   = ${e.isPrimary}`,this.whereToDisplay.innerHTML+=`${n}<br>`):console.log(n)}clearLog(){const t=document.getElementsByTagName("output")[0];t.innerHTML=""}}class KC{constructor(){w(this,"EventMemoryCache",new Array);w(this,"logEvents",new XC)}pushEventIntoCache(t){this.getPointerEventById(t.pointerId)==null&&this.EventMemoryCache.push(t)}removeEventFromCache(t){try{const e=this.EventMemoryCache.findIndex(n=>n.pointerId===t.pointerId);this.EventMemoryCache.splice(e,1)}catch(e){this.logEvents.enableLog(!0),this.logEvents.log("Error with cache handling:: remove event",e)}}getPointerEventById(t){let e=null;for(let n=0;n<this.EventMemoryCache.length;n++){const s=this.EventMemoryCache[n];t==s.pointerId&&(e=s)}return e==null&&this.logEvents.log("cache handling ::  no event found== null",t),e}}class YC{constructor(t){w(this,"screenPoint");w(this,"raycaster");w(this,"id");this.id=t,this.screenPoint=new bt,this.raycaster=new Xc,this.raycaster.layers.set(3)}updatePointCoords(t){this.screenPoint=t}updateRaycaster(t,e=null){e!=null&&(this.screenPoint=e),this.screenPoint.x=this.screenPoint.x/window.innerWidth*2-1,this.screenPoint.y=-(this.screenPoint.y/window.innerHeight)*2+1,this.raycaster.setFromCamera(this.screenPoint,t)}}class $C{constructor(){w(this,"EventMemoryCacheManager",new KC);w(this,"interactiveItems",new Array);w(this,"raycastersWithPoints",new Array)}addRaycasterWithPoint(t){try{this.getRaycasterWithPointById(t)==null&&this.raycastersWithPoints.push(new YC(t))}catch{}}removeRaycasterWithPointById(t){try{const e=this.raycastersWithPoints.findIndex(n=>n.id===t);this.findCurrentlyIntersectedItems().forEach(n=>{n.intersectedInstances.instances=n.intersectedInstances.instances.filter(s=>s.id!=t)}),this.raycastersWithPoints.splice(e,1)}catch{}}getRaycasterWithPointById(t){let e=null;for(let n=0;n<this.raycastersWithPoints.length;n++){const s=this.raycastersWithPoints[n];t==s.id&&(e=s)}return e}updateAllRayCasters(t){this.raycastersWithPoints.forEach(e=>{let n=this.EventMemoryCacheManager.getPointerEventById(e.id);n!=null&&(e.updatePointCoords(new bt(n==null?void 0:n.clientX,n==null?void 0:n.clientY)),e.updateRaycaster(t,e.screenPoint))})}findCurrentlyIntersectedItems(){let t=new Array;for(let e=0;e<this.interactiveItems.length;e++){const n=this.interactiveItems[e];n.intersectedInstances.instances.length>0&&t.push(n)}return t.length==0,t}checkAllItemsForIntersection(){for(let t=0;t<this.raycastersWithPoints.length;t++){const e=this.raycastersWithPoints[t];this.interactiveItems.forEach(n=>{this.checkIfIntersectsWith(n,e)})}}checkIfIntersectsWith(t,e){const s=e.raycaster.intersectObjects([t.KeyState.View.Body],!0);if(t.wasIntersectedByRayId=e.id,s.length>0){let r=s[0].distance;s.forEach(a=>{a.distance<r&&(r=a.distance)}),t.intersectedInstances.addIntersectionPoint(new jC(e.id,s[0].point,e.id)),t.distance=r}else t.intersectedInstances.removeIntersectionPointById(t.wasIntersectedByRayId);return t.changeIntersectedColour(),t.intersectedInstances}}class ZC{constructor(){w(this,"_modelInstance");w(this,"multitouchManager",new $C);this._modelInstance=Sn.Instance,this.addListeners()}updateMultiTouch(){this.multitouchManager.getRaycasterWithPointById(0)!=null&&this.multitouchManager.findCurrentlyIntersectedItems().length>0&&this.multitouchManager.findCurrentlyIntersectedItems()[0].intersectedInstances[0]}addListeners(){this._modelInstance.canvas.addEventListener("pointermove",this.onPointerMoveListener.bind(this)),this._modelInstance.canvas.addEventListener("pointerdown",this.onPointerDownListener.bind(this)),this._modelInstance.canvas.addEventListener("pointerup",this.onPointerUpListener.bind(this))}onPointerMoveListener(t){var f,m,g;let e=t.pointerId,n=t.clientX,s=t.clientY,r=this.multitouchManager.getRaycasterWithPointById(e);r!=null&&r!=null&&(r.updatePointCoords(new bt(n,s)),r.updateRaycaster(this._modelInstance.camera),this.multitouchManager.checkAllItemsForIntersection());let a=(f=this.multitouchManager.getRaycasterWithPointById(e))==null?void 0:f.screenPoint.x,o=(m=this.multitouchManager.getRaycasterWithPointById(e))==null?void 0:m.screenPoint.y;(g=this.multitouchManager.getRaycasterWithPointById(e))==null||g.screenPoint;let c=this.multitouchManager.EventMemoryCacheManager.EventMemoryCache.length;this.addLogging("pointer move",e,n,s,a,o,c);let l="playing ";this.multitouchManager.findCurrentlyIntersectedItems().forEach((_,p)=>{l+=":"+_.KeyState.Sonics.NoteName+_.KeyState.Sonics.Octave.toString()});let h=this._modelInstance.instruments.currentInstrument.name,u=this._modelInstance.currentKeyBoard.scaleType.name;this._modelInstance.initialScreen.setTitleFieldText(l),this._modelInstance.initialScreen.setDataFieldText(h),this._modelInstance.initialScreen.setMessageFieldText(u)}onPointerDownListener(t){var h,u,f;this.multitouchManager.findCurrentlyIntersectedItems().forEach((m,g)=>{console.log("FOUND INTERSECTED ITEM :: "+m.KeyState.Id+" : "+m.KeyState.Sonics.NoteName)});let e=t.pointerId;this.multitouchManager.addRaycasterWithPoint(e),this.multitouchManager.EventMemoryCacheManager.pushEventIntoCache(t);let n=t.pointerId,s=t.clientX,r=t.clientY,a=this.multitouchManager.getRaycasterWithPointById(n);a==null||a.updatePointCoords(new bt(s,r)),a==null||a.updateRaycaster(this._modelInstance.camera),this.multitouchManager.checkAllItemsForIntersection();let o=(h=this.multitouchManager.getRaycasterWithPointById(n))==null?void 0:h.screenPoint.x,c=(u=this.multitouchManager.getRaycasterWithPointById(n))==null?void 0:u.screenPoint.y;(f=this.multitouchManager.getRaycasterWithPointById(n))==null||f.screenPoint;let l=this.multitouchManager.EventMemoryCacheManager.EventMemoryCache.length;this.addLogging("pointer down",n,s,r,o,c,l)}onPointerUpListener(t){var c,l,h;let e=t.pointerId,n=t.clientX,s=t.clientY;this.multitouchManager.findCurrentlyIntersectedItems().forEach((u,f)=>{u.stopNote(),u.intersectedInstances.removeIntersectionPointById(e)}),this.multitouchManager.getRaycasterWithPointById(t.pointerId),this.multitouchManager.removeRaycasterWithPointById(e),this.multitouchManager.EventMemoryCacheManager.removeEventFromCache(t);let r=(c=this.multitouchManager.getRaycasterWithPointById(e))==null?void 0:c.screenPoint.x,a=(l=this.multitouchManager.getRaycasterWithPointById(e))==null?void 0:l.screenPoint.y;this.multitouchManager.checkAllItemsForIntersection(),(h=this.multitouchManager.getRaycasterWithPointById(e))==null||h.screenPoint;let o=this.multitouchManager.EventMemoryCacheManager.EventMemoryCache.length;this.addLogging("pointer up",e,n,s,r,a,o)}addLogging(t,e,n,s,r,a,o){r==null&&(r=0),a==null&&(a=0);let c="";this.multitouchManager.EventMemoryCacheManager.EventMemoryCache.forEach((l,h)=>{c+=l.pointerId+","}),this._modelInstance.informationWindow.updateAllFields(t+" id:"+e," Pointer x: "+n.toFixed(2)+", y: "+s.toFixed(2)," Raycast x: "+(r==null?void 0:r.toFixed(2))+", y: "+(a==null?void 0:a.toFixed(2)),"numberOfCachedEvents : "+this.multitouchManager.EventMemoryCacheManager.EventMemoryCache.length+" : [ "+c+" ]","info ajh.",this._modelInstance.currentKeyBoard.scaleType.name+" message"," numberOfIntersectedItems: "+this.multitouchManager.findCurrentlyIntersectedItems().length," Amount of Raycasters: "+this.multitouchManager.raycastersWithPoints.length)}}class QC{constructor(){w(this,"modelInstance",Sn.Instance);w(this,"_titleField");w(this,"_dataField");w(this,"_infoField");w(this,"_contentField");w(this,"_statusField");w(this,"_nameField");w(this,"_messageField");w(this,"_repetitionsField");w(this,"_onField");w(this,"_InformationWindowInstance");w(this,"_width",250);w(this,"_height",170);document.body.style.margin="0px",document.body.style.boxSizing="border-box",this._InformationWindowInstance=document.createElement("div"),this._InformationWindowInstance.style.userSelect="none",this._InformationWindowInstance.style.pointerEvents="none",this._titleField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._titleField),this._titleField.style.color="#ECA130",this._onField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._onField),this._onField.style.color="#F1DA55",this._messageField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._messageField),this._messageField.style.color="#58E281",this._contentField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._contentField),this._contentField.style.color="#62CDFF",this._dataField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._dataField),this._dataField.style.color="#58FF61",this._statusField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._statusField),this._statusField.style.color="#FFA396",this._nameField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._nameField),this._nameField.style.color="#FCBE38",this._infoField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._infoField),this._infoField.style.color="#61C8F1",this._repetitionsField=document.createElement("div"),this._InformationWindowInstance.appendChild(this._repetitionsField),this._repetitionsField.style.color="#E08B8B",this._InformationWindowInstance.style.fontFamily="Consolas",this._InformationWindowInstance.style.fontSize="12px",this._InformationWindowInstance.style.color="#ff9800",this._InformationWindowInstance.style.padding="0.5em",this._InformationWindowInstance.style.maxWidth="200px",this._InformationWindowInstance.style.maxHeight=30+this._height+"px",this._InformationWindowInstance.style.backgroundColor="rgba( 44, 44, 44, 0.70 )",this._InformationWindowInstance.style.position="absolute",this._InformationWindowInstance.style.opacity="1.0",this.updateAllFields(),this.hide()}get titleField(){return this._titleField}set titleField(t){this._titleField=t}get dataField(){return this._dataField}set dataField(t){this._dataField=t}get infoField(){return this._infoField}set infoField(t){this._infoField=t}get contentField(){return this._contentField}set contentField(t){this._contentField=t}get statusField(){return this._statusField}set statusField(t){this._statusField=t}get nameField(){return this._nameField}set nameField(t){this._nameField=t}get messageField(){return this._messageField}set messageField(t){this._messageField=t}get repetitionsField(){return this._repetitionsField}set repetitionsField(t){this._repetitionsField=t}get onField(){return this._onField}set onField(t){this._onField=t}get InformationWindowInstance(){return this._InformationWindowInstance}set InformationWindowInstance(t){this._InformationWindowInstance=t}get width(){return this._width}set width(t){this._width=t}get height(){return this._height}set height(t){this._height=t}setPosition(){this._InformationWindowInstance.style.left="5px",this._InformationWindowInstance.style.top="0px",this._InformationWindowInstance.style.maxWidth=this._InformationWindowInstance.style.width=window.innerWidth/2-46+"px"}moveToMouseCoords(t,e){this.width+40<window.innerWidth&&(this.width=window.innerWidth-75,this._InformationWindowInstance.style.maxWidth=this._width+"px"),console.log(window.innerWidth+":"+this._width),t<window.innerWidth-(40+this._width)?this._InformationWindowInstance.style.left=t+15+"px":t<30+this._width?this._InformationWindowInstance.style.left="15px":this._InformationWindowInstance.style.left=t-(35+this._width)+"px",e<window.innerHeight-(30+this._height)?this._InformationWindowInstance.style.top=e+15+"px":this._InformationWindowInstance.style.top=e-(30+this._height)+"px"}show(){console.log("InformationWindow show():"+this.modelInstance.mouseCoordinates.x+" :: "+this.modelInstance.mouseCoordinates.y),this.setPosition(),this._InformationWindowInstance.parentNode||document.body.appendChild(this._InformationWindowInstance)}hide(){console.log("InformationWindow hide()"),this._InformationWindowInstance.parentNode&&document.body.removeChild(this._InformationWindowInstance)}updateAllFields(t="title",e="data",n="status",s="content",r="info",a="message",o="on",c="name"){this._titleField.innerText=t,this._messageField.innerText=a,this._contentField.innerText=s,this._dataField.innerText=e,this._statusField.innerText=n,this._nameField.innerText="name id",this._infoField.innerText=r,this._onField.innerText=o,this._nameField.innerText=c}updateContentField(t="content"){this._contentField.innerText=t}updateInfoField(t="info"){this._infoField.innerText=t}updateMessageField(t="message"){this._messageField.innerText=t}updateStatusField(t="status"){this._statusField.innerText=t}updateDataField(t="data"){this._dataField.innerText=t}updateTitleField(t="title"){this._titleField.innerText=t}updateOnStatusField(t="Off"){this._onField.innerText=t}updatenameField(t="name"){this._nameField.innerText=t}updateRepetitionsField(t="name"){this._repetitionsField.innerText=t}}class Vm{constructor(t,e){w(this,"_divisor");w(this,"_modelInstance");w(this,"_screenWidth");w(this,"_screenHeight");w(this,"_body");this._modelInstance=Sn.Instance,this._screenHeight=e,this._screenWidth=t,this.divisor=100,this.createBody()}repaint(t){this._body.material.color=t}remake(){this._body!=null&&(this._body.geometry.dispose(),this._body.material.dispose(),this._modelInstance.renderer.renderLists.dispose());const t=new li(1,.1,1),e=new ah({color:"#5CF61F",metalness:.5,roughness:.7});this.body=new En(t,e),this.body.castShadow=!0}createBody(){this._body!=null&&(this._body.geometry.dispose(),this._body.material.dispose(),this._modelInstance.renderer.renderLists.dispose());const t=new li(1,.2,1);new ah({color:"#309608",metalness:.5,roughness:.7}),this.body=new En(t,this.modelInstance.materials.backgroundMaterial),this.body.castShadow=!0,this.body.scale.set(Math.round(this.screenWidth/this.modelInstance.camera.position.y),1,Math.round(this.screenHeight/this.modelInstance.camera.position.y)),this.body.position.y=.4,console.log("FULLSCREENOBJECT CREATED")}dispose(){this._body!=null&&(this._body.geometry.dispose(),this._body.material.dispose(),this._modelInstance.renderer.renderLists.dispose())}resizeToScreenSize(){let t=this.modelInstance.getCameraViewSizeXY();this.body.scale.set(t.x,1,t.y)}get divisor(){return this._divisor}set divisor(t){this._divisor=t}get modelInstance(){return this._modelInstance}set modelInstance(t){this._modelInstance=t}get screenWidth(){return this._screenWidth}set screenWidth(t){this._screenWidth=t}get screenHeight(){return this._screenHeight}set screenHeight(t){this._screenHeight=t}get body(){return this._body}set body(t){this._body=t}}class JC{constructor(){w(this,"_modelInstance");this._modelInstance=Sn.Instance}get modelInstance(){return this._modelInstance}populateGUI(t=!1){let e={volume:.7};this.modelInstance.gui.add(e,"volume").min(0).max(1).step(.01).name("volume").onChange(function(y){console.log("VOLUME:"+y),yu.volume.value=(1-y)*-36});const n=this.modelInstance.gui.addFolder("sound controls").close();let s={instrument:"PolySynth"};n.add(s,"instrument",["Sine","Sawtooth","Square","Triangle","WideSine"]).onChange((function(y){switch(console.log("The current synth is now a "+y),y){case"FatOscillator":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.fatoscillator;break;case"Sawtooth":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.fatoscillator;break;case"Square":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.squaresynth;break;case"Triangle":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.trianglesynth;break;case"WideSine":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.phatpolysynth;break;case"Sine":this.modelInstance.instruments.currentInstrument=this.modelInstance.instruments.synths.polysynth;break}}).bind(this));let r={scale:"chromatic"};n.add(r,"scale",["Chromatic","Major","MelodicMinor","HarmonicMinor","MinorThirdFifthSeventh","MinorPentatonic","BlackKeys"]).name("scale").onChange((function(y){this.modelInstance.currentKeyBoard.scaleType=this.modelInstance.scaleTypes.getScaleFromName(y),this._modelInstance.currentKeyBoard.numberOfColumns=this.modelInstance.scaleTypes.getScaleFromName(y).scale.length,this.modelInstance.currentKeyBoard.createKeys("")}).bind(this));let a={octave:3};n.add(a,"octave").min(0).max(5).step(1).name("octave to start from").onChange((function(y){this.modelInstance.currentKeyBoard.octaveToStartFrom=y,this.modelInstance.currentKeyBoard.createKeys("")}).bind(this));let o={offset:0};n.add(o,"offset").min(0).max(11).step(1).name("semitone offset").onChange((function(y){this.modelInstance.currentKeyBoard.semitoneOffset=y,this.modelInstance.currentKeyBoard.scaleType.transpose(y),this.modelInstance.currentKeyBoard.createKeys("")}).bind(this));const c=this.modelInstance.gui.addFolder("change display").close();c.add(this._modelInstance.currentKeyBoard,"numberOfColumns",1,12,1).name("number of keys").listen().onChange((function(y){console.log("setting key columns:"+y.value),this.modelInstance.currentKeyBoard.createKeys("")}).bind(this)),c.add(this._modelInstance.currentKeyBoard,"numberOfRows",1,6,1).name("number of rows").onChange((function(y){console.log("setting key rows:"+y.value),this.modelInstance.currentKeyBoard.createKeys("")}).bind(this));const l=c.addFolder("colours");l.add(this._modelInstance,"useSpectrumColours").name("toggle Spectrum Colours").onChange((function(y){this._modelInstance.currentKeyBoard.repaintKeyBodies()}).bind(this));let h={naturals:"#408080",accidentals:"#c18c3e",color3:"rgb(170, 0, 255)",color4:11141375};l.addColor(h,"naturals").onChange((function(y){this._modelInstance.currentKeyBoard.KeyColoursDef.setNaturalsColour(y.toString().replace("#","0x")),console.log("COLOUR SET: "+y.toString().replace("#","0x")),this._modelInstance.currentKeyBoard.createKeys(),this._modelInstance.currentKeyBoard.repaintKeyBodies()}).bind(this)),l.addColor(h,"accidentals").onChange((function(y){this._modelInstance.currentKeyBoard.KeyColoursDef.setAccidentalsColour(y.toString().replace("#","0x")),console.log("COLOUR SET: "+y.toString().replace("#","0x"))}).bind(this)),l.close(),c.close();let u=this.modelInstance.gui.addFolder("state"),f={show:!1};u.add(f,"show").name("stats").onChange((function(y){y?document.body.appendChild(this.modelInstance.Stats.dom):document.body.removeChild(this.modelInstance.Stats.dom)}).bind(this));let m={show:!1};u.add(m,"show").name("info").onChange((function(y){y?this.modelInstance.initialScreen.show():this.modelInstance.initialScreen.hide()}).bind(this));let g={show:!1};u.add(g,"show").name("debug").onChange((function(y){y?this.modelInstance.informationWindow.show():this.modelInstance.informationWindow.hide()}).bind(this)),u.addFolder("camera").close().add(this.modelInstance.cameraOrbitControls,"enabled").onChange((function(y){this.modelInstance.toggleOrbitCameraEnabled(this.modelInstance.cameraOrbitControls.enabled)}).bind(this)),u.close(),this.modelInstance.gui.onFinishChange(()=>{const y=this.modelInstance.gui.save();localStorage.setItem("guiState",JSON.stringify(y))});const p=localStorage.getItem("guiState");p&&this.modelInstance.gui.load(JSON.parse(p));const d=()=>{localStorage.removeItem("guiState"),this.modelInstance.gui.reset()};u.add({resetGui:d},"resetGui").name("reset local storage"),this.modelInstance.gui.close()}}function t1(i,t,e=Math.PI*2){const n=t.getElapsedTime()*e;i.rotation.y=n,i.rotation.z=n/1.2}class $i{constructor(){w(this,"synth");w(this,"name")}}class e1{constructor(){w(this,"plucksynth");w(this,"membranesynth");w(this,"duosynth");w(this,"polysynth");w(this,"phatpolysynth");w(this,"squaresynth");w(this,"trianglesynth");w(this,"fatoscillator");this.plucksynth=this.createPluckSynth(),this.membranesynth=this.createMembraneSynth(),this.duosynth=this.createDuoSynth(),this.polysynth=this.createPolySynth(),this.phatpolysynth=this.createPhatPolySynth(),this.fatoscillator=this.createFatOscillator(),this.trianglesynth=this.createTriangle(),this.squaresynth=this.createSquare()}createPluckSynth(){let t=new $i;return t.name="PluckSynth",t.synth=new Vo,t}createFatOscillator(){let t=new $i;return t.name="FatOscillator",t.synth=new Di(gn,{oscillator:{type:"fatsawtooth",count:3,spread:30},envelope:{attack:.74,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),t.synth.maxPolyphony=64,t}createTriangle(){let t=new $i;return t.name="Triangle",t.synth=new Di(gn,{oscillator:{type:"fattriangle",count:5,spread:60},envelope:{attack:.71,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),t.synth.maxPolyphony=64,t}createSquare(){let t=new $i;return t.name="Square",t.synth=new Di(gn,{oscillator:{type:"fatsquare",count:8,spread:60},envelope:{attack:.71,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),t.synth.maxPolyphony=64,t}createMembraneSynth(){let t=new $i;return t.name="MembraneSynth",t.synth=new zs,t}createDuoSynth(){let t=new $i;return t.name="DuoSynth",t.synth=new Bo({vibratoAmount:.5,vibratoRate:5,portamento:.1,harmonicity:1.005,volume:5,voice0:{oscillator:{type:"sawtooth"},filter:{Q:1,type:"lowpass",rolloff:-24},envelope:{attack:.61,decay:.25,sustain:.8,release:1.2},filterEnvelope:{attack:.001,decay:.05,sustain:.3,release:2,baseFrequency:100,octaves:4}},voice1:{oscillator:{type:"sawtooth"},filter:{Q:2,type:"bandpass",rolloff:-12},envelope:{attack:.25,decay:4,sustain:.1,release:.8},filterEnvelope:{attack:.05,decay:.05,sustain:.7,release:2,baseFrequency:5e3,octaves:-1.5}}}),t}createPolySynth(){let t=new $i;return t.name="PolySynth",t.synth=new Di(gn,{oscillator:{type:"fatsine",volume:.1,count:1,spread:30},envelope:{attack:.8,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),t}createPhatPolySynth(){let t=new $i;return t.name="PhatPolySynth",t.synth=new Di(gn,{oscillator:{type:"fattriangle",count:1,spread:30},envelope:{attack:.62,decay:.1,sustain:.5,release:.8,attackCurve:"exponential"}}),t}}class n1{constructor(){w(this,"_modelInstance",Sn.Instance);w(this,"_currentInstrument");w(this,"_volume");w(this,"synths",new e1);w(this,"_instruments",new Array);w(this,"_ajhReverb");w(this,"_ajhReverb2");w(this,"_lpFilter",new hn({frequency:2e4,type:"lowpass",rolloff:-24}));w(this,"_channel");this.setVolume(.7),this.ajhReverb=new Qr({decay:1.5,wet:.9,preDelay:.1}),this.ajhReverb2=new Qr({decay:1.5,wet:.2,preDelay:.1}),this.connectAllInstrumentsToOutput(),this.currentInstrument=this.synths.trianglesynth,this.playAChord(4)}get modelInstance(){return this._modelInstance}set modelInstance(t){this._modelInstance=t}get currentInstrument(){return this._currentInstrument}set currentInstrument(t){this._currentInstrument=t}get volume(){return this._volume}set volume(t){this._volume=t}connectAllInstrumentsToOutput(){this.connectInstrumentToEffectChainAndOutput(this.synths.phatpolysynth.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.polysynth.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.fatoscillator.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.squaresynth.synth),this.connectInstrumentToEffectChainAndOutput(this.synths.trianglesynth.synth)}setVolume(t){yu.volume.value=(1-t)*-36}connectInstrumentToEffectChainAndOutput(t){t.connect(this._lpFilter).connect(this.ajhReverb).toDestination()}playAChord(t){this.synths.polysynth.synth.triggerAttackRelease(["C"+t.toString(),"G"+t.toString(),"C"+(t+1).toString()],1,Te(),.5)}playHarmonized3rd7th(t){let e=yh(t).harmonize([0,3,7,9,11,13,19,23]);this.instruments[4][1].triggerAttackRelease([e[0].toFrequency(),e[1].toFrequency(),e[2].toFrequency()],2.5)}stopHarmonized3rd7th(t){let e=yh(t).harmonize([0,3,7]);this.instruments[1][1].triggerRelease([e[0].toFrequency(),e[1].toFrequency(),e[2].toFrequency()])}playANote(t,e=.7){switch(this.currentInstrument.name){case"Square":this.currentInstrument.synth.triggerAttackRelease(t,.5,Te(),e);break;case"Triangle":this.currentInstrument.synth.triggerAttackRelease(t,.5,Te(),e);break;case"PhatPolySynth":this.currentInstrument.synth.triggerAttackRelease(t,.5,Te(),e);break;case"SquareEightSynth":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"FatOscillator":this.currentInstrument.synth.triggerAttackRelease(t,.5,Te(),e);break;case"MembraneSynth":this.currentInstrument.synth.triggerAttackRelease(t,Te(),.8);break;case"PolySynth":this.currentInstrument.synth.triggerAttackRelease(t,.5,Te(),e);break;case"DuoSynth":this.currentInstrument.synth.triggerAttackRelease(t,.5,Te(),e);break;case"PluckSynth":this.currentInstrument.synth.triggerAttackRelease(t,Te());break}}startToPlayANote(t,e=.7){switch(this.currentInstrument.name){case"PhatPolySynth":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"Square":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"Triangle":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"SquareEightSynth":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"FatOscillator":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"MembraneSynth":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"PolySynth":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"DuoSynth":this.currentInstrument.synth.triggerAttack(t,Te(),e);break;case"PluckedSynth":this.currentInstrument.synth.triggerAttack(t,Te());break}}stopToPlayANote(t){switch(console.log("stopping "+this.currentInstrument.name+" that was playing a "+t),this.currentInstrument.name){case"Triangle":this.currentInstrument.synth.triggerRelease(t);break;case"Square":this.currentInstrument.synth.triggerRelease(t);break;case"PhatPolySynth":this.currentInstrument.synth.triggerRelease(t);break;case"SquareEightSynth":this.currentInstrument.synth.triggerRelease(t);break;case"FatOscillator":this.currentInstrument.synth.triggerRelease(t);break;case"MembraneSynth":this.currentInstrument.synth.triggerRelease(t);break;case"PolySynth":this.currentInstrument.synth.triggerRelease(t);break;case"DuoSynth":this.currentInstrument.synth.triggerRelease(Te());break;case"PluckedSynth":this.currentInstrument.synth.triggerRelease(Te());break}}stopANote(t){this.currentInstrument.synth.triggerRelease(t),this.currentInstrument.synth.triggerRelease()}stopAllNotes(){}get instruments(){return this._instruments}set instruments(t){this._instruments=t}get ajhReverb(){return this._ajhReverb}set ajhReverb(t){this._ajhReverb=t}get ajhReverb2(){return this._ajhReverb2}set ajhReverb2(t){this._ajhReverb2=t}get lpFilter(){return this._lpFilter}set lpFilter(t){this._lpFilter=t}get channel(){return this._channel}set channel(t){this._channel=t}}class i1{constructor(){w(this,"modelInstance",Sn.Instance);w(this,"enterButtonGeometry",this.modelInstance.geometries.roundedCubeGeometry);w(this,"enterButtonMaterial",this.modelInstance.materials.enterButtonMaterial);w(this,"_enterButton");w(this,"_titleField");w(this,"_InformationWindowInstance");w(this,"_fullscreenobject");w(this,"_dataField");w(this,"_messageField");w(this,"_width",200);w(this,"_height",100);w(this,"_body",new dn);w(this,"selectableItems",new Array);w(this,"enterButtonIsTouched",!1);w(this,"_enterButtonClicked",!1);w(this,"pointermovelistener");w(this,"pointerdownlistener");w(this,"pointeruplistener");w(this,"raycaster",new Xc);w(this,"pointer",new bt);w(this,"INTERSECTED");this.pointermovelistener=this.onPointerMove.bind(this),this.pointerdownlistener=this.enterButtonOnPointerDownListener.bind(this),this.pointeruplistener=this.enterButtonOnPointerUpListener.bind(this),this.raycaster.layers.set(2),this.modelInstance.gui.hide(),this.createInformationWindow(),this.updateAllFields(),this.showInformationWindow(),this.createEnterButton(this.body),this.createfullScreenBackground(this.body),this.modelInstance.scene.add(this.body),this.addListeners()}get enterButton(){return this._enterButton}set enterButton(t){this._enterButton=t}get titleField(){return this._titleField}set titleField(t){this._titleField=t}get InformationWindowInstance(){return this._InformationWindowInstance}set InformationWindowInstance(t){this._InformationWindowInstance=t}get fullscreenobject(){return this._fullscreenobject}set fullscreenobject(t){this._fullscreenobject=t}get dataField(){return this._dataField}set dataField(t){this._dataField=t}get messageField(){return this._messageField}set messageField(t){this._messageField=t}get width(){return this._width}set width(t){this._width=t}get height(){return this._height}set height(t){this._height=t}get body(){return this._body}set body(t){this._body=t}get enterButtonClicked(){return this._enterButtonClicked}set enterButtonClicked(t){this._enterButtonClicked=t}beginTheSound(){this.removeListeners(),this.disposeOfEnterButton(),this.modelInstance.pointLights[0].position.y=2.5,this.startAudio()}createfullScreenBackground(t){this.fullscreenobject=new Vm(this.modelInstance.canvas.clientWidth/1,this.modelInstance.canvas.clientHeight/1),this.fullscreenobject.body.position.y=4.8,this.fullscreenobject.resizeToScreenSize(),t.add(this.fullscreenobject.body)}createInformationWindow(){document.body.style.margin="0px",document.body.style.boxSizing="border-box",this._InformationWindowInstance=document.createElement("div"),this._InformationWindowInstance.style.userSelect="none",this._InformationWindowInstance.style.pointerEvents="none",this._InformationWindowInstance.style.padding="0px",this._InformationWindowInstance.style.height="max-content",this._InformationWindowInstance.style.width="max-content",this._titleField=document.createElement("div"),this._titleField.style.userSelect="none",this._titleField.style.height="max-content",this._titleField.style.width="max-content",this._titleField.style.lineHeight="13px",this._InformationWindowInstance.appendChild(this._titleField),this._titleField.style.color="#ff9800",this._titleField.style.padding="0px",this._titleField.style.top="10px",this._messageField=document.createElement("div"),this._messageField.style.userSelect="none",this._messageField.style.height="max-content",this._messageField.style.width="max-content",this._messageField.style.lineHeight="13px",this._InformationWindowInstance.appendChild(this._messageField),this._messageField.style.color="#77D8FF",this._dataField=document.createElement("div"),this._dataField.style.userSelect="none",this._dataField.style.height="max-content",this._dataField.style.width="max-content",this._dataField,this._dataField.style.lineHeight="13px",this._dataField.style.top="5px",this._InformationWindowInstance.appendChild(this._dataField),this._dataField.style.color="#91c91a",this._InformationWindowInstance.style.fontFamily="Consolas",this._InformationWindowInstance.style.fontSize="12px",this._InformationWindowInstance.style.color="#ff9800",this._InformationWindowInstance.style.padding="1.5em",this._InformationWindowInstance.style.maxWidth="250px",this._InformationWindowInstance.style.maxHeight=this._height+"px",this._InformationWindowInstance.style.backgroundColor="rgba( 44, 44, 44, 0.70 )",this._InformationWindowInstance.style.position="absolute",this._InformationWindowInstance.style.opacity="1.0"}setInformationWindowPosition(){this._InformationWindowInstance.style.left="0px",this._InformationWindowInstance.style.top=window.innerHeight-this._height*.75+"px"}showInformationWindow(){console.log("InformationWindow show():"),this.setInformationWindowPosition(),this._InformationWindowInstance.parentNode||document.body.appendChild(this._InformationWindowInstance)}hideInformationWindow(){console.log("InformationWindow hide()"),this._InformationWindowInstance.parentNode&&document.body.removeChild(this._InformationWindowInstance)}updateAllFields(t="THE INSTRUMENT",e="touch the spinning cube to begin",n="doubleclick for fullscreen"){this._titleField.innerText=t,this._messageField.innerText=e,this._dataField.innerText=n}setDataFieldText(t){this._dataField.innerText=t}setMessageFieldText(t){this._messageField.innerText=t}setTitleFieldText(t){this._titleField.innerText=t}createEnterButton(t){const e=this.modelInstance.geometries.roundedCubeGeometry,n=this.modelInstance.materials.enterButtonMaterial;this.enterButton=new En(e,n);let s=.5;this.enterButton.scale.set(s,s,s),this.enterButton.position.y=5,t.add(this.enterButton),this.selectableItems.push(this.enterButton)}rotateButton(){t1(this.enterButton,this.modelInstance.clock,Math.PI/3)}addListeners(){this.modelInstance.canvas.addEventListener("pointermove",this.pointermovelistener),this.modelInstance.canvas.addEventListener("pointerdown",this.pointerdownlistener),this.modelInstance.canvas.addEventListener("pointerup",this.pointeruplistener)}removeListeners(){console.log("REMOVE ENTER LISTENERS"),this.modelInstance.canvas.removeEventListener("pointermove",this.pointermovelistener),this.modelInstance.canvas.removeEventListener("pointerdown",this.pointerdownlistener),this.modelInstance.canvas.removeEventListener("pointerup",this.pointeruplistener)}enterButtonOnPointerDownListener(t){console.log("BUTTON OUTSIDECLICKED!!!!"),this.enterButtonIsTouched&&this.beginTheSound()}enterButtonOnPointerUpListener(t){console.log("BUTTON OUTSIDECLICKED!!!!"),console.log("BUTTON UP!!!!"),this.enterButtonIsTouched=!1,this.enterButtonClicked=!0,this._fullscreenobject.body.removeFromParent(),this.enterButton.removeFromParent(),this.beginTheSound()}async startAudio(){await xm().then(()=>{console.log("starting Tone"),this.modelInstance.instruments=new n1,this.modelInstance.ajhGuiControls=new JC,this.modelInstance.ajhGuiControls.populateGUI(),this.modelInstance.instruments.playAChord(2),this.modelInstance.gui.show(),this.updateAllFields("playing THE INSTRUMENT",this.modelInstance.instruments.currentInstrument.name,this.modelInstance.currentKeyBoard.scaleType.name)})}onPointerMove(t){this.pointer.x=t.clientX/window.innerWidth*2-1,this.pointer.y=-(t.clientY/window.innerHeight)*2+1,console.log("BUTTON PARENT : "+this.enterButton.parent),this.enterButtonClicked?this.enterButton.layers.disable(1):this.enterButton.parent==null?(this.body.add(this.enterButton),this.enterButton.layers.enable(1)):this.enterButton.layers.enable(1)}disposeOfEnterButton(){this.enterButton.geometry.dispose(),this.enterButton.material.dispose(),this.modelInstance.renderer.renderLists.dispose()}zapBackground(){}raycastingEnterButton(){this.raycaster.setFromCamera(this.pointer,this.modelInstance.camera);let t=this.raycaster.intersectObjects(this.selectableItems,!1);if(this.INTERSECTED==null&&console.log("INTERSECTED????"),t.length>0)if(this.INTERSECTED!=t[0].object){this.INTERSECTED&&console.log("INTERSECTED????"),this.INTERSECTED!=t[0].object,this.INTERSECTED=t[0].object;for(let e=0;e<t.length;e++)this.enterButtonIsTouched=!0,console.log("FOUND BUTTON!!!"),this.enterButtonIsTouched?t[e].object.material.color.set(16711680):t[e].object.material.color.set(255)}else this.INTERSECTED&&console.log("STILL TOUCHING SOMETHING"),this.INTERSECTED=null}show(){console.log("note information show():"+this.modelInstance.mouseCoordinates.x+" :: "+this.modelInstance.mouseCoordinates.y),this.modelInstance.initialScreen.InformationWindowInstance.parentNode||document.body.appendChild(this.modelInstance.initialScreen.InformationWindowInstance)}hide(){console.log("note information hide()"),this.modelInstance.initialScreen.InformationWindowInstance.parentNode&&document.body.removeChild(this.modelInstance.initialScreen.InformationWindowInstance)}}function Th(i){const t=n=>n.dispose(),e=n=>{n.geometry&&t(n.geometry),n.material&&Bf(n.material,t,t)};if(i instanceof mi||i instanceof ze)return t(i);if(i instanceof pi)return Bf(i,t,t);e(i),i.traverse&&i.traverse(n=>e(n))}function Bf(i,t,e){const n=s=>{t&&t(s),e&&(Object.values(s).filter(r=>r instanceof ze).forEach(r=>e(r)),s.uniforms&&Object.values(s.uniforms).filter(({value:r})=>r instanceof ze).forEach(({value:r})=>e(r)))};Array.isArray(i)?i.forEach(s=>n(s)):n(i)}class s1{constructor(){w(this,"instances");this.instances=new Array}addIntersectionPoint(t){for(let e=0;e<this.instances.length;e++){const n=this.instances[e];n.id==t.id&&(n.point=t.point)}this.instances.push(t)}removeIntersectionPointById(t){this.instances=this.instances.filter(e=>e.id!=t)}getIntersectionPointById(t){let e=null;for(let n=0;n<this.instances.length;n++){const s=this.instances[n];s.id==t&&(e=s)}return e}}class r1{constructor(t=new xt(65280),e=new xt(65280),n=new xt(65280),s=new xt(65280)){w(this,"_baseColour");w(this,"_highlightColour");w(this,"_onColour");w(this,"_offColour");w(this,"_playingColour");w(this,"_inactiveColour");w(this,"_mutedColour");w(this,"_seedColours",[new xt(16776960),new xt(16711680),new xt(65280),new xt(255)]);this._baseColour=t,this.createHighLightColourFromBaseColour(),this._onColour=n,this._offColour=s,this._playingColour=this.generateColourFromBaseColour(this._baseColour,.6),this._inactiveColour=new xt(7368816)}createHighLightColourFromBaseColour(){let t=new Object;this._baseColour.getHSL(t),t.l=.55,this.highlightColour=new xt(267386880),this.highlightColour.setHSL(t.h,t.s,t.l)}generateColourFromBaseColour(t,e=.3){let n={h:0,s:0,l:0};t.getHSL(n);let s,r=new xt;return s=.003+e*.9597,r.setHSL(n.h,n.s,s),r}get offColour(){return this._offColour}get onColour(){return this._onColour}get highlightColour(){return this._highlightColour}get baseColour(){return this._baseColour}get playingColour(){return this._playingColour}get seedColours(){return this._seedColours}get inactiveColour(){return this._inactiveColour}get mutedColour(){return this._mutedColour}set mutedColour(t){this._mutedColour=t}set playingColour(t){this._playingColour=t}set offColour(t){this._offColour=t}set onColour(t){this._onColour=t}set baseColour(t){this._baseColour=t,this._highlightColour=this.generateColourFromBaseColour(this._baseColour,.2),this._offColour=this.generateColourFromBaseColour(this._baseColour,.1),this._onColour=this.generateColourFromBaseColour(this._baseColour,.4)}set highlightColour(t){this._highlightColour=t}set inactiveColour(t){this._inactiveColour=t}set seedColours(t){this._seedColours=t}}class o1{constructor(){w(this,"_PositionInKeyboard");w(this,"_Id");w(this,"_KeyboardInstance");w(this,"_Sonics");w(this,"_State");w(this,"_View");this.createAll()}get PositionInKeyboard(){return this._PositionInKeyboard}set PositionInKeyboard(t){this._PositionInKeyboard=t}get Id(){return this._Id}set Id(t){this._Id=t}get KeyboardInstance(){return this._KeyboardInstance}set KeyboardInstance(t){this._KeyboardInstance=t}get Sonics(){return this._Sonics}set Sonics(t){this._Sonics=t}get State(){return this._State}set State(t){this._State=t}get View(){return this._View}set View(t){this._View=t}createView(){this.View=new c1}createState(){this.State=new l1}createSonics(){this.Sonics=new a1}createAll(){this.createView(),this.createState(),this.createSonics()}setAllValueStates(t,e,n,s,r,a,o,c,l,h,u,f,m,g,_,p,d,y,v){let S=!1;try{this.Id=t,this.KeyboardInstance=e,this.PositionInKeyboard=n,this.State.IsRayTouched=s,this.State.IsPointerDown=r,this.State.IsPointerMove=a,this.State.IsPointerOut=o,this.View.ColId=c,this.View.RowId=l,this.View.Colours=h,this.View.Height=u,this.View.Width=f,this.View.Length=m,this.View.Position=g,this.View.ScreenPosition=_,this.Sonics.NoteName=p,this.Sonics.Octave=d,this.Sonics.IsSharpOrFlat=y,this.Sonics.IsPlaying=v,S=!0}catch(b){console.log("ERROR IN CREATING KeyData : "+b)}return S}}class a1{constructor(){w(this,"_IsSharpOrFlat");w(this,"_Octave");w(this,"_Synth");w(this,"_NoteName");w(this,"_IsPlaying")}get IsSharpOrFlat(){return this._IsSharpOrFlat}set IsSharpOrFlat(t){this._IsSharpOrFlat=t}get Octave(){return this._Octave}set Octave(t){this._Octave=t}get Synth(){return this._Synth}set Synth(t){this._Synth=t}get NoteName(){return this._NoteName}set NoteName(t){this._NoteName=t}get IsPlaying(){return this._IsPlaying}set IsPlaying(t){this._IsPlaying=t}setIsSharpOrFlat(t){this.IsSharpOrFlat=t}setAllKeySonicsValues(t,e,n,s,r){this.NoteName=t,this.Octave=e,this.IsSharpOrFlat=n,this.IsPlaying=s}setSynth(t){this.Synth=t}}class c1{constructor(){w(this,"_RowId");w(this,"_ColId");w(this,"_Width");w(this,"_Height");w(this,"_Length");w(this,"_IsSharpOrFlat");w(this,"_Colours");w(this,"_Id");w(this,"_Body");w(this,"_NoteName");w(this,"_Position");w(this,"_ScreenPosition");w(this,"_IsActive");w(this,"_IsRayTouched")}get RowId(){return this._RowId}set RowId(t){this._RowId=t}get ColId(){return this._ColId}set ColId(t){this._ColId=t}get Width(){return this._Width}set Width(t){this._Width=t}get Height(){return this._Height}set Height(t){this._Height=t}get Length(){return this._Length}set Length(t){this._Length=t}get IsSharpOrFlat(){return this._IsSharpOrFlat}set IsSharpOrFlat(t){this._IsSharpOrFlat=t}get Colours(){return this._Colours}set Colours(t){this._Colours=t}get Id(){return this._Id}set Id(t){this._Id=t}get Body(){return this._Body}set Body(t){this._Body=t}get NoteName(){return this._NoteName}set NoteName(t){this._NoteName=t}get Position(){return this._Position}set Position(t){this._Position=t}get ScreenPosition(){return this._ScreenPosition}set ScreenPosition(t){this._ScreenPosition=t}get IsActive(){return this._IsActive}set IsActive(t){this._IsActive=t}get IsRayTouched(){return this._IsRayTouched}set IsRayTouched(t){this._IsRayTouched=t}setIsRayTouched(t){this.IsRayTouched=t}setIsSelected(t){this.IsRayTouched=t}setIsActive(t){this.IsActive=t}setIsSharpOrFlat(t){this.IsSharpOrFlat=t}setAllKeyViewValues(t,e,n,s,r,a,o,c,l,h,u){this.IsActive=t,this.ColId=s,this.Colours=a,this.Height=o,this.IsActive=t,this.IsRayTouched=e,this.IsSharpOrFlat=n,this.Length=l,this.Position=h,this.RowId=r,this.ScreenPosition=u,this.Width=c}}class l1{constructor(){w(this,"_PointerRayIds",new Array);w(this,"_IsPointerDown");w(this,"_IsPointerMove");w(this,"_IsPointerOut");w(this,"_IsPlaying");w(this,"_IsActive");w(this,"_IsRayTouched")}get PointerRayIds(){return this._PointerRayIds}set PointerRayIds(t){this._PointerRayIds=t}get IsPointerDown(){return this._IsPointerDown}set IsPointerDown(t){this._IsPointerDown=t}get IsPointerMove(){return this._IsPointerMove}set IsPointerMove(t){this._IsPointerMove=t}get IsPointerOut(){return this._IsPointerOut}set IsPointerOut(t){this._IsPointerOut=t}get IsPlaying(){return this._IsPlaying}set IsPlaying(t){this._IsPlaying=t}get IsActive(){return this._IsActive}set IsActive(t){this._IsActive=t}get IsRayTouched(){return this._IsRayTouched}set IsRayTouched(t){this._IsRayTouched=t}setIsPlaying(t){this.IsPlaying=t}setIsActive(t){this.IsActive=t}setIsRayTouched(t){this.IsRayTouched=t}setIsPointerDown(t){this.IsPointerDown=t}setIsPointerMove(t){this.IsPointerMove=t}setIsPointerOut(t){this.IsPointerOut=t}setAllKeyStateValues(t,e,n,s,r){this.IsActive=t,this.IsRayTouched=e,this.IsPointerDown=n,this.IsPointerMove=s,this.IsPointerOut=r}addPointerRayIdIfNotExisting(t,e=!1){let n=this.checkIfPointerRayExistsById(t,e);n==null&&this.PointerRayIds.push(t),console.log(" PointerRayChecks : adding if ray is registered :"+n)}getNumberOfPointerRays(){return this.PointerRayIds.length}checkIfPointerRayExistsById(t,e=!1){let n=null;for(let s=0;s<this.PointerRayIds.length;s++)this.PointerRayIds[s]==t&&(n=s);return e&&console.log("PointerRayChecks : checking if ray EXISTING ID: "+n),n}removePointerRayById(t,e=!1){let n,s=!1;e&&console.log("PointerRayChecks : removing ray ATTEMPT : NumberOfRegisteredPointerRays : "+this.PointerRayIds.length+" : "+t);for(let r=0;r<this.PointerRayIds.length;r++)this.PointerRayIds[r]==t&&(n=r);return n!=null&&(this.PointerRayIds.splice(n,1),s=!0,e&&console.log("PointerRayChecks : removing FOUND RAY: "+n+" : "+s)),e&&console.log(" PointerRayChecks : removing ray if ray is registered :"+n+" : "+s),s}}class Vf{constructor(t,e,n,s,r,a,o,c,l,h,u){w(this,"_State",new o1);w(this,"_baseColor");w(this,"name");w(this,"_intersectedInstances");w(this,"wasIntersectedByRayId");w(this,"distance");w(this,"darkMaterial",new Fn({color:"#006786"}));w(this,"lightMaterial",new Fn({color:"#00A8A0"}));w(this,"darkOnMaterial",new Fn({color:"#DDA960"}));w(this,"lighOntMaterial",new Fn({color:"#F4DA93"}));w(this,"_isBlackKey",!1);w(this,"_note");w(this,"_id");w(this,"_positionInKeyboardArray");w(this,"_filter");w(this,"_frequency");w(this,"_voice");w(this,"_rowId");w(this,"_colId");w(this,"_muted");w(this,"_modelInstance",Sn.Instance);w(this,"_colours");w(this,"_keyWidth");w(this,"_keyHeight");w(this,"_keyLength");this.KeyState.createAll(),this.KeyState.setAllValueStates(t,h,u,!1,!1,!1,!1,n,e,new r1,r,s,a,new N,new bt,c,l,o,!1),this.name=e+"_"+n,this.intersectedInstances=new s1,this.distance=0,this.createKeyBody(),this.changeKeySizeToFitScreenSize()}get KeyState(){return this._State}set KeyState(t){this._State=t}get baseColor(){return this._baseColor}set baseColor(t){this._baseColor=t}get intersectedInstances(){return this._intersectedInstances}set intersectedInstances(t){this._intersectedInstances=t}createKeyBody(){this.KeyState.View.Body=new En(this.modelInstance.geometries.keyGeometry,this.darkMaterial),this.KeyState.View.Body.name=rh.randInt(0,16777215).toString(),this.KeyState.View.Body.layers.enable(3),this.repaintBody(),this.KeyState.View.Body.position.y=.5}disposeOfKeyBody(){Th(this.KeyState.View.Body),this._modelInstance.renderer.renderLists.dispose()}changeKeySizeToFitScreenSize(){let t=this.modelInstance.getCameraViewSizeXY();this.changeKeyLengthToFitScreenHeight(t.y),this.changeKeyWidthToFitScreenWidth(t.x)}changeKeyLengthToFitScreenHeight(t){this.KeyState.View.Length=t/this.KeyState.KeyboardInstance.numberOfRows,this.disposeOfKeyBody(),this.KeyState.View.Body.geometry=new zc(this.KeyState.View.Width,this.KeyState.View.Height,this.KeyState.View.Length,7,.05)}changeKeyWidthToFitScreenWidth(t){let n=this.KeyState.View.Width*.002,r=this.KeyState.View.Length*.02;this.KeyState.View.Width=t/this.KeyState.KeyboardInstance.numberOfColumns,this.disposeOfKeyBody(),Math.min(this.KeyState.View.Width-n,this.KeyState.View.Length-r),this.KeyState.View.Body.geometry=new zc(this.KeyState.View.Width-n,this.KeyState.View.Height,this.KeyState.View.Length-r,7,.05)}setKeyInstanceScale(t){}setKeyColour(t){this.KeyState.View.Body.material.color=t}highlightKey(t){const n=this.KeyState.View.Body.material;t==!0?(this.modelInstance.showColourMessages&&console.log("HIGHLIGHT : KEY : "+this.KeyState.Id),n.color=this.KeyState.View.Colours.highlightColour,n.needsUpdate=!0):(n.color=this.KeyState.View.Colours.baseColour,n.needsUpdate=!0)}changeIntersectedColour(){this.intersectedInstances.instances.length==0?(this.stopNote(),this.KeyState.View.Body.material.color=this.KeyState.View.Colours.baseColour,this.KeyState.View.Body.position.y=.5):(this.KeyState.View.Body.material.color=new xt(+rh.randInt(0,16777215).toString()),this.KeyState.View.Body.position.y=.3,this.startNote())}startNote(){this.modelInstance.instruments!=null&&(this.KeyState.Sonics.IsPlaying||(this.modelInstance.instruments.startToPlayANote(this.KeyState.Sonics.NoteName+this.KeyState.Sonics.Octave.toString()),this.KeyState.Sonics.IsPlaying=!0,console.log(" KEY :: "+this.KeyState.Id+" STARTING NOTE ::"+this.KeyState.Sonics.NoteName+this.KeyState.Sonics.Octave.toString())))}stopNote(){this.modelInstance.instruments!=null&&(console.log(" KEY :: "+this.KeyState.Id+" STOPPING NOTE ::"+this.KeyState.Sonics.NoteName+this.KeyState.Sonics.Octave.toString()),this.modelInstance.instruments.stopToPlayANote(this.KeyState.Sonics.NoteName+this.KeyState.Sonics.Octave.toString()),this.KeyState.Sonics.IsPlaying=!1)}vibrate(t){navigator.vibrate(200)}checkForRayIdInIntersectedRayIds(t){let e=!1;for(let n=0;n<this.intersectedInstances.instances.length;n++)this.intersectedInstances.instances[n].id==t&&(e=!0);return console.log(e?"Ray "+t+" FOUND IN KEY "+this.KeyState.Id+" INTERSECTIONS.":"NO Ray ID FOUND IN KEY "+this.KeyState.Id+" INTERSECTIONS."),e}selectedListener(t,e){this.KeyState.State.IsRayTouched&&console.log("key selected:"+t),this.KeyState.View.Body.id==e&&(this.modelInstance.showMusicalKeyMessages&&console.log("I am  key number "+this._id+", at position "+this._id+" and i heard that it is "+t+" that i was Selected!"),this.modelInstance.musicalKeyEventEmitter.emit("toggle",this,this._id,0,0,0))}repaintBody(){console.log("REPAINTING MY BODY : "+this.KeyState.Id);let t=this.KeyState.View.Body.material;this.KeyState.Sonics.IsSharpOrFlat?this.modelInstance.useSpectrumColours?(this.KeyState.View.Colours.baseColour=t.color=this.modelInstance.colours.spectrumArray[this.modelInstance.scaleTypes.getNoteIndexFromName(this.KeyState.Sonics.NoteName)],t.needsUpdate=!0):this.KeyState.View.Colours.baseColour=t.color=this.KeyState.KeyboardInstance.KeyColoursDef.Naturals:this.modelInstance.useSpectrumColours?(this.KeyState.View.Colours.baseColour=t.color=this.modelInstance.colours.spectrumArray[this.KeyState.View.ColId%12],t.needsUpdate=!0):this.KeyState.View.Colours.baseColour=t.color=this.KeyState.KeyboardInstance.KeyColoursDef.Accidentals,this.KeyState.View.Colours.baseColour=t.color,this.KeyState.View.Colours.createHighLightColourFromBaseColour()}get isBlackKey(){return this._isBlackKey}set isBlackKey(t){this._isBlackKey=t}get id(){return this._id}get filter(){return this._filter}get positionInKeyboardArray(){return this._positionInKeyboardArray}get frequency(){return this._frequency}get voice(){return this._voice}get modelInstance(){return this._modelInstance}get colours(){return this.KeyState.View.Colours}get touched(){return this.KeyState.State.IsRayTouched}get note(){return this._note}set note(t){this._note=t}set positionInKeyboardArray(t){this._positionInKeyboardArray=t}set id(t){this._id=t,this.modelInstance.showMusicalKeyMessages&&console.log("I have set my id to: "+this._id)}set filter(t){this._filter=t}set frequency(t){this._frequency=t}set voice(t){this._voice=t}set modelInstance(t){this._modelInstance=t}set isOn(t){this.KeyState.State.IsActive=t,this.KeyState.State.IsActive&&(this.modelInstance.showMusicalKeyMessages&&console.log("I am  key number "+this._id+", and it is now "+this.KeyState.State.IsActive+" that I am on,so I switched myself on"),this._muted),this.KeyState.State.IsActive||(this.modelInstance.showMusicalKeyMessages&&console.log("I am  key number "+this._id+" of Euclidean Ring  and it is now "+this.KeyState.State.IsActive+" that I am on,so I switched myself off"),this._muted)}get rowId(){return this._rowId}set rowId(t){this._rowId=t}get colId(){return this._colId}set colId(t){this._colId=t}get muted(){return this._muted}set muted(t){this._muted=t,this.setKeyColour(this.KeyState.View.Colours.inactiveColour)}get keyWidth(){return this._keyWidth}set keyWidth(t){this._keyWidth=t}get keyHeight(){return this._keyHeight}set keyHeight(t){this._keyHeight=t}get keyLength(){return this._keyLength}set keyLength(t){this._keyLength=t}set colours(t){this.KeyState.View.Colours=t}set touched(t){this.KeyState.State.IsRayTouched=t}}class h1{constructor(){w(this,"Naturals",new xt);w(this,"Accidentals",new xt);this.setAccidentalsColour(12684350),this.setNaturalsColour(4227200)}setAccidentalsColour(t){this.Accidentals.setHex(t)}setNaturalsColour(t){this.Naturals.setHex(t)}}class u1{constructor(t=1,e=12,n="pianogrid",s,r=0,a=3){w(this,"darkMaterial",new Fn({color:"#006786"}));w(this,"lightMaterial",new Fn({color:"#00A8A0"}));w(this,"darkOnMaterial",new Fn({color:"#DDA960"}));w(this,"lighOntMaterial",new Fn({color:"#F4DA93"}));w(this,"BaseMaterial",new Fn({color:"#F4DA93"}));w(this,"KeyColoursDef",new h1);w(this,"_id");w(this,"_scaleType");w(this,"_semitoneOffset");w(this,"_modelInstance");w(this,"_spaceBetweenRows",3);w(this,"_spaceBetweenKeys");w(this,"_keys",new Array);w(this,"_keyRows",new Array);w(this,"_numberOfRows");w(this,"_numberOfColumns");w(this,"_divisor");w(this,"_voice");w(this,"_octaveToStartFrom");w(this,"KeysetTypeDefinitions",new Um);w(this,"_KeyBoardNoteNames",new Array);w(this,"_keysetTypeInstance");this._modelInstance=Sn.Instance,this.numberOfRows=t,this.numberOfColumns=e,this.octaveToStartFrom=a,this.semitoneOffset=r,this.spaceBetweenKeys=.25,this.spaceBetweenRows=0,this.scaleType=s,this.divisor=100,this.KeyBoardTypeInstance=n,this.routeToCorrectFunctionsForKeySetType(),this.setThisToCurrentKeyboard()}get id(){return this._id}set id(t){this._id=t}get scaleType(){return this._scaleType}set scaleType(t){this._scaleType=t}get semitoneOffset(){return this._semitoneOffset}set semitoneOffset(t){this._semitoneOffset=t}get modelInstance(){return this._modelInstance}set modelInstance(t){this._modelInstance=t}get spaceBetweenRows(){return this._spaceBetweenRows}set spaceBetweenRows(t){this._spaceBetweenRows=t}get spaceBetweenKeys(){return this._spaceBetweenKeys}set spaceBetweenKeys(t){this._spaceBetweenKeys=t}get keys(){return this._keys}set keys(t){this._keys=t}get keyRows(){return this._keyRows}set keyRows(t){this._keyRows=t}get numberOfRows(){return this._numberOfRows}set numberOfRows(t){this._numberOfRows=t}get numberOfColumns(){return this._numberOfColumns}set numberOfColumns(t){this._numberOfColumns=t}get divisor(){return this._divisor}set divisor(t){this._divisor=t}get voice(){return this._voice}set voice(t){this._voice=t}get octaveToStartFrom(){return this._octaveToStartFrom}set octaveToStartFrom(t){this._octaveToStartFrom=t}get KeyBoardNoteNames(){return this._KeyBoardNoteNames}set KeyBoardNoteNames(t){this._KeyBoardNoteNames=t}get KeyBoardTypeInstance(){return this._keysetTypeInstance}set KeyBoardTypeInstance(t){this._keysetTypeInstance=t}setThisToCurrentKeyboard(){this.modelInstance.currentKeyBoard=this}routeToCorrectFunctionsForKeySetType(){switch(this.KeyBoardTypeInstance){case this.KeysetTypeDefinitions.HorizontalKeys:this.createKeys(this.KeysetTypeDefinitions.HorizontalKeys);break;case this.KeysetTypeDefinitions.VerticalKeys:this.createKeys(this.KeysetTypeDefinitions.VerticalKeys);break;case this.KeysetTypeDefinitions.CirclesOfKeys:break;case this.KeysetTypeDefinitions.RandomlyPlacedKeys:break;case this.KeysetTypeDefinitions.Voronoi:break;case this.KeysetTypeDefinitions.EffectsXY:break}}createKeys(t){this.createVerticalKeys()}createHorizontalKeys(){console.log("CREATING KEYS::"+this.scaleType.name);let t=Math.round(Math.random()*100);this._keys&&this.destroyKeys(),this._keys=new Array;for(let e=0;e<this.numberOfRows;e++){this._keyRows[e];for(let n=0;n<this.numberOfColumns;n++){this._keys[n];let s=!1;this.scaleType.scale[n%this.scaleType.scale.length].length==2&&(s=!0);let r=this.octaveToStartFrom+e+Math.floor(n/this.scaleType.scale.length),a=window.innerWidth;this._keys.push(new Vf(e*this.numberOfColumns+n,e,n,a/this.modelInstance.camera.position.y,.5,window.innerWidth/this.numberOfColumns/this.modelInstance.camera.position.y,s,this.scaleType.scale[n%this.scaleType.scale.length],r,this,this.keys.length-1)),console.log(t+"KEY NOTE:: "+this.modelInstance.ScalesCreation.noteNamesOneOctave[n%12]+Math.round(r+n/12).toString())}}this.modelInstance.keyBodies=this.getKeyBodies(),this.addKeysToScene(this.modelInstance.scene)}createVerticalKeys(){console.log("CREATING KEYS::"+this.scaleType.name),this._keys&&this.destroyKeys(),this._keys=new Array;for(let t=0;t<this.numberOfRows;t++){this._keyRows[t];for(let e=0;e<this.numberOfColumns;e++){this._keys[e];let n=!1;this.scaleType.scale[e%this.scaleType.scale.length].length==2&&(n=!0);let s=this.octaveToStartFrom+t+Math.floor(e/this.scaleType.scale.length),r=window.innerWidth/this.numberOfColumns-window.innerWidth/this.numberOfColumns/this.numberOfColumns;this._keys.push(new Vf(t*this.numberOfColumns+e,t,e,window.innerWidth/this.numberOfColumns/this.modelInstance.camera.position.y,.25,r/this.modelInstance.camera.position.y,n,this.scaleType.scale[e%this.scaleType.scale.length],s,this,this.keys.length-1))}}this.modelInstance.keyBodies=this.getKeyBodies(),this.positionVerticalKeys(),this.addKeysToScene(this.modelInstance.scene),this.modelInstance.canvasInteraction.multitouchManager.interactiveItems=this.keys,console.log("number of keys:"+this.keys.length)}positionVerticalKeys(){let e=this.modelInstance.getCameraViewSizeXY().x/2;for(let n=0;n<this.keys.length;n++){const s=this.keys[n];s.KeyState.View.Body.position.x=s.KeyState.View.ColId*s.KeyState.View.Width+s.KeyState.View.Width/2-e;let r=-s.KeyState.View.Length/2;s.KeyState.View.Body.position.z=-(s.KeyState.View.Length*this.numberOfRows/2)+(s.KeyState.View.RowId*s.KeyState.View.Length-r)}}positionHorizontalKeys(){let t=this.modelInstance.getCameraViewSizeXY(),e=t.x/2;for(let n=0;n<this.keys.length;n++){const s=this.keys[n];s.KeyState.View.Body.position.z=s.KeyState.View.ColId*(s.KeyState.View.Width+this.spaceBetweenKeys)-e+s.KeyState.View.Width/2;let r=-t.y/this.numberOfRows;s.KeyState.View.Body.position.x=0,-(s.KeyState.View.RowId*(s.KeyState.View.Height*this.numberOfRows))+s.KeyState.View.Height*(this.numberOfRows/2)-r}}addKeysToScene(t){for(let e=0;e<this.getKeyBodies().length;e++){const n=this.getKeyBodies()[e];t.add(n)}}changeKeyWidthsAndLengthsToFitScreenSize(){for(let t=0;t<this.keys.length;t++)this.keys[t].changeKeySizeToFitScreenSize();this.positionVerticalKeys()}repaintKeyBodies(){for(let t=0;t<this.keys.length;t++)this.keys[t].repaintBody()}getKeyBodies(){let t=new Array;for(let e=0;e<this.keys.length;e++){const n=this.keys[e].KeyState.View.Body;t.push(n)}return t}getKeyBodyByUUID(t){let e=null;for(let n=0;n<this.keys.length;n++){const s=this.keys[n].KeyState.View.Body;s.uuid==t&&(e=s)}return e}getKeyByBodyUUID(t){let e=null;for(let n=0;n<this.keys.length;n++){const s=this.keys[n];s.KeyState.View.Body.uuid==t&&(e=s)}return e}getKeyBodyByID(t){let e=null;for(let n=0;n<this.keys.length;n++){const s=this.keys[n].KeyState.View.Body;s.id==t&&(e=s)}return e}destroyKeys(){for(let t=0;t<this._keys.length;t++){const e=this._keys[t];e.KeyState.View.Body.removeFromParent(),Th(e.KeyState.View.Body)}this.keys=new Array}degrees_to_radians(t){return t*(Math.PI/180)}createPositionsOnCircle(t,e,n=new N){n=new N;let s=[],r=360/t;for(var a=0;a<t;a++){let l=new N,h=this.degrees_to_radians(r*a);var o=n.x+e*Math.cos(h),c=n.y+e*Math.sin(h);l.x=o*1,l.y=c*1,l.z=0,s.push(l)}return s}dispose(t){t!=null&&(Th(t),this._modelInstance.renderer.renderLists.dispose())}}class d1{constructor(){w(this,"clock");w(this,"gu");w(this,"composer");w(this,"INTERSECTED");w(this,"_modelInstance",Sn.Instance);w(this,"width",window.innerWidth);w(this,"height",window.innerHeight);w(this,"pointLight");w(this,"ambientLight");w(this,"light");w(this,"directionalLight");w(this,"ajhkeys");w(this,"fullscreenobject");w(this,"cube");w(this,"axesHelper");w(this,"pointLightHelper");w(this,"animation",{enabled:!0,play:!0});w(this,"stats")}get modelInstance(){return this._modelInstance}set modelInstance(t){this._modelInstance=t}init(t){this.addScene(),this.addCamera(),this.addRayCaster(),this.addStatsAndClock(),this.addLoadingManager(),this.addLights(),this.addCanvasInteraction(),this.addObjects(),this.addControls(),this.addFullScreenAndResizeListeners(),this.animate()}addStatsAndClock(){this.modelInstance.clock=new RS,this.modelInstance.Stats=new Ro,this.modelInstance.Stats.showPanel(0),this.modelInstance.Stats.dom.style.left="auto",this.modelInstance.Stats.dom.style.right="0",this.modelInstance.Stats.dom.style.top="auto",this.modelInstance.Stats.dom.style.bottom="0"}addScene(){this.modelInstance=Sn.Instance;let t=this.modelInstance.canvas;this.modelInstance.renderer=new yp({canvas:t,antialias:!0,alpha:!0}),this.modelInstance.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.modelInstance.renderer.shadowMap.enabled=!0,this.modelInstance.renderer.shadowMap.type=Wf,this.modelInstance.scene=new yS}addCamera(){this.modelInstance.camera=new Tn(50,this.modelInstance.canvas.clientWidth/this.modelInstance.canvas.clientHeight,.1,1e4),this.modelInstance.camera.position.set(0,8,0)}addCanvasInteraction(){this.modelInstance.canvasInteraction=new ZC}addRayCaster(){}addLights(){this.modelInstance.ambientLight=new IS("white",1.8),this.modelInstance.pointLights[0]=new CS("white",40,100),this.modelInstance.pointLights[0].position.set(-2,6,2),this.modelInstance.pointLights[0].castShadow=!0,this.modelInstance.pointLights[0].shadow.radius=4,this.modelInstance.pointLights[0].shadow.camera.near=.5,this.modelInstance.pointLights[0].shadow.camera.far=4e3,this.modelInstance.pointLights[0].shadow.mapSize.width=2048,this.modelInstance.pointLights[0].shadow.mapSize.height=2048,this.modelInstance.scene.add(this.modelInstance.ambientLight),this.modelInstance.scene.add(this.modelInstance.pointLights[0])}addFullScreenAndResizeListeners(){window.addEventListener("resize",this.onWindowResizeHandler.bind(this)),this.addFullScreenToggleOnDoubleClick()}animate(){requestAnimationFrame(this.animate.bind(this)),this.modelInstance.Stats.update(),this.modelInstance.initialScreen.enterButtonClicked||this.modelInstance.initialScreen.raycastingEnterButton(),this.resizeRendererToDisplaySize(this.modelInstance.renderer)&&(this.modelInstance.camera.aspect=this.modelInstance.canvas.clientWidth/this.modelInstance.canvas.clientHeight,this.modelInstance.camera.updateProjectionMatrix()),this.modelInstance.initialScreen.rotateButton(),this.modelInstance.cameraOrbitControls.update(),this.modelInstance.canvasInteraction.multitouchManager.getRaycasterWithPointById(0)!=null&&this.modelInstance.canvasInteraction.multitouchManager.findCurrentlyIntersectedItems().length>0&&this.modelInstance.canvasInteraction.multitouchManager.findCurrentlyIntersectedItems()[0].intersectedInstances.instances[0].point,this.modelInstance.renderer.render(this.modelInstance.scene,this.modelInstance.camera)}onWindowResizeHandler(t){console.log("WINDOW RESIZE::"+t);const e=window.innerWidth,n=window.innerHeight;this.modelInstance.renderer.setSize(e,n),this.modelInstance.initialScreen.setInformationWindowPosition(),this.modelInstance.initialScreen.fullscreenobject.resizeToScreenSize(),this.modelInstance.fullScreenObject.resizeToScreenSize(),this.modelInstance.currentKeyBoard.changeKeyWidthsAndLengthsToFitScreenSize(),this.modelInstance.camera.aspect=e/n,this.modelInstance.camera.updateProjectionMatrix()}resizeRendererToDisplaySize(t){const e=t.domElement,n=e.clientWidth,s=e.clientHeight,r=e.width!==n||e.height!==s;return r&&t.setSize(n,s,!1),r}addLoadingManager(){this.modelInstance.loadingManager=new vp,this.modelInstance.loadingManager.onStart=()=>{console.log("loading started")},this.modelInstance.loadingManager.onProgress=(t,e,n)=>{console.log("loading in progress:"),console.log(`${t} -> ${e} / ${n}`)},this.modelInstance.loadingManager.onLoad=()=>{console.log("loaded!")},this.modelInstance.loadingManager.onError=()=>{console.log("❌ error while loading")}}fitToScreen(t){const e=new ls;e.makeEmpty(),this.modelInstance.camera.fov*Math.PI/180,e.setFromObject(t).max.y}fitCameraToSelection(t,e,n,s=1){const r=new N,a=new N,o=new ls;o.makeEmpty();for(const m of n)o.expandByObject(m);o.getSize(r),o.getCenter(a);const l=Math.max(r.x,r.y,r.z)/(2*Math.atan(Math.PI*t.fov/360)),h=l/t.aspect,u=s*Math.max(l,h),f=e.target.clone().sub(t.position).normalize().multiplyScalar(u);e.target.copy(a),t.near=u/100,t.far=u*100,t.updateProjectionMatrix(),t.position.copy(e.target).sub(f),e.update()}addObjects(){this.ajhkeys=new u1(2,10,this.modelInstance.keyboardTypes.HorizontalKeys,this.modelInstance.scaleTypes.HarmonicicMinor,0,3),this.modelInstance.informationWindow=new QC,this.modelInstance.currentKeyBoard=this.ajhkeys,this.modelInstance.initialScreen=new i1,this.modelInstance.scene.add(this.modelInstance.initialScreen.body),this.ajhkeys.addKeysToScene(this.modelInstance.scene),this.modelInstance.fullScreenObject=new Vm(1,1),this.modelInstance.fullScreenObject.resizeToScreenSize()}addControls(){this.modelInstance.cameraOrbitControls=new WC(this.modelInstance.camera,this.modelInstance.canvas),this.modelInstance.cameraOrbitControls.target=new N,this.modelInstance.cameraOrbitControls.enableDamping=!0,this.modelInstance.cameraOrbitControls.autoRotate=!1,this.modelInstance.cameraOrbitControls.update(),this.modelInstance.toggleOrbitCameraEnabled(!1)}addDragControls(t=!0){t&&(this.modelInstance.dragControls=new qC(this.ajhkeys.getKeyBodies(),this.modelInstance.camera,this.modelInstance.renderer.domElement),this.modelInstance.dragControls.addEventListener("hoveron",e=>{console.log("hoveron"),e.object.material.emissive.set("orange")}),this.modelInstance.dragControls.addEventListener("hoveroff",e=>{const n=e.object;n.material.emissive.set("black"),this.modelInstance.pointLight.position.x=n.position.x=this.modelInstance.pointer.x,this.modelInstance.pointLight.position.z=n.position.z=this.modelInstance.pointer.y,console.log("hoveroff")}),this.modelInstance.dragControls.addEventListener("dragstart",e=>{console.log("dragstart");const s=e.object.material;this.modelInstance.cameraOrbitControls.enabled=!1,this.animation.play=!1,s.emissive.set("black"),s.opacity=.8,s.needsUpdate=!0}),this.modelInstance.dragControls.addEventListener("dragend",e=>{console.log("dragend"),this.modelInstance.cameraOrbitControls.enabled=!0,this.animation.play=!0;const s=e.object.material;s.emissive.set("black"),s.opacity=1,s.needsUpdate=!0}),this.modelInstance.dragControls.enabled=!0)}addFullScreenToggleOnDoubleClick(){window.addEventListener("dblclick",t=>{t.target===this.modelInstance.canvas&&HC(this.modelInstance.canvas)})}}let zf=Sn.Instance,f1=new d1;const p1="scene";m1();function m1(){zf.canvas=document.querySelector(`canvas#${p1}`),f1.init(zf.canvas)}
